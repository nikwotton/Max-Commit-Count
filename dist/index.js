/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 548:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(37));
const utils_1 = __nccwpck_require__(472);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 117:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(548);
const file_command_1 = __nccwpck_require__(469);
const utils_1 = __nccwpck_require__(472);
const os = __importStar(__nccwpck_require__(37));
const path = __importStar(__nccwpck_require__(17));
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        const delimiter = '_GitHubActionsFileCommandDelimeter_';
        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;
        file_command_1.issueCommand('ENV', commandValue);
    }
    else {
        command_1.issueCommand('set-env', { name }, convertedVal);
    }
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    return inputs;
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, value);
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 */
function error(message) {
    command_1.issue('error', message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds an warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 */
function warning(message) {
    command_1.issue('warning', message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    command_1.issueCommand('save-state', { name }, value);
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 469:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issueCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(147));
const os = __importStar(__nccwpck_require__(37));
const utils_1 = __nccwpck_require__(472);
function issueCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueCommand = issueCommand;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 472:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 27:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";
/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * See LICENSE file in root directory for full license.
 */


Object.defineProperty(exports, "__esModule", ({ value: true }));

var eventTargetShim = __nccwpck_require__(369);

/**
 * The signal class.
 * @see https://dom.spec.whatwg.org/#abortsignal
 */
class AbortSignal extends eventTargetShim.EventTarget {
    /**
     * AbortSignal cannot be constructed directly.
     */
    constructor() {
        super();
        throw new TypeError("AbortSignal cannot be constructed directly");
    }
    /**
     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.
     */
    get aborted() {
        const aborted = abortedFlags.get(this);
        if (typeof aborted !== "boolean") {
            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        }
        return aborted;
    }
}
eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");
/**
 * Create an AbortSignal object.
 */
function createAbortSignal() {
    const signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
}
/**
 * Abort a given signal.
 */
function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
        return;
    }
    abortedFlags.set(signal, true);
    signal.dispatchEvent({ type: "abort" });
}
/**
 * Aborted flag for each instances.
 */
const abortedFlags = new WeakMap();
// Properties should be enumerable.
Object.defineProperties(AbortSignal.prototype, {
    aborted: { enumerable: true },
});
// `toString()` should return `"[object AbortSignal]"`
if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortSignal",
    });
}

/**
 * The AbortController.
 * @see https://dom.spec.whatwg.org/#abortcontroller
 */
class AbortController {
    /**
     * Initialize this controller.
     */
    constructor() {
        signals.set(this, createAbortSignal());
    }
    /**
     * Returns the `AbortSignal` object associated with this object.
     */
    get signal() {
        return getSignal(this);
    }
    /**
     * Abort and signal to any observers that the associated activity is to be aborted.
     */
    abort() {
        abortSignal(getSignal(this));
    }
}
/**
 * Associated signals.
 */
const signals = new WeakMap();
/**
 * Get the associated signal of a given controller.
 */
function getSignal(controller) {
    const signal = signals.get(controller);
    if (signal == null) {
        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
    }
    return signal;
}
// Properties should be enumerable.
Object.defineProperties(AbortController.prototype, {
    signal: { enumerable: true },
    abort: { enumerable: true },
});
if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {
        configurable: true,
        value: "AbortController",
    });
}

exports.AbortController = AbortController;
exports.AbortSignal = AbortSignal;
exports["default"] = AbortController;

module.exports = AbortController
module.exports.AbortController = module.exports["default"] = AbortController
module.exports.AbortSignal = AbortSignal
//# sourceMappingURL=abort-controller.js.map


/***/ }),

/***/ 635:
/***/ ((module) => {

"use strict";


function Queue(options) {
  if (!(this instanceof Queue)) {
    return new Queue(options);
  }

  options = options || {};
  this.concurrency = options.concurrency || Infinity;
  this.pending = 0;
  this.jobs = [];
  this.cbs = [];
  this._done = done.bind(this);
}

var arrayAddMethods = [
  'push',
  'unshift',
  'splice'
];

arrayAddMethods.forEach(function(method) {
  Queue.prototype[method] = function() {
    var methodResult = Array.prototype[method].apply(this.jobs, arguments);
    this._run();
    return methodResult;
  };
});

Object.defineProperty(Queue.prototype, 'length', {
  get: function() {
    return this.pending + this.jobs.length;
  }
});

Queue.prototype._run = function() {
  if (this.pending === this.concurrency) {
    return;
  }
  if (this.jobs.length) {
    var job = this.jobs.shift();
    this.pending++;
    job(this._done);
    this._run();
  }

  if (this.pending === 0) {
    while (this.cbs.length !== 0) {
      var cb = this.cbs.pop();
      process.nextTick(cb);
    }
  }
};

Queue.prototype.onDone = function(cb) {
  if (typeof cb === 'function') {
    this.cbs.push(cb);
    this._run();
  }
};

function done() {
  this.pending--;
  this._run();
}

module.exports = Queue;


/***/ }),

/***/ 369:
/***/ ((module, exports) => {

"use strict";
/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * @copyright 2015 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */


Object.defineProperty(exports, "__esModule", ({ value: true }));

/**
 * @typedef {object} PrivateData
 * @property {EventTarget} eventTarget The event target.
 * @property {{type:string}} event The original event object.
 * @property {number} eventPhase The current event phase.
 * @property {EventTarget|null} currentTarget The current event target.
 * @property {boolean} canceled The flag to prevent default.
 * @property {boolean} stopped The flag to stop propagation.
 * @property {boolean} immediateStopped The flag to stop propagation immediately.
 * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.
 * @property {number} timeStamp The unix time.
 * @private
 */

/**
 * Private data for event wrappers.
 * @type {WeakMap<Event, PrivateData>}
 * @private
 */
const privateData = new WeakMap();

/**
 * Cache for wrapper classes.
 * @type {WeakMap<Object, Function>}
 * @private
 */
const wrappers = new WeakMap();

/**
 * Get private data.
 * @param {Event} event The event object to get private data.
 * @returns {PrivateData} The private data of the event.
 * @private
 */
function pd(event) {
    const retv = privateData.get(event);
    console.assert(
        retv != null,
        "'this' is expected an Event object, but got",
        event
    );
    return retv
}

/**
 * https://dom.spec.whatwg.org/#set-the-canceled-flag
 * @param data {PrivateData} private data.
 */
function setCancelFlag(data) {
    if (data.passiveListener != null) {
        if (
            typeof console !== "undefined" &&
            typeof console.error === "function"
        ) {
            console.error(
                "Unable to preventDefault inside passive event listener invocation.",
                data.passiveListener
            );
        }
        return
    }
    if (!data.event.cancelable) {
        return
    }

    data.canceled = true;
    if (typeof data.event.preventDefault === "function") {
        data.event.preventDefault();
    }
}

/**
 * @see https://dom.spec.whatwg.org/#interface-event
 * @private
 */
/**
 * The event wrapper.
 * @constructor
 * @param {EventTarget} eventTarget The event target of this dispatching.
 * @param {Event|{type:string}} event The original event to wrap.
 */
function Event(eventTarget, event) {
    privateData.set(this, {
        eventTarget,
        event,
        eventPhase: 2,
        currentTarget: eventTarget,
        canceled: false,
        stopped: false,
        immediateStopped: false,
        passiveListener: null,
        timeStamp: event.timeStamp || Date.now(),
    });

    // https://heycam.github.io/webidl/#Unforgeable
    Object.defineProperty(this, "isTrusted", { value: false, enumerable: true });

    // Define accessors
    const keys = Object.keys(event);
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        if (!(key in this)) {
            Object.defineProperty(this, key, defineRedirectDescriptor(key));
        }
    }
}

// Should be enumerable, but class methods are not enumerable.
Event.prototype = {
    /**
     * The type of this event.
     * @type {string}
     */
    get type() {
        return pd(this).event.type
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get target() {
        return pd(this).eventTarget
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get currentTarget() {
        return pd(this).currentTarget
    },

    /**
     * @returns {EventTarget[]} The composed path of this event.
     */
    composedPath() {
        const currentTarget = pd(this).currentTarget;
        if (currentTarget == null) {
            return []
        }
        return [currentTarget]
    },

    /**
     * Constant of NONE.
     * @type {number}
     */
    get NONE() {
        return 0
    },

    /**
     * Constant of CAPTURING_PHASE.
     * @type {number}
     */
    get CAPTURING_PHASE() {
        return 1
    },

    /**
     * Constant of AT_TARGET.
     * @type {number}
     */
    get AT_TARGET() {
        return 2
    },

    /**
     * Constant of BUBBLING_PHASE.
     * @type {number}
     */
    get BUBBLING_PHASE() {
        return 3
    },

    /**
     * The target of this event.
     * @type {number}
     */
    get eventPhase() {
        return pd(this).eventPhase
    },

    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopPropagation() {
        const data = pd(this);

        data.stopped = true;
        if (typeof data.event.stopPropagation === "function") {
            data.event.stopPropagation();
        }
    },

    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopImmediatePropagation() {
        const data = pd(this);

        data.stopped = true;
        data.immediateStopped = true;
        if (typeof data.event.stopImmediatePropagation === "function") {
            data.event.stopImmediatePropagation();
        }
    },

    /**
     * The flag to be bubbling.
     * @type {boolean}
     */
    get bubbles() {
        return Boolean(pd(this).event.bubbles)
    },

    /**
     * The flag to be cancelable.
     * @type {boolean}
     */
    get cancelable() {
        return Boolean(pd(this).event.cancelable)
    },

    /**
     * Cancel this event.
     * @returns {void}
     */
    preventDefault() {
        setCancelFlag(pd(this));
    },

    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     */
    get defaultPrevented() {
        return pd(this).canceled
    },

    /**
     * The flag to be composed.
     * @type {boolean}
     */
    get composed() {
        return Boolean(pd(this).event.composed)
    },

    /**
     * The unix time of this event.
     * @type {number}
     */
    get timeStamp() {
        return pd(this).timeStamp
    },

    /**
     * The target of this event.
     * @type {EventTarget}
     * @deprecated
     */
    get srcElement() {
        return pd(this).eventTarget
    },

    /**
     * The flag to stop event bubbling.
     * @type {boolean}
     * @deprecated
     */
    get cancelBubble() {
        return pd(this).stopped
    },
    set cancelBubble(value) {
        if (!value) {
            return
        }
        const data = pd(this);

        data.stopped = true;
        if (typeof data.event.cancelBubble === "boolean") {
            data.event.cancelBubble = true;
        }
    },

    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     * @deprecated
     */
    get returnValue() {
        return !pd(this).canceled
    },
    set returnValue(value) {
        if (!value) {
            setCancelFlag(pd(this));
        }
    },

    /**
     * Initialize this event object. But do nothing under event dispatching.
     * @param {string} type The event type.
     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.
     * @param {boolean} [cancelable=false] The flag to be possible to cancel.
     * @deprecated
     */
    initEvent() {
        // Do nothing.
    },
};

// `constructor` is not enumerable.
Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true,
});

// Ensure `event instanceof window.Event` is `true`.
if (typeof window !== "undefined" && typeof window.Event !== "undefined") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);

    // Make association for wrappers.
    wrappers.set(window.Event.prototype, Event);
}

/**
 * Get the property descriptor to redirect a given property.
 * @param {string} key Property name to define property descriptor.
 * @returns {PropertyDescriptor} The property descriptor to redirect the property.
 * @private
 */
function defineRedirectDescriptor(key) {
    return {
        get() {
            return pd(this).event[key]
        },
        set(value) {
            pd(this).event[key] = value;
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Get the property descriptor to call a given method property.
 * @param {string} key Property name to define property descriptor.
 * @returns {PropertyDescriptor} The property descriptor to call the method property.
 * @private
 */
function defineCallDescriptor(key) {
    return {
        value() {
            const event = pd(this).event;
            return event[key].apply(event, arguments)
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Define new wrapper class.
 * @param {Function} BaseEvent The base wrapper class.
 * @param {Object} proto The prototype of the original event.
 * @returns {Function} The defined wrapper class.
 * @private
 */
function defineWrapper(BaseEvent, proto) {
    const keys = Object.keys(proto);
    if (keys.length === 0) {
        return BaseEvent
    }

    /** CustomEvent */
    function CustomEvent(eventTarget, event) {
        BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
        constructor: { value: CustomEvent, configurable: true, writable: true },
    });

    // Define accessors.
    for (let i = 0; i < keys.length; ++i) {
        const key = keys[i];
        if (!(key in BaseEvent.prototype)) {
            const descriptor = Object.getOwnPropertyDescriptor(proto, key);
            const isFunc = typeof descriptor.value === "function";
            Object.defineProperty(
                CustomEvent.prototype,
                key,
                isFunc
                    ? defineCallDescriptor(key)
                    : defineRedirectDescriptor(key)
            );
        }
    }

    return CustomEvent
}

/**
 * Get the wrapper class of a given prototype.
 * @param {Object} proto The prototype of the original event to get its wrapper.
 * @returns {Function} The wrapper class.
 * @private
 */
function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
        return Event
    }

    let wrapper = wrappers.get(proto);
    if (wrapper == null) {
        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
        wrappers.set(proto, wrapper);
    }
    return wrapper
}

/**
 * Wrap a given event to management a dispatching.
 * @param {EventTarget} eventTarget The event target of this dispatching.
 * @param {Object} event The event to wrap.
 * @returns {Event} The wrapper instance.
 * @private
 */
function wrapEvent(eventTarget, event) {
    const Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event)
}

/**
 * Get the immediateStopped flag of a given event.
 * @param {Event} event The event to get.
 * @returns {boolean} The flag to stop propagation immediately.
 * @private
 */
function isStopped(event) {
    return pd(event).immediateStopped
}

/**
 * Set the current event phase of a given event.
 * @param {Event} event The event to set current target.
 * @param {number} eventPhase New event phase.
 * @returns {void}
 * @private
 */
function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
}

/**
 * Set the current target of a given event.
 * @param {Event} event The event to set current target.
 * @param {EventTarget|null} currentTarget New current target.
 * @returns {void}
 * @private
 */
function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
}

/**
 * Set a passive listener of a given event.
 * @param {Event} event The event to set current target.
 * @param {Function|null} passiveListener New passive listener.
 * @returns {void}
 * @private
 */
function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
}

/**
 * @typedef {object} ListenerNode
 * @property {Function} listener
 * @property {1|2|3} listenerType
 * @property {boolean} passive
 * @property {boolean} once
 * @property {ListenerNode|null} next
 * @private
 */

/**
 * @type {WeakMap<object, Map<string, ListenerNode>>}
 * @private
 */
const listenersMap = new WeakMap();

// Listener types
const CAPTURE = 1;
const BUBBLE = 2;
const ATTRIBUTE = 3;

/**
 * Check whether a given value is an object or not.
 * @param {any} x The value to check.
 * @returns {boolean} `true` if the value is an object.
 */
function isObject(x) {
    return x !== null && typeof x === "object" //eslint-disable-line no-restricted-syntax
}

/**
 * Get listeners.
 * @param {EventTarget} eventTarget The event target to get.
 * @returns {Map<string, ListenerNode>} The listeners.
 * @private
 */
function getListeners(eventTarget) {
    const listeners = listenersMap.get(eventTarget);
    if (listeners == null) {
        throw new TypeError(
            "'this' is expected an EventTarget object, but got another value."
        )
    }
    return listeners
}

/**
 * Get the property descriptor for the event attribute of a given event.
 * @param {string} eventName The event name to get property descriptor.
 * @returns {PropertyDescriptor} The property descriptor.
 * @private
 */
function defineEventAttributeDescriptor(eventName) {
    return {
        get() {
            const listeners = getListeners(this);
            let node = listeners.get(eventName);
            while (node != null) {
                if (node.listenerType === ATTRIBUTE) {
                    return node.listener
                }
                node = node.next;
            }
            return null
        },

        set(listener) {
            if (typeof listener !== "function" && !isObject(listener)) {
                listener = null; // eslint-disable-line no-param-reassign
            }
            const listeners = getListeners(this);

            // Traverse to the tail while removing old value.
            let prev = null;
            let node = listeners.get(eventName);
            while (node != null) {
                if (node.listenerType === ATTRIBUTE) {
                    // Remove old value.
                    if (prev !== null) {
                        prev.next = node.next;
                    } else if (node.next !== null) {
                        listeners.set(eventName, node.next);
                    } else {
                        listeners.delete(eventName);
                    }
                } else {
                    prev = node;
                }

                node = node.next;
            }

            // Add new value.
            if (listener !== null) {
                const newNode = {
                    listener,
                    listenerType: ATTRIBUTE,
                    passive: false,
                    once: false,
                    next: null,
                };
                if (prev === null) {
                    listeners.set(eventName, newNode);
                } else {
                    prev.next = newNode;
                }
            }
        },
        configurable: true,
        enumerable: true,
    }
}

/**
 * Define an event attribute (e.g. `eventTarget.onclick`).
 * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.
 * @param {string} eventName The event name to define.
 * @returns {void}
 */
function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(
        eventTargetPrototype,
        `on${eventName}`,
        defineEventAttributeDescriptor(eventName)
    );
}

/**
 * Define a custom EventTarget with event attributes.
 * @param {string[]} eventNames Event names for event attributes.
 * @returns {EventTarget} The custom EventTarget.
 * @private
 */
function defineCustomEventTarget(eventNames) {
    /** CustomEventTarget */
    function CustomEventTarget() {
        EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
        constructor: {
            value: CustomEventTarget,
            configurable: true,
            writable: true,
        },
    });

    for (let i = 0; i < eventNames.length; ++i) {
        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget
}

/**
 * EventTarget.
 *
 * - This is constructor if no arguments.
 * - This is a function which returns a CustomEventTarget constructor if there are arguments.
 *
 * For example:
 *
 *     class A extends EventTarget {}
 *     class B extends EventTarget("message") {}
 *     class C extends EventTarget("message", "error") {}
 *     class D extends EventTarget(["message", "error"]) {}
 */
function EventTarget() {
    /*eslint-disable consistent-return */
    if (this instanceof EventTarget) {
        listenersMap.set(this, new Map());
        return
    }
    if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(arguments[0])
    }
    if (arguments.length > 0) {
        const types = new Array(arguments.length);
        for (let i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }
        return defineCustomEventTarget(types)
    }
    throw new TypeError("Cannot call a class as a function")
    /*eslint-enable consistent-return */
}

// Should be enumerable, but class methods are not enumerable.
EventTarget.prototype = {
    /**
     * Add a given listener to this event target.
     * @param {string} eventName The event name to add.
     * @param {Function} listener The listener to add.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    addEventListener(eventName, listener, options) {
        if (listener == null) {
            return
        }
        if (typeof listener !== "function" && !isObject(listener)) {
            throw new TypeError("'listener' should be a function or an object.")
        }

        const listeners = getListeners(this);
        const optionsIsObj = isObject(options);
        const capture = optionsIsObj
            ? Boolean(options.capture)
            : Boolean(options);
        const listenerType = capture ? CAPTURE : BUBBLE;
        const newNode = {
            listener,
            listenerType,
            passive: optionsIsObj && Boolean(options.passive),
            once: optionsIsObj && Boolean(options.once),
            next: null,
        };

        // Set it as the first node if the first node is null.
        let node = listeners.get(eventName);
        if (node === undefined) {
            listeners.set(eventName, newNode);
            return
        }

        // Traverse to the tail while checking duplication..
        let prev = null;
        while (node != null) {
            if (
                node.listener === listener &&
                node.listenerType === listenerType
            ) {
                // Should ignore duplication.
                return
            }
            prev = node;
            node = node.next;
        }

        // Add it.
        prev.next = newNode;
    },

    /**
     * Remove a given listener from this event target.
     * @param {string} eventName The event name to remove.
     * @param {Function} listener The listener to remove.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    removeEventListener(eventName, listener, options) {
        if (listener == null) {
            return
        }

        const listeners = getListeners(this);
        const capture = isObject(options)
            ? Boolean(options.capture)
            : Boolean(options);
        const listenerType = capture ? CAPTURE : BUBBLE;

        let prev = null;
        let node = listeners.get(eventName);
        while (node != null) {
            if (
                node.listener === listener &&
                node.listenerType === listenerType
            ) {
                if (prev !== null) {
                    prev.next = node.next;
                } else if (node.next !== null) {
                    listeners.set(eventName, node.next);
                } else {
                    listeners.delete(eventName);
                }
                return
            }

            prev = node;
            node = node.next;
        }
    },

    /**
     * Dispatch a given event.
     * @param {Event|{type:string}} event The event to dispatch.
     * @returns {boolean} `false` if canceled.
     */
    dispatchEvent(event) {
        if (event == null || typeof event.type !== "string") {
            throw new TypeError('"event.type" should be a string.')
        }

        // If listeners aren't registered, terminate.
        const listeners = getListeners(this);
        const eventName = event.type;
        let node = listeners.get(eventName);
        if (node == null) {
            return true
        }

        // Since we cannot rewrite several properties, so wrap object.
        const wrappedEvent = wrapEvent(this, event);

        // This doesn't process capturing phase and bubbling phase.
        // This isn't participating in a tree.
        let prev = null;
        while (node != null) {
            // Remove this listener if it's once
            if (node.once) {
                if (prev !== null) {
                    prev.next = node.next;
                } else if (node.next !== null) {
                    listeners.set(eventName, node.next);
                } else {
                    listeners.delete(eventName);
                }
            } else {
                prev = node;
            }

            // Call this listener
            setPassiveListener(
                wrappedEvent,
                node.passive ? node.listener : null
            );
            if (typeof node.listener === "function") {
                try {
                    node.listener.call(this, wrappedEvent);
                } catch (err) {
                    if (
                        typeof console !== "undefined" &&
                        typeof console.error === "function"
                    ) {
                        console.error(err);
                    }
                }
            } else if (
                node.listenerType !== ATTRIBUTE &&
                typeof node.listener.handleEvent === "function"
            ) {
                node.listener.handleEvent(wrappedEvent);
            }

            // Break if `event.stopImmediatePropagation` was called.
            if (isStopped(wrappedEvent)) {
                break
            }

            node = node.next;
        }
        setPassiveListener(wrappedEvent, null);
        setEventPhase(wrappedEvent, 0);
        setCurrentTarget(wrappedEvent, null);

        return !wrappedEvent.defaultPrevented
    },
};

// `constructor` is not enumerable.
Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true,
});

// Ensure `eventTarget instanceof window.EventTarget` is `true`.
if (
    typeof window !== "undefined" &&
    typeof window.EventTarget !== "undefined"
) {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
}

exports.defineEventAttribute = defineEventAttribute;
exports.EventTarget = EventTarget;
exports["default"] = EventTarget;

module.exports = EventTarget
module.exports.EventTarget = module.exports["default"] = EventTarget
module.exports.defineEventAttribute = defineEventAttribute
//# sourceMappingURL=event-target-shim.js.map


/***/ }),

/***/ 197:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Stream = _interopDefault(__nccwpck_require__(781));
var http = _interopDefault(__nccwpck_require__(685));
var Url = _interopDefault(__nccwpck_require__(310));
var https = _interopDefault(__nccwpck_require__(687));
var zlib = _interopDefault(__nccwpck_require__(796));

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = (__nccwpck_require__(609).convert);
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;
const resolve_url = Url.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

module.exports = exports = fetch;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = exports;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports.FetchError = FetchError;


/***/ }),

/***/ 28:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const WebSocket = __nccwpck_require__(427);

WebSocket.Server = __nccwpck_require__(350);
WebSocket.Receiver = __nccwpck_require__(212);
WebSocket.Sender = __nccwpck_require__(288);

module.exports = WebSocket;


/***/ }),

/***/ 439:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { EMPTY_BUFFER } = __nccwpck_require__(508);

/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */
function concat(list, totalLength) {
  if (list.length === 0) return EMPTY_BUFFER;
  if (list.length === 1) return list[0];

  const target = Buffer.allocUnsafe(totalLength);
  var offset = 0;

  for (var i = 0; i < list.length; i++) {
    const buf = list[i];
    buf.copy(target, offset);
    offset += buf.length;
  }

  return target;
}

/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */
function _mask(source, mask, output, offset, length) {
  for (var i = 0; i < length; i++) {
    output[offset + i] = source[i] ^ mask[i & 3];
  }
}

/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */
function _unmask(buffer, mask) {
  // Required until https://github.com/nodejs/node/issues/9006 is resolved.
  const length = buffer.length;
  for (var i = 0; i < length; i++) {
    buffer[i] ^= mask[i & 3];
  }
}

/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */
function toArrayBuffer(buf) {
  if (buf.byteLength === buf.buffer.byteLength) {
    return buf.buffer;
  }

  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
}

/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */
function toBuffer(data) {
  toBuffer.readOnly = true;

  if (Buffer.isBuffer(data)) return data;

  var buf;

  if (data instanceof ArrayBuffer) {
    buf = Buffer.from(data);
  } else if (ArrayBuffer.isView(data)) {
    buf = viewToBuffer(data);
  } else {
    buf = Buffer.from(data);
    toBuffer.readOnly = false;
  }

  return buf;
}

/**
 * Converts an `ArrayBuffer` view into a buffer.
 *
 * @param {(DataView|TypedArray)} view The view to convert
 * @return {Buffer} Converted view
 * @private
 */
function viewToBuffer(view) {
  const buf = Buffer.from(view.buffer);

  if (view.byteLength !== view.buffer.byteLength) {
    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);
  }

  return buf;
}

try {
  const bufferUtil = __nccwpck_require__(421);
  const bu = bufferUtil.BufferUtil || bufferUtil;

  module.exports = {
    concat,
    mask(source, mask, output, offset, length) {
      if (length < 48) _mask(source, mask, output, offset, length);
      else bu.mask(source, mask, output, offset, length);
    },
    toArrayBuffer,
    toBuffer,
    unmask(buffer, mask) {
      if (buffer.length < 32) _unmask(buffer, mask);
      else bu.unmask(buffer, mask);
    }
  };
} catch (e) /* istanbul ignore next */ {
  module.exports = {
    concat,
    mask: _mask,
    toArrayBuffer,
    toBuffer,
    unmask: _unmask
  };
}


/***/ }),

/***/ 508:
/***/ ((module) => {

"use strict";


module.exports = {
  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],
  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
  kStatusCode: Symbol('status-code'),
  kWebSocket: Symbol('websocket'),
  EMPTY_BUFFER: Buffer.alloc(0),
  NOOP: () => {}
};


/***/ }),

/***/ 817:
/***/ ((module) => {

"use strict";


/**
 * Class representing an event.
 *
 * @private
 */
class Event {
  /**
   * Create a new `Event`.
   *
   * @param {String} type The name of the event
   * @param {Object} target A reference to the target to which the event was dispatched
   */
  constructor(type, target) {
    this.target = target;
    this.type = type;
  }
}

/**
 * Class representing a message event.
 *
 * @extends Event
 * @private
 */
class MessageEvent extends Event {
  /**
   * Create a new `MessageEvent`.
   *
   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(data, target) {
    super('message', target);

    this.data = data;
  }
}

/**
 * Class representing a close event.
 *
 * @extends Event
 * @private
 */
class CloseEvent extends Event {
  /**
   * Create a new `CloseEvent`.
   *
   * @param {Number} code The status code explaining why the connection is being closed
   * @param {String} reason A human-readable string explaining why the connection is closing
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(code, reason, target) {
    super('close', target);

    this.wasClean = target._closeFrameReceived && target._closeFrameSent;
    this.reason = reason;
    this.code = code;
  }
}

/**
 * Class representing an open event.
 *
 * @extends Event
 * @private
 */
class OpenEvent extends Event {
  /**
   * Create a new `OpenEvent`.
   *
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(target) {
    super('open', target);
  }
}

/**
 * Class representing an error event.
 *
 * @extends Event
 * @private
 */
class ErrorEvent extends Event {
  /**
   * Create a new `ErrorEvent`.
   *
   * @param {Object} error The error that generated this event
   * @param {WebSocket} target A reference to the target to which the event was dispatched
   */
  constructor(error, target) {
    super('error', target);

    this.message = error.message;
    this.error = error;
  }
}

/**
 * This provides methods for emulating the `EventTarget` interface. It's not
 * meant to be used directly.
 *
 * @mixin
 */
const EventTarget = {
  /**
   * Register an event listener.
   *
   * @param {String} method A string representing the event type to listen for
   * @param {Function} listener The listener to add
   * @public
   */
  addEventListener(method, listener) {
    if (typeof listener !== 'function') return;

    function onMessage(data) {
      listener.call(this, new MessageEvent(data, this));
    }

    function onClose(code, message) {
      listener.call(this, new CloseEvent(code, message, this));
    }

    function onError(error) {
      listener.call(this, new ErrorEvent(error, this));
    }

    function onOpen() {
      listener.call(this, new OpenEvent(this));
    }

    if (method === 'message') {
      onMessage._listener = listener;
      this.on(method, onMessage);
    } else if (method === 'close') {
      onClose._listener = listener;
      this.on(method, onClose);
    } else if (method === 'error') {
      onError._listener = listener;
      this.on(method, onError);
    } else if (method === 'open') {
      onOpen._listener = listener;
      this.on(method, onOpen);
    } else {
      this.on(method, listener);
    }
  },

  /**
   * Remove an event listener.
   *
   * @param {String} method A string representing the event type to remove
   * @param {Function} listener The listener to remove
   * @public
   */
  removeEventListener(method, listener) {
    const listeners = this.listeners(method);

    for (var i = 0; i < listeners.length; i++) {
      if (listeners[i] === listener || listeners[i]._listener === listener) {
        this.removeListener(method, listeners[i]);
      }
    }
  }
};

module.exports = EventTarget;


/***/ }),

/***/ 130:
/***/ ((module) => {

"use strict";


//
// Allowed token characters:
//
// '!', '#', '$', '%', '&', ''', '*', '+', '-',
// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
//
// tokenChars[32] === 0 // ' '
// tokenChars[33] === 1 // '!'
// tokenChars[34] === 0 // '"'
// ...
//
// prettier-ignore
const tokenChars = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127
];

/**
 * Adds an offer to the map of extension offers or a parameter to the map of
 * parameters.
 *
 * @param {Object} dest The map of extension offers or parameters
 * @param {String} name The extension or parameter name
 * @param {(Object|Boolean|String)} elem The extension parameters or the
 *     parameter value
 * @private
 */
function push(dest, name, elem) {
  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);
  else dest[name] = [elem];
}

/**
 * Parses the `Sec-WebSocket-Extensions` header into an object.
 *
 * @param {String} header The field value of the header
 * @return {Object} The parsed object
 * @public
 */
function parse(header) {
  const offers = {};

  if (header === undefined || header === '') return offers;

  var params = {};
  var mustUnescape = false;
  var isEscaping = false;
  var inQuotes = false;
  var extensionName;
  var paramName;
  var start = -1;
  var end = -1;

  for (var i = 0; i < header.length; i++) {
    const code = header.charCodeAt(i);

    if (extensionName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\t' */) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        const name = header.slice(start, end);
        if (code === 0x2c) {
          push(offers, name, params);
          params = {};
        } else {
          extensionName = name;
        }

        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else if (paramName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 || code === 0x09) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        push(params, header.slice(start, end), true);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = {};
          extensionName = undefined;
        }

        start = end = -1;
      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {
        paramName = header.slice(start, i);
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else {
      //
      // The value of a quoted-string after unescaping must conform to the
      // token ABNF, so only token characters are valid.
      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
      //
      if (isEscaping) {
        if (tokenChars[code] !== 1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
        if (start === -1) start = i;
        else if (!mustUnescape) mustUnescape = true;
        isEscaping = false;
      } else if (inQuotes) {
        if (tokenChars[code] === 1) {
          if (start === -1) start = i;
        } else if (code === 0x22 /* '"' */ && start !== -1) {
          inQuotes = false;
          end = i;
        } else if (code === 0x5c /* '\' */) {
          isEscaping = true;
        } else {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
        inQuotes = true;
      } else if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
        if (end === -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        var value = header.slice(start, end);
        if (mustUnescape) {
          value = value.replace(/\\/g, '');
          mustUnescape = false;
        }
        push(params, paramName, value);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = {};
          extensionName = undefined;
        }

        paramName = undefined;
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    }
  }

  if (start === -1 || inQuotes) {
    throw new SyntaxError('Unexpected end of input');
  }

  if (end === -1) end = i;
  const token = header.slice(start, end);
  if (extensionName === undefined) {
    push(offers, token, {});
  } else {
    if (paramName === undefined) {
      push(params, token, true);
    } else if (mustUnescape) {
      push(params, paramName, token.replace(/\\/g, ''));
    } else {
      push(params, paramName, token);
    }
    push(offers, extensionName, params);
  }

  return offers;
}

/**
 * Builds the `Sec-WebSocket-Extensions` header field value.
 *
 * @param {Object} extensions The map of extensions and parameters to format
 * @return {String} A string representing the given object
 * @public
 */
function format(extensions) {
  return Object.keys(extensions)
    .map((extension) => {
      var configurations = extensions[extension];
      if (!Array.isArray(configurations)) configurations = [configurations];
      return configurations
        .map((params) => {
          return [extension]
            .concat(
              Object.keys(params).map((k) => {
                var values = params[k];
                if (!Array.isArray(values)) values = [values];
                return values
                  .map((v) => (v === true ? k : `${k}=${v}`))
                  .join('; ');
              })
            )
            .join('; ');
        })
        .join(', ');
    })
    .join(', ');
}

module.exports = { format, parse };


/***/ }),

/***/ 301:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Limiter = __nccwpck_require__(635);
const zlib = __nccwpck_require__(796);

const bufferUtil = __nccwpck_require__(439);
const { kStatusCode, NOOP } = __nccwpck_require__(508);

const TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);
const EMPTY_BLOCK = Buffer.from([0x00]);

const kPerMessageDeflate = Symbol('permessage-deflate');
const kTotalLength = Symbol('total-length');
const kCallback = Symbol('callback');
const kBuffers = Symbol('buffers');
const kError = Symbol('error');

//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;

/**
 * permessage-deflate implementation.
 */
class PerMessageDeflate {
  /**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} options Configuration options
   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling
   *     of server context takeover
   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge
   *     disabling of client context takeover
   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the
   *     use of a custom server window size
   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support
   *     for, or request, a custom client window size
   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate
   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate
   * @param {Number} options.threshold Size (in bytes) below which messages
   *     should not be compressed
   * @param {Number} options.concurrencyLimit The number of concurrent calls to
   *     zlib
   * @param {Boolean} isServer Create the instance in either server or client
   *     mode
   * @param {Number} maxPayload The maximum allowed message length
   */
  constructor(options, isServer, maxPayload) {
    this._maxPayload = maxPayload | 0;
    this._options = options || {};
    this._threshold =
      this._options.threshold !== undefined ? this._options.threshold : 1024;
    this._isServer = !!isServer;
    this._deflate = null;
    this._inflate = null;

    this.params = null;

    if (!zlibLimiter) {
      const concurrency =
        this._options.concurrencyLimit !== undefined
          ? this._options.concurrencyLimit
          : 10;
      zlibLimiter = new Limiter({ concurrency });
    }
  }

  /**
   * @type {String}
   */
  static get extensionName() {
    return 'permessage-deflate';
  }

  /**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */
  offer() {
    const params = {};

    if (this._options.serverNoContextTakeover) {
      params.server_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover) {
      params.client_no_context_takeover = true;
    }
    if (this._options.serverMaxWindowBits) {
      params.server_max_window_bits = this._options.serverMaxWindowBits;
    }
    if (this._options.clientMaxWindowBits) {
      params.client_max_window_bits = this._options.clientMaxWindowBits;
    } else if (this._options.clientMaxWindowBits == null) {
      params.client_max_window_bits = true;
    }

    return params;
  }

  /**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */
  accept(configurations) {
    configurations = this.normalizeParams(configurations);

    this.params = this._isServer
      ? this.acceptAsServer(configurations)
      : this.acceptAsClient(configurations);

    return this.params;
  }

  /**
   * Releases all resources used by the extension.
   *
   * @public
   */
  cleanup() {
    if (this._inflate) {
      this._inflate.close();
      this._inflate = null;
    }

    if (this._deflate) {
      this._deflate.close();
      this._deflate = null;
    }
  }

  /**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsServer(offers) {
    const opts = this._options;
    const accepted = offers.find((params) => {
      if (
        (opts.serverNoContextTakeover === false &&
          params.server_no_context_takeover) ||
        (params.server_max_window_bits &&
          (opts.serverMaxWindowBits === false ||
            (typeof opts.serverMaxWindowBits === 'number' &&
              opts.serverMaxWindowBits > params.server_max_window_bits))) ||
        (typeof opts.clientMaxWindowBits === 'number' &&
          !params.client_max_window_bits)
      ) {
        return false;
      }

      return true;
    });

    if (!accepted) {
      throw new Error('None of the extension offers can be accepted');
    }

    if (opts.serverNoContextTakeover) {
      accepted.server_no_context_takeover = true;
    }
    if (opts.clientNoContextTakeover) {
      accepted.client_no_context_takeover = true;
    }
    if (typeof opts.serverMaxWindowBits === 'number') {
      accepted.server_max_window_bits = opts.serverMaxWindowBits;
    }
    if (typeof opts.clientMaxWindowBits === 'number') {
      accepted.client_max_window_bits = opts.clientMaxWindowBits;
    } else if (
      accepted.client_max_window_bits === true ||
      opts.clientMaxWindowBits === false
    ) {
      delete accepted.client_max_window_bits;
    }

    return accepted;
  }

  /**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsClient(response) {
    const params = response[0];

    if (
      this._options.clientNoContextTakeover === false &&
      params.client_no_context_takeover
    ) {
      throw new Error('Unexpected parameter "client_no_context_takeover"');
    }

    if (!params.client_max_window_bits) {
      if (typeof this._options.clientMaxWindowBits === 'number') {
        params.client_max_window_bits = this._options.clientMaxWindowBits;
      }
    } else if (
      this._options.clientMaxWindowBits === false ||
      (typeof this._options.clientMaxWindowBits === 'number' &&
        params.client_max_window_bits > this._options.clientMaxWindowBits)
    ) {
      throw new Error(
        'Unexpected or invalid parameter "client_max_window_bits"'
      );
    }

    return params;
  }

  /**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */
  normalizeParams(configurations) {
    configurations.forEach((params) => {
      Object.keys(params).forEach((key) => {
        var value = params[key];

        if (value.length > 1) {
          throw new Error(`Parameter "${key}" must have only a single value`);
        }

        value = value[0];

        if (key === 'client_max_window_bits') {
          if (value !== true) {
            const num = +value;
            if (!Number.isInteger(num) || num < 8 || num > 15) {
              throw new TypeError(
                `Invalid value for parameter "${key}": ${value}`
              );
            }
            value = num;
          } else if (!this._isServer) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else if (key === 'server_max_window_bits') {
          const num = +value;
          if (!Number.isInteger(num) || num < 8 || num > 15) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
          value = num;
        } else if (
          key === 'client_no_context_takeover' ||
          key === 'server_no_context_takeover'
        ) {
          if (value !== true) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else {
          throw new Error(`Unknown parameter "${key}"`);
        }

        params[key] = value;
      });
    });

    return configurations;
  }

  /**
   * Decompress data. Concurrency limited by async-limiter.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  decompress(data, fin, callback) {
    zlibLimiter.push((done) => {
      this._decompress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Compress data. Concurrency limited by async-limiter.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  compress(data, fin, callback) {
    zlibLimiter.push((done) => {
      this._compress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _decompress(data, fin, callback) {
    const endpoint = this._isServer ? 'client' : 'server';

    if (!this._inflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._inflate = zlib.createInflateRaw(
        Object.assign({}, this._options.zlibInflateOptions, { windowBits })
      );
      this._inflate[kPerMessageDeflate] = this;
      this._inflate[kTotalLength] = 0;
      this._inflate[kBuffers] = [];
      this._inflate.on('error', inflateOnError);
      this._inflate.on('data', inflateOnData);
    }

    this._inflate[kCallback] = callback;

    this._inflate.write(data);
    if (fin) this._inflate.write(TRAILER);

    this._inflate.flush(() => {
      const err = this._inflate[kError];

      if (err) {
        this._inflate.close();
        this._inflate = null;
        callback(err);
        return;
      }

      const data = bufferUtil.concat(
        this._inflate[kBuffers],
        this._inflate[kTotalLength]
      );

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._inflate.close();
        this._inflate = null;
      } else {
        this._inflate[kTotalLength] = 0;
        this._inflate[kBuffers] = [];
      }

      callback(null, data);
    });
  }

  /**
   * Compress data.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _compress(data, fin, callback) {
    if (!data || data.length === 0) {
      process.nextTick(callback, null, EMPTY_BLOCK);
      return;
    }

    const endpoint = this._isServer ? 'server' : 'client';

    if (!this._deflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._deflate = zlib.createDeflateRaw(
        Object.assign({}, this._options.zlibDeflateOptions, { windowBits })
      );

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      //
      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the
      // `zlib.DeflateRaw` instance is closed while data is being processed.
      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong
      // time due to an abnormal WebSocket closure.
      //
      this._deflate.on('error', NOOP);
      this._deflate.on('data', deflateOnData);
    }

    this._deflate.write(data);
    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
      if (!this._deflate) {
        //
        // This `if` statement is only needed for Node.js < 10.0.0 because as of
        // commit https://github.com/nodejs/node/commit/5e3f5164, the flush
        // callback is no longer called if the deflate stream is closed while
        // data is being processed.
        //
        return;
      }

      var data = bufferUtil.concat(
        this._deflate[kBuffers],
        this._deflate[kTotalLength]
      );

      if (fin) data = data.slice(0, data.length - 4);

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._deflate.close();
        this._deflate = null;
      } else {
        this._deflate[kTotalLength] = 0;
        this._deflate[kBuffers] = [];
      }

      callback(null, data);
    });
  }
}

module.exports = PerMessageDeflate;

/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function deflateOnData(chunk) {
  this[kBuffers].push(chunk);
  this[kTotalLength] += chunk.length;
}

/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function inflateOnData(chunk) {
  this[kTotalLength] += chunk.length;

  if (
    this[kPerMessageDeflate]._maxPayload < 1 ||
    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload
  ) {
    this[kBuffers].push(chunk);
    return;
  }

  this[kError] = new RangeError('Max payload size exceeded');
  this[kError][kStatusCode] = 1009;
  this.removeListener('data', inflateOnData);
  this.reset();
}

/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */
function inflateOnError(err) {
  //
  // There is no need to call `Zlib#close()` as the handle is automatically
  // closed when an error is emitted.
  //
  this[kPerMessageDeflate]._inflate = null;
  err[kStatusCode] = 1007;
  this[kCallback](err);
}


/***/ }),

/***/ 212:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Writable } = __nccwpck_require__(781);

const PerMessageDeflate = __nccwpck_require__(301);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  kStatusCode,
  kWebSocket
} = __nccwpck_require__(508);
const { concat, toArrayBuffer, unmask } = __nccwpck_require__(439);
const { isValidStatusCode, isValidUTF8 } = __nccwpck_require__(750);

const GET_INFO = 0;
const GET_PAYLOAD_LENGTH_16 = 1;
const GET_PAYLOAD_LENGTH_64 = 2;
const GET_MASK = 3;
const GET_DATA = 4;
const INFLATING = 5;

/**
 * HyBi Receiver implementation.
 *
 * @extends stream.Writable
 */
class Receiver extends Writable {
  /**
   * Creates a Receiver instance.
   *
   * @param {String} binaryType The type for binary data
   * @param {Object} extensions An object containing the negotiated extensions
   * @param {Number} maxPayload The maximum allowed message length
   */
  constructor(binaryType, extensions, maxPayload) {
    super();

    this._binaryType = binaryType || BINARY_TYPES[0];
    this[kWebSocket] = undefined;
    this._extensions = extensions || {};
    this._maxPayload = maxPayload | 0;

    this._bufferedBytes = 0;
    this._buffers = [];

    this._compressed = false;
    this._payloadLength = 0;
    this._mask = undefined;
    this._fragmented = 0;
    this._masked = false;
    this._fin = false;
    this._opcode = 0;

    this._totalPayloadLength = 0;
    this._messageLength = 0;
    this._fragments = [];

    this._state = GET_INFO;
    this._loop = false;
  }

  /**
   * Implements `Writable.prototype._write()`.
   *
   * @param {Buffer} chunk The chunk of data to write
   * @param {String} encoding The character encoding of `chunk`
   * @param {Function} cb Callback
   */
  _write(chunk, encoding, cb) {
    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();

    this._bufferedBytes += chunk.length;
    this._buffers.push(chunk);
    this.startLoop(cb);
  }

  /**
   * Consumes `n` bytes from the buffered data.
   *
   * @param {Number} n The number of bytes to consume
   * @return {Buffer} The consumed bytes
   * @private
   */
  consume(n) {
    this._bufferedBytes -= n;

    if (n === this._buffers[0].length) return this._buffers.shift();

    if (n < this._buffers[0].length) {
      const buf = this._buffers[0];
      this._buffers[0] = buf.slice(n);
      return buf.slice(0, n);
    }

    const dst = Buffer.allocUnsafe(n);

    do {
      const buf = this._buffers[0];

      if (n >= buf.length) {
        this._buffers.shift().copy(dst, dst.length - n);
      } else {
        buf.copy(dst, dst.length - n, 0, n);
        this._buffers[0] = buf.slice(n);
      }

      n -= buf.length;
    } while (n > 0);

    return dst;
  }

  /**
   * Starts the parsing loop.
   *
   * @param {Function} cb Callback
   * @private
   */
  startLoop(cb) {
    var err;
    this._loop = true;

    do {
      switch (this._state) {
        case GET_INFO:
          err = this.getInfo();
          break;
        case GET_PAYLOAD_LENGTH_16:
          err = this.getPayloadLength16();
          break;
        case GET_PAYLOAD_LENGTH_64:
          err = this.getPayloadLength64();
          break;
        case GET_MASK:
          this.getMask();
          break;
        case GET_DATA:
          err = this.getData(cb);
          break;
        default:
          // `INFLATING`
          this._loop = false;
          return;
      }
    } while (this._loop);

    cb(err);
  }

  /**
   * Reads the first two bytes of a frame.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getInfo() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    const buf = this.consume(2);

    if ((buf[0] & 0x30) !== 0x00) {
      this._loop = false;
      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);
    }

    const compressed = (buf[0] & 0x40) === 0x40;

    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
      this._loop = false;
      return error(RangeError, 'RSV1 must be clear', true, 1002);
    }

    this._fin = (buf[0] & 0x80) === 0x80;
    this._opcode = buf[0] & 0x0f;
    this._payloadLength = buf[1] & 0x7f;

    if (this._opcode === 0x00) {
      if (compressed) {
        this._loop = false;
        return error(RangeError, 'RSV1 must be clear', true, 1002);
      }

      if (!this._fragmented) {
        this._loop = false;
        return error(RangeError, 'invalid opcode 0', true, 1002);
      }

      this._opcode = this._fragmented;
    } else if (this._opcode === 0x01 || this._opcode === 0x02) {
      if (this._fragmented) {
        this._loop = false;
        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);
      }

      this._compressed = compressed;
    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
      if (!this._fin) {
        this._loop = false;
        return error(RangeError, 'FIN must be set', true, 1002);
      }

      if (compressed) {
        this._loop = false;
        return error(RangeError, 'RSV1 must be clear', true, 1002);
      }

      if (this._payloadLength > 0x7d) {
        this._loop = false;
        return error(
          RangeError,
          `invalid payload length ${this._payloadLength}`,
          true,
          1002
        );
      }
    } else {
      this._loop = false;
      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);
    }

    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
    this._masked = (buf[1] & 0x80) === 0x80;

    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;
    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;
    else return this.haveLength();
  }

  /**
   * Gets extended payload length (7+16).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength16() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    this._payloadLength = this.consume(2).readUInt16BE(0);
    return this.haveLength();
  }

  /**
   * Gets extended payload length (7+64).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength64() {
    if (this._bufferedBytes < 8) {
      this._loop = false;
      return;
    }

    const buf = this.consume(8);
    const num = buf.readUInt32BE(0);

    //
    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
    // if payload length is greater than this number.
    //
    if (num > Math.pow(2, 53 - 32) - 1) {
      this._loop = false;
      return error(
        RangeError,
        'Unsupported WebSocket frame: payload length > 2^53 - 1',
        false,
        1009
      );
    }

    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);
    return this.haveLength();
  }

  /**
   * Payload length has been read.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  haveLength() {
    if (this._payloadLength && this._opcode < 0x08) {
      this._totalPayloadLength += this._payloadLength;
      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
        this._loop = false;
        return error(RangeError, 'Max payload size exceeded', false, 1009);
      }
    }

    if (this._masked) this._state = GET_MASK;
    else this._state = GET_DATA;
  }

  /**
   * Reads mask bytes.
   *
   * @private
   */
  getMask() {
    if (this._bufferedBytes < 4) {
      this._loop = false;
      return;
    }

    this._mask = this.consume(4);
    this._state = GET_DATA;
  }

  /**
   * Reads data bytes.
   *
   * @param {Function} cb Callback
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  getData(cb) {
    var data = EMPTY_BUFFER;

    if (this._payloadLength) {
      if (this._bufferedBytes < this._payloadLength) {
        this._loop = false;
        return;
      }

      data = this.consume(this._payloadLength);
      if (this._masked) unmask(data, this._mask);
    }

    if (this._opcode > 0x07) return this.controlMessage(data);

    if (this._compressed) {
      this._state = INFLATING;
      this.decompress(data, cb);
      return;
    }

    if (data.length) {
      //
      // This message is not compressed so its lenght is the sum of the payload
      // length of all fragments.
      //
      this._messageLength = this._totalPayloadLength;
      this._fragments.push(data);
    }

    return this.dataMessage();
  }

  /**
   * Decompresses data.
   *
   * @param {Buffer} data Compressed data
   * @param {Function} cb Callback
   * @private
   */
  decompress(data, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    perMessageDeflate.decompress(data, this._fin, (err, buf) => {
      if (err) return cb(err);

      if (buf.length) {
        this._messageLength += buf.length;
        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
          return cb(
            error(RangeError, 'Max payload size exceeded', false, 1009)
          );
        }

        this._fragments.push(buf);
      }

      const er = this.dataMessage();
      if (er) return cb(er);

      this.startLoop(cb);
    });
  }

  /**
   * Handles a data message.
   *
   * @return {(Error|undefined)} A possible error
   * @private
   */
  dataMessage() {
    if (this._fin) {
      const messageLength = this._messageLength;
      const fragments = this._fragments;

      this._totalPayloadLength = 0;
      this._messageLength = 0;
      this._fragmented = 0;
      this._fragments = [];

      if (this._opcode === 2) {
        var data;

        if (this._binaryType === 'nodebuffer') {
          data = concat(fragments, messageLength);
        } else if (this._binaryType === 'arraybuffer') {
          data = toArrayBuffer(concat(fragments, messageLength));
        } else {
          data = fragments;
        }

        this.emit('message', data);
      } else {
        const buf = concat(fragments, messageLength);

        if (!isValidUTF8(buf)) {
          this._loop = false;
          return error(Error, 'invalid UTF-8 sequence', true, 1007);
        }

        this.emit('message', buf.toString());
      }
    }

    this._state = GET_INFO;
  }

  /**
   * Handles a control message.
   *
   * @param {Buffer} data Data to handle
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  controlMessage(data) {
    if (this._opcode === 0x08) {
      this._loop = false;

      if (data.length === 0) {
        this.emit('conclude', 1005, '');
        this.end();
      } else if (data.length === 1) {
        return error(RangeError, 'invalid payload length 1', true, 1002);
      } else {
        const code = data.readUInt16BE(0);

        if (!isValidStatusCode(code)) {
          return error(RangeError, `invalid status code ${code}`, true, 1002);
        }

        const buf = data.slice(2);

        if (!isValidUTF8(buf)) {
          return error(Error, 'invalid UTF-8 sequence', true, 1007);
        }

        this.emit('conclude', code, buf.toString());
        this.end();
      }
    } else if (this._opcode === 0x09) {
      this.emit('ping', data);
    } else {
      this.emit('pong', data);
    }

    this._state = GET_INFO;
  }
}

module.exports = Receiver;

/**
 * Builds an error object.
 *
 * @param {(Error|RangeError)} ErrorCtor The error constructor
 * @param {String} message The error message
 * @param {Boolean} prefix Specifies whether or not to add a default prefix to
 *     `message`
 * @param {Number} statusCode The status code
 * @return {(Error|RangeError)} The error
 * @private
 */
function error(ErrorCtor, message, prefix, statusCode) {
  const err = new ErrorCtor(
    prefix ? `Invalid WebSocket frame: ${message}` : message
  );

  Error.captureStackTrace(err, error);
  err[kStatusCode] = statusCode;
  return err;
}


/***/ }),

/***/ 288:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { randomBytes } = __nccwpck_require__(113);

const PerMessageDeflate = __nccwpck_require__(301);
const { EMPTY_BUFFER } = __nccwpck_require__(508);
const { isValidStatusCode } = __nccwpck_require__(750);
const { mask: applyMask, toBuffer } = __nccwpck_require__(439);

/**
 * HyBi Sender implementation.
 */
class Sender {
  /**
   * Creates a Sender instance.
   *
   * @param {net.Socket} socket The connection socket
   * @param {Object} extensions An object containing the negotiated extensions
   */
  constructor(socket, extensions) {
    this._extensions = extensions || {};
    this._socket = socket;

    this._firstFragment = true;
    this._compress = false;

    this._bufferedBytes = 0;
    this._deflating = false;
    this._queue = [];
  }

  /**
   * Frames a piece of data according to the HyBi WebSocket protocol.
   *
   * @param {Buffer} data The data to frame
   * @param {Object} options Options object
   * @param {Number} options.opcode The opcode
   * @param {Boolean} options.readOnly Specifies whether `data` can be modified
   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit
   * @return {Buffer[]} The framed data as a list of `Buffer` instances
   * @public
   */
  static frame(data, options) {
    const merge = options.mask && options.readOnly;
    var offset = options.mask ? 6 : 2;
    var payloadLength = data.length;

    if (data.length >= 65536) {
      offset += 8;
      payloadLength = 127;
    } else if (data.length > 125) {
      offset += 2;
      payloadLength = 126;
    }

    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);

    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;
    if (options.rsv1) target[0] |= 0x40;

    target[1] = payloadLength;

    if (payloadLength === 126) {
      target.writeUInt16BE(data.length, 2);
    } else if (payloadLength === 127) {
      target.writeUInt32BE(0, 2);
      target.writeUInt32BE(data.length, 6);
    }

    if (!options.mask) return [target, data];

    const mask = randomBytes(4);

    target[1] |= 0x80;
    target[offset - 4] = mask[0];
    target[offset - 3] = mask[1];
    target[offset - 2] = mask[2];
    target[offset - 1] = mask[3];

    if (merge) {
      applyMask(data, mask, target, offset, data.length);
      return [target];
    }

    applyMask(data, mask, data, 0, data.length);
    return [target, data];
  }

  /**
   * Sends a close message to the other peer.
   *
   * @param {(Number|undefined)} code The status code component of the body
   * @param {String} data The message component of the body
   * @param {Boolean} mask Specifies whether or not to mask the message
   * @param {Function} cb Callback
   * @public
   */
  close(code, data, mask, cb) {
    var buf;

    if (code === undefined) {
      buf = EMPTY_BUFFER;
    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {
      throw new TypeError('First argument must be a valid error code number');
    } else if (data === undefined || data === '') {
      buf = Buffer.allocUnsafe(2);
      buf.writeUInt16BE(code, 0);
    } else {
      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));
      buf.writeUInt16BE(code, 0);
      buf.write(data, 2);
    }

    if (this._deflating) {
      this.enqueue([this.doClose, buf, mask, cb]);
    } else {
      this.doClose(buf, mask, cb);
    }
  }

  /**
   * Frames and sends a close message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @private
   */
  doClose(data, mask, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x08,
        mask,
        readOnly: false
      }),
      cb
    );
  }

  /**
   * Sends a ping message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @public
   */
  ping(data, mask, cb) {
    const buf = toBuffer(data);

    if (this._deflating) {
      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);
    } else {
      this.doPing(buf, mask, toBuffer.readOnly, cb);
    }
  }

  /**
   * Frames and sends a ping message.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Boolean} readOnly Specifies whether `data` can be modified
   * @param {Function} cb Callback
   * @private
   */
  doPing(data, mask, readOnly, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x09,
        mask,
        readOnly
      }),
      cb
    );
  }

  /**
   * Sends a pong message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @public
   */
  pong(data, mask, cb) {
    const buf = toBuffer(data);

    if (this._deflating) {
      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);
    } else {
      this.doPong(buf, mask, toBuffer.readOnly, cb);
    }
  }

  /**
   * Frames and sends a pong message.
   *
   * @param {*} data The message to send
   * @param {Boolean} mask Specifies whether or not to mask `data`
   * @param {Boolean} readOnly Specifies whether `data` can be modified
   * @param {Function} cb Callback
   * @private
   */
  doPong(data, mask, readOnly, cb) {
    this.sendFrame(
      Sender.frame(data, {
        fin: true,
        rsv1: false,
        opcode: 0x0a,
        mask,
        readOnly
      }),
      cb
    );
  }

  /**
   * Sends a data message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} options.compress Specifies whether or not to compress `data`
   * @param {Boolean} options.binary Specifies whether `data` is binary or text
   * @param {Boolean} options.fin Specifies whether the fragment is the last one
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback
   * @public
   */
  send(data, options, cb) {
    const buf = toBuffer(data);
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
    var opcode = options.binary ? 2 : 1;
    var rsv1 = options.compress;

    if (this._firstFragment) {
      this._firstFragment = false;
      if (rsv1 && perMessageDeflate) {
        rsv1 = buf.length >= perMessageDeflate._threshold;
      }
      this._compress = rsv1;
    } else {
      rsv1 = false;
      opcode = 0;
    }

    if (options.fin) this._firstFragment = true;

    if (perMessageDeflate) {
      const opts = {
        fin: options.fin,
        rsv1,
        opcode,
        mask: options.mask,
        readOnly: toBuffer.readOnly
      };

      if (this._deflating) {
        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);
      } else {
        this.dispatch(buf, this._compress, opts, cb);
      }
    } else {
      this.sendFrame(
        Sender.frame(buf, {
          fin: options.fin,
          rsv1: false,
          opcode,
          mask: options.mask,
          readOnly: toBuffer.readOnly
        }),
        cb
      );
    }
  }

  /**
   * Dispatches a data message.
   *
   * @param {Buffer} data The message to send
   * @param {Boolean} compress Specifies whether or not to compress `data`
   * @param {Object} options Options object
   * @param {Number} options.opcode The opcode
   * @param {Boolean} options.readOnly Specifies whether `data` can be modified
   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit
   * @param {Function} cb Callback
   * @private
   */
  dispatch(data, compress, options, cb) {
    if (!compress) {
      this.sendFrame(Sender.frame(data, options), cb);
      return;
    }

    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    this._deflating = true;
    perMessageDeflate.compress(data, options.fin, (_, buf) => {
      this._deflating = false;
      options.readOnly = false;
      this.sendFrame(Sender.frame(buf, options), cb);
      this.dequeue();
    });
  }

  /**
   * Executes queued send operations.
   *
   * @private
   */
  dequeue() {
    while (!this._deflating && this._queue.length) {
      const params = this._queue.shift();

      this._bufferedBytes -= params[1].length;
      params[0].apply(this, params.slice(1));
    }
  }

  /**
   * Enqueues a send operation.
   *
   * @param {Array} params Send operation parameters.
   * @private
   */
  enqueue(params) {
    this._bufferedBytes += params[1].length;
    this._queue.push(params);
  }

  /**
   * Sends a frame.
   *
   * @param {Buffer[]} list The frame to send
   * @param {Function} cb Callback
   * @private
   */
  sendFrame(list, cb) {
    if (list.length === 2) {
      this._socket.cork();
      this._socket.write(list[0]);
      this._socket.write(list[1], cb);
      this._socket.uncork();
    } else {
      this._socket.write(list[0], cb);
    }
  }
}

module.exports = Sender;


/***/ }),

/***/ 750:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


try {
  const isValidUTF8 = __nccwpck_require__(187);

  exports.isValidUTF8 =
    typeof isValidUTF8 === 'object'
      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0
      : isValidUTF8;
} catch (e) /* istanbul ignore next */ {
  exports.isValidUTF8 = () => true;
}

/**
 * Checks if a status code is allowed in a close frame.
 *
 * @param {Number} code The status code
 * @return {Boolean} `true` if the status code is valid, else `false`
 * @public
 */
exports.isValidStatusCode = (code) => {
  return (
    (code >= 1000 &&
      code <= 1013 &&
      code !== 1004 &&
      code !== 1005 &&
      code !== 1006) ||
    (code >= 3000 && code <= 4999)
  );
};


/***/ }),

/***/ 350:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(361);
const crypto = __nccwpck_require__(113);
const http = __nccwpck_require__(685);

const PerMessageDeflate = __nccwpck_require__(301);
const extension = __nccwpck_require__(130);
const WebSocket = __nccwpck_require__(427);
const { GUID } = __nccwpck_require__(508);

const keyRegex = /^[+/0-9A-Za-z]{22}==$/;

/**
 * Class representing a WebSocket server.
 *
 * @extends EventEmitter
 */
class WebSocketServer extends EventEmitter {
  /**
   * Create a `WebSocketServer` instance.
   *
   * @param {Object} options Configuration options
   * @param {Number} options.backlog The maximum length of the queue of pending
   *     connections
   * @param {Boolean} options.clientTracking Specifies whether or not to track
   *     clients
   * @param {Function} options.handleProtocols An hook to handle protocols
   * @param {String} options.host The hostname where to bind the server
   * @param {Number} options.maxPayload The maximum allowed message size
   * @param {Boolean} options.noServer Enable no server mode
   * @param {String} options.path Accept only connections matching this path
   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable
   *     permessage-deflate
   * @param {Number} options.port The port where to bind the server
   * @param {http.Server} options.server A pre-created HTTP/S server to use
   * @param {Function} options.verifyClient An hook to reject connections
   * @param {Function} callback A listener for the `listening` event
   */
  constructor(options, callback) {
    super();

    options = Object.assign(
      {
        maxPayload: 100 * 1024 * 1024,
        perMessageDeflate: false,
        handleProtocols: null,
        clientTracking: true,
        verifyClient: null,
        noServer: false,
        backlog: null, // use default (511 as implemented in net.js)
        server: null,
        host: null,
        path: null,
        port: null
      },
      options
    );

    if (options.port == null && !options.server && !options.noServer) {
      throw new TypeError(
        'One of the "port", "server", or "noServer" options must be specified'
      );
    }

    if (options.port != null) {
      this._server = http.createServer((req, res) => {
        const body = http.STATUS_CODES[426];

        res.writeHead(426, {
          'Content-Length': body.length,
          'Content-Type': 'text/plain'
        });
        res.end(body);
      });
      this._server.listen(
        options.port,
        options.host,
        options.backlog,
        callback
      );
    } else if (options.server) {
      this._server = options.server;
    }

    if (this._server) {
      this._removeListeners = addListeners(this._server, {
        listening: this.emit.bind(this, 'listening'),
        error: this.emit.bind(this, 'error'),
        upgrade: (req, socket, head) => {
          this.handleUpgrade(req, socket, head, (ws) => {
            this.emit('connection', ws, req);
          });
        }
      });
    }

    if (options.perMessageDeflate === true) options.perMessageDeflate = {};
    if (options.clientTracking) this.clients = new Set();
    this.options = options;
  }

  /**
   * Returns the bound address, the address family name, and port of the server
   * as reported by the operating system if listening on an IP socket.
   * If the server is listening on a pipe or UNIX domain socket, the name is
   * returned as a string.
   *
   * @return {(Object|String|null)} The address of the server
   * @public
   */
  address() {
    if (this.options.noServer) {
      throw new Error('The server is operating in "noServer" mode');
    }

    if (!this._server) return null;
    return this._server.address();
  }

  /**
   * Close the server.
   *
   * @param {Function} cb Callback
   * @public
   */
  close(cb) {
    if (cb) this.once('close', cb);

    //
    // Terminate all associated clients.
    //
    if (this.clients) {
      for (const client of this.clients) client.terminate();
    }

    const server = this._server;

    if (server) {
      this._removeListeners();
      this._removeListeners = this._server = null;

      //
      // Close the http server if it was internally created.
      //
      if (this.options.port != null) {
        server.close(() => this.emit('close'));
        return;
      }
    }

    process.nextTick(emitClose, this);
  }

  /**
   * See if a given request should be handled by this server instance.
   *
   * @param {http.IncomingMessage} req Request object to inspect
   * @return {Boolean} `true` if the request is valid, else `false`
   * @public
   */
  shouldHandle(req) {
    if (this.options.path) {
      const index = req.url.indexOf('?');
      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;

      if (pathname !== this.options.path) return false;
    }

    return true;
  }

  /**
   * Handle a HTTP Upgrade request.
   *
   * @param {http.IncomingMessage} req The request object
   * @param {net.Socket} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @public
   */
  handleUpgrade(req, socket, head, cb) {
    socket.on('error', socketOnError);

    const key =
      req.headers['sec-websocket-key'] !== undefined
        ? req.headers['sec-websocket-key'].trim()
        : false;
    const version = +req.headers['sec-websocket-version'];
    const extensions = {};

    if (
      req.method !== 'GET' ||
      req.headers.upgrade.toLowerCase() !== 'websocket' ||
      !key ||
      !keyRegex.test(key) ||
      (version !== 8 && version !== 13) ||
      !this.shouldHandle(req)
    ) {
      return abortHandshake(socket, 400);
    }

    if (this.options.perMessageDeflate) {
      const perMessageDeflate = new PerMessageDeflate(
        this.options.perMessageDeflate,
        true,
        this.options.maxPayload
      );

      try {
        const offers = extension.parse(req.headers['sec-websocket-extensions']);

        if (offers[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);
          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
        }
      } catch (err) {
        return abortHandshake(socket, 400);
      }
    }

    //
    // Optionally call external client verification handler.
    //
    if (this.options.verifyClient) {
      const info = {
        origin:
          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],
        secure: !!(req.connection.authorized || req.connection.encrypted),
        req
      };

      if (this.options.verifyClient.length === 2) {
        this.options.verifyClient(info, (verified, code, message, headers) => {
          if (!verified) {
            return abortHandshake(socket, code || 401, message, headers);
          }

          this.completeUpgrade(key, extensions, req, socket, head, cb);
        });
        return;
      }

      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);
    }

    this.completeUpgrade(key, extensions, req, socket, head, cb);
  }

  /**
   * Upgrade the connection to WebSocket.
   *
   * @param {String} key The value of the `Sec-WebSocket-Key` header
   * @param {Object} extensions The accepted extensions
   * @param {http.IncomingMessage} req The request object
   * @param {net.Socket} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @private
   */
  completeUpgrade(key, extensions, req, socket, head, cb) {
    //
    // Destroy the socket if the client has already sent a FIN packet.
    //
    if (!socket.readable || !socket.writable) return socket.destroy();

    const digest = crypto
      .createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    const headers = [
      'HTTP/1.1 101 Switching Protocols',
      'Upgrade: websocket',
      'Connection: Upgrade',
      `Sec-WebSocket-Accept: ${digest}`
    ];

    const ws = new WebSocket(null);
    var protocol = req.headers['sec-websocket-protocol'];

    if (protocol) {
      protocol = protocol.trim().split(/ *, */);

      //
      // Optionally call external protocol selection handler.
      //
      if (this.options.handleProtocols) {
        protocol = this.options.handleProtocols(protocol, req);
      } else {
        protocol = protocol[0];
      }

      if (protocol) {
        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);
        ws.protocol = protocol;
      }
    }

    if (extensions[PerMessageDeflate.extensionName]) {
      const params = extensions[PerMessageDeflate.extensionName].params;
      const value = extension.format({
        [PerMessageDeflate.extensionName]: [params]
      });
      headers.push(`Sec-WebSocket-Extensions: ${value}`);
      ws._extensions = extensions;
    }

    //
    // Allow external modification/inspection of handshake headers.
    //
    this.emit('headers', headers, req);

    socket.write(headers.concat('\r\n').join('\r\n'));
    socket.removeListener('error', socketOnError);

    ws.setSocket(socket, head, this.options.maxPayload);

    if (this.clients) {
      this.clients.add(ws);
      ws.on('close', () => this.clients.delete(ws));
    }

    cb(ws);
  }
}

module.exports = WebSocketServer;

/**
 * Add event listeners on an `EventEmitter` using a map of <event, listener>
 * pairs.
 *
 * @param {EventEmitter} server The event emitter
 * @param {Object.<String, Function>} map The listeners to add
 * @return {Function} A function that will remove the added listeners when called
 * @private
 */
function addListeners(server, map) {
  for (const event of Object.keys(map)) server.on(event, map[event]);

  return function removeListeners() {
    for (const event of Object.keys(map)) {
      server.removeListener(event, map[event]);
    }
  };
}

/**
 * Emit a `'close'` event on an `EventEmitter`.
 *
 * @param {EventEmitter} server The event emitter
 * @private
 */
function emitClose(server) {
  server.emit('close');
}

/**
 * Handle premature socket errors.
 *
 * @private
 */
function socketOnError() {
  this.destroy();
}

/**
 * Close the connection when preconditions are not fulfilled.
 *
 * @param {net.Socket} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} [message] The HTTP response body
 * @param {Object} [headers] Additional HTTP response headers
 * @private
 */
function abortHandshake(socket, code, message, headers) {
  if (socket.writable) {
    message = message || http.STATUS_CODES[code];
    headers = Object.assign(
      {
        Connection: 'close',
        'Content-type': 'text/html',
        'Content-Length': Buffer.byteLength(message)
      },
      headers
    );

    socket.write(
      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +
        Object.keys(headers)
          .map((h) => `${h}: ${headers[h]}`)
          .join('\r\n') +
        '\r\n\r\n' +
        message
    );
  }

  socket.removeListener('error', socketOnError);
  socket.destroy();
}


/***/ }),

/***/ 427:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(361);
const crypto = __nccwpck_require__(113);
const https = __nccwpck_require__(687);
const http = __nccwpck_require__(685);
const net = __nccwpck_require__(808);
const tls = __nccwpck_require__(404);
const url = __nccwpck_require__(310);

const PerMessageDeflate = __nccwpck_require__(301);
const EventTarget = __nccwpck_require__(817);
const extension = __nccwpck_require__(130);
const Receiver = __nccwpck_require__(212);
const Sender = __nccwpck_require__(288);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  GUID,
  kStatusCode,
  kWebSocket,
  NOOP
} = __nccwpck_require__(508);

const readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];
const protocolVersions = [8, 13];
const closeTimeout = 30 * 1000;

/**
 * Class representing a WebSocket.
 *
 * @extends EventEmitter
 */
class WebSocket extends EventEmitter {
  /**
   * Create a new `WebSocket`.
   *
   * @param {(String|url.Url|url.URL)} address The URL to which to connect
   * @param {(String|String[])} protocols The subprotocols
   * @param {Object} options Connection options
   */
  constructor(address, protocols, options) {
    super();

    this.readyState = WebSocket.CONNECTING;
    this.protocol = '';

    this._binaryType = BINARY_TYPES[0];
    this._closeFrameReceived = false;
    this._closeFrameSent = false;
    this._closeMessage = '';
    this._closeTimer = null;
    this._closeCode = 1006;
    this._extensions = {};
    this._receiver = null;
    this._sender = null;
    this._socket = null;

    if (address !== null) {
      this._isServer = false;
      this._redirects = 0;

      if (Array.isArray(protocols)) {
        protocols = protocols.join(', ');
      } else if (typeof protocols === 'object' && protocols !== null) {
        options = protocols;
        protocols = undefined;
      }

      initAsClient(this, address, protocols, options);
    } else {
      this._isServer = true;
    }
  }

  get CONNECTING() {
    return WebSocket.CONNECTING;
  }
  get CLOSING() {
    return WebSocket.CLOSING;
  }
  get CLOSED() {
    return WebSocket.CLOSED;
  }
  get OPEN() {
    return WebSocket.OPEN;
  }

  /**
   * This deviates from the WHATWG interface since ws doesn't support the
   * required default "blob" type (instead we define a custom "nodebuffer"
   * type).
   *
   * @type {String}
   */
  get binaryType() {
    return this._binaryType;
  }

  set binaryType(type) {
    if (!BINARY_TYPES.includes(type)) return;

    this._binaryType = type;

    //
    // Allow to change `binaryType` on the fly.
    //
    if (this._receiver) this._receiver._binaryType = type;
  }

  /**
   * @type {Number}
   */
  get bufferedAmount() {
    if (!this._socket) return 0;

    //
    // `socket.bufferSize` is `undefined` if the socket is closed.
    //
    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;
  }

  /**
   * @type {String}
   */
  get extensions() {
    return Object.keys(this._extensions).join();
  }

  /**
   * Set up the socket and the internal resources.
   *
   * @param {net.Socket} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Number} maxPayload The maximum allowed message size
   * @private
   */
  setSocket(socket, head, maxPayload) {
    const receiver = new Receiver(
      this._binaryType,
      this._extensions,
      maxPayload
    );

    this._sender = new Sender(socket, this._extensions);
    this._receiver = receiver;
    this._socket = socket;

    receiver[kWebSocket] = this;
    socket[kWebSocket] = this;

    receiver.on('conclude', receiverOnConclude);
    receiver.on('drain', receiverOnDrain);
    receiver.on('error', receiverOnError);
    receiver.on('message', receiverOnMessage);
    receiver.on('ping', receiverOnPing);
    receiver.on('pong', receiverOnPong);

    socket.setTimeout(0);
    socket.setNoDelay();

    if (head.length > 0) socket.unshift(head);

    socket.on('close', socketOnClose);
    socket.on('data', socketOnData);
    socket.on('end', socketOnEnd);
    socket.on('error', socketOnError);

    this.readyState = WebSocket.OPEN;
    this.emit('open');
  }

  /**
   * Emit the `'close'` event.
   *
   * @private
   */
  emitClose() {
    this.readyState = WebSocket.CLOSED;

    if (!this._socket) {
      this.emit('close', this._closeCode, this._closeMessage);
      return;
    }

    if (this._extensions[PerMessageDeflate.extensionName]) {
      this._extensions[PerMessageDeflate.extensionName].cleanup();
    }

    this._receiver.removeAllListeners();
    this.emit('close', this._closeCode, this._closeMessage);
  }

  /**
   * Start a closing handshake.
   *
   *          +----------+   +-----------+   +----------+
   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -
   *    |     +----------+   +-----------+   +----------+     |
   *          +----------+   +-----------+         |
   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING
   *          +----------+   +-----------+   |
   *    |           |                        |   +---+        |
   *                +------------------------+-->|fin| - - - -
   *    |         +---+                      |   +---+
   *     - - - - -|fin|<---------------------+
   *              +---+
   *
   * @param {Number} code Status code explaining why the connection is closing
   * @param {String} data A string explaining why the connection is closing
   * @public
   */
  close(code, data) {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this.readyState === WebSocket.CLOSING) {
      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();
      return;
    }

    this.readyState = WebSocket.CLOSING;
    this._sender.close(code, data, !this._isServer, (err) => {
      //
      // This error is handled by the `'error'` listener on the socket. We only
      // want to know if the close frame has been sent here.
      //
      if (err) return;

      this._closeFrameSent = true;
      if (this._closeFrameReceived) this._socket.end();
    });

    //
    // Specify a timeout for the closing handshake to complete.
    //
    this._closeTimer = setTimeout(
      this._socket.destroy.bind(this._socket),
      closeTimeout
    );
  }

  /**
   * Send a ping.
   *
   * @param {*} data The data to send
   * @param {Boolean} mask Indicates whether or not to mask `data`
   * @param {Function} cb Callback which is executed when the ping is sent
   * @public
   */
  ping(data, mask, cb) {
    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (this.readyState !== WebSocket.OPEN) {
      const err = new Error(
        `WebSocket is not open: readyState ${this.readyState} ` +
          `(${readyStates[this.readyState]})`
      );

      if (cb) return cb(err);
      throw err;
    }

    if (typeof data === 'number') data = data.toString();
    if (mask === undefined) mask = !this._isServer;
    this._sender.ping(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a pong.
   *
   * @param {*} data The data to send
   * @param {Boolean} mask Indicates whether or not to mask `data`
   * @param {Function} cb Callback which is executed when the pong is sent
   * @public
   */
  pong(data, mask, cb) {
    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (this.readyState !== WebSocket.OPEN) {
      const err = new Error(
        `WebSocket is not open: readyState ${this.readyState} ` +
          `(${readyStates[this.readyState]})`
      );

      if (cb) return cb(err);
      throw err;
    }

    if (typeof data === 'number') data = data.toString();
    if (mask === undefined) mask = !this._isServer;
    this._sender.pong(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a data message.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} options.compress Specifies whether or not to compress `data`
   * @param {Boolean} options.binary Specifies whether `data` is binary or text
   * @param {Boolean} options.fin Specifies whether the fragment is the last one
   * @param {Boolean} options.mask Specifies whether or not to mask `data`
   * @param {Function} cb Callback which is executed when data is written out
   * @public
   */
  send(data, options, cb) {
    if (typeof options === 'function') {
      cb = options;
      options = {};
    }

    if (this.readyState !== WebSocket.OPEN) {
      const err = new Error(
        `WebSocket is not open: readyState ${this.readyState} ` +
          `(${readyStates[this.readyState]})`
      );

      if (cb) return cb(err);
      throw err;
    }

    if (typeof data === 'number') data = data.toString();

    const opts = Object.assign(
      {
        binary: typeof data !== 'string',
        mask: !this._isServer,
        compress: true,
        fin: true
      },
      options
    );

    if (!this._extensions[PerMessageDeflate.extensionName]) {
      opts.compress = false;
    }

    this._sender.send(data || EMPTY_BUFFER, opts, cb);
  }

  /**
   * Forcibly close the connection.
   *
   * @public
   */
  terminate() {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      return abortHandshake(this, this._req, msg);
    }

    if (this._socket) {
      this.readyState = WebSocket.CLOSING;
      this._socket.destroy();
    }
  }
}

readyStates.forEach((readyState, i) => {
  WebSocket[readyState] = i;
});

//
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
//
['open', 'error', 'close', 'message'].forEach((method) => {
  Object.defineProperty(WebSocket.prototype, `on${method}`, {
    /**
     * Return the listener of the event.
     *
     * @return {(Function|undefined)} The event listener or `undefined`
     * @public
     */
    get() {
      const listeners = this.listeners(method);
      for (var i = 0; i < listeners.length; i++) {
        if (listeners[i]._listener) return listeners[i]._listener;
      }

      return undefined;
    },
    /**
     * Add a listener for the event.
     *
     * @param {Function} listener The listener to add
     * @public
     */
    set(listener) {
      const listeners = this.listeners(method);
      for (var i = 0; i < listeners.length; i++) {
        //
        // Remove only the listeners added via `addEventListener`.
        //
        if (listeners[i]._listener) this.removeListener(method, listeners[i]);
      }
      this.addEventListener(method, listener);
    }
  });
});

WebSocket.prototype.addEventListener = EventTarget.addEventListener;
WebSocket.prototype.removeEventListener = EventTarget.removeEventListener;

module.exports = WebSocket;

/**
 * Initialize a WebSocket client.
 *
 * @param {WebSocket} websocket The client to initialize
 * @param {(String|url.Url|url.URL)} address The URL to which to connect
 * @param {String} protocols The subprotocols
 * @param {Object} options Connection options
 * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable
 *     permessage-deflate
 * @param {Number} options.handshakeTimeout Timeout in milliseconds for the
 *     handshake request
 * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version`
 *     header
 * @param {String} options.origin Value of the `Origin` or
 *     `Sec-WebSocket-Origin` header
 * @param {Number} options.maxPayload The maximum allowed message size
 * @param {Boolean} options.followRedirects Whether or not to follow redirects
 * @param {Number} options.maxRedirects The maximum number of redirects allowed
 * @private
 */
function initAsClient(websocket, address, protocols, options) {
  const opts = Object.assign(
    {
      protocolVersion: protocolVersions[1],
      maxPayload: 100 * 1024 * 1024,
      perMessageDeflate: true,
      followRedirects: false,
      maxRedirects: 10
    },
    options,
    {
      createConnection: undefined,
      socketPath: undefined,
      hostname: undefined,
      protocol: undefined,
      timeout: undefined,
      method: undefined,
      auth: undefined,
      host: undefined,
      path: undefined,
      port: undefined
    }
  );

  if (!protocolVersions.includes(opts.protocolVersion)) {
    throw new RangeError(
      `Unsupported protocol version: ${opts.protocolVersion} ` +
        `(supported versions: ${protocolVersions.join(', ')})`
    );
  }

  var parsedUrl;

  if (typeof address === 'object' && address.href !== undefined) {
    parsedUrl = address;
    websocket.url = address.href;
  } else {
    //
    // The WHATWG URL constructor is not available on Node.js < 6.13.0
    //
    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);
    websocket.url = address;
  }

  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';

  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {
    throw new Error(`Invalid URL: ${websocket.url}`);
  }

  const isSecure =
    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';
  const defaultPort = isSecure ? 443 : 80;
  const key = crypto.randomBytes(16).toString('base64');
  const get = isSecure ? https.get : http.get;
  const path = parsedUrl.search
    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`
    : parsedUrl.pathname || '/';
  var perMessageDeflate;

  opts.createConnection = isSecure ? tlsConnect : netConnect;
  opts.defaultPort = opts.defaultPort || defaultPort;
  opts.port = parsedUrl.port || defaultPort;
  opts.host = parsedUrl.hostname.startsWith('[')
    ? parsedUrl.hostname.slice(1, -1)
    : parsedUrl.hostname;
  opts.headers = Object.assign(
    {
      'Sec-WebSocket-Version': opts.protocolVersion,
      'Sec-WebSocket-Key': key,
      Connection: 'Upgrade',
      Upgrade: 'websocket'
    },
    opts.headers
  );
  opts.path = path;
  opts.timeout = opts.handshakeTimeout;

  if (opts.perMessageDeflate) {
    perMessageDeflate = new PerMessageDeflate(
      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},
      false,
      opts.maxPayload
    );
    opts.headers['Sec-WebSocket-Extensions'] = extension.format({
      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
    });
  }
  if (protocols) {
    opts.headers['Sec-WebSocket-Protocol'] = protocols;
  }
  if (opts.origin) {
    if (opts.protocolVersion < 13) {
      opts.headers['Sec-WebSocket-Origin'] = opts.origin;
    } else {
      opts.headers.Origin = opts.origin;
    }
  }
  if (parsedUrl.auth) {
    opts.auth = parsedUrl.auth;
  } else if (parsedUrl.username || parsedUrl.password) {
    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
  }

  if (isUnixSocket) {
    const parts = path.split(':');

    opts.socketPath = parts[0];
    opts.path = parts[1];
  }

  var req = (websocket._req = get(opts));

  if (opts.timeout) {
    req.on('timeout', () => {
      abortHandshake(websocket, req, 'Opening handshake has timed out');
    });
  }

  req.on('error', (err) => {
    if (websocket._req.aborted) return;

    req = websocket._req = null;
    websocket.readyState = WebSocket.CLOSING;
    websocket.emit('error', err);
    websocket.emitClose();
  });

  req.on('response', (res) => {
    const location = res.headers.location;
    const statusCode = res.statusCode;

    if (
      location &&
      opts.followRedirects &&
      statusCode >= 300 &&
      statusCode < 400
    ) {
      if (++websocket._redirects > opts.maxRedirects) {
        abortHandshake(websocket, req, 'Maximum redirects exceeded');
        return;
      }

      req.abort();

      const addr = url.URL
        ? new url.URL(location, address)
        : url.resolve(address, location);

      initAsClient(websocket, addr, protocols, options);
    } else if (!websocket.emit('unexpected-response', req, res)) {
      abortHandshake(
        websocket,
        req,
        `Unexpected server response: ${res.statusCode}`
      );
    }
  });

  req.on('upgrade', (res, socket, head) => {
    websocket.emit('upgrade', res);

    //
    // The user may have closed the connection from a listener of the `upgrade`
    // event.
    //
    if (websocket.readyState !== WebSocket.CONNECTING) return;

    req = websocket._req = null;

    const digest = crypto
      .createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    if (res.headers['sec-websocket-accept'] !== digest) {
      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');
      return;
    }

    const serverProt = res.headers['sec-websocket-protocol'];
    const protList = (protocols || '').split(/, */);
    var protError;

    if (!protocols && serverProt) {
      protError = 'Server sent a subprotocol but none was requested';
    } else if (protocols && !serverProt) {
      protError = 'Server sent no subprotocol';
    } else if (serverProt && !protList.includes(serverProt)) {
      protError = 'Server sent an invalid subprotocol';
    }

    if (protError) {
      abortHandshake(websocket, socket, protError);
      return;
    }

    if (serverProt) websocket.protocol = serverProt;

    if (perMessageDeflate) {
      try {
        const extensions = extension.parse(
          res.headers['sec-websocket-extensions']
        );

        if (extensions[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
          websocket._extensions[
            PerMessageDeflate.extensionName
          ] = perMessageDeflate;
        }
      } catch (err) {
        abortHandshake(
          websocket,
          socket,
          'Invalid Sec-WebSocket-Extensions header'
        );
        return;
      }
    }

    websocket.setSocket(socket, head, opts.maxPayload);
  });
}

/**
 * Create a `net.Socket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {net.Socket} The newly created socket used to start the connection
 * @private
 */
function netConnect(options) {
  //
  // Override `options.path` only if `options` is a copy of the original options
  // object. This is always true on Node.js >= 8 but not on Node.js 6 where
  // `options.socketPath` might be `undefined` even if the `socketPath` option
  // was originally set.
  //
  if (options.protocolVersion) options.path = options.socketPath;
  return net.connect(options);
}

/**
 * Create a `tls.TLSSocket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {tls.TLSSocket} The newly created socket used to start the connection
 * @private
 */
function tlsConnect(options) {
  options.path = undefined;
  options.servername = options.servername || options.host;
  return tls.connect(options);
}

/**
 * Abort the handshake and emit an error.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the
 *     socket to destroy
 * @param {String} message The error message
 * @private
 */
function abortHandshake(websocket, stream, message) {
  websocket.readyState = WebSocket.CLOSING;

  const err = new Error(message);
  Error.captureStackTrace(err, abortHandshake);

  if (stream.setHeader) {
    stream.abort();
    stream.once('abort', websocket.emitClose.bind(websocket));
    websocket.emit('error', err);
  } else {
    stream.destroy(err);
    stream.once('error', websocket.emit.bind(websocket, 'error'));
    stream.once('close', websocket.emitClose.bind(websocket));
  }
}

/**
 * The listener of the `Receiver` `'conclude'` event.
 *
 * @param {Number} code The status code
 * @param {String} reason The reason for closing
 * @private
 */
function receiverOnConclude(code, reason) {
  const websocket = this[kWebSocket];

  websocket._socket.removeListener('data', socketOnData);
  websocket._socket.resume();

  websocket._closeFrameReceived = true;
  websocket._closeMessage = reason;
  websocket._closeCode = code;

  if (code === 1005) websocket.close();
  else websocket.close(code, reason);
}

/**
 * The listener of the `Receiver` `'drain'` event.
 *
 * @private
 */
function receiverOnDrain() {
  this[kWebSocket]._socket.resume();
}

/**
 * The listener of the `Receiver` `'error'` event.
 *
 * @param {(RangeError|Error)} err The emitted error
 * @private
 */
function receiverOnError(err) {
  const websocket = this[kWebSocket];

  websocket._socket.removeListener('data', socketOnData);

  websocket.readyState = WebSocket.CLOSING;
  websocket._closeCode = err[kStatusCode];
  websocket.emit('error', err);
  websocket._socket.destroy();
}

/**
 * The listener of the `Receiver` `'finish'` event.
 *
 * @private
 */
function receiverOnFinish() {
  this[kWebSocket].emitClose();
}

/**
 * The listener of the `Receiver` `'message'` event.
 *
 * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message
 * @private
 */
function receiverOnMessage(data) {
  this[kWebSocket].emit('message', data);
}

/**
 * The listener of the `Receiver` `'ping'` event.
 *
 * @param {Buffer} data The data included in the ping frame
 * @private
 */
function receiverOnPing(data) {
  const websocket = this[kWebSocket];

  websocket.pong(data, !websocket._isServer, NOOP);
  websocket.emit('ping', data);
}

/**
 * The listener of the `Receiver` `'pong'` event.
 *
 * @param {Buffer} data The data included in the pong frame
 * @private
 */
function receiverOnPong(data) {
  this[kWebSocket].emit('pong', data);
}

/**
 * The listener of the `net.Socket` `'close'` event.
 *
 * @private
 */
function socketOnClose() {
  const websocket = this[kWebSocket];

  this.removeListener('close', socketOnClose);
  this.removeListener('end', socketOnEnd);

  websocket.readyState = WebSocket.CLOSING;

  //
  // The close frame might not have been received or the `'end'` event emitted,
  // for example, if the socket was destroyed due to an error. Ensure that the
  // `receiver` stream is closed after writing any remaining buffered data to
  // it. If the readable side of the socket is in flowing mode then there is no
  // buffered data as everything has been already written and `readable.read()`
  // will return `null`. If instead, the socket is paused, any possible buffered
  // data will be read as a single chunk and emitted synchronously in a single
  // `'data'` event.
  //
  websocket._socket.read();
  websocket._receiver.end();

  this.removeListener('data', socketOnData);
  this[kWebSocket] = undefined;

  clearTimeout(websocket._closeTimer);

  if (
    websocket._receiver._writableState.finished ||
    websocket._receiver._writableState.errorEmitted
  ) {
    websocket.emitClose();
  } else {
    websocket._receiver.on('error', receiverOnFinish);
    websocket._receiver.on('finish', receiverOnFinish);
  }
}

/**
 * The listener of the `net.Socket` `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function socketOnData(chunk) {
  if (!this[kWebSocket]._receiver.write(chunk)) {
    this.pause();
  }
}

/**
 * The listener of the `net.Socket` `'end'` event.
 *
 * @private
 */
function socketOnEnd() {
  const websocket = this[kWebSocket];

  websocket.readyState = WebSocket.CLOSING;
  websocket._receiver.end();
  this.end();
}

/**
 * The listener of the `net.Socket` `'error'` event.
 *
 * @private
 */
function socketOnError() {
  const websocket = this[kWebSocket];

  this.removeListener('error', socketOnError);
  this.on('error', NOOP);

  websocket.readyState = WebSocket.CLOSING;
  this.destroy();
}


/***/ }),

/***/ 701:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, $module$_actions_core_fx0i1v, process, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_io_ktor_ktor_client_serialization, kotlin_io_ktor_ktor_client_json, kotlin_io_ktor_ktor_client_core, kotlin_io_ktor_ktor_http) {
  'use strict';
  //region block: imports
  var getInput = $module$_actions_core_fx0i1v.getInput;
  var setFailed = $module$_actions_core_fx0i1v.setFailed;
  var imul = Math.imul;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var charSequenceLength = kotlin_kotlin.$_$.w7;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var toIntOrNull = kotlin_kotlin.$_$.ia;
  var split$default = kotlin_kotlin.$_$.p;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var toString = kotlin_kotlin.$_$.c9;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.b;
  var KotlinxSerializer = kotlin_io_ktor_ktor_client_serialization.$_$.a;
  var Feature_getInstance = kotlin_io_ktor_ktor_client_json.$_$.a;
  var CoroutineImpl = kotlin_kotlin.$_$.j7;
  var Js_getInstance = kotlin_io_ktor_ktor_client_core.$_$.d;
  var HttpClient = kotlin_io_ktor_ktor_client_core.$_$.r;
  var get_DEFAULT_PORT = kotlin_io_ktor_ktor_http.$_$.s;
  var EmptyContent_getInstance = kotlin_io_ktor_ktor_client_core.$_$.g;
  var HttpRequestBuilder = kotlin_io_ktor_ktor_client_core.$_$.j;
  var url$default = kotlin_io_ktor_ktor_client_core.$_$.a;
  var Companion_getInstance = kotlin_io_ktor_ktor_http.$_$.i;
  var takeFrom = kotlin_io_ktor_ktor_http.$_$.f1;
  var header = kotlin_io_ktor_ktor_client_core.$_$.l;
  var HttpStatement = kotlin_io_ktor_ktor_client_core.$_$.o;
  var JsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.e;
  var getKClass = kotlin_kotlin.$_$.e;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.t6;
  var HttpResponse = kotlin_io_ktor_ktor_client_core.$_$.n;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var JsType_getInstance = kotlin_io_ktor_ktor_client_core.$_$.c;
  var arrayOf = kotlin_kotlin.$_$.qb;
  var createKType = kotlin_kotlin.$_$.b;
  var TypeInfo = kotlin_io_ktor_ktor_client_core.$_$.h;
  var TypeInfo_init_$Create$ = kotlin_io_ktor_ktor_client_core.$_$.b;
  var complete = kotlin_io_ktor_ktor_client_core.$_$.p;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var get_jsonPrimitive = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.f;
  var toInt = kotlin_kotlin.$_$.ja;
  var Exception = kotlin_kotlin.$_$.ab;
  var println = kotlin_kotlin.$_$.p7;
  var classMeta = kotlin_kotlin.$_$.y7;
  var get_EmptyContinuation = kotlin_kotlin.$_$.w6;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  //endregion
  //region block: pre-declaration
  $mainCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $mainCOROUTINE$0.prototype.constructor = $mainCOROUTINE$0;
  //endregion
  function main($cont) {
    var tmp = new $mainCOROUTINE$0($cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function resolveInputs() {
    var tmp$ret$1;
    {
      var tmp0_ifEmpty = getInput('maxCommits');
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(tmp0_ifEmpty) === 0;
      }
      if (tmp$ret$0) {
        throw IllegalArgumentException_init_$Create$("Don't forget to define maxCommits");
      } else {
        tmp = tmp0_ifEmpty;
      }
      tmp$ret$1 = tmp;
    }
    var inputString = tmp$ret$1;
    var tmp0_elvis_lhs = toIntOrNull(inputString);
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(inputString + ' is not a valid number');
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var inputNumber = tmp_0;
    var tmp$ret$6;
    {
      var tmp1_ifEmpty = getInput('token');
      var tmp_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = charSequenceLength(tmp1_ifEmpty) === 0;
      }
      if (tmp$ret$2) {
        var tmp$ret$5;
        {
          var tmp$ret$4;
          {
            var tmp0_ifEmpty_0 = getInput('GITHUB_TOKEN');
            var tmp_2;
            var tmp$ret$3;
            {
              tmp$ret$3 = charSequenceLength(tmp0_ifEmpty_0) === 0;
            }
            if (tmp$ret$3) {
              throw IllegalArgumentException_init_$Create$("Don't forget to set token");
            } else {
              tmp_2 = tmp0_ifEmpty_0;
            }
            tmp$ret$4 = tmp_2;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        tmp_1 = tmp$ret$5;
      } else {
        tmp_1 = tmp1_ifEmpty;
      }
      tmp$ret$6 = tmp_1;
    }
    var token = tmp$ret$6;
    var repo = getEnv('GITHUB_REPOSITORY');
    var tmp_3 = getEnv('GITHUB_REF_NAME');
    var tmp1_elvis_lhs = toIntOrNull(split$default(tmp_3, ['/'], false, 0, 6, null).l(0));
    var tmp_4;
    if (tmp1_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('Failed to parse PR number');
    } else {
      tmp_4 = tmp1_elvis_lhs;
    }
    var prNumber = tmp_4;
    {
      var tmp2_require = getEnv('GITHUB_REF_TYPE') === 'branch';
      {
      }
      if (!tmp2_require) {
        var tmp$ret$7;
        {
          tmp$ret$7 = 'This step should only be triggered by pull requests';
        }
        var message = tmp$ret$7;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    {
      var tmp3_require = getEnv('GITHUB_EVENT_NAME') === 'pull_request';
      {
      }
      if (!tmp3_require) {
        var tmp$ret$8;
        {
          tmp$ret$8 = 'This step should only be triggerd by a pull request';
        }
        var message_0 = tmp$ret$8;
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    var repoUrl = 'https://api.github.com/repos/' + repo + '/pulls/' + prNumber;
    return new Inputs(inputNumber, token, repoUrl);
  }
  function getEnv(name) {
    var errorString = 'Somehow unable to find ' + name;
    var tmp$ret$1;
    {
      var tmp0_get = process.env;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get;
      }
      tmp$ret$1 = tmp$ret$0[name];
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$3;
      {
        var tmp_0;
        var tmp$ret$2;
        {
          tmp$ret$2 = charSequenceLength(tmp0_safe_receiver) === 0;
        }
        if (tmp$ret$2) {
          throw IllegalStateException_init_$Create$(errorString);
        } else {
          tmp_0 = tmp0_safe_receiver;
        }
        tmp$ret$3 = tmp_0;
      }
      tmp = tmp$ret$3;
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$(errorString);
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function main$lambda$lambda() {
    return function ($this$install) {
      $this$install.s32_1 = new KotlinxSerializer(Default_getInstance());
      return Unit_getInstance();
    };
  }
  function main$lambda() {
    return function ($this$HttpClient) {
      var tmp = Feature_getInstance();
      $this$HttpClient.r28(tmp, main$lambda$lambda());
      return Unit_getInstance();
    };
  }
  function $mainCOROUTINE$0(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  $mainCOROUTINE$0.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 10;
            this.i3p_1 = resolveInputs();
            this.wg_1 = 8;
            var tmp_0 = this;
            var tmp_1 = Js_getInstance();
            tmp_0.k3p_1 = HttpClient(tmp_1, main$lambda());
            var tmp_2 = this;
            tmp_2.l3p_1 = this.i3p_1.w3p_1;
            var tmp_3 = this;
            tmp_3.m3p_1 = get_DEFAULT_PORT();
            var tmp_4 = this;
            tmp_4.n3p_1 = EmptyContent_getInstance();
            var tmp_5 = this;
            var tmp0_apply = new HttpRequestBuilder();
            url$default(tmp0_apply, 'http', 'localhost', this.m3p_1, '/', null, 16, null);
            tmp0_apply.g27_1 = Companion_getInstance().h1z_1;
            tmp0_apply.i27_1 = this.n3p_1;
            takeFrom(tmp0_apply.f27_1, this.l3p_1);
            ;
            header(tmp0_apply, 'Accept', 'application/vnd.github+json');
            header(tmp0_apply, 'Authorization', 'token ' + this.i3p_1.v3p_1);
            ;
            tmp_5.o3p_1 = tmp0_apply;
            var tmp_6 = this;
            tmp_6.p3p_1 = new HttpStatement(this.o3p_1, this.k3p_1);
            this.q3p_1 = getKClass(JsonObject);
            if (this.q3p_1.equals(getKClass(HttpStatement))) {
              var tmp_7 = this;
              var tmp_8 = this.p3p_1;
              tmp_7.r3p_1 = tmp_8 instanceof JsonObject ? tmp_8 : THROW_CCE();
              this.vg_1 = 7;
              continue $sm;
            } else {
              if (this.q3p_1.equals(getKClass(HttpResponse))) {
                this.vg_1 = 6;
                suspendResult = this.p3p_1.b2w(this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.vg_1 = 1;
                suspendResult = this.p3p_1.c2v(this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              }
            }

            break;
          case 1:
            this.s3p_1 = suspendResult;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.wg_1 = 5;
            this.vg_1 = 3;
            var tmp_9 = this.s3p_1.u26();
            var tmp_10;
            try {
              tmp_10 = new TypeInfo(getKClass(JsonObject), JsType_getInstance(), createKType(getKClass(JsonObject), arrayOf([]), false));
            } catch ($p) {
              var tmp_11;
              {
                var tmp_12 = getKClass(JsonObject);
                var tmp_13 = JsType_getInstance();
                tmp_11 = TypeInfo_init_$Create$(tmp_12, tmp_13, null, 4, null);
              }
              tmp_10 = tmp_11;
            }

            suspendResult = tmp_9.v29(tmp_10, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            var tmp_14 = this;
            tmp_14.t3p_1 = suspendResult instanceof JsonObject ? suspendResult : THROW_CCE();
            this.vg_1 = 4;
            continue $sm;
          case 4:
            var tmp_15 = this.t3p_1;
            complete(this.s3p_1);
            this.r3p_1 = tmp_15;
            this.vg_1 = 7;
            continue $sm;
          case 5:
            this.wg_1 = 8;
            var t = this.yg_1;
            complete(this.s3p_1);
            throw t;
          case 6:
            var tmp_16 = this;
            tmp_16.r3p_1 = suspendResult instanceof JsonObject ? suspendResult : THROW_CCE();
            this.vg_1 = 7;
            continue $sm;
          case 7:
            var ARGUMENT = this.r3p_1;
            var ARGUMENT_0 = ARGUMENT.n1k('commits');
            var ARGUMENT_1 = ensureNotNull(ARGUMENT_0);
            var ARGUMENT_2 = get_jsonPrimitive(ARGUMENT_1);
            var ARGUMENT_3 = ARGUMENT_2.toString();
            this.j3p_1 = toInt(ARGUMENT_3);
            this.k3p_1.e1b();
            this.wg_1 = 10;
            this.vg_1 = 9;
            continue $sm;
          case 8:
            this.wg_1 = 10;
            var tmp_17 = this.yg_1;
            if (tmp_17 instanceof Exception) {
              var e = this.yg_1;
              setFailed('Max-Commit-Count failed to run due to exception');
              throw e;
            } else {
              throw this.yg_1;
            }

            break;
          case 9:
            this.wg_1 = 10;
            if (this.j3p_1 > this.i3p_1.u3p_1) {
              setFailed('Your PR contains ' + this.j3p_1 + ' commits, but you are only allowed up to ' + this.i3p_1.u3p_1 + ' per PR');
            }

            println('You are allowed ' + this.i3p_1.u3p_1 + ' commits and you only have ' + this.j3p_1 + '. Passed!');
            return Unit_getInstance();
          case 10:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 10) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $mainCOROUTINE$0.$metadata$ = classMeta('$mainCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Inputs(maxCommits, token, repoUrl) {
    this.u3p_1 = maxCommits;
    this.v3p_1 = token;
    this.w3p_1 = repoUrl;
  }
  Inputs.prototype.toString = function () {
    return 'Inputs(maxCommits=' + this.u3p_1 + ', token=' + this.v3p_1 + ', repoUrl=' + this.w3p_1 + ')';
  };
  Inputs.prototype.hashCode = function () {
    var result = this.u3p_1;
    result = imul(result, 31) + getStringHashCode(this.v3p_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.w3p_1) | 0;
    return result;
  };
  Inputs.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Inputs))
      return false;
    var tmp0_other_with_cast = other instanceof Inputs ? other : THROW_CCE();
    if (!(this.u3p_1 === tmp0_other_with_cast.u3p_1))
      return false;
    if (!(this.v3p_1 === tmp0_other_with_cast.v3p_1))
      return false;
    if (!(this.w3p_1 === tmp0_other_with_cast.w3p_1))
      return false;
    return true;
  };
  Inputs.$metadata$ = classMeta('Inputs');
  main(get_EmptyContinuation());
  return _;
}(module.exports, __nccwpck_require__(117), __nccwpck_require__(282), __nccwpck_require__(391), __nccwpck_require__(713), __nccwpck_require__(29), __nccwpck_require__(636), __nccwpck_require__(499), __nccwpck_require__(363)));

//# sourceMappingURL=Max-Commit-Count.js.map

/***/ }),

/***/ 391:
/***/ ((module) => {

//region block: polyfills
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof String.prototype.endsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'endsWith', {value: function (searchString, position) {
    var subjectString = this.toString();
    if (position === undefined || position > subjectString.length) {
      position = subjectString.length;
    }
    position -= searchString.length;
    var lastIndex = subjectString.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  }});
}
if (typeof String.prototype.startsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
    position = position || 0;
    return this.lastIndexOf(searchString, position) === position;
  }});
}
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
//endregion
(function (_) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var isView = ArrayBuffer.isView;
  //endregion
  //region block: pre-declaration
  Exception.prototype = Object.create(Error.prototype);
  Exception.prototype.constructor = Exception;
  RuntimeException.prototype = Object.create(Exception.prototype);
  RuntimeException.prototype.constructor = RuntimeException;
  KotlinNothingValueException.prototype = Object.create(RuntimeException.prototype);
  KotlinNothingValueException.prototype.constructor = KotlinNothingValueException;
  AbstractSet.prototype = Object.create(AbstractCollection.prototype);
  AbstractSet.prototype.constructor = AbstractSet;
  AbstractMap$keys$1.prototype = Object.create(AbstractSet.prototype);
  AbstractMap$keys$1.prototype.constructor = AbstractMap$keys$1;
  AbstractMap$values$1.prototype = Object.create(AbstractCollection.prototype);
  AbstractMap$values$1.prototype.constructor = AbstractMap$values$1;
  function plus(context) {
    var tmp;
    if (context === EmptyCoroutineContext_getInstance()) {
      tmp = this;
    } else {
      tmp = context.c4(this, CoroutineContext$plus$lambda());
    }
    return tmp;
  }
  function get(key) {
    var tmp;
    if (equals_1(this.s(), key)) {
      tmp = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function fold(initial, operation) {
    return operation(initial, this);
  }
  function minusKey(key) {
    return equals_1(this.s(), key) ? EmptyCoroutineContext_getInstance() : this;
  }
  function releaseInterceptedContinuation(continuation) {
  }
  function get_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      var tmp;
      if (key.a4(this.s())) {
        var tmp_0 = key.z3(this);
        tmp = (!(tmp_0 == null) ? isInterface(tmp_0, Element) : false) ? tmp_0 : null;
      } else {
        tmp = null;
      }
      return tmp;
    }
    var tmp_1;
    if (Key_getInstance() === key) {
      tmp_1 = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp_1 = null;
    }
    return tmp_1;
  }
  function minusKey_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      return (key.a4(this.s()) ? !(key.z3(this) == null) : false) ? EmptyCoroutineContext_getInstance() : this;
    }
    return Key_getInstance() === key ? EmptyCoroutineContext_getInstance() : this;
  }
  CoroutineSingletons.prototype = Object.create(Enum.prototype);
  CoroutineSingletons.prototype.constructor = CoroutineSingletons;
  function contains(value) {
    return compareTo_0(value, this.p4()) >= 0 ? compareTo_0(value, this.n4()) <= 0 : false;
  }
  function contains_0(value) {
    return this.o4(this.p4(), value) ? this.o4(value, this.n4()) : false;
  }
  KVariance.prototype = Object.create(Enum.prototype);
  KVariance.prototype.constructor = KVariance;
  LazyThreadSafetyMode.prototype = Object.create(Enum.prototype);
  LazyThreadSafetyMode.prototype.constructor = LazyThreadSafetyMode;
  Error_0.prototype = Object.create(Error.prototype);
  Error_0.prototype.constructor = Error_0;
  NotImplementedError.prototype = Object.create(Error_0.prototype);
  NotImplementedError.prototype.constructor = NotImplementedError;
  IntProgressionIterator.prototype = Object.create(IntIterator.prototype);
  IntProgressionIterator.prototype.constructor = IntProgressionIterator;
  CharProgressionIterator.prototype = Object.create(CharIterator.prototype);
  CharProgressionIterator.prototype.constructor = CharProgressionIterator;
  IntRange.prototype = Object.create(IntProgression.prototype);
  IntRange.prototype.constructor = IntRange;
  CharRange.prototype = Object.create(CharProgression.prototype);
  CharRange.prototype.constructor = CharRange;
  AbstractMutableCollection.prototype = Object.create(AbstractCollection.prototype);
  AbstractMutableCollection.prototype.constructor = AbstractMutableCollection;
  ListIteratorImpl.prototype = Object.create(IteratorImpl.prototype);
  ListIteratorImpl.prototype.constructor = ListIteratorImpl;
  AbstractMutableList.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableList.prototype.constructor = AbstractMutableList;
  AbstractMutableSet.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableSet.prototype.constructor = AbstractMutableSet;
  AbstractEntrySet.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractEntrySet.prototype.constructor = AbstractEntrySet;
  AbstractMutableMap$keys$1.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractMutableMap$keys$1.prototype.constructor = AbstractMutableMap$keys$1;
  AbstractMutableMap$values$1.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableMap$values$1.prototype.constructor = AbstractMutableMap$values$1;
  AbstractMutableMap.prototype = Object.create(AbstractMap.prototype);
  AbstractMutableMap.prototype.constructor = AbstractMutableMap;
  ArrayList.prototype = Object.create(AbstractMutableList.prototype);
  ArrayList.prototype.constructor = ArrayList;
  EntrySet.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet.prototype.constructor = EntrySet;
  HashMap.prototype = Object.create(AbstractMutableMap.prototype);
  HashMap.prototype.constructor = HashMap;
  HashSet.prototype = Object.create(AbstractMutableSet.prototype);
  HashSet.prototype.constructor = HashSet;
  function createJsMap() {
    var result = Object.create(null);
    result['foo'] = 1;
    jsDeleteProperty(result, 'foo');
    return result;
  }
  ChainEntry.prototype = Object.create(SimpleEntry.prototype);
  ChainEntry.prototype.constructor = ChainEntry;
  EntrySet_0.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet_0.prototype.constructor = EntrySet_0;
  LinkedHashMap.prototype = Object.create(HashMap.prototype);
  LinkedHashMap.prototype.constructor = LinkedHashMap;
  LinkedHashSet.prototype = Object.create(HashSet.prototype);
  LinkedHashSet.prototype.constructor = LinkedHashSet;
  NodeJsOutput.prototype = Object.create(BaseOutput.prototype);
  NodeJsOutput.prototype.constructor = NodeJsOutput;
  BufferedOutput.prototype = Object.create(BaseOutput.prototype);
  BufferedOutput.prototype.constructor = BufferedOutput;
  BufferedOutputToConsoleLog.prototype = Object.create(BufferedOutput.prototype);
  BufferedOutputToConsoleLog.prototype.constructor = BufferedOutputToConsoleLog;
  PrimitiveKClassImpl.prototype = Object.create(KClassImpl.prototype);
  PrimitiveKClassImpl.prototype.constructor = PrimitiveKClassImpl;
  NothingKClassImpl.prototype = Object.create(KClassImpl.prototype);
  NothingKClassImpl.prototype.constructor = NothingKClassImpl;
  SimpleKClassImpl.prototype = Object.create(KClassImpl.prototype);
  SimpleKClassImpl.prototype.constructor = SimpleKClassImpl;
  CharacterCodingException.prototype = Object.create(Exception.prototype);
  CharacterCodingException.prototype.constructor = CharacterCodingException;
  Long.prototype = Object.create(Number_0.prototype);
  Long.prototype.constructor = Long;
  _no_name_provided__qut3iv_3.prototype = Object.create(CoroutineImpl.prototype);
  _no_name_provided__qut3iv_3.prototype.constructor = _no_name_provided__qut3iv_3;
  _no_name_provided__qut3iv_4.prototype = Object.create(CoroutineImpl.prototype);
  _no_name_provided__qut3iv_4.prototype.constructor = _no_name_provided__qut3iv_4;
  IllegalArgumentException.prototype = Object.create(RuntimeException.prototype);
  IllegalArgumentException.prototype.constructor = IllegalArgumentException;
  NoSuchElementException.prototype = Object.create(RuntimeException.prototype);
  NoSuchElementException.prototype.constructor = NoSuchElementException;
  IllegalStateException.prototype = Object.create(RuntimeException.prototype);
  IllegalStateException.prototype.constructor = IllegalStateException;
  UnsupportedOperationException.prototype = Object.create(RuntimeException.prototype);
  UnsupportedOperationException.prototype.constructor = UnsupportedOperationException;
  IndexOutOfBoundsException.prototype = Object.create(RuntimeException.prototype);
  IndexOutOfBoundsException.prototype.constructor = IndexOutOfBoundsException;
  ArithmeticException.prototype = Object.create(RuntimeException.prototype);
  ArithmeticException.prototype.constructor = ArithmeticException;
  NumberFormatException.prototype = Object.create(IllegalArgumentException.prototype);
  NumberFormatException.prototype.constructor = NumberFormatException;
  NullPointerException.prototype = Object.create(RuntimeException.prototype);
  NullPointerException.prototype.constructor = NullPointerException;
  NoWhenBranchMatchedException.prototype = Object.create(RuntimeException.prototype);
  NoWhenBranchMatchedException.prototype.constructor = NoWhenBranchMatchedException;
  ClassCastException.prototype = Object.create(RuntimeException.prototype);
  ClassCastException.prototype.constructor = ClassCastException;
  UninitializedPropertyAccessException.prototype = Object.create(RuntimeException.prototype);
  UninitializedPropertyAccessException.prototype.constructor = UninitializedPropertyAccessException;
  //endregion
  function toList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4[0]);
      default:
        return toMutableList(_this__u8e3s4);
    }
  }
  function withIndex(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
  }
  function get_indices(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex(_this__u8e3s4));
  }
  function firstOrNull(_this__u8e3s4) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4[0];
    }
    return tmp;
  }
  function indexOf(_this__u8e3s4, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this__u8e3s4[index] == null) {
            return index;
          }
        }
         while (inductionVariable <= last);
    } else {
      var inductionVariable_0 = 0;
      var last_0 = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_1(element, _this__u8e3s4[index_0])) {
            return index_0;
          }
        }
         while (inductionVariable_0 <= last_0);
    }
    return -1;
  }
  function toSet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4[0]);
      default:
        return toCollection(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
    }
  }
  function single(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this__u8e3s4[0];
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
    }
    return tmp;
  }
  function any(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(new Char_0(element)))
        return true;
    }
    return false;
  }
  function toMutableList(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
  }
  function get_lastIndex(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function isEmpty(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function toCollection(_this__u8e3s4, destination) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(item);
    }
    return destination;
  }
  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function contains_1(_this__u8e3s4, element) {
    return indexOf(_this__u8e3s4, element) >= 0;
  }
  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function firstOrNull_0(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(element))
        return element;
    }
    return null;
  }
  function isEmpty_0(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function mapTo(_this__u8e3s4, destination, transform) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(transform(item));
    }
    return destination;
  }
  function maxByOrNull(_this__u8e3s4, selector) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.length === 0;
    }
    if (tmp$ret$0)
      return null;
    var maxElem = _this__u8e3s4[0];
    var lastIndex = get_lastIndex(_this__u8e3s4);
    if (lastIndex === 0)
      return maxElem;
    var maxValue = selector(maxElem);
    var inductionVariable = 1;
    if (inductionVariable <= lastIndex)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var e = _this__u8e3s4[i];
        var v = selector(e);
        if (compareTo_0(maxValue, v) < 0) {
          maxElem = e;
          maxValue = v;
        }
      }
       while (!(i === lastIndex));
    return maxElem;
  }
  function singleOrNull(_this__u8e3s4, predicate) {
    var single = null;
    var found = false;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(element)) {
        if (found)
          return null;
        single = element;
        found = true;
      }
    }
    if (!found)
      return null;
    return single;
  }
  function associateBy(_this__u8e3s4, keySelector) {
    var capacity = coerceAtLeast(mapCapacity(_this__u8e3s4.length), 16);
    var tmp$ret$0;
    {
      var tmp0_associateByTo = LinkedHashMap_init_$Create$_1(capacity);
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_associateByTo.c(keySelector(element), element);
      }
      tmp$ret$0 = tmp0_associateByTo;
    }
    return tmp$ret$0;
  }
  function map(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(_this__u8e3s4.length);
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo.a(transform(item));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function associateByTo(_this__u8e3s4, destination, keySelector) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.c(keySelector(element), element);
    }
    return destination;
  }
  function withIndex$lambda($this_withIndex) {
    return function () {
      return arrayIterator($this_withIndex);
    };
  }
  function firstOrNull_1(_this__u8e3s4, predicate) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (predicate(element))
        return element;
    }
    return null;
  }
  function map_0(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__u8e3s4, 10));
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var item = tmp0_iterator.f();
        tmp0_mapTo.a(transform(item));
      }
      tmp$ret$0 = tmp0_mapTo;
    }
    return tmp$ret$0;
  }
  function plus_0(_this__u8e3s4, elements) {
    if (isInterface(elements, Collection)) {
      var result = ArrayList_init_$Create$_0(_this__u8e3s4.g() + elements.g() | 0);
      result.k(_this__u8e3s4);
      result.k(elements);
      return result;
    } else {
      var result_0 = ArrayList_init_$Create$_1(_this__u8e3s4);
      addAll(result_0, elements);
      return result_0;
    }
  }
  function plus_1(_this__u8e3s4, elements) {
    if (isInterface(_this__u8e3s4, Collection))
      return plus_0(_this__u8e3s4, elements);
    var result = ArrayList_init_$Create$();
    addAll(result, _this__u8e3s4);
    addAll(result, elements);
    return result;
  }
  function toSet_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.g();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptySet();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.d().f();
          }

          tmp = setOf_0(tmp_0);
          break;
        default:
          tmp = toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.g())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlySet(toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$()));
  }
  function firstOrNull_2(_this__u8e3s4) {
    return _this__u8e3s4.m() ? null : _this__u8e3s4.l(0);
  }
  function forEach(_this__u8e3s4, action) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      action(element);
    }
  }
  function forEachIndexed(_this__u8e3s4, action) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(checkIndexOverflow(tmp1), item);
    }
  }
  function plus_2(_this__u8e3s4, element) {
    var result = ArrayList_init_$Create$_0(_this__u8e3s4.g() + 1 | 0);
    result.k(_this__u8e3s4);
    result.a(element);
    return result;
  }
  function any_0(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.m();
    } else {
      tmp = false;
    }
    if (tmp)
      return false;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (predicate(element))
        return true;
    }
    return false;
  }
  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function sumBy(_this__u8e3s4, selector) {
    var sum = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      sum = sum + selector(element) | 0;
    }
    return sum;
  }
  function single_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this__u8e3s4.l(0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
    }
    return tmp;
  }
  function filter(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    {
      var tmp0_filterTo = ArrayList_init_$Create$();
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        if (predicate(element)) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$0 = tmp0_filterTo;
    }
    return tmp$ret$0;
  }
  function sortedByDescending(_this__u8e3s4, selector) {
    var tmp$ret$0;
    {
      var tmp = sortedByDescending$lambda(selector);
      tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
    }
    return sortedWith(_this__u8e3s4, tmp$ret$0);
  }
  function sortedBy(_this__u8e3s4, selector) {
    var tmp$ret$0;
    {
      var tmp = sortedBy$lambda(selector);
      tmp$ret$0 = new sam$kotlin_Comparator$0_0(tmp);
    }
    return sortedWith(_this__u8e3s4, tmp$ret$0);
  }
  function reversed(_this__u8e3s4) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.g() <= 1;
    } else {
      tmp = false;
    }
    if (tmp)
      return toList_0(_this__u8e3s4);
    var list = toMutableList_0(_this__u8e3s4);
    reverse(list);
    return list;
  }
  function toHashSet(_this__u8e3s4) {
    return toCollection_0(_this__u8e3s4, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
  }
  function toBooleanArray(_this__u8e3s4) {
    var result = booleanArray(_this__u8e3s4.g());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function fold_0(_this__u8e3s4, initial, operation) {
    var accumulator = initial;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      accumulator = operation(accumulator, element);
    }
    return accumulator;
  }
  function distinctBy(_this__u8e3s4, selector) {
    var set = HashSet_init_$Create$();
    var list = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var e = tmp0_iterator.f();
      var key = selector(e);
      if (set.a(key)) {
        list.a(e);
      }
    }
    return list;
  }
  function filterNotNull(_this__u8e3s4) {
    return filterNotNullTo(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function singleOrNull_0(_this__u8e3s4) {
    return _this__u8e3s4.g() === 1 ? _this__u8e3s4.l(0) : null;
  }
  function mapTo_0(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      destination.a(transform(item));
    }
    return destination;
  }
  function toCollection_0(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      destination.a(item);
    }
    return destination;
  }
  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.d();
    $l$loop: while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function joinTo$default(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      separator = ', ';
    if (!(($mask0 & 4) === 0))
      prefix = '';
    if (!(($mask0 & 8) === 0))
      postfix = '';
    if (!(($mask0 & 16) === 0))
      limit = -1;
    if (!(($mask0 & 32) === 0))
      truncated = '...';
    if (!(($mask0 & 64) === 0))
      transform = null;
    return joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform);
  }
  function filterTo(_this__u8e3s4, destination, predicate) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (predicate(element)) {
        destination.a(element);
      }
    }
    return destination;
  }
  function sortedWith(_this__u8e3s4, comparator) {
    if (isInterface(_this__u8e3s4, Collection)) {
      if (_this__u8e3s4.g() <= 1)
        return toList_0(_this__u8e3s4);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_toTypedArray = _this__u8e3s4;
          tmp$ret$0 = copyToArray(tmp0_toTypedArray);
        }
        var tmp = tmp$ret$0;
        var tmp1_apply = isArray(tmp) ? tmp : THROW_CCE();
        {
        }
        {
          sortWith_0(tmp1_apply, comparator);
        }
        tmp$ret$1 = tmp1_apply;
      }
      return asList(tmp$ret$1);
    }
    var tmp$ret$2;
    {
      var tmp2_apply = toMutableList_0(_this__u8e3s4);
      {
      }
      {
        sortWith(tmp2_apply, comparator);
      }
      tmp$ret$2 = tmp2_apply;
    }
    return tmp$ret$2;
  }
  function toList_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.g();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyList();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.d().f();
          }

          tmp = listOf_0(tmp_0);
          break;
        default:
          tmp = toMutableList_1(_this__u8e3s4);
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyList(toMutableList_0(_this__u8e3s4));
  }
  function toMutableList_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return toMutableList_1(_this__u8e3s4);
    return toCollection_0(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function filterNotNullTo(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (!(element == null)) {
        destination.a(element);
      }
    }
    return destination;
  }
  function toMutableList_1(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(_this__u8e3s4);
  }
  function all(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.m();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (!predicate(element))
        return false;
    }
    return true;
  }
  function single_1(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List))
      return single_0(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.d();
      if (!iterator.e())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var single = iterator.f();
      if (iterator.e())
        throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
      return single;
    }
  }
  function mapIndexedNotNull(_this__u8e3s4, transform) {
    var tmp$ret$1;
    {
      var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
      {
        var index = 0;
        var tmp0_iterator = _this__u8e3s4.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          {
            var tmp1 = index;
            index = tmp1 + 1 | 0;
            var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
            var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp$ret$0;
              {
                {
                }
                tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver);
                tmp$ret$0 = Unit_getInstance();
              }
            }
          }
        }
      }
      tmp$ret$1 = tmp1_mapIndexedNotNullTo;
    }
    return tmp$ret$1;
  }
  function mapIndexedNotNullTo(_this__u8e3s4, destination, transform) {
    {
      var index = 0;
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var item = tmp0_iterator.f();
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
          var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            {
              {
              }
              destination.a(tmp0_safe_receiver);
              tmp$ret$0 = Unit_getInstance();
            }
          }
        }
      }
    }
    return destination;
  }
  function flatMap(_this__u8e3s4, transform) {
    var tmp$ret$0;
    {
      var tmp0_flatMapTo = ArrayList_init_$Create$();
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var list = transform(element);
        addAll(tmp0_flatMapTo, list);
      }
      tmp$ret$0 = tmp0_flatMapTo;
    }
    return tmp$ret$0;
  }
  function last(_this__u8e3s4) {
    if (_this__u8e3s4.m())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(get_lastIndex_0(_this__u8e3s4));
  }
  function find(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    $l$block: {
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        if (predicate(element)) {
          tmp$ret$0 = element;
          break $l$block;
        }
      }
      tmp$ret$0 = null;
    }
    return tmp$ret$0;
  }
  function associateBy_0(_this__u8e3s4, keySelector) {
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 10)), 16);
    var tmp$ret$0;
    {
      var tmp0_associateByTo = LinkedHashMap_init_$Create$_1(capacity);
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        tmp0_associateByTo.c(keySelector(element), element);
      }
      tmp$ret$0 = tmp0_associateByTo;
    }
    return tmp$ret$0;
  }
  function first(_this__u8e3s4) {
    if (_this__u8e3s4.m())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(0);
  }
  function flatMapTo(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      var list = transform(element);
      addAll(destination, list);
    }
    return destination;
  }
  function associateByTo_0(_this__u8e3s4, destination, keySelector) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      destination.c(keySelector(element), element);
    }
    return destination;
  }
  function lastOrNull(_this__u8e3s4) {
    return _this__u8e3s4.m() ? null : _this__u8e3s4.l(_this__u8e3s4.g() - 1 | 0);
  }
  function minOrNull(_this__u8e3s4) {
    var iterator = _this__u8e3s4.d();
    if (!iterator.e())
      return null;
    var min = iterator.f();
    while (iterator.e()) {
      var e = iterator.f();
      if (compareTo_0(min, e) > 0)
        min = e;
    }
    return min;
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.o_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.p = function (a, b) {
    return this.o_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.p(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function sam$kotlin_Comparator$0_0(function_0) {
    this.q_1 = function_0;
  }
  sam$kotlin_Comparator$0_0.prototype.p = function (a, b) {
    return this.q_1(a, b);
  };
  sam$kotlin_Comparator$0_0.prototype.compare = function (a, b) {
    return this.p(a, b);
  };
  sam$kotlin_Comparator$0_0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function sortedByDescending$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      {
        tmp$ret$0 = compareValues($selector(b), $selector(a));
      }
      return tmp$ret$0;
    };
  }
  function sortedBy$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      {
        tmp$ret$0 = compareValues($selector(a), $selector(b));
      }
      return tmp$ret$0;
    };
  }
  function forEach_0(_this__u8e3s4, action) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.r().d();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      action(element);
    }
  }
  function toList_1(_this__u8e3s4) {
    if (_this__u8e3s4.g() === 0)
      return emptyList();
    var iterator = _this__u8e3s4.r().d();
    if (!iterator.e())
      return emptyList();
    var first = iterator.f();
    if (!iterator.e()) {
      var tmp$ret$0;
      {
        tmp$ret$0 = new Pair(first.s(), first.t());
      }
      return listOf_0(tmp$ret$0);
    }
    var result = ArrayList_init_$Create$_0(_this__u8e3s4.g());
    var tmp$ret$1;
    {
      tmp$ret$1 = new Pair(first.s(), first.t());
    }
    result.a(tmp$ret$1);
    do {
      var tmp$ret$2;
      {
        var tmp0_toPair = iterator.f();
        tmp$ret$2 = new Pair(tmp0_toPair.s(), tmp0_toPair.t());
      }
      result.a(tmp$ret$2);
    }
     while (iterator.e());
    return result;
  }
  function until(_this__u8e3s4, to) {
    if (to <= IntCompanionObject_getInstance().v_1)
      return Companion_getInstance_10().u_1;
    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
  }
  function coerceAtMost(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
  }
  function step(_this__u8e3s4, step) {
    checkStepIsPositive(step > 0, step);
    return Companion_getInstance_8().c1(_this__u8e3s4.z_1, _this__u8e3s4.a1_1, _this__u8e3s4.b1_1 > 0 ? step : -step | 0);
  }
  function coerceAtLeast(_this__u8e3s4, minimumValue) {
    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
  }
  function contains_2(_this__u8e3s4, value) {
    return _this__u8e3s4.d1(value);
  }
  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this__u8e3s4 < minimumValue)
      return minimumValue;
    if (_this__u8e3s4 > maximumValue)
      return maximumValue;
    return _this__u8e3s4;
  }
  function downTo(_this__u8e3s4, to) {
    return Companion_getInstance_8().c1(_this__u8e3s4, to, -1);
  }
  function coerceIn_0(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue.g1(maximumValue) > 0)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + toString_2(maximumValue) + ' is less than minimum ' + toString_2(minimumValue) + '.');
    if (_this__u8e3s4.g1(minimumValue) < 0)
      return minimumValue;
    if (_this__u8e3s4.g1(maximumValue) > 0)
      return maximumValue;
    return _this__u8e3s4;
  }
  function coerceAtMost_0(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4.g1(maximumValue) > 0 ? maximumValue : _this__u8e3s4;
  }
  function map_1(_this__u8e3s4, transform) {
    return new TransformingSequence(_this__u8e3s4, transform);
  }
  function toList_2(_this__u8e3s4) {
    return optimizeReadOnlyList(toMutableList_2(_this__u8e3s4));
  }
  function asIterable(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function toMutableList_2(_this__u8e3s4) {
    return toCollection_1(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toCollection_1(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.d();
    while (tmp0_iterator.e()) {
      var item = tmp0_iterator.f();
      destination.a(item);
    }
    return destination;
  }
  function _no_name_provided__qut3iv($this_asIterable) {
    this.h1_1 = $this_asIterable;
  }
  _no_name_provided__qut3iv.prototype.d = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.h1_1.d();
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable_0]);
  function plus_3(_this__u8e3s4, elements) {
    var tmp0_safe_receiver = collectionSizeOrNull(elements);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4.g() + tmp0_safe_receiver | 0;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    var result = LinkedHashSet_init_$Create$_1(mapCapacity(tmp1_elvis_lhs == null ? imul(_this__u8e3s4.g(), 2) : tmp1_elvis_lhs));
    result.k(_this__u8e3s4);
    addAll(result, elements);
    return result;
  }
  function first_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) === 0;
    }
    if (tmp$ret$0)
      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
    return charSequenceGet(_this__u8e3s4, 0);
  }
  function last_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) === 0;
    }
    if (tmp$ret$0)
      throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
    return charSequenceGet(_this__u8e3s4, get_lastIndex_1(_this__u8e3s4));
  }
  function getOrElse(_this__u8e3s4, index, defaultValue) {
    return (index >= 0 ? index <= get_lastIndex_1(_this__u8e3s4) : false) ? charSequenceGet(_this__u8e3s4, index) : defaultValue(index).i1_1;
  }
  function indexOfFirst(_this__u8e3s4, predicate) {
    var inductionVariable = 0;
    var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function forEachIndexed_0(_this__u8e3s4, action) {
    var index = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var item = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(tmp1, new Char_0(item));
    }
  }
  function take(_this__u8e3s4, n) {
    {
      var tmp0_require = n >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$2;
    {
      var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$2 = tmp$ret$1.substring(0, tmp1_substring);
    }
    return tmp$ret$2;
  }
  function all_0(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      if (!predicate(new Char_0(element)))
        return false;
    }
    return true;
  }
  function indexOfLast(_this__u8e3s4, predicate) {
    var inductionVariable = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function single_2(_this__u8e3s4) {
    var tmp0_subject = charSequenceLength(_this__u8e3s4);
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
      case 1:
        tmp = charSequenceGet(_this__u8e3s4, 0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
    }
    return tmp;
  }
  function drop(_this__u8e3s4, n) {
    {
      var tmp0_require = n >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$2;
    {
      var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$2 = tmp$ret$1.substring(tmp1_substring);
    }
    return tmp$ret$2;
  }
  function KotlinNothingValueException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    KotlinNothingValueException.call($this);
    return $this;
  }
  function KotlinNothingValueException_init_$Create$() {
    var tmp = KotlinNothingValueException_init_$Init$(Object.create(KotlinNothingValueException.prototype));
    captureStack(tmp, KotlinNothingValueException_init_$Create$);
    return tmp;
  }
  function KotlinNothingValueException() {
    captureStack(this, KotlinNothingValueException);
  }
  KotlinNothingValueException.$metadata$ = classMeta('KotlinNothingValueException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function get_code(_this__u8e3s4) {
    return Char__toInt_impl_vasixd(_this__u8e3s4);
  }
  function Char(code) {
    var tmp;
    var tmp$ret$0;
    {
      Companion_getInstance_13();
      var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
      tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    }
    if (code < tmp$ret$0) {
      tmp = true;
    } else {
      var tmp$ret$1;
      {
        Companion_getInstance_13();
        var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = code > tmp$ret$1;
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + code);
    }
    return numberToChar(code);
  }
  function AbstractCollection$toString$lambda(this$0) {
    return function (it) {
      return it === this$0 ? '(this Collection)' : toString_1(it);
    };
  }
  function AbstractCollection() {
  }
  AbstractCollection.prototype.l1 = function (element) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.d();
      while (tmp0_iterator.e()) {
        var element_0 = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = equals_1(element_0, element);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.m1 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.l1(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.m = function () {
    return this.g() === 0;
  };
  AbstractCollection.prototype.toString = function () {
    return joinToString$default_0(this, ', ', '[', ']', 0, null, AbstractCollection$toString$lambda(this), 24, null);
  };
  AbstractCollection.prototype.toArray = function () {
    return copyToArrayImpl(this);
  };
  AbstractCollection.$metadata$ = classMeta('AbstractCollection', [Collection]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.n1 = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$_0('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.o1 = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$_0('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.p1 = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$_0('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$_0('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  Companion.prototype.q1 = function (startIndex, endIndex, size) {
    if (startIndex < 0 ? true : endIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$_0('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
    }
    if (startIndex > endIndex) {
      throw IllegalArgumentException_init_$Create$_0('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }
  };
  Companion.prototype.r1 = function (c) {
    var hashCode = 1;
    var tmp0_iterator = c.d();
    while (tmp0_iterator.e()) {
      var e = tmp0_iterator.f();
      var tmp = imul(31, hashCode);
      var tmp1_safe_receiver = e;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion.prototype.s1 = function (c, other) {
    if (!(c.g() === other.g()))
      return false;
    var otherIterator = other.d();
    var tmp0_iterator = c.d();
    while (tmp0_iterator.e()) {
      var elem = tmp0_iterator.f();
      var elemOther = otherIterator.f();
      if (!equals_1(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AbstractMap$keys$1$iterator$1($entryIterator) {
    this.t1_1 = $entryIterator;
  }
  AbstractMap$keys$1$iterator$1.prototype.e = function () {
    return this.t1_1.e();
  };
  AbstractMap$keys$1$iterator$1.prototype.f = function () {
    return this.t1_1.f().s();
  };
  AbstractMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function AbstractMap$values$1$iterator$1($entryIterator) {
    this.u1_1 = $entryIterator;
  }
  AbstractMap$values$1$iterator$1.prototype.e = function () {
    return this.u1_1.e();
  };
  AbstractMap$values$1$iterator$1.prototype.f = function () {
    return this.u1_1.f().t();
  };
  AbstractMap$values$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_1(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_firstOrNull = $this.r();
      var tmp0_iterator = tmp0_firstOrNull.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$0;
        {
          tmp$ret$0 = equals_1(element.s(), key);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.v1 = function (e) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp2_safe_receiver = e.s();
        var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode_0(tmp2_safe_receiver);
        var tmp = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
        var tmp0_safe_receiver = e.t();
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
        tmp$ret$0 = tmp ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_0.prototype.w1 = function (e) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = toString_1(e.s()) + '=' + toString_1(e.t());
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_0.prototype.x1 = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    return equals_1(e.s(), other.s()) ? equals_1(e.t(), other.t()) : false;
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function AbstractMap$keys$1(this$0) {
    this.y1_1 = this$0;
    AbstractSet.call(this);
  }
  AbstractMap$keys$1.prototype.z1 = function (element) {
    return this.y1_1.c2(element);
  };
  AbstractMap$keys$1.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.z1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$keys$1.prototype.d = function () {
    var entryIterator = this.y1_1.r().d();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMap$keys$1.prototype.g = function () {
    return this.y1_1.g();
  };
  AbstractMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractSet.prototype);
  function AbstractMap$toString$lambda(this$0) {
    return function (it) {
      return this$0.d2(it);
    };
  }
  function AbstractMap$values$1(this$0) {
    this.e2_1 = this$0;
    AbstractCollection.call(this);
  }
  AbstractMap$values$1.prototype.f2 = function (element) {
    return this.e2_1.g2(element);
  };
  AbstractMap$values$1.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.f2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$values$1.prototype.d = function () {
    var entryIterator = this.e2_1.r().d();
    return new AbstractMap$values$1$iterator$1(entryIterator);
  };
  AbstractMap$values$1.prototype.g = function () {
    return this.e2_1.g();
  };
  AbstractMap$values$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractCollection.prototype);
  function AbstractMap() {
    Companion_getInstance_0();
    this.a2_1 = null;
    this.b2_1 = null;
  }
  AbstractMap.prototype.c2 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  AbstractMap.prototype.g2 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.r();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = equals_1(element.t(), value);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.h2 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.s();
    var value = entry.t();
    var tmp$ret$0;
    {
      tmp$ret$0 = (isInterface(this, Map) ? this : THROW_CCE()).i2(key);
    }
    var ourValue = tmp$ret$0;
    if (!equals_1(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      var tmp$ret$1;
      {
        tmp$ret$1 = (isInterface(this, Map) ? this : THROW_CCE()).c2(key);
      }
      tmp = !tmp$ret$1;
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  };
  AbstractMap.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map) : false))
      return false;
    if (!(this.g() === other.g()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_all = other.r();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.h2(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.i2 = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t();
  };
  AbstractMap.prototype.hashCode = function () {
    return hashCode_0(this.r());
  };
  AbstractMap.prototype.m = function () {
    return this.g() === 0;
  };
  AbstractMap.prototype.g = function () {
    return this.r().g();
  };
  AbstractMap.prototype.j2 = function () {
    if (this.a2_1 == null) {
      var tmp = this;
      tmp.a2_1 = new AbstractMap$keys$1(this);
    }
    return ensureNotNull(this.a2_1);
  };
  AbstractMap.prototype.toString = function () {
    var tmp = this.r();
    return joinToString$default_0(tmp, ', ', '{', '}', 0, null, AbstractMap$toString$lambda(this), 24, null);
  };
  AbstractMap.prototype.d2 = function (entry) {
    return toString(this, entry.s()) + '=' + toString(this, entry.t());
  };
  AbstractMap.prototype.k2 = function () {
    if (this.b2_1 == null) {
      var tmp = this;
      tmp.b2_1 = new AbstractMap$values$1(this);
    }
    return ensureNotNull(this.b2_1);
  };
  AbstractMap.$metadata$ = classMeta('AbstractMap', [Map]);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.l2 = function (c) {
    var hashCode = 0;
    var tmp0_iterator = c.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      var tmp = hashCode;
      var tmp1_safe_receiver = element;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion_1.prototype.m2 = function (c, other) {
    if (!(c.g() === other.g()))
      return false;
    var tmp$ret$0;
    {
      tmp$ret$0 = c.m1(other);
    }
    return tmp$ret$0;
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  AbstractSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().m2(this, other);
  };
  AbstractSet.prototype.hashCode = function () {
    return Companion_getInstance_1().l2(this);
  };
  AbstractSet.$metadata$ = classMeta('AbstractSet', [Set], undefined, undefined, undefined, AbstractCollection.prototype);
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function emptyList() {
    return EmptyList_getInstance();
  }
  function mutableListOf() {
    return ArrayList_init_$Create$();
  }
  function isNotEmpty(_this__u8e3s4) {
    return !_this__u8e3s4.m();
  }
  function arrayListOf() {
    return ArrayList_init_$Create$();
  }
  function isNullOrEmpty(_this__u8e3s4) {
    {
    }
    return _this__u8e3s4 == null ? true : _this__u8e3s4.m();
  }
  function optimizeReadOnlyList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4.l(0));
      default:
        return _this__u8e3s4;
    }
  }
  function get_lastIndex_0(_this__u8e3s4) {
    return _this__u8e3s4.g() - 1 | 0;
  }
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  EmptyIterator.prototype.e = function () {
    return false;
  };
  EmptyIterator.prototype.f = function () {
    throw NoSuchElementException_init_$Create$();
  };
  EmptyIterator.$metadata$ = objectMeta('EmptyIterator', [ListIterator]);
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function EmptyList() {
    EmptyList_instance = this;
    this.n2_1 = new Long(-1478467534, -1720727600);
  }
  EmptyList.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List) : false) {
      tmp = other.m();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyList.prototype.hashCode = function () {
    return 1;
  };
  EmptyList.prototype.toString = function () {
    return '[]';
  };
  EmptyList.prototype.g = function () {
    return 0;
  };
  EmptyList.prototype.m = function () {
    return true;
  };
  EmptyList.prototype.o2 = function (element) {
    return false;
  };
  EmptyList.prototype.l1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.o2(tmp);
  };
  EmptyList.prototype.p2 = function (elements) {
    return elements.m();
  };
  EmptyList.prototype.m1 = function (elements) {
    return this.p2(elements);
  };
  EmptyList.prototype.l = function (index) {
    throw IndexOutOfBoundsException_init_$Create$_0("Empty list doesn't contain element at index " + index + '.');
  };
  EmptyList.prototype.d = function () {
    return EmptyIterator_getInstance();
  };
  EmptyList.$metadata$ = objectMeta('EmptyList', [List, Serializable, RandomAccess]);
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function arrayListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function asCollection(_this__u8e3s4) {
    return new ArrayAsCollection(_this__u8e3s4, false);
  }
  function ArrayAsCollection(values, isVarargs) {
    this.q2_1 = values;
    this.r2_1 = isVarargs;
  }
  ArrayAsCollection.prototype.g = function () {
    return this.q2_1.length;
  };
  ArrayAsCollection.prototype.m = function () {
    var tmp$ret$0;
    {
      var tmp0_isEmpty = this.q2_1;
      tmp$ret$0 = tmp0_isEmpty.length === 0;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.d1 = function (element) {
    return contains_1(this.q2_1, element);
  };
  ArrayAsCollection.prototype.s2 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.d1(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.m1 = function (elements) {
    return this.s2(elements);
  };
  ArrayAsCollection.prototype.d = function () {
    return arrayIterator(this.q2_1);
  };
  ArrayAsCollection.$metadata$ = classMeta('ArrayAsCollection', [Collection]);
  function containsAll(_this__u8e3s4, elements) {
    return _this__u8e3s4.m1(elements);
  }
  function mutableListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function IndexedValue(index, value) {
    this.t2_1 = index;
    this.u2_1 = value;
  }
  IndexedValue.prototype.v2 = function () {
    return this.t2_1;
  };
  IndexedValue.prototype.t = function () {
    return this.u2_1;
  };
  IndexedValue.prototype.toString = function () {
    return 'IndexedValue(index=' + this.t2_1 + ', value=' + this.u2_1 + ')';
  };
  IndexedValue.prototype.hashCode = function () {
    var result = this.t2_1;
    result = imul(result, 31) + (this.u2_1 == null ? 0 : hashCode_0(this.u2_1)) | 0;
    return result;
  };
  IndexedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.t2_1 === tmp0_other_with_cast.t2_1))
      return false;
    if (!equals_1(this.u2_1, tmp0_other_with_cast.u2_1))
      return false;
    return true;
  };
  IndexedValue.$metadata$ = classMeta('IndexedValue');
  function Iterable(iterator) {
    return new _no_name_provided__qut3iv_0(iterator);
  }
  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.g();
    } else {
      tmp = default_0;
    }
    return tmp;
  }
  function collectionSizeOrNull(_this__u8e3s4) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.g();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function IndexingIterable(iteratorFactory) {
    this.w2_1 = iteratorFactory;
  }
  IndexingIterable.prototype.d = function () {
    return new IndexingIterator(this.w2_1());
  };
  IndexingIterable.$metadata$ = classMeta('IndexingIterable', [Iterable_0]);
  function _no_name_provided__qut3iv_0($iterator) {
    this.x2_1 = $iterator;
  }
  _no_name_provided__qut3iv_0.prototype.d = function () {
    return this.x2_1();
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, [Iterable_0]);
  function IndexingIterator(iterator) {
    this.y2_1 = iterator;
    this.z2_1 = 0;
  }
  IndexingIterator.prototype.e = function () {
    return this.y2_1.e();
  };
  IndexingIterator.prototype.f = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.z2_1;
    tmp0_this.z2_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.y2_1.f());
  };
  IndexingIterator.$metadata$ = classMeta('IndexingIterator', [Iterator]);
  function forEach_1(_this__u8e3s4, operation) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      operation(element);
    }
  }
  function iterator(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function getOrImplicitDefault(_this__u8e3s4, key) {
    if (isInterface(_this__u8e3s4, MapWithDefault))
      return _this__u8e3s4.a3(key);
    var tmp$ret$0;
    $l$block: {
      var value = _this__u8e3s4.i2(key);
      if (value == null ? !_this__u8e3s4.c2(key) : false) {
        throw NoSuchElementException_init_$Create$_0('Key ' + key + ' is missing in the map.');
      } else {
        tmp$ret$0 = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        break $l$block;
      }
    }
    return tmp$ret$0;
  }
  function MapWithDefault() {
  }
  MapWithDefault.$metadata$ = interfaceMeta('MapWithDefault', [Map]);
  function contains_3(_this__u8e3s4, key) {
    var tmp$ret$0;
    {
      tmp$ret$0 = (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).c2(key);
    }
    return tmp$ret$0;
  }
  function mutableMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function set(_this__u8e3s4, key, value) {
    _this__u8e3s4.c(key, value);
  }
  function component1(_this__u8e3s4) {
    return _this__u8e3s4.s();
  }
  function component2(_this__u8e3s4) {
    return _this__u8e3s4.t();
  }
  function plusAssign(_this__u8e3s4, map) {
    _this__u8e3s4.b3(map);
  }
  function mapOf(pairs) {
    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length))) : emptyMap();
  }
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map) ? tmp : THROW_CCE();
  }
  function get_1(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).i2(key);
  }
  function toMap(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.g();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.d().f();
          }

          tmp = mapOf_0(tmp_0);
          break;
        default:
          tmp = toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.g())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$()));
  }
  function containsKey(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).c2(key);
  }
  function toMap_0(_this__u8e3s4, destination) {
    var tmp$ret$0;
    {
      {
      }
      {
        putAll(destination, _this__u8e3s4);
      }
      tmp$ret$0 = destination;
    }
    return tmp$ret$0;
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this.c3_1 = new Long(-888910638, 1920087921);
  }
  EmptyMap.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map) : false) {
      tmp = other.m();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyMap.prototype.hashCode = function () {
    return 0;
  };
  EmptyMap.prototype.toString = function () {
    return '{}';
  };
  EmptyMap.prototype.g = function () {
    return 0;
  };
  EmptyMap.prototype.m = function () {
    return true;
  };
  EmptyMap.prototype.d3 = function (key) {
    return false;
  };
  EmptyMap.prototype.c2 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    return this.d3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.e3 = function (key) {
    return null;
  };
  EmptyMap.prototype.i2 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    return this.e3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.r = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.j2 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.k2 = function () {
    return EmptyList_getInstance();
  };
  EmptyMap.$metadata$ = objectMeta('EmptyMap', [Map, Serializable]);
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_1(_this__u8e3s4, destination) {
    var tmp$ret$0;
    {
      {
      }
      {
        putAll_0(destination, _this__u8e3s4);
      }
      tmp$ret$0 = destination;
    }
    return tmp$ret$0;
  }
  function optimizeReadOnlyMap(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }

        tmp = tmp$ret$0;
        break;
      default:
        tmp = _this__u8e3s4;
        break;
    }
    return tmp;
  }
  function putAll(_this__u8e3s4, pairs) {
    var indexedObject = pairs;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.h3();
      var value = tmp1_loop_parameter.i3();
      _this__u8e3s4.c(key, value);
    }
  }
  function putAll_0(_this__u8e3s4, pairs) {
    var tmp0_iterator = pairs.d();
    while (tmp0_iterator.e()) {
      var tmp1_loop_parameter = tmp0_iterator.f();
      var key = tmp1_loop_parameter.h3();
      var value = tmp1_loop_parameter.i3();
      _this__u8e3s4.c(key, value);
    }
  }
  function iterator_0(_this__u8e3s4) {
    return _this__u8e3s4.r().d();
  }
  function toPair(_this__u8e3s4) {
    return new Pair(_this__u8e3s4.s(), _this__u8e3s4.t());
  }
  function hashMapOf(pairs) {
    var tmp$ret$0;
    {
      var tmp0_apply = HashMap_init_$Create$_1(mapCapacity(pairs.length));
      {
      }
      {
        putAll(tmp0_apply, pairs);
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function toMap_2(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp$ret$0;
        {
          tmp$ret$0 = toMutableMap(_this__u8e3s4);
        }

        tmp = tmp$ret$0;
        break;
      default:
        tmp = toMutableMap(_this__u8e3s4);
        break;
    }
    return tmp;
  }
  function getValue(_this__u8e3s4, key) {
    return getOrImplicitDefault(_this__u8e3s4, key);
  }
  function linkedMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function toMutableMap(_this__u8e3s4) {
    return LinkedHashMap_init_$Create$_2(_this__u8e3s4);
  }
  function getOrElseNullable(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.i2(key);
    if (value == null ? !_this__u8e3s4.c2(key) : false) {
      return defaultValue();
    } else {
      return (value == null ? true : isObject(value)) ? value : THROW_CCE();
    }
  }
  function plusAssign_0(_this__u8e3s4, element) {
    _this__u8e3s4.a(element);
  }
  function addAll(_this__u8e3s4, elements) {
    var tmp0_subject = elements;
    if (isInterface(tmp0_subject, Collection))
      return _this__u8e3s4.k(elements);
    else {
      var result = false;
      var tmp1_iterator = elements.d();
      while (tmp1_iterator.e()) {
        var item = tmp1_iterator.f();
        if (_this__u8e3s4.a(item))
          result = true;
      }
      return result;
    }
  }
  function addAll_0(_this__u8e3s4, elements) {
    return _this__u8e3s4.k(asList(elements));
  }
  function Sequence() {
  }
  Sequence.$metadata$ = interfaceMeta('Sequence');
  function TransformingSequence$iterator$1(this$0) {
    this.k3_1 = this$0;
    this.j3_1 = this$0.l3_1.d();
  }
  TransformingSequence$iterator$1.prototype.f = function () {
    return this.k3_1.m3_1(this.j3_1.f());
  };
  TransformingSequence$iterator$1.prototype.e = function () {
    return this.j3_1.e();
  };
  TransformingSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function TransformingSequence(sequence, transformer) {
    this.l3_1 = sequence;
    this.m3_1 = transformer;
  }
  TransformingSequence.prototype.d = function () {
    return new TransformingSequence$iterator$1(this);
  };
  TransformingSequence.$metadata$ = classMeta('TransformingSequence', [Sequence]);
  function setOf(elements) {
    return elements.length > 0 ? toSet(elements) : emptySet();
  }
  function emptySet() {
    return EmptySet_getInstance();
  }
  function mutableSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function optimizeReadOnlySet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.g();
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4.d().f());
      default:
        return _this__u8e3s4;
    }
  }
  function EmptySet() {
    EmptySet_instance = this;
    this.n3_1 = new Long(1993859828, 793161749);
  }
  EmptySet.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.m();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptySet.prototype.hashCode = function () {
    return 0;
  };
  EmptySet.prototype.toString = function () {
    return '[]';
  };
  EmptySet.prototype.g = function () {
    return 0;
  };
  EmptySet.prototype.m = function () {
    return true;
  };
  EmptySet.prototype.o2 = function (element) {
    return false;
  };
  EmptySet.prototype.l1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.o2(tmp);
  };
  EmptySet.prototype.p2 = function (elements) {
    return elements.m();
  };
  EmptySet.prototype.m1 = function (elements) {
    return this.p2(elements);
  };
  EmptySet.prototype.d = function () {
    return EmptyIterator_getInstance();
  };
  EmptySet.$metadata$ = objectMeta('EmptySet', [Set, Serializable]);
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function hashSetOf(elements) {
    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function linkedSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function compareByDescending(selector) {
    var tmp = compareByDescending$lambda(selector);
    return new sam$kotlin_Comparator$0_1(tmp);
  }
  function compareBy(selector) {
    var tmp = compareBy$lambda(selector);
    return new sam$kotlin_Comparator$0_2(tmp);
  }
  function compareValuesBy(a, b, selector) {
    return compareValues(selector(a), selector(b));
  }
  function compareValues(a, b) {
    if (a === b)
      return 0;
    if (a == null)
      return -1;
    if (b == null)
      return 1;
    return compareTo_0((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
  }
  function sam$kotlin_Comparator$0_1(function_0) {
    this.o3_1 = function_0;
  }
  sam$kotlin_Comparator$0_1.prototype.p = function (a, b) {
    return this.o3_1(a, b);
  };
  sam$kotlin_Comparator$0_1.prototype.compare = function (a, b) {
    return this.p(a, b);
  };
  sam$kotlin_Comparator$0_1.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function sam$kotlin_Comparator$0_2(function_0) {
    this.p3_1 = function_0;
  }
  sam$kotlin_Comparator$0_2.prototype.p = function (a, b) {
    return this.p3_1(a, b);
  };
  sam$kotlin_Comparator$0_2.prototype.compare = function (a, b) {
    return this.p(a, b);
  };
  sam$kotlin_Comparator$0_2.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function compareByDescending$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      {
        tmp$ret$0 = compareValues($selector(b), $selector(a));
      }
      return tmp$ret$0;
    };
  }
  function compareBy$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      {
        tmp$ret$0 = compareValues($selector(a), $selector(b));
      }
      return tmp$ret$0;
    };
  }
  function contract(builder) {
  }
  function Continuation() {
  }
  Continuation.$metadata$ = interfaceMeta('Continuation');
  function Continuation_0(context, resumeWith) {
    return new _no_name_provided__qut3iv_1(context, resumeWith);
  }
  function resume(_this__u8e3s4, value) {
    var tmp$ret$0;
    {
      var tmp0_success = Companion_getInstance_3();
      tmp$ret$0 = _Result___init__impl__xyqfz8(value);
    }
    return _this__u8e3s4.r3(tmp$ret$0);
  }
  function resumeWithException(_this__u8e3s4, exception) {
    var tmp$ret$0;
    {
      var tmp0_failure = Companion_getInstance_3();
      tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
    }
    return _this__u8e3s4.r3(tmp$ret$0);
  }
  function startCoroutine(_this__u8e3s4, receiver, completion) {
    var tmp$ret$1;
    {
      var tmp0_resume = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_3();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp$ret$1 = tmp0_resume.r3(tmp$ret$0);
    }
  }
  function _no_name_provided__qut3iv_1($context, $resumeWith) {
    this.s3_1 = $context;
    this.t3_1 = $resumeWith;
  }
  _no_name_provided__qut3iv_1.prototype.q3 = function () {
    return this.s3_1;
  };
  _no_name_provided__qut3iv_1.prototype.r3 = function (result) {
    return this.t3_1(new Result(result));
  };
  _no_name_provided__qut3iv_1.$metadata$ = classMeta(undefined, [Continuation]);
  function Key() {
    Key_instance = this;
  }
  Key.$metadata$ = objectMeta('Key', [Key_0]);
  var Key_instance;
  function Key_getInstance() {
    if (Key_instance == null)
      new Key();
    return Key_instance;
  }
  function ContinuationInterceptor() {
  }
  ContinuationInterceptor.$metadata$ = interfaceMeta('ContinuationInterceptor', [Element]);
  function Key_0() {
  }
  Key_0.$metadata$ = interfaceMeta('Key');
  function Element() {
  }
  Element.$metadata$ = interfaceMeta('Element', [CoroutineContext]);
  function CoroutineContext$plus$lambda() {
    return function (acc, element) {
      var removed = acc.b4(element.s());
      var tmp;
      if (removed === EmptyCoroutineContext_getInstance()) {
        tmp = element;
      } else {
        var interceptor = removed.w3(Key_getInstance());
        var tmp_0;
        if (interceptor == null) {
          tmp_0 = new CombinedContext(removed, element);
        } else {
          var left = removed.b4(Key_getInstance());
          tmp_0 = left === EmptyCoroutineContext_getInstance() ? new CombinedContext(element, interceptor) : new CombinedContext(new CombinedContext(left, element), interceptor);
        }
        tmp = tmp_0;
      }
      return tmp;
    };
  }
  function CoroutineContext() {
  }
  CoroutineContext.$metadata$ = interfaceMeta('CoroutineContext');
  function EmptyCoroutineContext() {
    EmptyCoroutineContext_instance = this;
    this.e4_1 = new Long(0, 0);
  }
  EmptyCoroutineContext.prototype.w3 = function (key) {
    return null;
  };
  EmptyCoroutineContext.prototype.c4 = function (initial, operation) {
    return initial;
  };
  EmptyCoroutineContext.prototype.d4 = function (context) {
    return context;
  };
  EmptyCoroutineContext.prototype.b4 = function (key) {
    return this;
  };
  EmptyCoroutineContext.prototype.hashCode = function () {
    return 0;
  };
  EmptyCoroutineContext.prototype.toString = function () {
    return 'EmptyCoroutineContext';
  };
  EmptyCoroutineContext.$metadata$ = objectMeta('EmptyCoroutineContext', [CoroutineContext, Serializable]);
  var EmptyCoroutineContext_instance;
  function EmptyCoroutineContext_getInstance() {
    if (EmptyCoroutineContext_instance == null)
      new EmptyCoroutineContext();
    return EmptyCoroutineContext_instance;
  }
  function size($this) {
    var cur = $this;
    var size = 2;
    while (true) {
      var tmp = cur.f4_1;
      var tmp0_elvis_lhs = tmp instanceof CombinedContext ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        return size;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      cur = tmp_0;
      var tmp1 = size;
      size = tmp1 + 1 | 0;
    }
  }
  function contains_4($this, element) {
    return equals_1($this.w3(element.s()), element);
  }
  function containsAll_0($this, context) {
    var cur = context;
    while (true) {
      if (!contains_4($this, cur.g4_1))
        return false;
      var next = cur.f4_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return contains_4($this, isInterface(next, Element) ? next : THROW_CCE());
      }
    }
  }
  function CombinedContext$toString$lambda() {
    return function (acc, element) {
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(acc) === 0;
      }
      if (tmp$ret$0) {
        tmp = toString_2(element);
      } else {
        tmp = acc + ', ' + element;
      }
      return tmp;
    };
  }
  function CombinedContext(left, element) {
    this.f4_1 = left;
    this.g4_1 = element;
  }
  CombinedContext.prototype.w3 = function (key) {
    var cur = this;
    while (true) {
      var tmp0_safe_receiver = cur.g4_1.w3(key);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          return tmp0_safe_receiver;
        }
      }
      var next = cur.f4_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return next.w3(key);
      }
    }
  };
  CombinedContext.prototype.c4 = function (initial, operation) {
    return operation(this.f4_1.c4(initial, operation), this.g4_1);
  };
  CombinedContext.prototype.b4 = function (key) {
    var tmp0_safe_receiver = this.g4_1.w3(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return this.f4_1;
      }
    }
    var newLeft = this.f4_1.b4(key);
    return newLeft === this.f4_1 ? this : newLeft === EmptyCoroutineContext_getInstance() ? this.g4_1 : new CombinedContext(newLeft, this.g4_1);
  };
  CombinedContext.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (other instanceof CombinedContext) {
        tmp_1 = size(other) === size(this);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = containsAll_0(other, this);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CombinedContext.prototype.hashCode = function () {
    return hashCode_0(this.f4_1) + hashCode_0(this.g4_1) | 0;
  };
  CombinedContext.prototype.toString = function () {
    return '[' + this.c4('', CombinedContext$toString$lambda()) + ']';
  };
  CombinedContext.$metadata$ = classMeta('CombinedContext', [CoroutineContext, Serializable]);
  function AbstractCoroutineContextKey(baseKey, safeCast) {
    this.x3_1 = safeCast;
    var tmp = this;
    var tmp_0;
    if (baseKey instanceof AbstractCoroutineContextKey) {
      tmp_0 = baseKey.y3_1;
    } else {
      tmp_0 = baseKey;
    }
    tmp.y3_1 = tmp_0;
  }
  AbstractCoroutineContextKey.prototype.z3 = function (element) {
    return this.x3_1(element);
  };
  AbstractCoroutineContextKey.prototype.a4 = function (key) {
    return key === this ? true : this.y3_1 === key;
  };
  AbstractCoroutineContextKey.$metadata$ = classMeta('AbstractCoroutineContextKey', [Key_0]);
  function AbstractCoroutineContextElement(key) {
    this.h4_1 = key;
  }
  AbstractCoroutineContextElement.prototype.s = function () {
    return this.h4_1;
  };
  AbstractCoroutineContextElement.$metadata$ = classMeta('AbstractCoroutineContextElement', [Element]);
  function get_COROUTINE_SUSPENDED() {
    return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
  }
  var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  var CoroutineSingletons_UNDECIDED_instance;
  var CoroutineSingletons_RESUMED_instance;
  var CoroutineSingletons_entriesInitialized;
  function CoroutineSingletons_initEntries() {
    if (CoroutineSingletons_entriesInitialized)
      return Unit_getInstance();
    CoroutineSingletons_entriesInitialized = true;
    CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
    CoroutineSingletons_UNDECIDED_instance = new CoroutineSingletons('UNDECIDED', 1);
    CoroutineSingletons_RESUMED_instance = new CoroutineSingletons('RESUMED', 2);
  }
  function CoroutineSingletons(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineSingletons.$metadata$ = classMeta('CoroutineSingletons', undefined, undefined, undefined, undefined, Enum.prototype);
  function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  }
  function ReadWriteProperty() {
  }
  ReadWriteProperty.$metadata$ = interfaceMeta('ReadWriteProperty', [ReadOnlyProperty]);
  function ReadOnlyProperty() {
  }
  ReadOnlyProperty.$metadata$ = interfaceMeta('ReadOnlyProperty');
  function ClosedFloatingPointRange() {
  }
  ClosedFloatingPointRange.$metadata$ = interfaceMeta('ClosedFloatingPointRange', [ClosedRange]);
  function rangeTo(_this__u8e3s4, that) {
    return new ClosedDoubleRange(_this__u8e3s4, that);
  }
  function checkStepIsPositive(isPositive, step) {
    if (!isPositive)
      throw IllegalArgumentException_init_$Create$_0('Step must be positive, was: ' + toString_2(step) + '.');
  }
  function ClosedDoubleRange(start, endInclusive) {
    this.q4_1 = start;
    this.r4_1 = endInclusive;
  }
  ClosedDoubleRange.prototype.p4 = function () {
    return this.q4_1;
  };
  ClosedDoubleRange.prototype.n4 = function () {
    return this.r4_1;
  };
  ClosedDoubleRange.prototype.s4 = function (a, b) {
    return a <= b;
  };
  ClosedDoubleRange.prototype.o4 = function (a, b) {
    var tmp = typeof a === 'number' ? a : THROW_CCE();
    return this.s4(tmp, typeof b === 'number' ? b : THROW_CCE());
  };
  ClosedDoubleRange.prototype.t4 = function (value) {
    return value >= this.q4_1 ? value <= this.r4_1 : false;
  };
  ClosedDoubleRange.prototype.d1 = function (value) {
    return this.t4(typeof value === 'number' ? value : THROW_CCE());
  };
  ClosedDoubleRange.prototype.m = function () {
    return !(this.q4_1 <= this.r4_1);
  };
  ClosedDoubleRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof ClosedDoubleRange) {
      tmp = (this.m() ? other.m() : false) ? true : this.q4_1 === other.q4_1 ? this.r4_1 === other.r4_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  ClosedDoubleRange.prototype.hashCode = function () {
    return this.m() ? -1 : imul(31, getNumberHashCode(this.q4_1)) + getNumberHashCode(this.r4_1) | 0;
  };
  ClosedDoubleRange.prototype.toString = function () {
    return '' + this.q4_1 + '..' + this.r4_1;
  };
  ClosedDoubleRange.$metadata$ = classMeta('ClosedDoubleRange', [ClosedFloatingPointRange]);
  function KClassifier() {
  }
  KClassifier.$metadata$ = interfaceMeta('KClassifier');
  function Companion_2() {
    Companion_instance_2 = this;
    this.u4_1 = new KTypeProjection(null, null);
  }
  Companion_2.prototype.v4 = function (type) {
    return new KTypeProjection(KVariance_INVARIANT_getInstance(), type);
  };
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function KTypeProjection(variance, type) {
    Companion_getInstance_2();
    this.w4_1 = variance;
    this.x4_1 = type;
    {
      var tmp0_require = this.w4_1 == null === (this.x4_1 == null);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = this.w4_1 == null ? 'Star projection must have no type specified.' : 'The projection variance ' + this.w4_1 + ' requires type to be specified.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
  }
  KTypeProjection.prototype.y4 = function () {
    return this.w4_1;
  };
  KTypeProjection.prototype.z4 = function () {
    return this.x4_1;
  };
  KTypeProjection.prototype.toString = function () {
    var tmp0_subject = this.w4_1;
    var tmp0 = tmp0_subject == null ? -1 : tmp0_subject.a5();
    var tmp;
    switch (tmp0) {
      case -1:
        tmp = '*';
        break;
      case 0:
        tmp = toString_1(this.x4_1);
        break;
      case 1:
        tmp = 'in ' + this.x4_1;
        break;
      case 2:
        tmp = 'out ' + this.x4_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  KTypeProjection.prototype.hashCode = function () {
    var result = this.w4_1 == null ? 0 : this.w4_1.hashCode();
    result = imul(result, 31) + (this.x4_1 == null ? 0 : hashCode_0(this.x4_1)) | 0;
    return result;
  };
  KTypeProjection.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KTypeProjection))
      return false;
    var tmp0_other_with_cast = other instanceof KTypeProjection ? other : THROW_CCE();
    if (!equals_1(this.w4_1, tmp0_other_with_cast.w4_1))
      return false;
    if (!equals_1(this.x4_1, tmp0_other_with_cast.x4_1))
      return false;
    return true;
  };
  KTypeProjection.$metadata$ = classMeta('KTypeProjection');
  var KVariance_INVARIANT_instance;
  var KVariance_IN_instance;
  var KVariance_OUT_instance;
  var KVariance_entriesInitialized;
  function KVariance_initEntries() {
    if (KVariance_entriesInitialized)
      return Unit_getInstance();
    KVariance_entriesInitialized = true;
    KVariance_INVARIANT_instance = new KVariance('INVARIANT', 0);
    KVariance_IN_instance = new KVariance('IN', 1);
    KVariance_OUT_instance = new KVariance('OUT', 2);
  }
  function KVariance(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KVariance.$metadata$ = classMeta('KVariance', undefined, undefined, undefined, undefined, Enum.prototype);
  function KVariance_INVARIANT_getInstance() {
    KVariance_initEntries();
    return KVariance_INVARIANT_instance;
  }
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.b(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.b(element);
      } else {
        if (element instanceof Char_0) {
          _this__u8e3s4.b5(element.i1_1);
        } else {
          _this__u8e3s4.b(toString_1(element));
        }
      }
    }
  }
  function plus_4(_this__u8e3s4, other) {
    return toString_0(_this__u8e3s4) + other;
  }
  function equals(_this__u8e3s4, other, ignoreCase) {
    if (equals_1(new Char_0(_this__u8e3s4), new Char_0(other)))
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this__u8e3s4);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (equals_1(new Char_0(thisUpper), new Char_0(otherUpper))) {
      tmp = true;
    } else {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              var tmp0_asDynamic = toString_0(thisUpper);
              tmp$ret$0 = tmp0_asDynamic;
            }
            var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
            tmp$ret$1 = tmp1_unsafeCast;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      }
      var tmp_0 = new Char_0(tmp$ret$3);
      var tmp$ret$7;
      {
        var tmp$ret$6;
        {
          var tmp$ret$5;
          {
            var tmp$ret$4;
            {
              var tmp2_asDynamic = toString_0(otherUpper);
              tmp$ret$4 = tmp2_asDynamic;
            }
            var tmp3_unsafeCast = tmp$ret$4.toLowerCase();
            tmp$ret$5 = tmp3_unsafeCast;
          }
          tmp$ret$6 = tmp$ret$5;
        }
        tmp$ret$7 = charSequenceGet(tmp$ret$6, 0);
      }
      tmp = equals_1(tmp_0, new Char_0(tmp$ret$7));
    }
    return tmp;
  }
  function isSurrogate(_this__u8e3s4) {
    Companion_getInstance_13();
    var containsLower = _Char___init__impl__6a9atx(55296);
    var tmp;
    Companion_getInstance_13();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(57343)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function trimMargin(_this__u8e3s4, marginPrefix) {
    return replaceIndentByMargin(_this__u8e3s4, '', marginPrefix);
  }
  function trimMargin$default(_this__u8e3s4, marginPrefix, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      marginPrefix = '|';
    return trimMargin(_this__u8e3s4, marginPrefix);
  }
  function replaceIndentByMargin(_this__u8e3s4, newIndent, marginPrefix) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(marginPrefix);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'marginPrefix must be non-blank string.';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var lines_0 = lines(_this__u8e3s4);
    var tmp$ret$12;
    {
      var tmp1_reindent = _this__u8e3s4.length + imul(newIndent.length, lines_0.g()) | 0;
      var tmp2_reindent = getIndentFunction(newIndent);
      var lastIndex = get_lastIndex_0(lines_0);
      var tmp$ret$11;
      {
        var tmp$ret$10;
        {
          var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
          {
            var index = 0;
            var tmp0_iterator = lines_0.d();
            while (tmp0_iterator.e()) {
              var item = tmp0_iterator.f();
              {
                var tmp1 = index;
                index = tmp1 + 1 | 0;
                var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
                var tmp$ret$8;
                {
                  var tmp;
                  if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item) : false) {
                    tmp = null;
                  } else {
                    var tmp$ret$6;
                    {
                      var tmp$ret$3;
                      $l$block: {
                        var inductionVariable = 0;
                        var last = charSequenceLength(item) - 1 | 0;
                        if (inductionVariable <= last)
                          do {
                            var index_0 = inductionVariable;
                            inductionVariable = inductionVariable + 1 | 0;
                            var tmp$ret$2;
                            {
                              var tmp0__anonymous__q1qw7t_0 = charSequenceGet(item, index_0);
                              tmp$ret$2 = !isWhitespace(tmp0__anonymous__q1qw7t_0);
                            }
                            if (tmp$ret$2) {
                              tmp$ret$3 = index_0;
                              break $l$block;
                            }
                          }
                           while (inductionVariable <= last);
                        tmp$ret$3 = -1;
                      }
                      var firstNonWhitespaceIndex = tmp$ret$3;
                      var tmp_0;
                      if (firstNonWhitespaceIndex === -1) {
                        tmp_0 = null;
                      } else {
                        if (startsWith$default_0(item, marginPrefix, firstNonWhitespaceIndex, false, 4, null)) {
                          var tmp$ret$5;
                          {
                            var tmp1_substring = firstNonWhitespaceIndex + marginPrefix.length | 0;
                            var tmp$ret$4;
                            {
                              tmp$ret$4 = item;
                            }
                            tmp$ret$5 = tmp$ret$4.substring(tmp1_substring);
                          }
                          tmp_0 = tmp$ret$5;
                        } else {
                          tmp_0 = null;
                        }
                      }
                      tmp$ret$6 = tmp_0;
                    }
                    var tmp0_safe_receiver = tmp$ret$6;
                    var tmp_1;
                    if (tmp0_safe_receiver == null) {
                      tmp_1 = null;
                    } else {
                      var tmp$ret$7;
                      {
                        {
                        }
                        tmp$ret$7 = tmp2_reindent(tmp0_safe_receiver);
                      }
                      tmp_1 = tmp$ret$7;
                    }
                    var tmp1_elvis_lhs = tmp_1;
                    tmp = tmp1_elvis_lhs == null ? item : tmp1_elvis_lhs;
                  }
                  tmp$ret$8 = tmp;
                }
                var tmp0_safe_receiver_0 = tmp$ret$8;
                if (tmp0_safe_receiver_0 == null)
                  null;
                else {
                  var tmp$ret$9;
                  {
                    {
                    }
                    tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
                    tmp$ret$9 = Unit_getInstance();
                  }
                }
              }
            }
          }
          tmp$ret$10 = tmp1_mapIndexedNotNullTo;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      var tmp_2 = tmp$ret$11;
      var tmp_3 = StringBuilder_init_$Create$(tmp1_reindent);
      tmp$ret$12 = joinTo$default(tmp_2, tmp_3, '\n', null, null, 0, null, null, 124, null).toString();
    }
    return tmp$ret$12;
  }
  function reindent(_this__u8e3s4, resultSizeEstimate, indentAddFunction, indentCutFunction) {
    var lastIndex = get_lastIndex_0(_this__u8e3s4);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
        {
          var index = 0;
          var tmp0_iterator = _this__u8e3s4.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            {
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
              var tmp$ret$1;
              {
                var tmp;
                if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item) : false) {
                  tmp = null;
                } else {
                  var tmp0_safe_receiver = indentCutFunction(item);
                  var tmp_0;
                  if (tmp0_safe_receiver == null) {
                    tmp_0 = null;
                  } else {
                    var tmp$ret$0;
                    {
                      {
                      }
                      tmp$ret$0 = indentAddFunction(tmp0_safe_receiver);
                    }
                    tmp_0 = tmp$ret$0;
                  }
                  var tmp1_elvis_lhs = tmp_0;
                  tmp = tmp1_elvis_lhs == null ? item : tmp1_elvis_lhs;
                }
                tmp$ret$1 = tmp;
              }
              var tmp0_safe_receiver_0 = tmp$ret$1;
              if (tmp0_safe_receiver_0 == null)
                null;
              else {
                var tmp$ret$2;
                {
                  {
                  }
                  tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
                  tmp$ret$2 = Unit_getInstance();
                }
              }
            }
          }
        }
        tmp$ret$3 = tmp1_mapIndexedNotNullTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var tmp_1 = tmp$ret$4;
    var tmp_2 = StringBuilder_init_$Create$(resultSizeEstimate);
    return joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
  }
  function getIndentFunction(indent) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(indent) === 0;
    }
    if (tmp$ret$0) {
      tmp = getIndentFunction$lambda();
    } else {
      tmp = getIndentFunction$lambda_0(indent);
    }
    return tmp;
  }
  function trimIndent(_this__u8e3s4) {
    return replaceIndent(_this__u8e3s4, '');
  }
  function replaceIndent(_this__u8e3s4, newIndent) {
    var lines_0 = lines(_this__u8e3s4);
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_filterTo = ArrayList_init_$Create$();
          var tmp0_iterator = lines_0.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            if (isNotBlank(element)) {
              tmp0_filterTo.a(element);
            }
          }
          tmp$ret$0 = tmp0_filterTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var tmp0_map = tmp$ret$1;
      var tmp$ret$2;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator_0 = tmp0_map.d();
        while (tmp0_iterator_0.e()) {
          var item = tmp0_iterator_0.f();
          tmp0_mapTo.a(indentWidth(item));
        }
        tmp$ret$2 = tmp0_mapTo;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    var tmp0_elvis_lhs = minOrNull(tmp$ret$3);
    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
    var tmp$ret$10;
    {
      var tmp1_reindent = _this__u8e3s4.length + imul(newIndent.length, lines_0.g()) | 0;
      var tmp2_reindent = getIndentFunction(newIndent);
      var lastIndex = get_lastIndex_0(lines_0);
      var tmp$ret$9;
      {
        var tmp$ret$8;
        {
          var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
          {
            var index = 0;
            var tmp0_iterator_1 = lines_0.d();
            while (tmp0_iterator_1.e()) {
              var item_0 = tmp0_iterator_1.f();
              {
                var tmp1 = index;
                index = tmp1 + 1 | 0;
                var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
                var tmp$ret$6;
                {
                  var tmp;
                  if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item_0) : false) {
                    tmp = null;
                  } else {
                    var tmp$ret$4;
                    {
                      tmp$ret$4 = drop(item_0, minCommonIndent);
                    }
                    var tmp0_safe_receiver = tmp$ret$4;
                    var tmp_0;
                    if (tmp0_safe_receiver == null) {
                      tmp_0 = null;
                    } else {
                      var tmp$ret$5;
                      {
                        {
                        }
                        tmp$ret$5 = tmp2_reindent(tmp0_safe_receiver);
                      }
                      tmp_0 = tmp$ret$5;
                    }
                    var tmp1_elvis_lhs = tmp_0;
                    tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
                  }
                  tmp$ret$6 = tmp;
                }
                var tmp0_safe_receiver_0 = tmp$ret$6;
                if (tmp0_safe_receiver_0 == null)
                  null;
                else {
                  var tmp$ret$7;
                  {
                    {
                    }
                    tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
                    tmp$ret$7 = Unit_getInstance();
                  }
                }
              }
            }
          }
          tmp$ret$8 = tmp1_mapIndexedNotNullTo;
        }
        tmp$ret$9 = tmp$ret$8;
      }
      var tmp_1 = tmp$ret$9;
      var tmp_2 = StringBuilder_init_$Create$(tmp1_reindent);
      tmp$ret$10 = joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
    }
    return tmp$ret$10;
  }
  function indentWidth(_this__u8e3s4) {
    var tmp$ret$3;
    {
      var tmp$ret$1;
      $l$block: {
        var inductionVariable = 0;
        var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, index);
              tmp$ret$0 = !isWhitespace(tmp0__anonymous__q1qw7t);
            }
            if (tmp$ret$0) {
              tmp$ret$1 = index;
              break $l$block;
            }
          }
           while (inductionVariable <= last);
        tmp$ret$1 = -1;
      }
      var tmp1_let = tmp$ret$1;
      {
      }
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_let === -1 ? _this__u8e3s4.length : tmp1_let;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function getIndentFunction$lambda() {
    return function (line) {
      return line;
    };
  }
  function getIndentFunction$lambda_0($indent) {
    return function (line) {
      return $indent + line;
    };
  }
  function buildString(builderAction) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = StringBuilder_init_$Create$_0();
      {
      }
      builderAction(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.toString();
  }
  function buildString_0(capacity, builderAction) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_apply = StringBuilder_init_$Create$(capacity);
      {
      }
      builderAction(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.toString();
  }
  function toLongOrNull(_this__u8e3s4) {
    return toLongOrNull_0(_this__u8e3s4, 10);
  }
  function toIntOrNull(_this__u8e3s4) {
    return toIntOrNull_0(_this__u8e3s4, 10);
  }
  function toLongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        Companion_getInstance_15();
        limit = new Long(0, -2147483648);
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        Companion_getInstance_15();
        limit = (new Long(-1, 2147483647)).c5();
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      Companion_getInstance_15();
      limit = (new Long(-1, 2147483647)).c5();
    }
    var tmp$ret$0;
    {
      Companion_getInstance_15();
      var tmp0_div = (new Long(-1, 2147483647)).c5();
      tmp$ret$0 = tmp0_div.d5(new Long(36, 0));
    }
    var limitForMaxRadix = tmp$ret$0;
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result.g1(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            var tmp$ret$1;
            {
              tmp$ret$1 = limit.d5(toLong_0(radix));
            }
            limitBeforeMul = tmp$ret$1;
            if (result.g1(limitBeforeMul) < 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$2;
        {
          var tmp1_times = result;
          tmp$ret$2 = tmp1_times.e5(toLong_0(radix));
        }
        result = tmp$ret$2;
        var tmp = result;
        var tmp$ret$3;
        {
          tmp$ret$3 = limit.f5(toLong_0(digit));
        }
        if (tmp.g1(tmp$ret$3) < 0)
          return null;
        var tmp$ret$4;
        {
          var tmp2_minus = result;
          tmp$ret$4 = tmp2_minus.g5(toLong_0(digit));
        }
        result = tmp$ret$4;
      }
       while (inductionVariable < length);
    return isNegative ? result : result.c5();
  }
  function toIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        limit = IntCompanionObject_getInstance().v_1;
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        limit = -IntCompanionObject_getInstance().w_1 | 0;
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      limit = -IntCompanionObject_getInstance().w_1 | 0;
    }
    var limitForMaxRadix = (-IntCompanionObject_getInstance().w_1 | 0) / 36 | 0;
    var limitBeforeMul = limitForMaxRadix;
    var result = 0;
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result < limitBeforeMul) {
          if (limitBeforeMul === limitForMaxRadix) {
            limitBeforeMul = limit / radix | 0;
            if (result < limitBeforeMul) {
              return null;
            }
          } else {
            return null;
          }
        }
        result = imul(result, radix);
        if (result < (limit + digit | 0))
          return null;
        result = result - digit | 0;
      }
       while (inductionVariable < length);
    return isNegative ? result : -result | 0;
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$("Invalid number format: '" + input + "'");
  }
  function toByteOrNull(_this__u8e3s4) {
    return toByteOrNull_0(_this__u8e3s4, 10);
  }
  function toShortOrNull(_this__u8e3s4) {
    return toShortOrNull_0(_this__u8e3s4, 10);
  }
  function toByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    if (int < ByteCompanionObject_getInstance().h5_1 ? true : int > ByteCompanionObject_getInstance().i5_1)
      return null;
    return toByte_0(int);
  }
  function toShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    if (int < ShortCompanionObject_getInstance().l5_1 ? true : int > ShortCompanionObject_getInstance().m5_1)
      return null;
    return toShort_0(int);
  }
  function isEmpty_1(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) === 0;
  }
  function substring(_this__u8e3s4, startIndex, endIndex) {
    return toString_2(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex));
  }
  function trim(_this__u8e3s4) {
    return toString_2(trim_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE()));
  }
  function indexOf_0(_this__u8e3s4, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      {
        tmp$ret$0 = charArrayOf_0([char]);
      }
      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      var tmp$ret$3;
      {
        var tmp1_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$2;
        {
          var tmp0_nativeIndexOf = toString_0(char);
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp1_nativeIndexOf;
          }
          tmp$ret$2 = tmp$ret$1.indexOf(tmp0_nativeIndexOf, startIndex);
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function indexOf$default(_this__u8e3s4, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_0(_this__u8e3s4, char, startIndex, ignoreCase);
  }
  function lineSequence(_this__u8e3s4) {
    return splitToSequence$default(_this__u8e3s4, ['\r\n', '\n', '\r'], false, 0, 6, null);
  }
  function contains_5(_this__u8e3s4, char, ignoreCase) {
    return indexOf$default(_this__u8e3s4, char, 0, ignoreCase, 2, null) >= 0;
  }
  function contains$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return contains_5(_this__u8e3s4, char, ignoreCase);
  }
  function get_lastIndex_1(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) - 1 | 0;
  }
  function isNotBlank(_this__u8e3s4) {
    return !isBlank(_this__u8e3s4);
  }
  function ifEmpty(_this__u8e3s4, defaultValue) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) === 0;
    }
    if (tmp$ret$0) {
      tmp = defaultValue();
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function split(_this__u8e3s4, delimiters, ignoreCase, limit) {
    if (delimiters.length === 1) {
      var delimiter = delimiters[0];
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceLength(delimiter) === 0;
      }
      if (!tmp$ret$0) {
        return split_0(_this__u8e3s4, delimiter, ignoreCase, limit);
      }
    }
    var tmp$ret$3;
    {
      var tmp0_map = asIterable(rangesDelimitedBy$default(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null));
      var tmp$ret$2;
      {
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$1;
          {
            tmp$ret$1 = substring_0(_this__u8e3s4, item);
          }
          tmp0_mapTo.a(tmp$ret$1);
        }
        tmp$ret$2 = tmp0_mapTo;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function split$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return split(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function get_indices_0(_this__u8e3s4) {
    return numberRangeToNumber(0, charSequenceLength(_this__u8e3s4) - 1 | 0);
  }
  function trim_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      var startIndex = 0;
      var endIndex = charSequenceLength(_this__u8e3s4) - 1 | 0;
      var startFound = false;
      $l$loop: while (startIndex <= endIndex) {
        var index = !startFound ? startIndex : endIndex;
        var match = isWhitespace(charSequenceGet(_this__u8e3s4, index));
        if (!startFound) {
          if (!match)
            startFound = true;
          else
            startIndex = startIndex + 1 | 0;
        } else {
          if (!match)
            break $l$loop;
          else
            endIndex = endIndex - 1 | 0;
        }
      }
      tmp$ret$0 = charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex + 1 | 0);
    }
    return tmp$ret$0;
  }
  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp$ret$2;
      {
        var tmp1_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$1;
        {
          var tmp0_nativeIndexOf = toString_0(char);
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp1_nativeIndexOf;
          }
          tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, startIndex);
        }
        tmp$ret$2 = tmp$ret$1;
      }
      return tmp$ret$2;
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last = get_lastIndex_1(_this__u8e3s4);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_0 = indexedObject.length;
          while (inductionVariable_0 < last_0) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$3;
            {
              tmp$ret$3 = equals(element, charAtIndex, ignoreCase);
            }
            if (tmp$ret$3) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (!(index === last));
    return -1;
  }
  function indexOfAny$default(_this__u8e3s4, chars, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase);
  }
  function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
    var tmp = rangesDelimitedBy$default(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null);
    return map_1(tmp, splitToSequence$lambda(_this__u8e3s4));
  }
  function splitToSequence$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function split_0(_this__u8e3s4, delimiter, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var currentOffset = 0;
    var nextIndex = indexOf_1(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    if (nextIndex === -1 ? true : limit === 1) {
      return listOf_0(toString_2(_this__u8e3s4));
    }
    var isLimited = limit > 0;
    var result = ArrayList_init_$Create$_0(isLimited ? coerceAtMost(limit, 10) : 10);
    $l$loop: do {
      var tmp$ret$0;
      {
        var tmp0_substring = currentOffset;
        var tmp1_substring = nextIndex;
        tmp$ret$0 = toString_2(charSequenceSubSequence(_this__u8e3s4, tmp0_substring, tmp1_substring));
      }
      result.a(tmp$ret$0);
      currentOffset = nextIndex + delimiter.length | 0;
      if (isLimited ? result.g() === (limit - 1 | 0) : false)
        break $l$loop;
      nextIndex = indexOf_1(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    }
     while (!(nextIndex === -1));
    var tmp$ret$1;
    {
      var tmp2_substring = currentOffset;
      var tmp3_substring = charSequenceLength(_this__u8e3s4);
      tmp$ret$1 = toString_2(charSequenceSubSequence(_this__u8e3s4, tmp2_substring, tmp3_substring));
    }
    result.a(tmp$ret$1);
    return result;
  }
  function substring_0(_this__u8e3s4, range) {
    return toString_2(charSequenceSubSequence(_this__u8e3s4, range.p4(), range.n4() + 1 | 0));
  }
  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimitersList, ignoreCase));
  }
  function rangesDelimitedBy$default(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function trim_1(_this__u8e3s4, predicate) {
    var startIndex = 0;
    var endIndex = charSequenceLength(_this__u8e3s4) - 1 | 0;
    var startFound = false;
    $l$loop: while (startIndex <= endIndex) {
      var index = !startFound ? startIndex : endIndex;
      var match = predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)));
      if (!startFound) {
        if (!match)
          startFound = true;
        else
          startIndex = startIndex + 1 | 0;
      } else {
        if (!match)
          break $l$loop;
        else
          endIndex = endIndex - 1 | 0;
      }
    }
    return charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex + 1 | 0);
  }
  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function requireNonNegativeLimit(limit) {
    var tmp0_require = limit >= 0;
    {
    }
    var tmp;
    if (!tmp0_require) {
      var tmp$ret$0;
      {
        tmp$ret$0 = 'Limit must be non-negative, but was ' + limit;
      }
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
    return tmp;
  }
  function indexOf_1(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp_1 = charSequenceLength(_this__u8e3s4);
      tmp = indexOf$default_1(_this__u8e3s4, string, startIndex, tmp_1, ignoreCase, false, 16, null);
    } else {
      var tmp$ret$1;
      {
        var tmp0_nativeIndexOf = _this__u8e3s4;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_nativeIndexOf;
        }
        tmp$ret$1 = tmp$ret$0.indexOf(string, startIndex);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function indexOf$default_0(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_1(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function calcNext($this) {
    if ($this.u5_1 < 0) {
      $this.s5_1 = 0;
      $this.v5_1 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this.x5_1.a6_1 > 0) {
        var tmp0_this = $this;
        tmp0_this.w5_1 = tmp0_this.w5_1 + 1 | 0;
        tmp_0 = tmp0_this.w5_1 >= $this.x5_1.a6_1;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        tmp = $this.u5_1 > charSequenceLength($this.x5_1.y5_1);
      }
      if (tmp) {
        $this.v5_1 = numberRangeToNumber($this.t5_1, get_lastIndex_1($this.x5_1.y5_1));
        $this.u5_1 = -1;
      } else {
        var match = $this.x5_1.b6_1($this.x5_1.y5_1, $this.u5_1);
        if (match == null) {
          $this.v5_1 = numberRangeToNumber($this.t5_1, get_lastIndex_1($this.x5_1.y5_1));
          $this.u5_1 = -1;
        } else {
          var tmp1_container = match;
          var index = tmp1_container.h3();
          var length = tmp1_container.i3();
          $this.v5_1 = until($this.t5_1, index);
          $this.t5_1 = index + length | 0;
          $this.u5_1 = $this.t5_1 + (length === 0 ? 1 : 0) | 0;
        }
      }
      $this.s5_1 = 1;
    }
  }
  function DelimitedRangesSequence$iterator$1(this$0) {
    this.x5_1 = this$0;
    this.s5_1 = -1;
    this.t5_1 = coerceIn(this$0.z5_1, 0, charSequenceLength(this$0.y5_1));
    this.u5_1 = this.t5_1;
    this.v5_1 = null;
    this.w5_1 = 0;
  }
  DelimitedRangesSequence$iterator$1.prototype.f = function () {
    if (this.s5_1 === -1)
      calcNext(this);
    if (this.s5_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.v5_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.v5_1 = null;
    this.s5_1 = -1;
    return result;
  };
  DelimitedRangesSequence$iterator$1.prototype.e = function () {
    if (this.s5_1 === -1)
      calcNext(this);
    return this.s5_1 === 1;
  };
  DelimitedRangesSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this.y5_1 = input;
    this.z5_1 = startIndex;
    this.a6_1 = limit;
    this.b6_1 = getNextMatch;
  }
  DelimitedRangesSequence.prototype.d = function () {
    return new DelimitedRangesSequence$iterator$1(this);
  };
  DelimitedRangesSequence.$metadata$ = classMeta('DelimitedRangesSequence', [Sequence]);
  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
    if (!ignoreCase ? strings.g() === 1 : false) {
      var string = single_1(strings);
      var tmp;
      if (!last) {
        tmp = indexOf$default_0(_this__u8e3s4, string, startIndex, false, 4, null);
      } else {
        tmp = lastIndexOf$default(_this__u8e3s4, string, startIndex, false, 4, null);
      }
      var index = tmp;
      return index < 0 ? null : to(index, string);
    }
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_1(_this__u8e3s4)), 0);
    if (typeof _this__u8e3s4 === 'string') {
      var inductionVariable = indices.z_1;
      var last_0 = indices.a1_1;
      var step = indices.b1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          var tmp$ret$1;
          $l$block: {
            var tmp0_iterator = strings.d();
            while (tmp0_iterator.e()) {
              var element = tmp0_iterator.f();
              var tmp$ret$0;
              {
                tmp$ret$0 = regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase);
              }
              if (tmp$ret$0) {
                tmp$ret$1 = element;
                break $l$block;
              }
            }
            tmp$ret$1 = null;
          }
          var matchingString = tmp$ret$1;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_0));
    } else {
      var inductionVariable_0 = indices.z_1;
      var last_1 = indices.a1_1;
      var step_0 = indices.b1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          var tmp$ret$3;
          $l$block_0: {
            var tmp0_iterator_0 = strings.d();
            while (tmp0_iterator_0.e()) {
              var element_0 = tmp0_iterator_0.f();
              var tmp$ret$2;
              {
                tmp$ret$2 = regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase);
              }
              if (tmp$ret$2) {
                tmp$ret$3 = element_0;
                break $l$block_0;
              }
            }
            tmp$ret$3 = null;
          }
          var matchingString_0 = tmp$ret$3;
          if (!(matchingString_0 == null))
            return to(index_1, matchingString_0);
        }
         while (!(index_1 === last_1));
    }
    return null;
  }
  function indexOf_2(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_1(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this__u8e3s4 === 'string') {
      tmp = typeof other === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var inductionVariable = indices.z_1;
      var last_0 = indices.a1_1;
      var step = indices.b1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_0));
    } else {
      var inductionVariable_0 = indices.z_1;
      var last_1 = indices.a1_1;
      var step_0 = indices.b1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
            return index_0;
        }
         while (!(index_0 === last_1));
    }
    return -1;
  }
  function indexOf$default_1(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      last = false;
    return indexOf_2(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last);
  }
  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_2(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
    } else {
      var tmp$ret$1;
      {
        var tmp0_nativeLastIndexOf = _this__u8e3s4;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_nativeLastIndexOf;
        }
        tmp$ret$1 = tmp$ret$0.lastIndexOf(string, startIndex);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function lastIndexOf$default(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = get_lastIndex_1(_this__u8e3s4);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function lines(_this__u8e3s4) {
    return toList_2(lineSequence(_this__u8e3s4));
  }
  function isNotEmpty_0(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) > 0;
  }
  function lastIndexOf_0(_this__u8e3s4, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      {
        tmp$ret$0 = charArrayOf_0([char]);
      }
      tmp = lastIndexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      var tmp$ret$3;
      {
        var tmp1_nativeLastIndexOf = _this__u8e3s4;
        var tmp$ret$2;
        {
          var tmp0_nativeLastIndexOf = toString_0(char);
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp1_nativeLastIndexOf;
          }
          tmp$ret$2 = tmp$ret$1.lastIndexOf(tmp0_nativeLastIndexOf, startIndex);
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function lastIndexOf$default_0(_this__u8e3s4, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = get_lastIndex_1(_this__u8e3s4);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf_0(_this__u8e3s4, char, startIndex, ignoreCase);
  }
  function lastIndexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp$ret$2;
      {
        var tmp1_nativeLastIndexOf = _this__u8e3s4;
        var tmp$ret$1;
        {
          var tmp0_nativeLastIndexOf = toString_0(char);
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp1_nativeLastIndexOf;
          }
          tmp$ret$1 = tmp$ret$0.lastIndexOf(tmp0_nativeLastIndexOf, startIndex);
        }
        tmp$ret$2 = tmp$ret$1;
      }
      return tmp$ret$2;
    }
    var inductionVariable = coerceAtMost(startIndex, get_lastIndex_1(_this__u8e3s4));
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last = indexedObject.length;
          while (inductionVariable_0 < last) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$3;
            {
              tmp$ret$3 = equals(element, charAtIndex, ignoreCase);
            }
            if (tmp$ret$3) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function splitToSequence$lambda($this_splitToSequence) {
    return function (it) {
      return substring_0($this_splitToSequence, it);
    };
  }
  function rangesDelimitedBy$lambda($delimitersList, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = to(tmp0_safe_receiver.f3_1, tmp0_safe_receiver.g3_1.length);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp = tmp$ret$1;
      }
      return tmp;
    };
  }
  function hashCode(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  }
  function getValue_0(_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4.t();
  }
  function Lazy() {
  }
  Lazy.$metadata$ = interfaceMeta('Lazy');
  var LazyThreadSafetyMode_SYNCHRONIZED_instance;
  var LazyThreadSafetyMode_PUBLICATION_instance;
  var LazyThreadSafetyMode_NONE_instance;
  var LazyThreadSafetyMode_entriesInitialized;
  function LazyThreadSafetyMode_initEntries() {
    if (LazyThreadSafetyMode_entriesInitialized)
      return Unit_getInstance();
    LazyThreadSafetyMode_entriesInitialized = true;
    LazyThreadSafetyMode_SYNCHRONIZED_instance = new LazyThreadSafetyMode('SYNCHRONIZED', 0);
    LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
    LazyThreadSafetyMode_NONE_instance = new LazyThreadSafetyMode('NONE', 2);
  }
  function LazyThreadSafetyMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  LazyThreadSafetyMode.$metadata$ = classMeta('LazyThreadSafetyMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function UnsafeLazyImpl(initializer) {
    this.d6_1 = initializer;
    this.e6_1 = UNINITIALIZED_VALUE_getInstance();
  }
  UnsafeLazyImpl.prototype.t = function () {
    if (this.e6_1 === UNINITIALIZED_VALUE_getInstance()) {
      this.e6_1 = ensureNotNull(this.d6_1)();
      this.d6_1 = null;
    }
    var tmp = this.e6_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  UnsafeLazyImpl.prototype.c6 = function () {
    return !(this.e6_1 === UNINITIALIZED_VALUE_getInstance());
  };
  UnsafeLazyImpl.prototype.toString = function () {
    return this.c6() ? toString_1(this.t()) : 'Lazy value not initialized yet.';
  };
  UnsafeLazyImpl.$metadata$ = classMeta('UnsafeLazyImpl', [Lazy, Serializable]);
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  UNINITIALIZED_VALUE.$metadata$ = objectMeta('UNINITIALIZED_VALUE');
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function LazyThreadSafetyMode_NONE_getInstance() {
    LazyThreadSafetyMode_initEntries();
    return LazyThreadSafetyMode_NONE_instance;
  }
  function check(value) {
    {
    }
    {
      {
      }
      if (!value) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Check failed.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_2(message));
      }
    }
  }
  function check_0(value, lazyMessage) {
    {
    }
    if (!value) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$(toString_2(message));
    }
  }
  function error(message) {
    throw IllegalStateException_init_$Create$(toString_2(message));
  }
  function require_0(value) {
    {
    }
    {
      {
      }
      if (!value) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Failed requirement.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
  }
  function require_1(value, lazyMessage) {
    {
    }
    if (!value) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    }
  }
  function checkNotNull(value) {
    {
    }
    var tmp$ret$1;
    $l$block: {
      {
      }
      if (value == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Required value was null.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_2(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  }
  function checkNotNull_0(value, lazyMessage) {
    {
    }
    if (value == null) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$(toString_2(message));
    } else {
      return value;
    }
  }
  function requireNotNull(value, lazyMessage) {
    {
    }
    if (value == null) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_2(message));
    } else {
      return value;
    }
  }
  function _Result___init__impl__xyqfz8(value) {
    return value;
  }
  function _Result___get_value__impl__bjfvqg($this) {
    return $this;
  }
  function _Result___get_isFailure__impl__jpiriv($this) {
    var tmp = _Result___get_value__impl__bjfvqg($this);
    return tmp instanceof Failure;
  }
  function Result__getOrNull_impl_x6tyqe($this) {
    var tmp;
    if (_Result___get_isFailure__impl__jpiriv($this)) {
      tmp = null;
    } else {
      var tmp_0 = _Result___get_value__impl__bjfvqg($this);
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    }
    return tmp;
  }
  function Result__exceptionOrNull_impl_p6xea9($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = _Result___get_value__impl__bjfvqg($this).f6_1;
    } else {
      tmp = null;
    }
    return tmp;
  }
  function Result__toString_impl_yu5r8k($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = toString_2(_Result___get_value__impl__bjfvqg($this));
    } else {
      tmp = 'Success(' + toString_1(_Result___get_value__impl__bjfvqg($this)) + ')';
    }
    return tmp;
  }
  function Companion_3() {
    Companion_instance_3 = this;
  }
  Companion_3.prototype.g6 = function (value) {
    return _Result___init__impl__xyqfz8(value);
  };
  Companion_3.prototype.h6 = function (exception) {
    return _Result___init__impl__xyqfz8(createFailure(exception));
  };
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function Failure(exception) {
    this.f6_1 = exception;
  }
  Failure.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Failure) {
      tmp = equals_1(this.f6_1, other.f6_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Failure.prototype.hashCode = function () {
    return hashCode_0(this.f6_1);
  };
  Failure.prototype.toString = function () {
    return 'Failure(' + this.f6_1 + ')';
  };
  Failure.$metadata$ = classMeta('Failure', [Serializable]);
  function Result__hashCode_impl_d2zufp($this) {
    return $this == null ? 0 : hashCode_0($this);
  }
  function Result__equals_impl_bxgmep($this, other) {
    if (!(other instanceof Result))
      return false;
    var tmp0_other_with_cast = other instanceof Result ? other.i6_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function Result(value) {
    Companion_getInstance_3();
    this.i6_1 = value;
  }
  Result.prototype.toString = function () {
    return Result__toString_impl_yu5r8k(this.i6_1);
  };
  Result.prototype.hashCode = function () {
    return Result__hashCode_impl_d2zufp(this.i6_1);
  };
  Result.prototype.equals = function (other) {
    return Result__equals_impl_bxgmep(this.i6_1, other);
  };
  Result.$metadata$ = classMeta('Result', [Serializable]);
  function createFailure(exception) {
    return new Failure(exception);
  }
  function getOrThrow(_this__u8e3s4) {
    throwOnFailure(_this__u8e3s4);
    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  }
  function throwOnFailure(_this__u8e3s4) {
    var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
    if (tmp instanceof Failure)
      throw _Result___get_value__impl__bjfvqg(_this__u8e3s4).f6_1;
  }
  function runCatching(_this__u8e3s4, block) {
    var tmp;
    try {
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_3();
        var tmp1_success = block(_this__u8e3s4);
        tmp$ret$0 = _Result___init__impl__xyqfz8(tmp1_success);
      }
      tmp = tmp$ret$0;
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var tmp$ret$1;
        {
          var tmp2_failure = Companion_getInstance_3();
          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
        }
        tmp_0 = tmp$ret$1;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function fold_1(_this__u8e3s4, onSuccess, onFailure) {
    {
    }
    var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
    var tmp;
    if (exception == null) {
      var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
      tmp = onSuccess((tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE());
    } else {
      tmp = onFailure(exception);
    }
    return tmp;
  }
  function run(block) {
    {
    }
    return block();
  }
  function NotImplementedError(message) {
    Error_init_$Init$(message, this);
    captureStack(this, NotImplementedError);
  }
  NotImplementedError.$metadata$ = classMeta('NotImplementedError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function let_0(_this__u8e3s4, block) {
    {
    }
    return block(_this__u8e3s4);
  }
  function apply(_this__u8e3s4, block) {
    {
    }
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function run_0(_this__u8e3s4, block) {
    {
    }
    return block(_this__u8e3s4);
  }
  function also(_this__u8e3s4, block) {
    {
    }
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function takeIf(_this__u8e3s4, predicate) {
    {
    }
    return predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function repeat(times, action) {
    {
    }
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        action(index);
      }
       while (inductionVariable < times);
  }
  function with_0(receiver, block) {
    {
    }
    return block(receiver);
  }
  function takeUnless(_this__u8e3s4, predicate) {
    {
    }
    return !predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function Pair(first, second) {
    this.f3_1 = first;
    this.g3_1 = second;
  }
  Pair.prototype.j6 = function () {
    return this.f3_1;
  };
  Pair.prototype.k6 = function () {
    return this.g3_1;
  };
  Pair.prototype.toString = function () {
    return '(' + this.f3_1 + ', ' + this.g3_1 + ')';
  };
  Pair.prototype.h3 = function () {
    return this.f3_1;
  };
  Pair.prototype.i3 = function () {
    return this.g3_1;
  };
  Pair.prototype.hashCode = function () {
    var result = this.f3_1 == null ? 0 : hashCode_0(this.f3_1);
    result = imul(result, 31) + (this.g3_1 == null ? 0 : hashCode_0(this.g3_1)) | 0;
    return result;
  };
  Pair.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_1(this.f3_1, tmp0_other_with_cast.f3_1))
      return false;
    if (!equals_1(this.g3_1, tmp0_other_with_cast.g3_1))
      return false;
    return true;
  };
  Pair.$metadata$ = classMeta('Pair', [Serializable]);
  function to(_this__u8e3s4, that) {
    return new Pair(_this__u8e3s4, that);
  }
  function Triple(first, second, third) {
    this.l6_1 = first;
    this.m6_1 = second;
    this.n6_1 = third;
  }
  Triple.prototype.toString = function () {
    return '(' + this.l6_1 + ', ' + this.m6_1 + ', ' + this.n6_1 + ')';
  };
  Triple.prototype.hashCode = function () {
    var result = this.l6_1 == null ? 0 : hashCode_0(this.l6_1);
    result = imul(result, 31) + (this.m6_1 == null ? 0 : hashCode_0(this.m6_1)) | 0;
    result = imul(result, 31) + (this.n6_1 == null ? 0 : hashCode_0(this.n6_1)) | 0;
    return result;
  };
  Triple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_1(this.l6_1, tmp0_other_with_cast.l6_1))
      return false;
    if (!equals_1(this.m6_1, tmp0_other_with_cast.m6_1))
      return false;
    if (!equals_1(this.n6_1, tmp0_other_with_cast.n6_1))
      return false;
    return true;
  };
  Triple.$metadata$ = classMeta('Triple', [Serializable]);
  function _UByte___init__impl__g9hnc4(data) {
    return data;
  }
  function _UByte___get_data__impl__jof9qr($this) {
    return $this;
  }
  function Companion_4() {
    Companion_instance_4 = this;
    this.o6_1 = _UByte___init__impl__g9hnc4(0);
    this.p6_1 = _UByte___init__impl__g9hnc4(-1);
    this.q6_1 = 1;
    this.r6_1 = 8;
  }
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function UByte__compareTo_impl_5w5192($this, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UByte___get_data__impl__jof9qr($this) & 255;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _UByte___get_data__impl__jof9qr(other) & 255;
    }
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UByte__compareTo_impl_5w5192_0($this, other) {
    var tmp = $this.s6_1;
    return UByte__compareTo_impl_5w5192(tmp, other instanceof UByte ? other.s6_1 : THROW_CCE());
  }
  function UByte__toByte_impl_h2o6a5($this) {
    return _UByte___get_data__impl__jof9qr($this);
  }
  function UByte__toInt_impl_5nso52($this) {
    return _UByte___get_data__impl__jof9qr($this) & 255;
  }
  function UByte__toUInt_impl_qgytr9($this) {
    return _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr($this) & 255);
  }
  function UByte__toString_impl_v72jg($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UByte___get_data__impl__jof9qr($this) & 255;
    }
    return tmp$ret$0.toString();
  }
  function UByte__hashCode_impl_mmczcb($this) {
    return $this;
  }
  function UByte__equals_impl_nvqtsf($this, other) {
    if (!(other instanceof UByte))
      return false;
    var tmp0_other_with_cast = other instanceof UByte ? other.s6_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UByte(data) {
    Companion_getInstance_4();
    this.s6_1 = data;
  }
  UByte.prototype.t6 = function (other) {
    return UByte__compareTo_impl_5w5192(this.s6_1, other);
  };
  UByte.prototype.u6 = function (other) {
    return UByte__compareTo_impl_5w5192_0(this, other);
  };
  UByte.prototype.toString = function () {
    return UByte__toString_impl_v72jg(this.s6_1);
  };
  UByte.prototype.hashCode = function () {
    return UByte__hashCode_impl_mmczcb(this.s6_1);
  };
  UByte.prototype.equals = function (other) {
    return UByte__equals_impl_nvqtsf(this.s6_1, other);
  };
  UByte.$metadata$ = classMeta('UByte', [Comparable]);
  function toUByte(_this__u8e3s4) {
    return _UByte___init__impl__g9hnc4(toByte_0(_this__u8e3s4));
  }
  function toUByte_0(_this__u8e3s4) {
    return _UByte___init__impl__g9hnc4(_this__u8e3s4);
  }
  function _UInt___init__impl__l7qpdl(data) {
    return data;
  }
  function _UInt___get_data__impl__f0vqqw($this) {
    return $this;
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.v6_1 = _UInt___init__impl__l7qpdl(0);
    this.w6_1 = _UInt___init__impl__l7qpdl(-1);
    this.x6_1 = 4;
    this.y6_1 = 32;
  }
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function UInt__compareTo_impl_yacclj($this, other) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(other) & 255);
      }
      var tmp0_compareTo = tmp$ret$0;
      tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(tmp0_compareTo));
    }
    return tmp$ret$1;
  }
  function UInt__compareTo_impl_yacclj_0($this, other) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(other) & 65535);
      }
      var tmp0_compareTo = tmp$ret$0;
      tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(tmp0_compareTo));
    }
    return tmp$ret$1;
  }
  function UInt__compareTo_impl_yacclj_1($this, other) {
    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__compareTo_impl_yacclj_2($this, other) {
    var tmp = $this.z6_1;
    return UInt__compareTo_impl_yacclj_1(tmp, other instanceof UInt ? other.z6_1 : THROW_CCE());
  }
  function UInt__plus_impl_gmhu6f($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) + _UInt___get_data__impl__f0vqqw(other) | 0);
  }
  function UInt__times_impl_9tvds1($this, other) {
    return _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other)));
  }
  function UInt__div_impl_xkbbl6($this, other) {
    return uintDivide($this, other);
  }
  function UInt__toInt_impl_93yt4d($this) {
    return _UInt___get_data__impl__f0vqqw($this);
  }
  function UInt__toLong_impl_le5rq4($this) {
    return toLong_0(_UInt___get_data__impl__f0vqqw($this)).a7(new Long(-1, 0));
  }
  function UInt__toUByte_impl_qgjpt1($this) {
    var tmp$ret$0;
    {
      var tmp0_toUByte = _UInt___get_data__impl__f0vqqw($this);
      tmp$ret$0 = _UByte___init__impl__g9hnc4(toByte_0(tmp0_toUByte));
    }
    return tmp$ret$0;
  }
  function UInt__toUShort_impl_2yxcfl($this) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = _UInt___get_data__impl__f0vqqw($this);
      tmp$ret$0 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
    }
    return tmp$ret$0;
  }
  function UInt__toULong_impl_8j37gv($this) {
    return _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw($this)).a7(new Long(-1, 0)));
  }
  function UInt__toString_impl_dbgl21($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw($this)).a7(new Long(-1, 0));
    }
    return tmp$ret$0.toString();
  }
  function UInt__hashCode_impl_z2mhuw($this) {
    return $this;
  }
  function UInt__equals_impl_ffdoxg($this, other) {
    if (!(other instanceof UInt))
      return false;
    var tmp0_other_with_cast = other instanceof UInt ? other.z6_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_5();
    this.z6_1 = data;
  }
  UInt.prototype.b7 = function (other) {
    return UInt__compareTo_impl_yacclj_1(this.z6_1, other);
  };
  UInt.prototype.u6 = function (other) {
    return UInt__compareTo_impl_yacclj_2(this, other);
  };
  UInt.prototype.toString = function () {
    return UInt__toString_impl_dbgl21(this.z6_1);
  };
  UInt.prototype.hashCode = function () {
    return UInt__hashCode_impl_z2mhuw(this.z6_1);
  };
  UInt.prototype.equals = function (other) {
    return UInt__equals_impl_ffdoxg(this.z6_1, other);
  };
  UInt.$metadata$ = classMeta('UInt', [Comparable]);
  function toUInt(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4.c7());
  }
  function toUInt_0(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4);
  }
  function _ULong___init__impl__c78o9k(data) {
    return data;
  }
  function _ULong___get_data__impl__fggpzb($this) {
    return $this;
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.d7_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.e7_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.f7_1 = 8;
    this.g7_1 = 64;
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function ULong__compareTo_impl_38i7tu($this, other) {
    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
  }
  function ULong__compareTo_impl_38i7tu_0($this, other) {
    var tmp = $this.h7_1;
    return ULong__compareTo_impl_38i7tu(tmp, other instanceof ULong ? other.h7_1 : THROW_CCE());
  }
  function ULong__plus_impl_plxuny($this, other) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(other)).a7(new Long(-1, 0)));
      }
      var tmp0_plus = tmp$ret$0;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).f5(_ULong___get_data__impl__fggpzb(tmp0_plus)));
    }
    return tmp$ret$1;
  }
  function ULong__plus_impl_plxuny_0($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).f5(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__times_impl_ffj6l4($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).e5(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__div_impl_iugpv1($this, other) {
    return ulongDivide($this, other);
  }
  function ULong__toLong_impl_i1ol5n($this) {
    return _ULong___get_data__impl__fggpzb($this);
  }
  function ULong__toString_impl_f9au7k($this) {
    return ulongToString(_ULong___get_data__impl__fggpzb($this));
  }
  function ULong__hashCode_impl_6hv2lb($this) {
    return $this.hashCode();
  }
  function ULong__equals_impl_o0gnyb($this, other) {
    if (!(other instanceof ULong))
      return false;
    var tmp0_other_with_cast = other instanceof ULong ? other.h7_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_6();
    this.h7_1 = data;
  }
  ULong.prototype.i7 = function (other) {
    return ULong__compareTo_impl_38i7tu(this.h7_1, other);
  };
  ULong.prototype.u6 = function (other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  };
  ULong.prototype.toString = function () {
    return ULong__toString_impl_f9au7k(this.h7_1);
  };
  ULong.prototype.hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.h7_1);
  };
  ULong.prototype.equals = function (other) {
    return ULong__equals_impl_o0gnyb(this.h7_1, other);
  };
  ULong.$metadata$ = classMeta('ULong', [Comparable]);
  function toULong(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(_this__u8e3s4);
  }
  function toULong_0(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(toLong_0(_this__u8e3s4));
  }
  function _UShort___init__impl__jigrne(data) {
    return data;
  }
  function _UShort___get_data__impl__g0245($this) {
    return $this;
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.j7_1 = _UShort___init__impl__jigrne(0);
    this.k7_1 = _UShort___init__impl__jigrne(-1);
    this.l7_1 = 2;
    this.m7_1 = 16;
  }
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function UShort__compareTo_impl_1pfgyc($this, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245($this) & 65535;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _UShort___get_data__impl__g0245(other) & 65535;
    }
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UShort__compareTo_impl_1pfgyc_0($this, other) {
    var tmp = $this.n7_1;
    return UShort__compareTo_impl_1pfgyc(tmp, other instanceof UShort ? other.n7_1 : THROW_CCE());
  }
  function UShort__toShort_impl_fqwi31($this) {
    return _UShort___get_data__impl__g0245($this);
  }
  function UShort__toInt_impl_72bkww($this) {
    return _UShort___get_data__impl__g0245($this) & 65535;
  }
  function UShort__toUInt_impl_581pf5($this) {
    return _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245($this) & 65535);
  }
  function UShort__toString_impl_edaoee($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245($this) & 65535;
    }
    return tmp$ret$0.toString();
  }
  function UShort__hashCode_impl_ywngrv($this) {
    return $this;
  }
  function UShort__equals_impl_7t9pdz($this, other) {
    if (!(other instanceof UShort))
      return false;
    var tmp0_other_with_cast = other instanceof UShort ? other.n7_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UShort(data) {
    Companion_getInstance_7();
    this.n7_1 = data;
  }
  UShort.prototype.o7 = function (other) {
    return UShort__compareTo_impl_1pfgyc(this.n7_1, other);
  };
  UShort.prototype.u6 = function (other) {
    return UShort__compareTo_impl_1pfgyc_0(this, other);
  };
  UShort.prototype.toString = function () {
    return UShort__toString_impl_edaoee(this.n7_1);
  };
  UShort.prototype.hashCode = function () {
    return UShort__hashCode_impl_ywngrv(this.n7_1);
  };
  UShort.prototype.equals = function (other) {
    return UShort__equals_impl_7t9pdz(this.n7_1, other);
  };
  UShort.$metadata$ = classMeta('UShort', [Comparable]);
  function toUShort(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(toShort_0(_this__u8e3s4));
  }
  function toUShort_0(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(_this__u8e3s4);
  }
  function toUInt_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUIntOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULong_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toULongOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUByte_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUByteOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUShort_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUShortOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULongOrNull(_this__u8e3s4) {
    return toULongOrNull_0(_this__u8e3s4, 10);
  }
  function toUIntOrNull(_this__u8e3s4) {
    return toUIntOrNull_0(_this__u8e3s4, 10);
  }
  function toUByteOrNull(_this__u8e3s4) {
    return toUByteOrNull_0(_this__u8e3s4, 10);
  }
  function toUShortOrNull(_this__u8e3s4) {
    return toUShortOrNull_0(_this__u8e3s4, 10);
  }
  function toULongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_6();
    var limit = _ULong___init__impl__c78o9k(new Long(-1, -1));
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43))))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _ULong___init__impl__c78o9k(new Long(477218588, 119304647));
    var limitBeforeMul = limitForMaxRadix;
    var tmp$ret$0;
    {
      tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(radix));
    }
    var uradix = tmp$ret$0;
    var result = _ULong___init__impl__c78o9k(new Long(0, 0));
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        var tmp$ret$1;
        {
          var tmp0_compareTo = result;
          var tmp1_compareTo = limitBeforeMul;
          tmp$ret$1 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
        }
        if (tmp$ret$1 > 0) {
          if (equals_1(limitBeforeMul, limitForMaxRadix)) {
            var tmp$ret$2;
            {
              tmp$ret$2 = ulongDivide(limit, uradix);
            }
            limitBeforeMul = tmp$ret$2;
            var tmp$ret$3;
            {
              var tmp2_compareTo = result;
              var tmp3_compareTo = limitBeforeMul;
              tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo));
            }
            if (tmp$ret$3 > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$4;
        {
          var tmp4_times = result;
          tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).e5(_ULong___get_data__impl__fggpzb(uradix)));
        }
        result = tmp$ret$4;
        var beforeAdding = result;
        var tmp$ret$8;
        {
          var tmp5_plus = result;
          var tmp$ret$5;
          {
            tmp$ret$5 = _UInt___init__impl__l7qpdl(digit);
          }
          var tmp6_plus = tmp$ret$5;
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              tmp$ret$6 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp6_plus)).a7(new Long(-1, 0)));
            }
            var tmp0_plus = tmp$ret$6;
            tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).f5(_ULong___get_data__impl__fggpzb(tmp0_plus)));
          }
          tmp$ret$8 = tmp$ret$7;
        }
        result = tmp$ret$8;
        var tmp$ret$9;
        {
          var tmp7_compareTo = result;
          tmp$ret$9 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp7_compareTo), _ULong___get_data__impl__fggpzb(beforeAdding));
        }
        if (tmp$ret$9 < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_5();
    var limit = _UInt___init__impl__l7qpdl(-1);
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43))))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _UInt___init__impl__l7qpdl(119304647);
    var limitBeforeMul = limitForMaxRadix;
    var tmp$ret$0;
    {
      tmp$ret$0 = _UInt___init__impl__l7qpdl(radix);
    }
    var uradix = tmp$ret$0;
    var result = _UInt___init__impl__l7qpdl(0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        var tmp$ret$1;
        {
          var tmp0_compareTo = result;
          var tmp1_compareTo = limitBeforeMul;
          tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo));
        }
        if (tmp$ret$1 > 0) {
          if (limitBeforeMul === limitForMaxRadix) {
            var tmp$ret$2;
            {
              tmp$ret$2 = uintDivide(limit, uradix);
            }
            limitBeforeMul = tmp$ret$2;
            var tmp$ret$3;
            {
              var tmp2_compareTo = result;
              var tmp3_compareTo = limitBeforeMul;
              tmp$ret$3 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo));
            }
            if (tmp$ret$3 > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$4;
        {
          var tmp4_times = result;
          tmp$ret$4 = _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw(tmp4_times), _UInt___get_data__impl__f0vqqw(uradix)));
        }
        result = tmp$ret$4;
        var beforeAdding = result;
        var tmp$ret$6;
        {
          var tmp5_plus = result;
          var tmp$ret$5;
          {
            tmp$ret$5 = _UInt___init__impl__l7qpdl(digit);
          }
          var tmp6_plus = tmp$ret$5;
          tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_plus) + _UInt___get_data__impl__f0vqqw(tmp6_plus) | 0);
        }
        result = tmp$ret$6;
        var tmp$ret$7;
        {
          var tmp7_compareTo = result;
          tmp$ret$7 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp7_compareTo), _UInt___get_data__impl__f0vqqw(beforeAdding));
        }
        if (tmp$ret$7 < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    var tmp$ret$2;
    {
      Companion_getInstance_4();
      var tmp0_compareTo = _UByte___init__impl__g9hnc4(-1);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(tmp0_compareTo) & 255);
        }
        var tmp0_compareTo_0 = tmp$ret$0;
        tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0));
      }
      tmp$ret$2 = tmp$ret$1;
    }
    if (tmp$ret$2 > 0)
      return null;
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_toUByte = _UInt___get_data__impl__f0vqqw(int);
        tmp$ret$3 = _UByte___init__impl__g9hnc4(toByte_0(tmp0_toUByte));
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  }
  function toUShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    var tmp$ret$2;
    {
      Companion_getInstance_7();
      var tmp0_compareTo = _UShort___init__impl__jigrne(-1);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(tmp0_compareTo) & 65535);
        }
        var tmp0_compareTo_0 = tmp$ret$0;
        tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0));
      }
      tmp$ret$2 = tmp$ret$1;
    }
    if (tmp$ret$2 > 0)
      return null;
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_toUShort = _UInt___get_data__impl__f0vqqw(int);
        tmp$ret$3 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  }
  function uintCompare(v1, v2) {
    return compareTo_0(v1 ^ IntCompanionObject_getInstance().v_1, v2 ^ IntCompanionObject_getInstance().v_1);
  }
  function uintDivide(v1, v2) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw(v1)).a7(new Long(-1, 0));
      }
      var tmp = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = toLong_0(_UInt___get_data__impl__f0vqqw(v2)).a7(new Long(-1, 0));
      }
      var tmp0_toUInt = tmp.d5(tmp$ret$1);
      tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.c7());
    }
    return tmp$ret$2;
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_15();
    var tmp = v1.p7(new Long(0, -2147483648));
    Companion_getInstance_15();
    return tmp.g1(v2.p7(new Long(0, -2147483648)));
  }
  function ulongDivide(v1, v2) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(v1);
    }
    var dividend = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _ULong___get_data__impl__fggpzb(v2);
    }
    var divisor = tmp$ret$1;
    if (divisor.g1(new Long(0, 0)) < 0) {
      var tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2));
      }
      if (tmp$ret$2 < 0) {
        tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
      }
      return tmp;
    }
    if (dividend.g1(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.d5(divisor));
    }
    var quotient = dividend.q7(1).d5(divisor).r7(1);
    var rem = dividend.g5(quotient.e5(divisor));
    var tmp$ret$4;
    {
      var tmp_0;
      var tmp$ret$3;
      {
        var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
        var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
        tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
      }
      if (tmp$ret$3 >= 0) {
        tmp_0 = 1;
      } else {
        tmp_0 = 0;
      }
      var tmp2_plus = tmp_0;
      tmp$ret$4 = quotient.f5(toLong_0(tmp2_plus));
    }
    return _ULong___init__impl__c78o9k(tmp$ret$4);
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.g1(new Long(0, 0)) >= 0)
      return toString_3(v, base);
    var tmp$ret$0;
    {
      var tmp0_div = v.q7(1);
      tmp$ret$0 = tmp0_div.d5(toLong_0(base));
    }
    var quotient = tmp$ret$0.r7(1);
    var tmp$ret$1;
    {
      var tmp1_times = quotient;
      tmp$ret$1 = tmp1_times.e5(toLong_0(base));
    }
    var rem = v.g5(tmp$ret$1);
    if (rem.g1(toLong_0(base)) >= 0) {
      var tmp$ret$2;
      {
        var tmp2_minus = rem;
        tmp$ret$2 = tmp2_minus.g5(toLong_0(base));
      }
      rem = tmp$ret$2;
      var tmp$ret$3;
      {
        var tmp3_plus = quotient;
        tmp$ret$3 = tmp3_plus.f5(new Long(1, 0));
      }
      quotient = tmp$ret$3;
    }
    return toString_3(quotient, base) + toString_3(rem, base);
  }
  function Annotation() {
  }
  Annotation.$metadata$ = interfaceMeta('Annotation');
  function CharSequence() {
  }
  CharSequence.$metadata$ = interfaceMeta('CharSequence');
  function Comparable() {
  }
  Comparable.$metadata$ = interfaceMeta('Comparable');
  function Iterator() {
  }
  Iterator.$metadata$ = interfaceMeta('Iterator');
  function MutableIterator() {
  }
  MutableIterator.$metadata$ = interfaceMeta('MutableIterator', [Iterator]);
  function ListIterator() {
  }
  ListIterator.$metadata$ = interfaceMeta('ListIterator', [Iterator]);
  function MutableListIterator() {
  }
  MutableListIterator.$metadata$ = interfaceMeta('MutableListIterator', [ListIterator, MutableIterator]);
  function Number_0() {
  }
  Number_0.$metadata$ = classMeta('Number');
  function IntIterator() {
  }
  IntIterator.prototype.f = function () {
    return this.w7();
  };
  IntIterator.$metadata$ = classMeta('IntIterator', [Iterator]);
  function CharIterator() {
  }
  CharIterator.prototype.x7 = function () {
    return this.y7();
  };
  CharIterator.prototype.f = function () {
    return new Char_0(this.x7());
  };
  CharIterator.$metadata$ = classMeta('CharIterator', [Iterator]);
  function IntProgressionIterator(first, last, step) {
    IntIterator.call(this);
    this.z7_1 = step;
    this.a8_1 = last;
    this.b8_1 = this.z7_1 > 0 ? first <= last : first >= last;
    this.c8_1 = this.b8_1 ? first : this.a8_1;
  }
  IntProgressionIterator.prototype.e = function () {
    return this.b8_1;
  };
  IntProgressionIterator.prototype.w7 = function () {
    var value = this.c8_1;
    if (value === this.a8_1) {
      if (!this.b8_1)
        throw NoSuchElementException_init_$Create$();
      this.b8_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.c8_1 = tmp0_this.c8_1 + this.z7_1 | 0;
    }
    return value;
  };
  IntProgressionIterator.$metadata$ = classMeta('IntProgressionIterator', undefined, undefined, undefined, undefined, IntIterator.prototype);
  function CharProgressionIterator(first, last, step) {
    CharIterator.call(this);
    this.d8_1 = step;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(last);
    }
    tmp.e8_1 = tmp$ret$0;
    this.f8_1 = this.d8_1 > 0 ? Char__compareTo_impl_ypi4mb(first, last) <= 0 : Char__compareTo_impl_ypi4mb(first, last) >= 0;
    var tmp_0 = this;
    var tmp_1;
    if (this.f8_1) {
      var tmp$ret$1;
      {
        tmp$ret$1 = Char__toInt_impl_vasixd(first);
      }
      tmp_1 = tmp$ret$1;
    } else {
      tmp_1 = this.e8_1;
    }
    tmp_0.g8_1 = tmp_1;
  }
  CharProgressionIterator.prototype.e = function () {
    return this.f8_1;
  };
  CharProgressionIterator.prototype.y7 = function () {
    var value = this.g8_1;
    if (value === this.e8_1) {
      if (!this.f8_1)
        throw NoSuchElementException_init_$Create$();
      this.f8_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.g8_1 = tmp0_this.g8_1 + this.d8_1 | 0;
    }
    return numberToChar(value);
  };
  CharProgressionIterator.$metadata$ = classMeta('CharProgressionIterator', undefined, undefined, undefined, undefined, CharIterator.prototype);
  function Companion_8() {
    Companion_instance_8 = this;
  }
  Companion_8.prototype.c1 = function (rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  };
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function IntProgression(start, endInclusive, step) {
    Companion_getInstance_8();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().v_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.z_1 = start;
    this.a1_1 = getProgressionLastElement(start, endInclusive, step);
    this.b1_1 = step;
  }
  IntProgression.prototype.j6 = function () {
    return this.z_1;
  };
  IntProgression.prototype.h8 = function () {
    return this.a1_1;
  };
  IntProgression.prototype.d = function () {
    return new IntProgressionIterator(this.z_1, this.a1_1, this.b1_1);
  };
  IntProgression.prototype.m = function () {
    return this.b1_1 > 0 ? this.z_1 > this.a1_1 : this.z_1 < this.a1_1;
  };
  IntProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.m() ? other.m() : false) ? true : (this.z_1 === other.z_1 ? this.a1_1 === other.a1_1 : false) ? this.b1_1 === other.b1_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntProgression.prototype.hashCode = function () {
    return this.m() ? -1 : imul(31, imul(31, this.z_1) + this.a1_1 | 0) + this.b1_1 | 0;
  };
  IntProgression.prototype.toString = function () {
    return this.b1_1 > 0 ? '' + this.z_1 + '..' + this.a1_1 + ' step ' + this.b1_1 : '' + this.z_1 + ' downTo ' + this.a1_1 + ' step ' + (-this.b1_1 | 0);
  };
  IntProgression.$metadata$ = classMeta('IntProgression', [Iterable_0]);
  function Companion_9() {
    Companion_instance_9 = this;
  }
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function CharProgression(start, endInclusive, step) {
    Companion_getInstance_9();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().v_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.i8_1 = start;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(start);
    }
    var tmp_0 = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = Char__toInt_impl_vasixd(endInclusive);
    }
    tmp.j8_1 = numberToChar(getProgressionLastElement(tmp_0, tmp$ret$1, step));
    this.k8_1 = step;
  }
  CharProgression.prototype.l8 = function () {
    return this.i8_1;
  };
  CharProgression.prototype.m8 = function () {
    return this.j8_1;
  };
  CharProgression.prototype.d = function () {
    return new CharProgressionIterator(this.i8_1, this.j8_1, this.k8_1);
  };
  CharProgression.prototype.m = function () {
    return this.k8_1 > 0 ? Char__compareTo_impl_ypi4mb(this.i8_1, this.j8_1) > 0 : Char__compareTo_impl_ypi4mb(this.i8_1, this.j8_1) < 0;
  };
  CharProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharProgression) {
      tmp = (this.m() ? other.m() : false) ? true : (equals_1(new Char_0(this.i8_1), new Char_0(other.i8_1)) ? equals_1(new Char_0(this.j8_1), new Char_0(other.j8_1)) : false) ? this.k8_1 === other.k8_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  CharProgression.prototype.hashCode = function () {
    var tmp;
    if (this.m()) {
      tmp = -1;
    } else {
      var tmp$ret$0;
      {
        var tmp0__get_code__88qj9g = this.i8_1;
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      }
      var tmp_0 = imul(31, tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1__get_code__adl84j = this.j8_1;
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = imul(31, tmp_0 + tmp$ret$1 | 0) + this.k8_1 | 0;
    }
    return tmp;
  };
  CharProgression.prototype.toString = function () {
    return this.k8_1 > 0 ? '' + new Char_0(this.i8_1) + '..' + new Char_0(this.j8_1) + ' step ' + this.k8_1 : '' + new Char_0(this.i8_1) + ' downTo ' + new Char_0(this.j8_1) + ' step ' + (-this.k8_1 | 0);
  };
  CharProgression.$metadata$ = classMeta('CharProgression', [Iterable_0]);
  function ClosedRange() {
  }
  ClosedRange.$metadata$ = interfaceMeta('ClosedRange');
  function Companion_10() {
    Companion_instance_10 = this;
    this.u_1 = new IntRange(1, 0);
  }
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_10();
    IntProgression.call(this, start, endInclusive, 1);
  }
  IntRange.prototype.p4 = function () {
    return this.j6();
  };
  IntRange.prototype.n4 = function () {
    return this.h8();
  };
  IntRange.prototype.n8 = function (value) {
    return this.j6() <= value ? value <= this.h8() : false;
  };
  IntRange.prototype.d1 = function (value) {
    return this.n8(typeof value === 'number' ? value : THROW_CCE());
  };
  IntRange.prototype.m = function () {
    return this.j6() > this.h8();
  };
  IntRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.m() ? other.m() : false) ? true : this.j6() === other.j6() ? this.h8() === other.h8() : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntRange.prototype.hashCode = function () {
    return this.m() ? -1 : imul(31, this.j6()) + this.h8() | 0;
  };
  IntRange.prototype.toString = function () {
    return '' + this.j6() + '..' + this.h8();
  };
  IntRange.$metadata$ = classMeta('IntRange', [ClosedRange], undefined, undefined, undefined, IntProgression.prototype);
  function Companion_11() {
    Companion_instance_11 = this;
    this.o8_1 = new CharRange(_Char___init__impl__6a9atx(1), _Char___init__impl__6a9atx(0));
  }
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function CharRange(start, endInclusive) {
    Companion_getInstance_11();
    CharProgression.call(this, start, endInclusive, 1);
  }
  CharRange.prototype.s8 = function () {
    return this.l8();
  };
  CharRange.prototype.p4 = function () {
    return new Char_0(this.s8());
  };
  CharRange.prototype.t8 = function () {
    return this.m8();
  };
  CharRange.prototype.n4 = function () {
    return new Char_0(this.t8());
  };
  CharRange.prototype.u8 = function (value) {
    return Char__compareTo_impl_ypi4mb(this.l8(), value) <= 0 ? Char__compareTo_impl_ypi4mb(value, this.m8()) <= 0 : false;
  };
  CharRange.prototype.d1 = function (value) {
    return this.u8(value instanceof Char_0 ? value.i1_1 : THROW_CCE());
  };
  CharRange.prototype.m = function () {
    return Char__compareTo_impl_ypi4mb(this.l8(), this.m8()) > 0;
  };
  CharRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof CharRange) {
      tmp = (this.m() ? other.m() : false) ? true : equals_1(new Char_0(this.l8()), new Char_0(other.l8())) ? equals_1(new Char_0(this.m8()), new Char_0(other.m8())) : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  CharRange.prototype.hashCode = function () {
    var tmp;
    if (this.m()) {
      tmp = -1;
    } else {
      var tmp$ret$0;
      {
        var tmp0__get_code__88qj9g = this.l8();
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      }
      var tmp_0 = imul(31, tmp$ret$0);
      var tmp$ret$1;
      {
        var tmp1__get_code__adl84j = this.m8();
        tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      }
      tmp = tmp_0 + tmp$ret$1 | 0;
    }
    return tmp;
  };
  CharRange.prototype.toString = function () {
    return '' + new Char_0(this.l8()) + '..' + new Char_0(this.m8());
  };
  CharRange.$metadata$ = classMeta('CharRange', [ClosedRange], undefined, undefined, undefined, CharProgression.prototype);
  function Unit() {
    Unit_instance = this;
  }
  Unit.prototype.toString = function () {
    return 'kotlin.Unit';
  };
  Unit.$metadata$ = objectMeta('Unit');
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function getProgressionLastElement(start, end, step) {
    var tmp;
    if (step > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
    } else if (step < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod = a % b | 0;
    return mod >= 0 ? mod : mod + b | 0;
  }
  function ByteCompanionObject() {
    ByteCompanionObject_instance = this;
    this.h5_1 = -128;
    this.i5_1 = 127;
    this.j5_1 = 1;
    this.k5_1 = 8;
  }
  ByteCompanionObject.prototype.v8 = function () {
    return this.h5_1;
  };
  ByteCompanionObject.prototype.w8 = function () {
    return this.i5_1;
  };
  ByteCompanionObject.prototype.x8 = function () {
    return this.j5_1;
  };
  ByteCompanionObject.prototype.y8 = function () {
    return this.k5_1;
  };
  ByteCompanionObject.$metadata$ = objectMeta('ByteCompanionObject');
  Object.defineProperty(ByteCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.v8
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.w8
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ByteCompanionObject.prototype.x8
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ByteCompanionObject.prototype.y8
  });
  var ByteCompanionObject_instance;
  function ByteCompanionObject_getInstance() {
    if (ByteCompanionObject_instance == null)
      new ByteCompanionObject();
    return ByteCompanionObject_instance;
  }
  function ShortCompanionObject() {
    ShortCompanionObject_instance = this;
    this.l5_1 = -32768;
    this.m5_1 = 32767;
    this.n5_1 = 2;
    this.o5_1 = 16;
  }
  ShortCompanionObject.prototype.v8 = function () {
    return this.l5_1;
  };
  ShortCompanionObject.prototype.w8 = function () {
    return this.m5_1;
  };
  ShortCompanionObject.prototype.x8 = function () {
    return this.n5_1;
  };
  ShortCompanionObject.prototype.y8 = function () {
    return this.o5_1;
  };
  ShortCompanionObject.$metadata$ = objectMeta('ShortCompanionObject');
  Object.defineProperty(ShortCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.v8
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.w8
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ShortCompanionObject.prototype.x8
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ShortCompanionObject.prototype.y8
  });
  var ShortCompanionObject_instance;
  function ShortCompanionObject_getInstance() {
    if (ShortCompanionObject_instance == null)
      new ShortCompanionObject();
    return ShortCompanionObject_instance;
  }
  function IntCompanionObject() {
    IntCompanionObject_instance = this;
    this.v_1 = -2147483648;
    this.w_1 = 2147483647;
    this.x_1 = 4;
    this.y_1 = 32;
  }
  IntCompanionObject.prototype.v8 = function () {
    return this.v_1;
  };
  IntCompanionObject.prototype.w8 = function () {
    return this.w_1;
  };
  IntCompanionObject.prototype.x8 = function () {
    return this.x_1;
  };
  IntCompanionObject.prototype.y8 = function () {
    return this.y_1;
  };
  IntCompanionObject.$metadata$ = objectMeta('IntCompanionObject');
  Object.defineProperty(IntCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.v8
  });
  Object.defineProperty(IntCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.w8
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: IntCompanionObject.prototype.x8
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: IntCompanionObject.prototype.y8
  });
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject() {
    FloatCompanionObject_instance = this;
    this.z8_1 = 1.4E-45;
    this.a9_1 = 3.4028235E38;
    this.b9_1 = Infinity;
    this.c9_1 = -Infinity;
    this.d9_1 = NaN;
    this.e9_1 = 4;
    this.f9_1 = 32;
  }
  FloatCompanionObject.prototype.v8 = function () {
    return this.z8_1;
  };
  FloatCompanionObject.prototype.w8 = function () {
    return this.a9_1;
  };
  FloatCompanionObject.prototype.g9 = function () {
    return this.b9_1;
  };
  FloatCompanionObject.prototype.h9 = function () {
    return this.c9_1;
  };
  FloatCompanionObject.prototype.i9 = function () {
    return this.d9_1;
  };
  FloatCompanionObject.prototype.x8 = function () {
    return this.e9_1;
  };
  FloatCompanionObject.prototype.y8 = function () {
    return this.f9_1;
  };
  FloatCompanionObject.$metadata$ = objectMeta('FloatCompanionObject');
  Object.defineProperty(FloatCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.v8
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.w8
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.g9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.h9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: FloatCompanionObject.prototype.i9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: FloatCompanionObject.prototype.x8
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: FloatCompanionObject.prototype.y8
  });
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject() {
    DoubleCompanionObject_instance = this;
    this.j9_1 = 4.9E-324;
    this.k9_1 = 1.7976931348623157E308;
    this.l9_1 = Infinity;
    this.m9_1 = -Infinity;
    this.n9_1 = NaN;
    this.o9_1 = 8;
    this.p9_1 = 64;
  }
  DoubleCompanionObject.prototype.v8 = function () {
    return this.j9_1;
  };
  DoubleCompanionObject.prototype.w8 = function () {
    return this.k9_1;
  };
  DoubleCompanionObject.prototype.g9 = function () {
    return this.l9_1;
  };
  DoubleCompanionObject.prototype.h9 = function () {
    return this.m9_1;
  };
  DoubleCompanionObject.prototype.i9 = function () {
    return this.n9_1;
  };
  DoubleCompanionObject.prototype.x8 = function () {
    return this.o9_1;
  };
  DoubleCompanionObject.prototype.y8 = function () {
    return this.p9_1;
  };
  DoubleCompanionObject.$metadata$ = objectMeta('DoubleCompanionObject');
  Object.defineProperty(DoubleCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.v8
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.w8
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.g9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.h9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: DoubleCompanionObject.prototype.i9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: DoubleCompanionObject.prototype.x8
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: DoubleCompanionObject.prototype.y8
  });
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  StringCompanionObject.$metadata$ = objectMeta('StringCompanionObject');
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function BooleanCompanionObject() {
    BooleanCompanionObject_instance = this;
  }
  BooleanCompanionObject.$metadata$ = objectMeta('BooleanCompanionObject');
  var BooleanCompanionObject_instance;
  function BooleanCompanionObject_getInstance() {
    if (BooleanCompanionObject_instance == null)
      new BooleanCompanionObject();
    return BooleanCompanionObject_instance;
  }
  function Comparator() {
  }
  Comparator.$metadata$ = interfaceMeta('Comparator');
  function setOf_0(element) {
    return hashSetOf([element]);
  }
  function toTypedArray(_this__u8e3s4) {
    return copyToArray(_this__u8e3s4);
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }
    return index;
  }
  function sortWith(_this__u8e3s4, comparator) {
    collectionsSort(_this__u8e3s4, comparator);
  }
  function listOf_0(element) {
    return arrayListOf_0([element]);
  }
  function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().p1(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().p1(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (isView(destination) ? isView(source) : false) {
      var tmp$ret$0;
      {
        tmp$ret$0 = source;
      }
      var subrange = tmp$ret$0.subarray(startIndex, endIndex);
      var tmp$ret$1;
      {
        tmp$ret$1 = destination;
      }
      tmp$ret$1.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function mapOf_0(pair) {
    return hashMapOf([pair]);
  }
  function toSingletonMapOrSelf(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function copyToArray(collection) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = collection;
    }
    if (tmp$ret$0.toArray !== undefined) {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = collection;
        }
        var tmp0_unsafeCast = tmp$ret$1.toArray();
        tmp$ret$2 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$4;
      {
        var tmp1_unsafeCast = copyToArrayImpl(collection);
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_unsafeCast;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function collectionsSort(list, comparator) {
    if (list.g() <= 1)
      return Unit_getInstance();
    var array = copyToArray(list);
    sortArrayWith(array, comparator);
    var inductionVariable = 0;
    var last = array.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        list.q9(i, array[i]);
      }
       while (inductionVariable < last);
  }
  function copyToArrayImpl(collection) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    var array = tmp$ret$0;
    var iterator = collection.d();
    while (iterator.e()) {
      var tmp$ret$1;
      {
        tmp$ret$1 = array;
      }
      tmp$ret$1.push(iterator.f());
    }
    return array;
  }
  function toSingletonMap(_this__u8e3s4) {
    return toMutableMap(_this__u8e3s4);
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  AbstractMutableCollection.prototype.k = function (elements) {
    this.r9();
    var modified = false;
    var tmp0_iterator = elements.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      if (this.a(element))
        modified = true;
    }
    return modified;
  };
  AbstractMutableCollection.prototype.s9 = function () {
    this.r9();
    var iterator = this.d();
    while (iterator.e()) {
      iterator.f();
      iterator.v7();
    }
  };
  AbstractMutableCollection.prototype.toJSON = function () {
    return this.toArray();
  };
  AbstractMutableCollection.prototype.r9 = function () {
  };
  AbstractMutableCollection.$metadata$ = classMeta('AbstractMutableCollection', [MutableCollection], undefined, undefined, undefined, AbstractCollection.prototype);
  function IteratorImpl($outer) {
    this.v9_1 = $outer;
    this.t9_1 = 0;
    this.u9_1 = -1;
  }
  IteratorImpl.prototype.w9 = function (_set____db54di) {
    this.t9_1 = _set____db54di;
  };
  IteratorImpl.prototype.e = function () {
    return this.t9_1 < this.v9_1.g();
  };
  IteratorImpl.prototype.f = function () {
    if (!this.e())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp0_this = this;
    var tmp1 = tmp0_this.t9_1;
    tmp0_this.t9_1 = tmp1 + 1 | 0;
    tmp.u9_1 = tmp1;
    return this.v9_1.l(this.u9_1);
  };
  IteratorImpl.prototype.v7 = function () {
    {
      var tmp0_check = !(this.u9_1 === -1);
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Call next() or previous() before removing element from the iterator.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_2(message));
      }
    }
    this.v9_1.y9(this.u9_1);
    this.t9_1 = this.u9_1;
    this.u9_1 = -1;
  };
  IteratorImpl.$metadata$ = classMeta('IteratorImpl', [MutableIterator]);
  function ListIteratorImpl($outer, index) {
    this.ca_1 = $outer;
    IteratorImpl.call(this, $outer);
    Companion_getInstance().o1(index, this.ca_1.g());
    this.w9(index);
  }
  ListIteratorImpl.$metadata$ = classMeta('ListIteratorImpl', [MutableListIterator], undefined, undefined, undefined, IteratorImpl.prototype);
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this.x9_1 = 0;
  }
  AbstractMutableList.prototype.da = function (_set____db54di) {
    this.x9_1 = _set____db54di;
  };
  AbstractMutableList.prototype.ea = function () {
    return this.x9_1;
  };
  AbstractMutableList.prototype.a = function (element) {
    this.r9();
    this.fa(this.g(), element);
    return true;
  };
  AbstractMutableList.prototype.s9 = function () {
    this.r9();
    this.ga(0, this.g());
  };
  AbstractMutableList.prototype.d = function () {
    return new IteratorImpl(this);
  };
  AbstractMutableList.prototype.l1 = function (element) {
    return this.ha(element) >= 0;
  };
  AbstractMutableList.prototype.ha = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex_0(this);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.l(index), element)) {
          return index;
        }
      }
       while (!(index === last));
    return -1;
  };
  AbstractMutableList.prototype.ia = function (index) {
    return new ListIteratorImpl(this, index);
  };
  AbstractMutableList.prototype.ga = function (fromIndex, toIndex) {
    var iterator = this.ia(fromIndex);
    {
      var tmp0_repeat = toIndex - fromIndex | 0;
      {
      }
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          {
            iterator.f();
            iterator.v7();
          }
        }
         while (inductionVariable < tmp0_repeat);
    }
  };
  AbstractMutableList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    return Companion_getInstance().s1(this, other);
  };
  AbstractMutableList.prototype.hashCode = function () {
    return Companion_getInstance().r1(this);
  };
  AbstractMutableList.$metadata$ = classMeta('AbstractMutableList', [MutableList], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap$keys$1$iterator$1($entryIterator) {
    this.ja_1 = $entryIterator;
  }
  AbstractMutableMap$keys$1$iterator$1.prototype.e = function () {
    return this.ja_1.e();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.f = function () {
    return this.ja_1.f().s();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.v7 = function () {
    return this.ja_1.v7();
  };
  AbstractMutableMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function AbstractMutableMap$values$1$iterator$1($entryIterator) {
    this.ka_1 = $entryIterator;
  }
  AbstractMutableMap$values$1$iterator$1.prototype.e = function () {
    return this.ka_1.e();
  };
  AbstractMutableMap$values$1$iterator$1.prototype.f = function () {
    return this.ka_1.f().t();
  };
  AbstractMutableMap$values$1$iterator$1.prototype.v7 = function () {
    return this.ka_1.v7();
  };
  AbstractMutableMap$values$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function SimpleEntry(key, value) {
    this.la_1 = key;
    this.ma_1 = value;
  }
  SimpleEntry.prototype.s = function () {
    return this.la_1;
  };
  SimpleEntry.prototype.t = function () {
    return this.ma_1;
  };
  SimpleEntry.prototype.na = function (newValue) {
    var oldValue = this.ma_1;
    this.ma_1 = newValue;
    return oldValue;
  };
  SimpleEntry.prototype.hashCode = function () {
    return Companion_getInstance_0().v1(this);
  };
  SimpleEntry.prototype.toString = function () {
    return Companion_getInstance_0().w1(this);
  };
  SimpleEntry.prototype.equals = function (other) {
    return Companion_getInstance_0().x1(this, other);
  };
  SimpleEntry.$metadata$ = classMeta('SimpleEntry', [MutableEntry]);
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  AbstractEntrySet.prototype.l1 = function (element) {
    return this.oa(element);
  };
  AbstractEntrySet.$metadata$ = classMeta('AbstractEntrySet', undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$keys$1(this$0) {
    this.pa_1 = this$0;
    AbstractMutableSet.call(this);
  }
  AbstractMutableMap$keys$1.prototype.qa = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  AbstractMutableMap$keys$1.prototype.a = function (element) {
    return this.qa((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.s9 = function () {
    this.pa_1.s9();
  };
  AbstractMutableMap$keys$1.prototype.z1 = function (element) {
    return this.pa_1.c2(element);
  };
  AbstractMutableMap$keys$1.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.z1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.d = function () {
    var entryIterator = this.pa_1.r().d();
    return new AbstractMutableMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$keys$1.prototype.g = function () {
    return this.pa_1.g();
  };
  AbstractMutableMap$keys$1.prototype.r9 = function () {
    return this.pa_1.r9();
  };
  AbstractMutableMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$values$1(this$0) {
    this.va_1 = this$0;
    AbstractMutableCollection.call(this);
  }
  AbstractMutableMap$values$1.prototype.wa = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on values');
  };
  AbstractMutableMap$values$1.prototype.a = function (element) {
    return this.wa((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$values$1.prototype.f2 = function (element) {
    return this.va_1.g2(element);
  };
  AbstractMutableMap$values$1.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.f2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$values$1.prototype.d = function () {
    var entryIterator = this.va_1.r().d();
    return new AbstractMutableMap$values$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$values$1.prototype.g = function () {
    return this.va_1.g();
  };
  AbstractMutableMap$values$1.prototype.r9 = function () {
    return this.va_1.r9();
  };
  AbstractMutableMap$values$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.ta_1 = null;
    this.ua_1 = null;
  }
  AbstractMutableMap.prototype.s9 = function () {
    this.r().s9();
  };
  AbstractMutableMap.prototype.j2 = function () {
    if (this.ta_1 == null) {
      var tmp = this;
      tmp.ta_1 = new AbstractMutableMap$keys$1(this);
    }
    return ensureNotNull(this.ta_1);
  };
  AbstractMutableMap.prototype.b3 = function (from) {
    this.r9();
    var tmp$ret$0;
    {
      tmp$ret$0 = from.r().d();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var tmp1_loop_parameter = tmp0_iterator.f();
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_loop_parameter.s();
      }
      var key = tmp$ret$1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_loop_parameter.t();
      }
      var value = tmp$ret$2;
      this.c(key, value);
    }
  };
  AbstractMutableMap.prototype.k2 = function () {
    if (this.ua_1 == null) {
      var tmp = this;
      tmp.ua_1 = new AbstractMutableMap$values$1(this);
    }
    return ensureNotNull(this.ua_1);
  };
  AbstractMutableMap.prototype.xa = function (key) {
    this.r9();
    var iter = this.r().d();
    while (iter.e()) {
      var entry = iter.f();
      var k = entry.s();
      if (equals_1(key, k)) {
        var value = entry.t();
        iter.v7();
        return value;
      }
    }
    return null;
  };
  AbstractMutableMap.prototype.r9 = function () {
  };
  AbstractMutableMap.$metadata$ = classMeta('AbstractMutableMap', [MutableMap], undefined, undefined, undefined, AbstractMap.prototype);
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  AbstractMutableSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().m2(this, other);
  };
  AbstractMutableSet.prototype.hashCode = function () {
    return Companion_getInstance_1().l2(this);
  };
  AbstractMutableSet.$metadata$ = classMeta('AbstractMutableSet', [MutableSet], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function ArrayList_init_$Init$($this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    var tmp$ret$0;
    {
      tmp$ret$0 = copyToArray(elements);
    }
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, Object.create(ArrayList.prototype));
  }
  function rangeCheck($this, index) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance().n1(index, $this.g());
      }
      tmp$ret$0 = index;
    }
    return tmp$ret$0;
  }
  function insertionRangeCheck($this, index) {
    var tmp$ret$0;
    {
      {
      }
      {
        Companion_getInstance().o1(index, $this.g());
      }
      tmp$ret$0 = index;
    }
    return tmp$ret$0;
  }
  function ArrayList(array) {
    AbstractMutableList.call(this);
    this.i_1 = array;
    this.j_1 = false;
  }
  ArrayList.prototype.ya = function (minCapacity) {
  };
  ArrayList.prototype.g = function () {
    return this.i_1.length;
  };
  ArrayList.prototype.l = function (index) {
    var tmp = this.i_1[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.q9 = function (index, element) {
    this.r9();
    rangeCheck(this, index);
    var tmp$ret$0;
    {
      var tmp0_apply = this.i_1[index];
      {
      }
      {
        this.i_1[index] = element;
      }
      tmp$ret$0 = tmp0_apply;
    }
    var tmp = tmp$ret$0;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.a = function (element) {
    this.r9();
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.i_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.push(element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ea();
    tmp0_this.da(tmp1 + 1 | 0);
    return true;
  };
  ArrayList.prototype.fa = function (index, element) {
    this.r9();
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.i_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.splice(insertionRangeCheck(this, index), 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ea();
    tmp0_this.da(tmp1 + 1 | 0);
  };
  ArrayList.prototype.k = function (elements) {
    this.r9();
    if (elements.m())
      return false;
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp$ret$2;
    {
      var tmp0_plus = tmp0_this.i_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = copyToArray(elements);
      }
      var tmp1_plus = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_plus;
      }
      tmp$ret$2 = tmp$ret$1.concat(tmp1_plus);
    }
    tmp.i_1 = tmp$ret$2;
    var tmp1_this = this;
    var tmp2 = tmp1_this.ea();
    tmp1_this.da(tmp2 + 1 | 0);
    return true;
  };
  ArrayList.prototype.y9 = function (index) {
    this.r9();
    rangeCheck(this, index);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ea();
    tmp0_this.da(tmp1 + 1 | 0);
    var tmp;
    if (index === get_lastIndex_0(this)) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = this.i_1;
        tmp$ret$0 = tmp0_asDynamic;
      }
      tmp = tmp$ret$0.pop();
    } else {
      var tmp$ret$1;
      {
        var tmp1_asDynamic = this.i_1;
        tmp$ret$1 = tmp1_asDynamic;
      }
      tmp = tmp$ret$1.splice(index, 1)[0];
    }
    return tmp;
  };
  ArrayList.prototype.ga = function (fromIndex, toIndex) {
    this.r9();
    var tmp0_this = this;
    var tmp1 = tmp0_this.ea();
    tmp0_this.da(tmp1 + 1 | 0);
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.i_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    tmp$ret$0.splice(fromIndex, toIndex - fromIndex | 0);
  };
  ArrayList.prototype.s9 = function () {
    this.r9();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = [];
    }
    tmp.i_1 = tmp$ret$0;
    var tmp0_this = this;
    var tmp1 = tmp0_this.ea();
    tmp0_this.da(tmp1 + 1 | 0);
  };
  ArrayList.prototype.ha = function (element) {
    return indexOf(this.i_1, element);
  };
  ArrayList.prototype.toString = function () {
    return arrayToString(this.i_1);
  };
  ArrayList.prototype.za = function () {
    return [].slice.call(this.i_1);
  };
  ArrayList.prototype.toArray = function () {
    return this.za();
  };
  ArrayList.prototype.r9 = function () {
    if (this.j_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  ArrayList.$metadata$ = classMeta('ArrayList', [MutableList, RandomAccess], undefined, undefined, undefined, AbstractMutableList.prototype);
  var _stableSortingIsSupported;
  function sortArrayWith(array, comparator) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArrayWith$lambda(comparator);
      var tmp$ret$0;
      {
        tmp$ret$0 = array;
      }
      tmp$ret$0.sort(comparison);
    } else {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          tmp$ret$1 = array;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      mergeSort(tmp$ret$2, 0, get_lastIndex(array), comparator);
    }
  }
  function getStableSortingIsSupported() {
    var tmp0_safe_receiver = _stableSortingIsSupported;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return tmp0_safe_receiver;
      }
    }
    _stableSortingIsSupported = false;
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = [];
      tmp$ret$1 = tmp0_unsafeCast;
    }
    var array = tmp$ret$1;
    var inductionVariable = 0;
    if (inductionVariable < 600)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        {
          tmp$ret$2 = array;
        }
        tmp$ret$2.push(index);
      }
       while (inductionVariable < 600);
    var comparison = getStableSortingIsSupported$lambda();
    var tmp$ret$3;
    {
      tmp$ret$3 = array;
    }
    tmp$ret$3.sort(comparison);
    var inductionVariable_0 = 1;
    var last = array.length;
    if (inductionVariable_0 < last)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var a = array[index_0 - 1 | 0];
        var b = array[index_0];
        if ((a & 3) === (b & 3) ? a >= b : false)
          return false;
      }
       while (inductionVariable_0 < last);
    _stableSortingIsSupported = true;
    return true;
  }
  function mergeSort(array, start, endInclusive, comparator) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var tmp0_arrayOfNulls = array.length;
        tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
      }
      var tmp1_unsafeCast = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var buffer = tmp$ret$2;
    var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
    if (!(result === array)) {
      var inductionVariable = start;
      if (inductionVariable <= endInclusive)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          array[i] = result[i];
        }
         while (!(i === endInclusive));
    }
  }
  function mergeSort_0(array, buffer, start, end, comparator) {
    if (start === end) {
      return array;
    }
    var median = (start + end | 0) / 2 | 0;
    var left = mergeSort_0(array, buffer, start, median, comparator);
    var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
    var target = left === buffer ? array : buffer;
    var leftIndex = start;
    var rightIndex = median + 1 | 0;
    var inductionVariable = start;
    if (inductionVariable <= end)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (leftIndex <= median ? rightIndex <= end : false) {
          var leftValue = left[leftIndex];
          var rightValue = right[rightIndex];
          if (comparator.compare(leftValue, rightValue) <= 0) {
            target[i] = leftValue;
            var tmp1 = leftIndex;
            leftIndex = tmp1 + 1 | 0;
          } else {
            target[i] = rightValue;
            var tmp2 = rightIndex;
            rightIndex = tmp2 + 1 | 0;
          }
        } else if (leftIndex <= median) {
          target[i] = left[leftIndex];
          var tmp3 = leftIndex;
          leftIndex = tmp3 + 1 | 0;
        } else {
          target[i] = right[rightIndex];
          var tmp4 = rightIndex;
          rightIndex = tmp4 + 1 | 0;
        }
      }
       while (!(i === end));
    return target;
  }
  function sortArrayWith$lambda($comparator) {
    return function (a, b) {
      return $comparator.compare(a, b);
    };
  }
  function getStableSortingIsSupported$lambda() {
    return function (a, b) {
      return (a & 3) - (b & 3) | 0;
    };
  }
  function HashCode() {
    HashCode_instance = this;
  }
  HashCode.prototype.ab = function (value1, value2) {
    return equals_1(value1, value2);
  };
  HashCode.prototype.bb = function (value) {
    var tmp0_safe_receiver = value;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  HashCode.$metadata$ = objectMeta('HashCode', [EqualityComparator]);
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EqualityComparator() {
  }
  EqualityComparator.$metadata$ = interfaceMeta('EqualityComparator');
  function EntrySet($outer) {
    this.cb_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet.prototype.db = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet.prototype.a = function (element) {
    return this.db((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet.prototype.s9 = function () {
    this.cb_1.s9();
  };
  EntrySet.prototype.oa = function (element) {
    return this.cb_1.h2(element);
  };
  EntrySet.prototype.d = function () {
    return this.cb_1.ib_1.d();
  };
  EntrySet.prototype.g = function () {
    return this.cb_1.g();
  };
  EntrySet.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this.ib_1 = internalMap;
    $this.jb_1 = internalMap.lb();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    {
      var tmp0_require = initialCapacity >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Negative initial capacity: ' + initialCapacity;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    {
      var tmp1_require = loadFactor >= 0;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Non-positive load factor: ' + loadFactor;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message_0));
      }
    }
    return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_3(original, $this) {
    HashMap_init_$Init$_0($this);
    $this.b3(original);
    return $this;
  }
  function HashMap_init_$Create$_2(original) {
    return HashMap_init_$Init$_3(original, Object.create(HashMap.prototype));
  }
  HashMap.prototype.s9 = function () {
    this.ib_1.s9();
  };
  HashMap.prototype.c2 = function (key) {
    return this.ib_1.z1(key);
  };
  HashMap.prototype.g2 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.ib_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.jb_1.ab(element.t(), value);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  HashMap.prototype.r = function () {
    if (this.kb_1 == null) {
      this.kb_1 = this.mb();
    }
    return ensureNotNull(this.kb_1);
  };
  HashMap.prototype.mb = function () {
    return new EntrySet(this);
  };
  HashMap.prototype.i2 = function (key) {
    return this.ib_1.i2(key);
  };
  HashMap.prototype.c = function (key, value) {
    return this.ib_1.c(key, value);
  };
  HashMap.prototype.xa = function (key) {
    return this.ib_1.xa(key);
  };
  HashMap.prototype.g = function () {
    return this.ib_1.g();
  };
  function HashMap() {
    this.kb_1 = null;
  }
  HashMap.$metadata$ = classMeta('HashMap', [MutableMap], undefined, undefined, undefined, AbstractMutableMap.prototype);
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.n_1 = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_0(elements, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.n_1 = HashMap_init_$Create$_1(elements.g());
    $this.k(elements);
    return $this;
  }
  function HashSet_init_$Create$_0(elements) {
    return HashSet_init_$Init$_0(elements, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.n_1 = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_2(initialCapacity, $this) {
    HashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_1(initialCapacity) {
    return HashSet_init_$Init$_2(initialCapacity, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_3(map, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.n_1 = map;
    return $this;
  }
  HashSet.prototype.nb = function () {
    return this.n_1;
  };
  HashSet.prototype.a = function (element) {
    var old = this.n_1.c(element, this);
    return old == null;
  };
  HashSet.prototype.s9 = function () {
    this.n_1.s9();
  };
  HashSet.prototype.l1 = function (element) {
    return this.n_1.c2(element);
  };
  HashSet.prototype.m = function () {
    return this.n_1.m();
  };
  HashSet.prototype.d = function () {
    return this.n_1.j2().d();
  };
  HashSet.prototype.g = function () {
    return this.n_1.g();
  };
  function HashSet() {
  }
  HashSet.$metadata$ = classMeta('HashSet', [MutableSet], undefined, undefined, undefined, AbstractMutableSet.prototype);
  function computeNext($this) {
    if ($this.rb_1 != null ? $this.sb_1 : false) {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = $this.rb_1;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      var chainSize = tmp$ret$0.length;
      var tmp0_this = $this;
      tmp0_this.tb_1 = tmp0_this.tb_1 + 1 | 0;
      if (tmp0_this.tb_1 < chainSize)
        return 0;
    }
    var tmp1_this = $this;
    tmp1_this.qb_1 = tmp1_this.qb_1 + 1 | 0;
    if (tmp1_this.qb_1 < $this.pb_1.length) {
      $this.rb_1 = $this.vb_1.xb_1[$this.pb_1[$this.qb_1]];
      var tmp = $this;
      var tmp_0 = $this.rb_1;
      tmp.sb_1 = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this.tb_1 = 0;
      return 0;
    } else {
      $this.rb_1 = null;
      return 1;
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this.wb_1.bb(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this.wb_1.ab(entry.s(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      return findEntryInChain(chain, $this, key);
    }
  }
  function findEntryInChain(_this__u8e3s4, $this, key) {
    var tmp$ret$1;
    $l$block: {
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.wb_1.ab(element.s(), key);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function getChainOrEntryOrNull($this, hashCode) {
    var chainOrEntry = $this.xb_1[hashCode];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function InternalHashCodeMap$iterator$1(this$0) {
    this.vb_1 = this$0;
    this.ob_1 = -1;
    this.pb_1 = Object.keys(this$0.xb_1);
    this.qb_1 = -1;
    this.rb_1 = null;
    this.sb_1 = false;
    this.tb_1 = -1;
    this.ub_1 = null;
  }
  InternalHashCodeMap$iterator$1.prototype.e = function () {
    if (this.ob_1 === -1)
      this.ob_1 = computeNext(this);
    return this.ob_1 === 0;
  };
  InternalHashCodeMap$iterator$1.prototype.f = function () {
    if (!this.e())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this.sb_1) {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = this.rb_1;
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$0[this.tb_1];
    } else {
      var tmp$ret$1;
      {
        var tmp1_unsafeCast = this.rb_1;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp = tmp$ret$1;
    }
    var lastEntry = tmp;
    this.ub_1 = lastEntry;
    this.ob_1 = -1;
    return lastEntry;
  };
  InternalHashCodeMap$iterator$1.prototype.v7 = function () {
    var tmp$ret$2;
    {
      var tmp0_checkNotNull = this.ub_1;
      {
      }
      var tmp$ret$1;
      $l$block: {
        {
        }
        if (tmp0_checkNotNull == null) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Required value was null.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString_2(message));
        } else {
          tmp$ret$1 = tmp0_checkNotNull;
          break $l$block;
        }
      }
      tmp$ret$2 = tmp$ret$1;
    }
    this.vb_1.xa(ensureNotNull(this.ub_1).s());
    this.ub_1 = null;
    var tmp0_this = this;
    var tmp1 = tmp0_this.tb_1;
    tmp0_this.tb_1 = tmp1 - 1 | 0;
  };
  InternalHashCodeMap$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function InternalHashCodeMap(equality) {
    this.wb_1 = equality;
    this.xb_1 = this.zb();
    this.yb_1 = 0;
  }
  InternalHashCodeMap.prototype.lb = function () {
    return this.wb_1;
  };
  InternalHashCodeMap.prototype.g = function () {
    return this.yb_1;
  };
  InternalHashCodeMap.prototype.c = function (key, value) {
    var hashCode = this.wb_1.bb(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode);
    if (chainOrEntry == null) {
      this.xb_1[hashCode] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this.wb_1.ab(entry.s(), key)) {
          return entry.na(value);
        } else {
          var tmp$ret$2;
          {
            var tmp0_arrayOf = [entry, new SimpleEntry(key, value)];
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_arrayOf;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          this.xb_1[hashCode] = tmp$ret$2;
          var tmp0_this = this;
          var tmp1 = tmp0_this.yb_1;
          tmp0_this.yb_1 = tmp1 + 1 | 0;
          return null;
        }
      } else {
        var chain = chainOrEntry;
        var entry_0 = findEntryInChain(chain, this, key);
        if (!(entry_0 == null)) {
          return entry_0.na(value);
        }
        var tmp$ret$3;
        {
          tmp$ret$3 = chain;
        }
        tmp$ret$3.push(new SimpleEntry(key, value));
      }
    }
    var tmp2_this = this;
    var tmp3 = tmp2_this.yb_1;
    tmp2_this.yb_1 = tmp3 + 1 | 0;
    return null;
  };
  InternalHashCodeMap.prototype.xa = function (key) {
    var hashCode = this.wb_1.bb(key);
    var tmp0_elvis_lhs = getChainOrEntryOrNull(this, hashCode);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if (this.wb_1.ab(entry.s(), key)) {
        jsDeleteProperty(this.xb_1, hashCode);
        var tmp1_this = this;
        var tmp2 = tmp1_this.yb_1;
        tmp1_this.yb_1 = tmp2 - 1 | 0;
        return entry.t();
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      var inductionVariable = 0;
      var last = chain.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var entry_0 = chain[index];
          if (this.wb_1.ab(key, entry_0.s())) {
            if (chain.length === 1) {
              var tmp$ret$0;
              {
                tmp$ret$0 = chain;
              }
              tmp$ret$0.length = 0;
              jsDeleteProperty(this.xb_1, hashCode);
            } else {
              var tmp$ret$1;
              {
                tmp$ret$1 = chain;
              }
              tmp$ret$1.splice(index, 1);
            }
            var tmp4_this = this;
            var tmp5 = tmp4_this.yb_1;
            tmp4_this.yb_1 = tmp5 - 1 | 0;
            return entry_0.t();
          }
        }
         while (inductionVariable <= last);
    }
    return null;
  };
  InternalHashCodeMap.prototype.s9 = function () {
    this.xb_1 = this.zb();
    this.yb_1 = 0;
  };
  InternalHashCodeMap.prototype.z1 = function (key) {
    return !(getEntry(this, key) == null);
  };
  InternalHashCodeMap.prototype.i2 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t();
  };
  InternalHashCodeMap.prototype.d = function () {
    return new InternalHashCodeMap$iterator$1(this);
  };
  InternalHashCodeMap.$metadata$ = classMeta('InternalHashCodeMap', [InternalMap]);
  function InternalMap() {
  }
  InternalMap.$metadata$ = interfaceMeta('InternalMap', [MutableIterable]);
  function EntryIterator($outer) {
    this.cc_1 = $outer;
    this.ac_1 = null;
    this.bc_1 = null;
    this.bc_1 = this.cc_1.nc_1.kc_1;
  }
  EntryIterator.prototype.e = function () {
    return !(this.bc_1 === null);
  };
  EntryIterator.prototype.f = function () {
    if (!this.e())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this.bc_1);
    this.ac_1 = current;
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_takeIf = current.qc_1;
      {
      }
      var tmp_0;
      var tmp$ret$0;
      {
        tmp$ret$0 = !(tmp0_takeIf === this.cc_1.nc_1.kc_1);
      }
      if (tmp$ret$0) {
        tmp_0 = tmp0_takeIf;
      } else {
        tmp_0 = null;
      }
      tmp$ret$1 = tmp_0;
    }
    tmp.bc_1 = tmp$ret$1;
    return current;
  };
  EntryIterator.prototype.v7 = function () {
    {
      var tmp0_check = !(this.ac_1 == null);
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString_2(message));
        }
      }
    }
    this.cc_1.r9();
    remove(ensureNotNull(this.ac_1), this.cc_1.nc_1);
    this.cc_1.nc_1.lc_1.xa(ensureNotNull(this.ac_1).s());
    this.ac_1 = null;
  };
  EntryIterator.$metadata$ = classMeta('EntryIterator', [MutableIterator]);
  function ChainEntry($outer, key, value) {
    this.sc_1 = $outer;
    SimpleEntry.call(this, key, value);
    this.qc_1 = null;
    this.rc_1 = null;
  }
  ChainEntry.prototype.na = function (newValue) {
    this.sc_1.r9();
    return SimpleEntry.prototype.na.call(this, newValue);
  };
  ChainEntry.$metadata$ = classMeta('ChainEntry', undefined, undefined, undefined, undefined, SimpleEntry.prototype);
  function EntrySet_0($outer) {
    this.nc_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet_0.prototype.db = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet_0.prototype.a = function (element) {
    return this.db((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet_0.prototype.s9 = function () {
    this.nc_1.s9();
  };
  EntrySet_0.prototype.oa = function (element) {
    return this.nc_1.h2(element);
  };
  EntrySet_0.prototype.d = function () {
    return new EntryIterator(this);
  };
  EntrySet_0.prototype.g = function () {
    return this.nc_1.g();
  };
  EntrySet_0.prototype.r9 = function () {
    return this.nc_1.r9();
  };
  EntrySet_0.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function addToEnd(_this__u8e3s4, $this) {
    {
      var tmp0_check = _this__u8e3s4.qc_1 == null ? _this__u8e3s4.rc_1 == null : false;
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString_2(message));
        }
      }
    }
    var _head = $this.kc_1;
    if (_head == null) {
      $this.kc_1 = _this__u8e3s4;
      _this__u8e3s4.qc_1 = _this__u8e3s4;
      _this__u8e3s4.rc_1 = _this__u8e3s4;
    } else {
      var tmp$ret$3;
      {
        var tmp1_checkNotNull = _head.rc_1;
        {
        }
        var tmp$ret$2;
        $l$block: {
          {
          }
          if (tmp1_checkNotNull == null) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Required value was null.';
            }
            var message_0 = tmp$ret$1;
            throw IllegalStateException_init_$Create$(toString_2(message_0));
          } else {
            tmp$ret$2 = tmp1_checkNotNull;
            break $l$block;
          }
        }
        tmp$ret$3 = tmp$ret$2;
      }
      var _tail = tmp$ret$3;
      _this__u8e3s4.rc_1 = _tail;
      _this__u8e3s4.qc_1 = _head;
      _head.rc_1 = _this__u8e3s4;
      _tail.qc_1 = _this__u8e3s4;
    }
  }
  function remove(_this__u8e3s4, $this) {
    if (_this__u8e3s4.qc_1 === _this__u8e3s4) {
      $this.kc_1 = null;
    } else {
      if ($this.kc_1 === _this__u8e3s4) {
        $this.kc_1 = _this__u8e3s4.qc_1;
      }
      ensureNotNull(_this__u8e3s4.qc_1).rc_1 = _this__u8e3s4.rc_1;
      ensureNotNull(_this__u8e3s4.rc_1).qc_1 = _this__u8e3s4.qc_1;
    }
    _this__u8e3s4.qc_1 = null;
    _this__u8e3s4.rc_1 = null;
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.lc_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this.lc_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_1(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_2(original, $this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.lc_1 = HashMap_init_$Create$();
    $this.b3(original);
    return $this;
  }
  function LinkedHashMap_init_$Create$_2(original) {
    return LinkedHashMap_init_$Init$_2(original, Object.create(LinkedHashMap.prototype));
  }
  LinkedHashMap.prototype.s9 = function () {
    this.r9();
    this.lc_1.s9();
    this.kc_1 = null;
  };
  LinkedHashMap.prototype.c2 = function (key) {
    return this.lc_1.c2(key);
  };
  LinkedHashMap.prototype.g2 = function (value) {
    var tmp0_elvis_lhs = this.kc_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var node = tmp;
    do {
      if (equals_1(node.t(), value)) {
        return true;
      }
      node = ensureNotNull(node.qc_1);
    }
     while (!(node === this.kc_1));
    return false;
  };
  LinkedHashMap.prototype.mb = function () {
    return new EntrySet_0(this);
  };
  LinkedHashMap.prototype.i2 = function (key) {
    var tmp0_safe_receiver = this.lc_1.i2(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t();
  };
  LinkedHashMap.prototype.c = function (key, value) {
    this.r9();
    var old = this.lc_1.i2(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this.lc_1.c(key, newEntry);
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.na(value);
    }
  };
  LinkedHashMap.prototype.xa = function (key) {
    this.r9();
    var entry = this.lc_1.xa(key);
    if (!(entry == null)) {
      remove(entry, this);
      return entry.t();
    }
    return null;
  };
  LinkedHashMap.prototype.g = function () {
    return this.lc_1.g();
  };
  LinkedHashMap.prototype.r9 = function () {
    if (this.mc_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    this.kc_1 = null;
    this.mc_1 = false;
  }
  LinkedHashMap.$metadata$ = classMeta('LinkedHashMap', [MutableMap], undefined, undefined, undefined, HashMap.prototype);
  function LinkedHashSet_init_$Init$($this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Create$() {
    return LinkedHashSet_init_$Init$(Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_0(elements, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    $this.k(elements);
    return $this;
  }
  function LinkedHashSet_init_$Create$_0(elements) {
    return LinkedHashSet_init_$Init$_0(elements, Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
    LinkedHashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashSet_init_$Create$_1(initialCapacity) {
    return LinkedHashSet_init_$Init$_2(initialCapacity, Object.create(LinkedHashSet.prototype));
  }
  LinkedHashSet.prototype.r9 = function () {
    return this.nb().r9();
  };
  function LinkedHashSet() {
  }
  LinkedHashSet.$metadata$ = classMeta('LinkedHashSet', [MutableSet], undefined, undefined, undefined, HashSet.prototype);
  function RandomAccess() {
  }
  RandomAccess.$metadata$ = interfaceMeta('RandomAccess');
  function get_output() {
    init_properties_console_kt_6h8hpf();
    return output;
  }
  var output;
  function BaseOutput() {
  }
  BaseOutput.prototype.uc = function () {
    this.vc('\n');
  };
  BaseOutput.prototype.wc = function (message) {
    this.vc(message);
    this.uc();
  };
  BaseOutput.$metadata$ = classMeta('BaseOutput');
  function NodeJsOutput(outputStream) {
    BaseOutput.call(this);
    this.xc_1 = outputStream;
  }
  NodeJsOutput.prototype.vc = function (message) {
    var tmp$ret$0;
    {
      tmp$ret$0 = String(message);
    }
    var messageString = tmp$ret$0;
    this.xc_1.write(messageString);
  };
  NodeJsOutput.$metadata$ = classMeta('NodeJsOutput', undefined, undefined, undefined, undefined, BaseOutput.prototype);
  function BufferedOutputToConsoleLog() {
    BufferedOutput.call(this);
  }
  BufferedOutputToConsoleLog.prototype.vc = function (message) {
    var tmp$ret$0;
    {
      tmp$ret$0 = String(message);
    }
    var s = tmp$ret$0;
    var tmp$ret$2;
    {
      var tmp0_nativeLastIndexOf = s;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_nativeLastIndexOf;
      }
      tmp$ret$2 = tmp$ret$1.lastIndexOf('\n', 0);
    }
    var i = tmp$ret$2;
    if (i >= 0) {
      var tmp0_this = this;
      var tmp = tmp0_this.ad();
      var tmp$ret$4;
      {
        var tmp1_substring = s;
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp1_substring;
        }
        tmp$ret$4 = tmp$ret$3.substring(0, i);
      }
      tmp0_this.bd(tmp + tmp$ret$4);
      this.cd();
      var tmp$ret$6;
      {
        var tmp2_substring = s;
        var tmp3_substring = i + 1 | 0;
        var tmp$ret$5;
        {
          tmp$ret$5 = tmp2_substring;
        }
        tmp$ret$6 = tmp$ret$5.substring(tmp3_substring);
      }
      s = tmp$ret$6;
    }
    var tmp1_this = this;
    tmp1_this.bd(tmp1_this.ad() + s);
  };
  BufferedOutputToConsoleLog.prototype.cd = function () {
    console.log(this.ad());
    this.bd('');
  };
  BufferedOutputToConsoleLog.$metadata$ = classMeta('BufferedOutputToConsoleLog', undefined, undefined, undefined, undefined, BufferedOutput.prototype);
  function String_0(value) {
    init_properties_console_kt_6h8hpf();
    return String(value);
  }
  function BufferedOutput() {
    BaseOutput.call(this);
    this.zc_1 = '';
  }
  BufferedOutput.prototype.bd = function (_set____db54di) {
    this.zc_1 = _set____db54di;
  };
  BufferedOutput.prototype.ad = function () {
    return this.zc_1;
  };
  BufferedOutput.prototype.vc = function (message) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.zc_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = String(message);
    }
    tmp.zc_1 = tmp_0 + tmp$ret$0;
  };
  BufferedOutput.$metadata$ = classMeta('BufferedOutput', undefined, undefined, undefined, undefined, BaseOutput.prototype);
  function println(message) {
    init_properties_console_kt_6h8hpf();
    get_output().wc(message);
  }
  var properties_initialized_console_kt_gll9dl;
  function init_properties_console_kt_6h8hpf() {
    if (properties_initialized_console_kt_gll9dl) {
    } else {
      properties_initialized_console_kt_gll9dl = true;
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
          tmp$ret$0 = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      output = tmp$ret$1;
    }
  }
  function get_EmptyContinuation() {
    init_properties_EmptyContinuation_kt_8tpm4w();
    return EmptyContinuation;
  }
  var EmptyContinuation;
  function _no_name_provided__qut3iv_2($tmp0_Continuation) {
    this.dd_1 = $tmp0_Continuation;
  }
  _no_name_provided__qut3iv_2.prototype.q3 = function () {
    return this.dd_1;
  };
  _no_name_provided__qut3iv_2.prototype.ed = function (result) {
    var tmp$ret$0;
    {
      throwOnFailure(result);
      var tmp = _Result___get_value__impl__bjfvqg(result);
      tmp$ret$0 = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
    }
    return Unit_getInstance();
  };
  _no_name_provided__qut3iv_2.prototype.r3 = function (result) {
    return this.ed(result);
  };
  _no_name_provided__qut3iv_2.$metadata$ = classMeta(undefined, [Continuation]);
  var properties_initialized_EmptyContinuation_kt_4jdb9w;
  function init_properties_EmptyContinuation_kt_8tpm4w() {
    if (properties_initialized_EmptyContinuation_kt_4jdb9w) {
    } else {
      properties_initialized_EmptyContinuation_kt_4jdb9w = true;
      var tmp$ret$0;
      {
        var tmp0_Continuation = EmptyCoroutineContext_getInstance();
        tmp$ret$0 = new _no_name_provided__qut3iv_2(tmp0_Continuation);
      }
      EmptyContinuation = tmp$ret$0;
    }
  }
  function asDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCastDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCast(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function Serializable() {
  }
  Serializable.$metadata$ = interfaceMeta('Serializable');
  function roundToInt(_this__u8e3s4) {
    return roundToInt_0(_this__u8e3s4);
  }
  function roundToInt_0(_this__u8e3s4) {
    var tmp;
    if (isNaN_0(_this__u8e3s4)) {
      throw IllegalArgumentException_init_$Create$_0('Cannot round NaN value.');
    } else if (_this__u8e3s4 > IntCompanionObject_getInstance().w_1) {
      tmp = IntCompanionObject_getInstance().w_1;
    } else if (_this__u8e3s4 < IntCompanionObject_getInstance().v_1) {
      tmp = IntCompanionObject_getInstance().v_1;
    } else {
      tmp = numberToInt(Math.round(_this__u8e3s4));
    }
    return tmp;
  }
  function min(a, b) {
    return Math.min(a, b);
  }
  function isNaN_0(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isFinite(_this__u8e3s4) {
    return !isInfinite(_this__u8e3s4) ? !isNaN_1(_this__u8e3s4) : false;
  }
  function isFinite_0(_this__u8e3s4) {
    return !isInfinite_0(_this__u8e3s4) ? !isNaN_0(_this__u8e3s4) : false;
  }
  function isInfinite(_this__u8e3s4) {
    var tmp;
    FloatCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      FloatCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function isNaN_1(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isInfinite_0(_this__u8e3s4) {
    var tmp;
    DoubleCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      DoubleCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function get_js(_this__u8e3s4) {
    return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).gd();
  }
  function KCallable() {
  }
  KCallable.$metadata$ = interfaceMeta('KCallable');
  function KClass() {
  }
  KClass.$metadata$ = interfaceMeta('KClass', [KClassifier]);
  function KClassImpl(jClass) {
    this.fd_1 = jClass;
  }
  KClassImpl.prototype.gd = function () {
    return this.fd_1;
  };
  KClassImpl.prototype.equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_1(this.gd(), other.gd());
    } else {
      tmp = false;
    }
    return tmp;
  };
  KClassImpl.prototype.hashCode = function () {
    var tmp0_safe_receiver = this.hd();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  KClassImpl.prototype.toString = function () {
    return 'class ' + this.hd();
  };
  KClassImpl.$metadata$ = classMeta('KClassImpl', [KClass]);
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this.kd_1 = givenSimpleName;
    this.ld_1 = isInstanceFunction;
  }
  PrimitiveKClassImpl.prototype.equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return KClassImpl.prototype.equals.call(this, other) ? this.kd_1 === other.kd_1 : false;
  };
  PrimitiveKClassImpl.prototype.hd = function () {
    return this.kd_1;
  };
  PrimitiveKClassImpl.prototype.id = function (value) {
    return this.ld_1(value);
  };
  PrimitiveKClassImpl.$metadata$ = classMeta('PrimitiveKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this.nd_1 = 'Nothing';
  }
  NothingKClassImpl.prototype.hd = function () {
    return this.nd_1;
  };
  NothingKClassImpl.prototype.id = function (value) {
    return false;
  };
  NothingKClassImpl.prototype.gd = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  NothingKClassImpl.prototype.equals = function (other) {
    return other === this;
  };
  NothingKClassImpl.prototype.hashCode = function () {
    return 0;
  };
  NothingKClassImpl.$metadata$ = objectMeta('NothingKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  ErrorKClass.prototype.hd = function () {
    throw IllegalStateException_init_$Create$('Unknown simpleName for ErrorKClass');
  };
  ErrorKClass.prototype.id = function (value) {
    throw IllegalStateException_init_$Create$("Can's check isInstance on ErrorKClass");
  };
  ErrorKClass.prototype.equals = function (other) {
    return other === this;
  };
  ErrorKClass.prototype.hashCode = function () {
    return 0;
  };
  ErrorKClass.$metadata$ = classMeta('ErrorKClass', [KClass]);
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = jClass;
      }
      var tmp0_safe_receiver = tmp$ret$0.$metadata$;
      var tmp0_unsafeCast = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
      tmp$ret$1 = tmp0_unsafeCast;
    }
    tmp.pd_1 = tmp$ret$1;
  }
  SimpleKClassImpl.prototype.hd = function () {
    return this.pd_1;
  };
  SimpleKClassImpl.prototype.id = function (value) {
    return jsIsType(value, this.gd());
  };
  SimpleKClassImpl.$metadata$ = classMeta('SimpleKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function KMutableProperty1() {
  }
  KMutableProperty1.$metadata$ = interfaceMeta('KMutableProperty1', [KProperty1, KMutableProperty]);
  function KProperty() {
  }
  KProperty.$metadata$ = interfaceMeta('KProperty', [KCallable]);
  function KProperty1() {
  }
  KProperty1.$metadata$ = interfaceMeta('KProperty1', [KProperty]);
  function KMutableProperty() {
  }
  KMutableProperty.$metadata$ = interfaceMeta('KMutableProperty', [KProperty]);
  function KType() {
  }
  KType.$metadata$ = interfaceMeta('KType');
  function createKType(classifier, arguments_0, isMarkedNullable) {
    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
  }
  function createInvariantKTypeProjection(type) {
    return Companion_getInstance_2().v4(type);
  }
  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
    this.td_1 = classifier;
    this.ud_1 = arguments_0;
    this.vd_1 = isMarkedNullable;
  }
  KTypeImpl.prototype.qd = function () {
    return this.td_1;
  };
  KTypeImpl.prototype.rd = function () {
    return this.ud_1;
  };
  KTypeImpl.prototype.sd = function () {
    return this.vd_1;
  };
  KTypeImpl.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals_1(this.td_1, other.td_1);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals_1(this.ud_1, other.ud_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.vd_1 === other.vd_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  KTypeImpl.prototype.hashCode = function () {
    return imul(imul(hashCode_0(this.td_1), 31) + hashCode_0(this.ud_1) | 0, 31) + (this.vd_1 | 0) | 0;
  };
  KTypeImpl.prototype.toString = function () {
    var tmp = this.td_1;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_2(this.td_1) : !(kClass.hd() == null) ? kClass.hd() : '(non-denotable type)';
    var tmp_0;
    if (this.ud_1.m()) {
      tmp_0 = '';
    } else {
      tmp_0 = joinToString$default_0(this.ud_1, ', ', '<', '>', 0, null, null, 56, null);
    }
    var args = tmp_0;
    var nullable = this.vd_1 ? '?' : '';
    return plus_5(classifierName, args) + nullable;
  };
  KTypeImpl.$metadata$ = classMeta('KTypeImpl', [KType]);
  function get_functionClasses() {
    init_properties_primitives_kt_rm1w5q();
    return functionClasses;
  }
  var functionClasses;
  function PrimitiveClasses$anyClass$lambda() {
    return function (it) {
      return isObject(it);
    };
  }
  function PrimitiveClasses$numberClass$lambda() {
    return function (it) {
      return isNumber(it);
    };
  }
  function PrimitiveClasses$booleanClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'boolean' : false;
    };
  }
  function PrimitiveClasses$byteClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$shortClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$intClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$floatClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$doubleClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'number' : false;
    };
  }
  function PrimitiveClasses$arrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isArray(it) : false;
    };
  }
  function PrimitiveClasses$stringClass$lambda() {
    return function (it) {
      return !(it == null) ? typeof it === 'string' : false;
    };
  }
  function PrimitiveClasses$throwableClass$lambda() {
    return function (it) {
      return it instanceof Error;
    };
  }
  function PrimitiveClasses$booleanArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isBooleanArray(it) : false;
    };
  }
  function PrimitiveClasses$charArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isCharArray(it) : false;
    };
  }
  function PrimitiveClasses$byteArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isByteArray(it) : false;
    };
  }
  function PrimitiveClasses$shortArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isShortArray(it) : false;
    };
  }
  function PrimitiveClasses$intArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isIntArray(it) : false;
    };
  }
  function PrimitiveClasses$longArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isLongArray(it) : false;
    };
  }
  function PrimitiveClasses$floatArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isFloatArray(it) : false;
    };
  }
  function PrimitiveClasses$doubleArrayClass$lambda() {
    return function (it) {
      return !(it == null) ? isDoubleArray(it) : false;
    };
  }
  function PrimitiveClasses$functionClass$lambda($arity) {
    return function (it) {
      var tmp;
      if (typeof it === 'function') {
        var tmp$ret$0;
        {
          tmp$ret$0 = it;
        }
        tmp = tmp$ret$0.length === $arity;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function PrimitiveClasses() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Object;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    var tmp_0 = tmp$ret$0;
    tmp.wd_1 = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda());
    var tmp_1 = this;
    var tmp$ret$1;
    {
      var tmp0_unsafeCast_0 = Number;
      tmp$ret$1 = tmp0_unsafeCast_0;
    }
    var tmp_2 = tmp$ret$1;
    tmp_1.xd_1 = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda());
    this.yd_1 = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    var tmp$ret$2;
    {
      var tmp0_unsafeCast_1 = Boolean;
      tmp$ret$2 = tmp0_unsafeCast_1;
    }
    var tmp_4 = tmp$ret$2;
    tmp_3.zd_1 = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda());
    var tmp_5 = this;
    var tmp$ret$3;
    {
      var tmp0_unsafeCast_2 = Number;
      tmp$ret$3 = tmp0_unsafeCast_2;
    }
    var tmp_6 = tmp$ret$3;
    tmp_5.ae_1 = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda());
    var tmp_7 = this;
    var tmp$ret$4;
    {
      var tmp0_unsafeCast_3 = Number;
      tmp$ret$4 = tmp0_unsafeCast_3;
    }
    var tmp_8 = tmp$ret$4;
    tmp_7.be_1 = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda());
    var tmp_9 = this;
    var tmp$ret$5;
    {
      var tmp0_unsafeCast_4 = Number;
      tmp$ret$5 = tmp0_unsafeCast_4;
    }
    var tmp_10 = tmp$ret$5;
    tmp_9.ce_1 = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda());
    var tmp_11 = this;
    var tmp$ret$6;
    {
      var tmp0_unsafeCast_5 = Number;
      tmp$ret$6 = tmp0_unsafeCast_5;
    }
    var tmp_12 = tmp$ret$6;
    tmp_11.de_1 = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda());
    var tmp_13 = this;
    var tmp$ret$7;
    {
      var tmp0_unsafeCast_6 = Number;
      tmp$ret$7 = tmp0_unsafeCast_6;
    }
    var tmp_14 = tmp$ret$7;
    tmp_13.ee_1 = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda());
    var tmp_15 = this;
    var tmp$ret$8;
    {
      var tmp0_unsafeCast_7 = Array;
      tmp$ret$8 = tmp0_unsafeCast_7;
    }
    var tmp_16 = tmp$ret$8;
    tmp_15.fe_1 = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda());
    var tmp_17 = this;
    var tmp$ret$9;
    {
      var tmp0_unsafeCast_8 = String;
      tmp$ret$9 = tmp0_unsafeCast_8;
    }
    var tmp_18 = tmp$ret$9;
    tmp_17.ge_1 = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda());
    var tmp_19 = this;
    var tmp$ret$10;
    {
      var tmp0_unsafeCast_9 = Error;
      tmp$ret$10 = tmp0_unsafeCast_9;
    }
    var tmp_20 = tmp$ret$10;
    tmp_19.he_1 = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda());
    var tmp_21 = this;
    var tmp$ret$11;
    {
      var tmp0_unsafeCast_10 = Array;
      tmp$ret$11 = tmp0_unsafeCast_10;
    }
    var tmp_22 = tmp$ret$11;
    tmp_21.ie_1 = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda());
    var tmp_23 = this;
    var tmp$ret$12;
    {
      var tmp0_unsafeCast_11 = Uint16Array;
      tmp$ret$12 = tmp0_unsafeCast_11;
    }
    var tmp_24 = tmp$ret$12;
    tmp_23.je_1 = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda());
    var tmp_25 = this;
    var tmp$ret$13;
    {
      var tmp0_unsafeCast_12 = Int8Array;
      tmp$ret$13 = tmp0_unsafeCast_12;
    }
    var tmp_26 = tmp$ret$13;
    tmp_25.ke_1 = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda());
    var tmp_27 = this;
    var tmp$ret$14;
    {
      var tmp0_unsafeCast_13 = Int16Array;
      tmp$ret$14 = tmp0_unsafeCast_13;
    }
    var tmp_28 = tmp$ret$14;
    tmp_27.le_1 = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda());
    var tmp_29 = this;
    var tmp$ret$15;
    {
      var tmp0_unsafeCast_14 = Int32Array;
      tmp$ret$15 = tmp0_unsafeCast_14;
    }
    var tmp_30 = tmp$ret$15;
    tmp_29.me_1 = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda());
    var tmp_31 = this;
    var tmp$ret$16;
    {
      var tmp0_unsafeCast_15 = Array;
      tmp$ret$16 = tmp0_unsafeCast_15;
    }
    var tmp_32 = tmp$ret$16;
    tmp_31.ne_1 = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda());
    var tmp_33 = this;
    var tmp$ret$17;
    {
      var tmp0_unsafeCast_16 = Float32Array;
      tmp$ret$17 = tmp0_unsafeCast_16;
    }
    var tmp_34 = tmp$ret$17;
    tmp_33.oe_1 = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda());
    var tmp_35 = this;
    var tmp$ret$18;
    {
      var tmp0_unsafeCast_17 = Float64Array;
      tmp$ret$18 = tmp0_unsafeCast_17;
    }
    var tmp_36 = tmp$ret$18;
    tmp_35.pe_1 = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda());
  }
  PrimitiveClasses.prototype.qe = function () {
    return this.wd_1;
  };
  PrimitiveClasses.prototype.re = function () {
    return this.xd_1;
  };
  PrimitiveClasses.prototype.se = function () {
    return this.yd_1;
  };
  PrimitiveClasses.prototype.te = function () {
    return this.zd_1;
  };
  PrimitiveClasses.prototype.ue = function () {
    return this.ae_1;
  };
  PrimitiveClasses.prototype.ve = function () {
    return this.be_1;
  };
  PrimitiveClasses.prototype.we = function () {
    return this.ce_1;
  };
  PrimitiveClasses.prototype.xe = function () {
    return this.de_1;
  };
  PrimitiveClasses.prototype.ye = function () {
    return this.ee_1;
  };
  PrimitiveClasses.prototype.ze = function () {
    return this.fe_1;
  };
  PrimitiveClasses.prototype.af = function () {
    return this.ge_1;
  };
  PrimitiveClasses.prototype.bf = function () {
    return this.he_1;
  };
  PrimitiveClasses.prototype.cf = function () {
    return this.ie_1;
  };
  PrimitiveClasses.prototype.df = function () {
    return this.je_1;
  };
  PrimitiveClasses.prototype.ef = function () {
    return this.ke_1;
  };
  PrimitiveClasses.prototype.ff = function () {
    return this.le_1;
  };
  PrimitiveClasses.prototype.gf = function () {
    return this.me_1;
  };
  PrimitiveClasses.prototype.hf = function () {
    return this.ne_1;
  };
  PrimitiveClasses.prototype.if = function () {
    return this.oe_1;
  };
  PrimitiveClasses.prototype.jf = function () {
    return this.pe_1;
  };
  PrimitiveClasses.prototype.functionClass = function (arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = Function;
            tmp$ret$0 = tmp0_unsafeCast;
          }
          var tmp_0 = tmp$ret$0;
          var tmp_1 = 'Function' + arity;
          var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
          var tmp$ret$1;
          {
            var tmp1_asDynamic = get_functionClasses();
            tmp$ret$1 = tmp1_asDynamic;
          }
          tmp$ret$1[arity] = result;
          tmp$ret$2 = result;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = tmp$ret$3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PrimitiveClasses.$metadata$ = objectMeta('PrimitiveClasses');
  Object.defineProperty(PrimitiveClasses.prototype, 'anyClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.qe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'numberClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.re
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'nothingClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.se
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.te
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ue
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ve
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.we
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.xe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ye
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'arrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ze
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'stringClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.af
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'throwableClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.bf
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.cf
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'charArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.df
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ef
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ff
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.gf
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'longArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.hf
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.if
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.jf
  });
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses();
    return PrimitiveClasses_instance;
  }
  var properties_initialized_primitives_kt_jle18u;
  function init_properties_primitives_kt_rm1w5q() {
    if (properties_initialized_primitives_kt_jle18u) {
    } else {
      properties_initialized_primitives_kt_jle18u = true;
      var tmp$ret$0;
      {
        tmp$ret$0 = fillArrayVal(Array(0), null);
      }
      functionClasses = tmp$ret$0;
    }
  }
  function getKClass(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = jClass;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = getKClassM(tmp$ret$1);
    } else {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = jClass;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp = getKClass1(tmp$ret$3);
    }
    return tmp;
  }
  function getKClassM(jClasses) {
    var tmp0_subject = jClasses.length;
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = getKClass1(jClasses[0]);
        break;
      case 0:
        var tmp$ret$1;
        {
          var tmp0_unsafeCast = NothingKClassImpl_getInstance();
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp$ret$1 = tmp$ret$0;
        }

        tmp = tmp$ret$1;
        break;
      default:
        var tmp$ret$3;
        {
          var tmp1_unsafeCast = new ErrorKClass();
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp1_unsafeCast;
          }
          tmp$ret$3 = tmp$ret$2;
        }

        tmp = tmp$ret$3;
        break;
    }
    return tmp;
  }
  function getKClass1(jClass) {
    if (jClass === String) {
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = PrimitiveClasses_getInstance().ge_1;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      return tmp$ret$1;
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = jClass;
    }
    var metadata = tmp$ret$2.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression(e) {
    var tmp$ret$3;
    {
      var tmp0_subject = typeof e;
      var tmp;
      switch (tmp0_subject) {
        case 'string':
          tmp = PrimitiveClasses_getInstance().ge_1;
          break;
        case 'number':
          var tmp_0;
          var tmp$ret$0;
          {
            var tmp0_asDynamic = jsBitwiseOr(e, 0);
            tmp$ret$0 = tmp0_asDynamic;
          }

          if (tmp$ret$0 === e) {
            tmp_0 = PrimitiveClasses_getInstance().ce_1;
          } else {
            tmp_0 = PrimitiveClasses_getInstance().ee_1;
          }

          tmp = tmp_0;
          break;
        case 'boolean':
          tmp = PrimitiveClasses_getInstance().zd_1;
          break;
        case 'function':
          var tmp_1 = PrimitiveClasses_getInstance();
          var tmp$ret$1;
          {
            tmp$ret$1 = e;
          }

          tmp = tmp_1.functionClass(tmp$ret$1.length);
          break;
        default:
          var tmp_2;
          if (isBooleanArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().ie_1;
          } else {
            if (isCharArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().je_1;
            } else {
              if (isByteArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().ke_1;
              } else {
                if (isShortArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().le_1;
                } else {
                  if (isIntArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().me_1;
                  } else {
                    if (isLongArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().ne_1;
                    } else {
                      if (isFloatArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance().oe_1;
                      } else {
                        if (isDoubleArray(e)) {
                          tmp_2 = PrimitiveClasses_getInstance().pe_1;
                        } else {
                          if (isInterface(e, KClass)) {
                            tmp_2 = getKClass(KClass);
                          } else {
                            if (isArray(e)) {
                              tmp_2 = PrimitiveClasses_getInstance().fe_1;
                            } else {
                              var constructor = Object.getPrototypeOf(e).constructor;
                              var tmp_3;
                              if (constructor === Object) {
                                tmp_3 = PrimitiveClasses_getInstance().wd_1;
                              } else if (constructor === Error) {
                                tmp_3 = PrimitiveClasses_getInstance().he_1;
                              } else {
                                var jsClass = constructor;
                                tmp_3 = getKClass1(jsClass);
                              }
                              tmp_2 = tmp_3;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          tmp = tmp_2;
          break;
      }
      var tmp1_unsafeCast = tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_unsafeCast;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  }
  function Appendable() {
  }
  Appendable.$metadata$ = interfaceMeta('Appendable');
  function CharacterCodingException(message) {
    Exception_init_$Init$_0(message, this);
    captureStack(this, CharacterCodingException);
  }
  CharacterCodingException.$metadata$ = classMeta('CharacterCodingException', undefined, undefined, undefined, undefined, Exception.prototype);
  function StringBuilder_init_$Init$(capacity, $this) {
    StringBuilder_init_$Init$_0($this);
    return $this;
  }
  function StringBuilder_init_$Create$(capacity) {
    return StringBuilder_init_$Init$(capacity, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_0($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_0() {
    return StringBuilder_init_$Init$_0(Object.create(StringBuilder.prototype));
  }
  function StringBuilder(content) {
    this.kf_1 = !(content === undefined) ? content : '';
  }
  StringBuilder.prototype.s7 = function () {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = this.kf_1;
      tmp$ret$0 = tmp0_asDynamic;
    }
    return tmp$ret$0.length;
  };
  StringBuilder.prototype.t7 = function (index) {
    var tmp$ret$0;
    {
      var tmp0_getOrElse = this.kf_1;
      var tmp;
      if (index >= 0 ? index <= get_lastIndex_1(tmp0_getOrElse) : false) {
        tmp = charSequenceGet(tmp0_getOrElse, index);
      } else {
        throw IndexOutOfBoundsException_init_$Create$_0('index: ' + index + ', length: ' + this.s7() + '}');
      }
      tmp$ret$0 = tmp;
    }
    return tmp$ret$0;
  };
  StringBuilder.prototype.u7 = function (startIndex, endIndex) {
    var tmp$ret$1;
    {
      var tmp0_substring = this.kf_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_substring;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    }
    return tmp$ret$1;
  };
  StringBuilder.prototype.b5 = function (value) {
    var tmp0_this = this;
    tmp0_this.kf_1 = tmp0_this.kf_1 + new Char_0(value);
    return this;
  };
  StringBuilder.prototype.b = function (value) {
    var tmp0_this = this;
    tmp0_this.kf_1 = tmp0_this.kf_1 + toString_1(value);
    return this;
  };
  StringBuilder.prototype.lf = function (value, startIndex, endIndex) {
    var tmp0_elvis_lhs = value;
    return this.mf(tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, startIndex, endIndex);
  };
  StringBuilder.prototype.nf = function (value) {
    var tmp0_this = this;
    tmp0_this.kf_1 = tmp0_this.kf_1 + toString_1(value);
    return this;
  };
  StringBuilder.prototype.of = function (value) {
    var tmp0_this = this;
    tmp0_this.kf_1 = tmp0_this.kf_1 + value;
    return this;
  };
  StringBuilder.prototype.pf = function (value) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.kf_1;
    var tmp1_elvis_lhs = value;
    tmp.kf_1 = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
    return this;
  };
  StringBuilder.prototype.toString = function () {
    return this.kf_1;
  };
  StringBuilder.prototype.mf = function (value, startIndex, endIndex) {
    var stringCsq = toString_2(value);
    Companion_getInstance().q1(startIndex, endIndex, stringCsq.length);
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.kf_1;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = stringCsq;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    }
    tmp.kf_1 = tmp_0 + tmp$ret$1;
    return this;
  };
  StringBuilder.$metadata$ = classMeta('StringBuilder', [Appendable, CharSequence]);
  function uppercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var uppercase = tmp$ret$2;
    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
  }
  function lowercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = toString_0(_this__u8e3s4);
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
        tmp$ret$1 = tmp1_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return charSequenceGet(tmp$ret$2, 0);
  }
  function uppercase(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = toString_0(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function lowercase(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = toString_0(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function isHighSurrogate(_this__u8e3s4) {
    Companion_getInstance_13();
    var containsLower = _Char___init__impl__6a9atx(55296);
    var tmp;
    Companion_getInstance_13();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(56319)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isLowSurrogate(_this__u8e3s4) {
    Companion_getInstance_13();
    var containsLower = _Char___init__impl__6a9atx(56320);
    var tmp;
    Companion_getInstance_13();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(57343)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function toLowerCase(_this__u8e3s4) {
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_asDynamic = toString_0(_this__u8e3s4);
            tmp$ret$0 = tmp0_asDynamic;
          }
          var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
          tmp$ret$1 = tmp1_unsafeCast;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
    }
    return tmp$ret$3;
  }
  function isWhitespace(_this__u8e3s4) {
    return isWhitespaceImpl(_this__u8e3s4);
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$_0('radix ' + radix + ' was not in valid range 2..36');
    }
    return radix;
  }
  function toDoubleOrNull(_this__u8e3s4) {
    var tmp$ret$3;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = +tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var tmp1_takeIf = tmp$ret$1;
      {
      }
      var tmp;
      var tmp$ret$2;
      {
        tmp$ret$2 = !((isNaN_0(tmp1_takeIf) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_takeIf === 0.0 ? isBlank(_this__u8e3s4) : false);
      }
      if (tmp$ret$2) {
        tmp = tmp1_takeIf;
      } else {
        tmp = null;
      }
      tmp$ret$3 = tmp;
    }
    return tmp$ret$3;
  }
  function toLong(_this__u8e3s4) {
    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toInt(_this__u8e3s4) {
    var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function digitOf(char, radix) {
    var tmp$ret$1;
    {
      var tmp0_let = (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_let >= radix ? -1 : tmp0_let;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function isNaN_2(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var tmp0_subject = tmp$ret$1;
    switch (tmp0_subject) {
      case 'nan':
      case '+nan':
      case '-nan':
        return true;
      default:
        return false;
    }
  }
  function toByte(_this__u8e3s4) {
    var tmp0_elvis_lhs = toByteOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toShort(_this__u8e3s4) {
    var tmp0_elvis_lhs = toShortOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toFloat(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = toDouble(_this__u8e3s4);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function toDouble(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = +tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var tmp1_also = tmp$ret$1;
      {
      }
      {
        if ((isNaN_0(tmp1_also) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_also === 0.0 ? isBlank(_this__u8e3s4) : false) {
          numberFormatError(_this__u8e3s4);
        }
      }
      tmp$ret$2 = tmp1_also;
    }
    return tmp$ret$2;
  }
  function Companion_12() {
    Companion_instance_12 = this;
    this.qf_1 = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
    this.rf_1 = new RegExp('[\\\\$]', 'g');
    this.sf_1 = new RegExp('\\$', 'g');
  }
  Companion_12.prototype.tf = function (literal) {
    var tmp$ret$1;
    {
      var tmp0_nativeReplace = this.qf_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = literal;
      }
      tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, '\\$&');
    }
    return tmp$ret$1;
  };
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  var STRING_CASE_INSENSITIVE_ORDER;
  function nativeLastIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.lastIndexOf(str, fromIndex);
  }
  function substring_1(_this__u8e3s4, startIndex, endIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.substring(startIndex, endIndex);
  }
  function substring_2(_this__u8e3s4, startIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.substring(startIndex);
  }
  function compareTo(_this__u8e3s4, other, ignoreCase) {
    init_properties_string_kt_z8k4s7();
    if (ignoreCase) {
      var n1 = _this__u8e3s4.length;
      var n2 = other.length;
      var tmp$ret$0;
      {
        tmp$ret$0 = Math.min(n1, n2);
      }
      var min = tmp$ret$0;
      if (min === 0)
        return n1 - n2 | 0;
      var inductionVariable = 0;
      if (inductionVariable < min)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var thisChar = charSequenceGet(_this__u8e3s4, index);
          var otherChar = charSequenceGet(other, index);
          if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
            thisChar = uppercaseChar(thisChar);
            otherChar = uppercaseChar(otherChar);
            if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
              var tmp$ret$4;
              {
                var tmp0_lowercaseChar = thisChar;
                var tmp$ret$3;
                {
                  var tmp$ret$2;
                  {
                    var tmp$ret$1;
                    {
                      var tmp0_asDynamic = toString_0(tmp0_lowercaseChar);
                      tmp$ret$1 = tmp0_asDynamic;
                    }
                    var tmp1_unsafeCast = tmp$ret$1.toLowerCase();
                    tmp$ret$2 = tmp1_unsafeCast;
                  }
                  tmp$ret$3 = tmp$ret$2;
                }
                tmp$ret$4 = charSequenceGet(tmp$ret$3, 0);
              }
              thisChar = tmp$ret$4;
              var tmp$ret$8;
              {
                var tmp1_lowercaseChar = otherChar;
                var tmp$ret$7;
                {
                  var tmp$ret$6;
                  {
                    var tmp$ret$5;
                    {
                      var tmp0_asDynamic_0 = toString_0(tmp1_lowercaseChar);
                      tmp$ret$5 = tmp0_asDynamic_0;
                    }
                    var tmp1_unsafeCast_0 = tmp$ret$5.toLowerCase();
                    tmp$ret$6 = tmp1_unsafeCast_0;
                  }
                  tmp$ret$7 = tmp$ret$6;
                }
                tmp$ret$8 = charSequenceGet(tmp$ret$7, 0);
              }
              otherChar = tmp$ret$8;
              if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
                return Char__compareTo_impl_ypi4mb(thisChar, otherChar);
              }
            }
          }
        }
         while (inductionVariable < min);
      return n1 - n2 | 0;
    } else {
      return compareTo_0(_this__u8e3s4, other);
    }
  }
  function toLowerCase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.toLowerCase();
  }
  function decodeToString(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    return decodeUtf8(_this__u8e3s4, 0, _this__u8e3s4.length, false);
  }
  function concatToString(_this__u8e3s4, startIndex, endIndex) {
    init_properties_string_kt_z8k4s7();
    Companion_getInstance().q1(startIndex, endIndex, _this__u8e3s4.length);
    var result = '';
    var inductionVariable = startIndex;
    if (inductionVariable < endIndex)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = result + new Char_0(_this__u8e3s4[index]);
      }
       while (inductionVariable < endIndex);
    return result;
  }
  function nativeReplace(_this__u8e3s4, pattern, replacement) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.replace(pattern, replacement);
  }
  function nativeIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.indexOf(str, fromIndex);
  }
  function lowercase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.toLowerCase();
  }
  function nativeStartsWith(_this__u8e3s4, s, position) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.startsWith(s, position);
  }
  function nativeEndsWith(_this__u8e3s4, s) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.endsWith(s);
  }
  function uppercase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.toUpperCase();
  }
  function sam$kotlin_Comparator$0_3(function_0) {
    this.uf_1 = function_0;
  }
  sam$kotlin_Comparator$0_3.prototype.p = function (a, b) {
    return this.uf_1(a, b);
  };
  sam$kotlin_Comparator$0_3.prototype.compare = function (a, b) {
    return this.p(a, b);
  };
  sam$kotlin_Comparator$0_3.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function STRING_CASE_INSENSITIVE_ORDER$lambda() {
    return function (a, b) {
      return compareTo(a, b, true);
    };
  }
  var properties_initialized_string_kt_4g1sj;
  function init_properties_string_kt_z8k4s7() {
    if (properties_initialized_string_kt_4g1sj) {
    } else {
      properties_initialized_string_kt_4g1sj = true;
      var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda();
      STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0_3(tmp);
    }
  }
  function replace(_this__u8e3s4, oldChar, newChar, ignoreCase) {
    var tmp$ret$1;
    {
      var tmp0_nativeReplace = new RegExp(Companion_getInstance_12().tf(toString_0(oldChar)), ignoreCase ? 'gui' : 'gu');
      var tmp1_nativeReplace = toString_0(newChar);
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, tmp1_nativeReplace);
    }
    return tmp$ret$1;
  }
  function replace$default(_this__u8e3s4, oldChar, newChar, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return replace(_this__u8e3s4, oldChar, newChar, ignoreCase);
  }
  function equals_0(_this__u8e3s4, other, ignoreCase) {
    if (_this__u8e3s4 == null)
      return other == null;
    if (other == null)
      return false;
    if (!ignoreCase)
      return _this__u8e3s4 == other;
    if (!(_this__u8e3s4.length === other.length))
      return false;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var thisChar = charSequenceGet(_this__u8e3s4, index);
        var otherChar = charSequenceGet(other, index);
        if (!equals(thisChar, otherChar, ignoreCase)) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function isBlank(_this__u8e3s4) {
    var tmp;
    if (charSequenceLength(_this__u8e3s4) === 0) {
      tmp = true;
    } else {
      var tmp$ret$0;
      $l$block_0: {
        var tmp0_all = get_indices_0(_this__u8e3s4);
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.m();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.j6();
        var last = tmp0_all.h8();
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              tmp$ret$1 = isWhitespace(charSequenceGet(_this__u8e3s4, element));
            }
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function nativeIndexOf_0(_this__u8e3s4, ch, fromIndex) {
    var tmp$ret$1;
    {
      var tmp0_nativeIndexOf = toString_0(ch);
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, fromIndex);
    }
    return tmp$ret$1;
  }
  function startsWith(_this__u8e3s4, prefix, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.startsWith(prefix, 0);
      }
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default(_this__u8e3s4, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith(_this__u8e3s4, prefix, ignoreCase);
  }
  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function startsWith_0(_this__u8e3s4, prefix, startIndex, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.startsWith(prefix, startIndex);
      }
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, startIndex, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_0(_this__u8e3s4, prefix, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return startsWith_0(_this__u8e3s4, prefix, startIndex, ignoreCase);
  }
  function endsWith(_this__u8e3s4, suffix, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.endsWith(suffix);
      }
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, _this__u8e3s4.length - suffix.length | 0, suffix, 0, suffix.length, ignoreCase);
  }
  function endsWith$default(_this__u8e3s4, suffix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return endsWith(_this__u8e3s4, suffix, ignoreCase);
  }
  function nativeLastIndexOf_0(_this__u8e3s4, ch, fromIndex) {
    var tmp$ret$1;
    {
      var tmp0_nativeLastIndexOf = toString_0(ch);
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0.lastIndexOf(tmp0_nativeLastIndexOf, fromIndex);
    }
    return tmp$ret$1;
  }
  function capitalize(_this__u8e3s4) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) > 0;
    }
    if (tmp$ret$0) {
      var tmp$ret$4;
      {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = _this__u8e3s4;
          }
          tmp$ret$2 = tmp$ret$1.substring(0, 1);
        }
        var tmp0_uppercase = tmp$ret$2;
        var tmp$ret$3;
        {
          tmp$ret$3 = tmp0_uppercase;
        }
        tmp$ret$4 = tmp$ret$3.toUpperCase();
      }
      var tmp_0 = tmp$ret$4;
      var tmp$ret$6;
      {
        var tmp$ret$5;
        {
          tmp$ret$5 = _this__u8e3s4;
        }
        tmp$ret$6 = tmp$ret$5.substring(1);
      }
      tmp = tmp_0 + tmp$ret$6;
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  var REPLACEMENT_BYTE_SEQUENCE;
  function decodeUtf8(bytes, startIndex, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    {
      var tmp0_require = (startIndex >= 0 ? endIndex <= bytes.length : false) ? startIndex <= endIndex : false;
      {
      }
      {
        {
        }
        if (!tmp0_require) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Failed requirement.';
          }
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$_0(toString_2(message));
        }
      }
    }
    var byteIndex = startIndex;
    var stringBuilder = StringBuilder_init_$Create$_0();
    while (byteIndex < endIndex) {
      var tmp0 = byteIndex;
      byteIndex = tmp0 + 1 | 0;
      var byte = bytes[tmp0];
      if (byte >= 0) {
        stringBuilder.b5(numberToChar(byte));
      } else if (byte >> 5 === -2) {
        var code = codePointFrom2(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code <= 0) {
          stringBuilder.b5(_Char___init__impl__6a9atx(65533));
          byteIndex = byteIndex + (-code | 0) | 0;
        } else {
          stringBuilder.b5(numberToChar(code));
          byteIndex = byteIndex + 1 | 0;
        }
      } else if (byte >> 4 === -2) {
        var code_0 = codePointFrom3(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code_0 <= 0) {
          stringBuilder.b5(_Char___init__impl__6a9atx(65533));
          byteIndex = byteIndex + (-code_0 | 0) | 0;
        } else {
          stringBuilder.b5(numberToChar(code_0));
          byteIndex = byteIndex + 2 | 0;
        }
      } else if (byte >> 3 === -2) {
        var code_1 = codePointFrom4(bytes, byte, byteIndex, endIndex, throwOnMalformed);
        if (code_1 <= 0) {
          stringBuilder.b5(_Char___init__impl__6a9atx(65533));
          byteIndex = byteIndex + (-code_1 | 0) | 0;
        } else {
          var high = (code_1 - 65536 | 0) >> 10 | 55296;
          var low = code_1 & 1023 | 56320;
          stringBuilder.b5(numberToChar(high));
          stringBuilder.b5(numberToChar(low));
          byteIndex = byteIndex + 3 | 0;
        }
      } else {
        malformed(0, byteIndex, throwOnMalformed);
        stringBuilder.b5(_Char___init__impl__6a9atx(65533));
      }
    }
    return stringBuilder.toString();
  }
  function codePointFrom2(bytes, byte1, index, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if ((byte1 & 30) === 0 ? true : index >= endIndex) {
      return malformed(0, index, throwOnMalformed);
    }
    var byte2 = bytes[index];
    if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
    return byte1 << 6 ^ byte2 ^ 3968;
  }
  function codePointFrom3(bytes, byte1, index, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if (index >= endIndex) {
      return malformed(0, index, throwOnMalformed);
    }
    var byte2 = bytes[index];
    if ((byte1 & 15) === 0) {
      if (!((byte2 & 224) === 160)) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if ((byte1 & 15) === 13) {
      if (!((byte2 & 224) === 128)) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
    if ((index + 1 | 0) === endIndex) {
      return malformed(1, index, throwOnMalformed);
    }
    var byte3 = bytes[index + 1 | 0];
    if (!((byte3 & 192) === 128)) {
      return malformed(1, index, throwOnMalformed);
    }
    return byte1 << 12 ^ byte2 << 6 ^ byte3 ^ -123008;
  }
  function codePointFrom4(bytes, byte1, index, endIndex, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if (index >= endIndex) {
      malformed(0, index, throwOnMalformed);
    }
    var byte2 = bytes[index];
    if ((byte1 & 15) === 0) {
      if ((byte2 & 240) <= 128) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if ((byte1 & 15) === 4) {
      if (!((byte2 & 240) === 128)) {
        return malformed(0, index, throwOnMalformed);
      }
    } else if ((byte1 & 15) > 4) {
      return malformed(0, index, throwOnMalformed);
    } else if (!((byte2 & 192) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
    if ((index + 1 | 0) === endIndex) {
      return malformed(1, index, throwOnMalformed);
    }
    var byte3 = bytes[index + 1 | 0];
    if (!((byte3 & 192) === 128)) {
      return malformed(1, index, throwOnMalformed);
    }
    if ((index + 2 | 0) === endIndex) {
      return malformed(2, index, throwOnMalformed);
    }
    var byte4 = bytes[index + 2 | 0];
    if (!((byte4 & 192) === 128)) {
      return malformed(2, index, throwOnMalformed);
    }
    return byte1 << 18 ^ byte2 << 12 ^ byte3 << 6 ^ byte4 ^ 3678080;
  }
  function malformed(size, index, throwOnMalformed) {
    init_properties_utf8Encoding_kt_xjxnfa();
    if (throwOnMalformed)
      throw new CharacterCodingException('Malformed sequence starting at ' + (index - 1 | 0));
    return -size | 0;
  }
  var properties_initialized_utf8Encoding_kt_eee1vq;
  function init_properties_utf8Encoding_kt_xjxnfa() {
    if (properties_initialized_utf8Encoding_kt_eee1vq) {
    } else {
      properties_initialized_utf8Encoding_kt_eee1vq = true;
      var tmp$ret$0;
      {
        var tmp0_byteArrayOf = new Int8Array([-17, -65, -67]);
        tmp$ret$0 = tmp0_byteArrayOf;
      }
      REPLACEMENT_BYTE_SEQUENCE = tmp$ret$0;
    }
  }
  function addSuppressed(_this__u8e3s4, exception) {
    if (!(_this__u8e3s4 === exception)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        var tmp0_unsafeCast = tmp$ret$0._suppressed;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      var suppressed = tmp$ret$1;
      if (suppressed == null) {
        var tmp$ret$2;
        {
          tmp$ret$2 = _this__u8e3s4;
        }
        tmp$ret$2._suppressed = mutableListOf_0([exception]);
      } else {
        suppressed.a(exception);
      }
    }
  }
  function set_0(_this__u8e3s4, index, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[index] = value;
  }
  function get_2(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0[index];
  }
  function set_1(_this__u8e3s4, index, value) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    tmp$ret$0[index] = value;
  }
  function get_ARRAYBUFFER(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = 'arraybuffer';
      }
      var tmp0_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp0_unsafeCast;
    }
    return tmp$ret$1;
  }
  function get_FOLLOW(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = 'follow';
      }
      var tmp0_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp0_unsafeCast;
    }
    return tmp$ret$1;
  }
  function _Char___init__impl__6a9atx(value) {
    return value;
  }
  function _get_value__a43j40($this) {
    return $this;
  }
  function _Char___init__impl__6a9atx_0(code) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
    }
    var tmp = _Char___init__impl__6a9atx(tmp$ret$0);
    return tmp;
  }
  function Char__compareTo_impl_ypi4mb($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__compareTo_impl_ypi4mb_0($this, other) {
    var tmp = $this.i1_1;
    return Char__compareTo_impl_ypi4mb(tmp, other instanceof Char_0 ? other.i1_1 : THROW_CCE());
  }
  function Char__plus_impl_qi7pgj($this, other) {
    return numberToChar(_get_value__a43j40($this) + other | 0);
  }
  function Char__minus_impl_a2frrh($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__minus_impl_a2frrh_0($this, other) {
    return numberToChar(_get_value__a43j40($this) - other | 0);
  }
  function Char__rangeTo_impl_tkncvp($this, other) {
    return new CharRange($this, other);
  }
  function Char__toByte_impl_7s7yt0($this) {
    return toByte_0(_get_value__a43j40($this));
  }
  function Char__toInt_impl_vasixd($this) {
    return _get_value__a43j40($this);
  }
  function Char__equals_impl_x6719k($this, other) {
    if (!(other instanceof Char_0))
      return false;
    return _get_value__a43j40($this) === _get_value__a43j40(other.i1_1);
  }
  function Char__hashCode_impl_otmys($this) {
    return _get_value__a43j40($this);
  }
  function toString_0($this) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = String.fromCharCode(_get_value__a43j40($this));
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function Companion_13() {
    Companion_instance_13 = this;
    this.vf_1 = _Char___init__impl__6a9atx(0);
    this.wf_1 = _Char___init__impl__6a9atx(65535);
    this.xf_1 = _Char___init__impl__6a9atx(55296);
    this.yf_1 = _Char___init__impl__6a9atx(56319);
    this.zf_1 = _Char___init__impl__6a9atx(56320);
    this.ag_1 = _Char___init__impl__6a9atx(57343);
    this.bg_1 = _Char___init__impl__6a9atx(55296);
    this.cg_1 = _Char___init__impl__6a9atx(57343);
    this.dg_1 = 2;
    this.eg_1 = 16;
  }
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Char_0(value) {
    Companion_getInstance_13();
    this.i1_1 = value;
  }
  Char_0.prototype.fg = function (other) {
    return Char__compareTo_impl_ypi4mb(this.i1_1, other);
  };
  Char_0.prototype.u6 = function (other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  };
  Char_0.prototype.equals = function (other) {
    return Char__equals_impl_x6719k(this.i1_1, other);
  };
  Char_0.prototype.hashCode = function () {
    return Char__hashCode_impl_otmys(this.i1_1);
  };
  Char_0.prototype.toString = function () {
    return toString_0(this.i1_1);
  };
  Char_0.$metadata$ = classMeta('Char', [Comparable]);
  function Iterable_0() {
  }
  Iterable_0.$metadata$ = interfaceMeta('Iterable');
  function List() {
  }
  List.$metadata$ = interfaceMeta('List', [Collection]);
  function MutableSet() {
  }
  MutableSet.$metadata$ = interfaceMeta('MutableSet', [Set, MutableCollection]);
  function Set() {
  }
  Set.$metadata$ = interfaceMeta('Set', [Collection]);
  function Entry() {
  }
  Entry.$metadata$ = interfaceMeta('Entry');
  function Map() {
  }
  Map.$metadata$ = interfaceMeta('Map');
  function MutableEntry() {
  }
  MutableEntry.$metadata$ = interfaceMeta('MutableEntry', [Entry]);
  function MutableMap() {
  }
  MutableMap.$metadata$ = interfaceMeta('MutableMap', [Map]);
  function MutableList() {
  }
  MutableList.$metadata$ = interfaceMeta('MutableList', [List, MutableCollection]);
  function MutableCollection() {
  }
  MutableCollection.$metadata$ = interfaceMeta('MutableCollection', [Collection, MutableIterable]);
  function Collection() {
  }
  Collection.$metadata$ = interfaceMeta('Collection', [Iterable_0]);
  function MutableIterable() {
  }
  MutableIterable.$metadata$ = interfaceMeta('MutableIterable', [Iterable_0]);
  function Companion_14() {
    Companion_instance_14 = this;
  }
  Companion_14.$metadata$ = objectMeta('Companion');
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_14();
    this.i4_1 = name;
    this.j4_1 = ordinal;
  }
  Enum.prototype.gg = function () {
    return this.i4_1;
  };
  Enum.prototype.a5 = function () {
    return this.j4_1;
  };
  Enum.prototype.k4 = function (other) {
    return compareTo_0(this.j4_1, other.j4_1);
  };
  Enum.prototype.u6 = function (other) {
    return this.k4(other instanceof Enum ? other : THROW_CCE());
  };
  Enum.prototype.equals = function (other) {
    return this === other;
  };
  Enum.prototype.hashCode = function () {
    return identityHashCode(this);
  };
  Enum.prototype.toString = function () {
    return this.i4_1;
  };
  Enum.$metadata$ = classMeta('Enum', [Comparable]);
  function byteArrayOf(elements) {
    return elements;
  }
  function arrayOf(elements) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = elements;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function intArrayOf(elements) {
    return elements;
  }
  function toString_1(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_2(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function charArrayOf(elements) {
    return elements;
  }
  function plus_5(_this__u8e3s4, other) {
    var tmp2_safe_receiver = _this__u8e3s4;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : toString_2(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
    var tmp0_safe_receiver = other;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_2(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last = array.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last));
    return array;
  }
  function arrayIterator(array) {
    return new arrayIterator$1(array);
  }
  function booleanArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = fillArrayVal(Array(size), false);
        tmp0_withType.$type$ = 'BooleanArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function charArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = new Uint16Array(size);
        tmp0_withType.$type$ = 'CharArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function longArray(size) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = fillArrayVal(Array(size), new Long(0, 0));
        tmp0_withType.$type$ = 'LongArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function charArrayOf_0(arr) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0_withType = new Uint16Array(arr);
        tmp0_withType.$type$ = 'CharArray';
        tmp$ret$0 = tmp0_withType;
      }
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
    }
    return tmp$ret$1;
  }
  function arrayIterator$1($array) {
    this.ig_1 = $array;
    this.hg_1 = 0;
  }
  arrayIterator$1.prototype.e = function () {
    return !(this.hg_1 === this.ig_1.length);
  };
  arrayIterator$1.prototype.f = function () {
    var tmp;
    if (!(this.hg_1 === this.ig_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.hg_1;
      tmp0_this.hg_1 = tmp1 + 1 | 0;
      tmp = this.ig_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.hg_1);
    }
    return tmp;
  };
  arrayIterator$1.$metadata$ = classMeta(undefined, [Iterator]);
  function get_buf() {
    init_properties_bitUtils_kt_cxtw9i();
    return buf;
  }
  var buf;
  function get_bufFloat64() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufFloat64;
  }
  var bufFloat64;
  var bufFloat32;
  function get_bufInt32() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufInt32;
  }
  var bufInt32;
  function get_lowIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return lowIndex;
  }
  var lowIndex;
  function get_highIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return highIndex;
  }
  var highIndex;
  function getNumberHashCode(obj) {
    init_properties_bitUtils_kt_cxtw9i();
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = jsBitwiseOr(obj, 0);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    if (tmp$ret$1 === obj) {
      return numberToInt(obj);
    }
    get_bufFloat64()[0] = obj;
    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
  }
  var properties_initialized_bitUtils_kt_i2bo3e;
  function init_properties_bitUtils_kt_cxtw9i() {
    if (properties_initialized_bitUtils_kt_i2bo3e) {
    } else {
      properties_initialized_bitUtils_kt_i2bo3e = true;
      buf = new ArrayBuffer(8);
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = new Float64Array(get_buf());
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      bufFloat64 = tmp$ret$1;
      var tmp$ret$1_0;
      {
        var tmp0_unsafeCast_0 = new Float32Array(get_buf());
        var tmp$ret$0_0;
        {
          tmp$ret$0_0 = tmp0_unsafeCast_0;
        }
        tmp$ret$1_0 = tmp$ret$0_0;
      }
      bufFloat32 = tmp$ret$1_0;
      var tmp$ret$1_1;
      {
        var tmp0_unsafeCast_1 = new Int32Array(get_buf());
        var tmp$ret$0_1;
        {
          tmp$ret$0_1 = tmp0_unsafeCast_1;
        }
        tmp$ret$1_1 = tmp$ret$0_1;
      }
      bufInt32 = tmp$ret$1_1;
      var tmp$ret$1_2;
      {
        {
        }
        var tmp$ret$0_2;
        {
          get_bufFloat64()[0] = -1.0;
          tmp$ret$0_2 = !(get_bufInt32()[0] === 0) ? 1 : 0;
        }
        tmp$ret$1_2 = tmp$ret$0_2;
      }
      lowIndex = tmp$ret$1_2;
      highIndex = 1 - get_lowIndex() | 0;
    }
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$4;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = a;
          }
          var tmp0_unsafeCast = tmp$ret$0.charCodeAt(index);
          tmp$ret$1 = tmp0_unsafeCast;
        }
        var tmp1_Char = tmp$ret$1;
        var tmp_0;
        var tmp$ret$2;
        {
          Companion_getInstance_13();
          var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
          tmp$ret$2 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        }
        if (tmp1_Char < tmp$ret$2) {
          tmp_0 = true;
        } else {
          var tmp$ret$3;
          {
            Companion_getInstance_13();
            var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
            tmp$ret$3 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
          }
          tmp_0 = tmp1_Char > tmp$ret$3;
        }
        if (tmp_0) {
          throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + tmp1_Char);
        }
        tmp$ret$4 = numberToChar(tmp1_Char);
      }
      tmp = tmp$ret$4;
    } else {
      tmp = a.t7(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a;
        }
        var tmp0_unsafeCast = tmp$ret$0.length;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = a.s7();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = a;
        }
        var tmp0_unsafeCast = tmp$ret$0.substring(startIndex, endIndex);
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = a.u7(startIndex, endIndex);
    }
    return tmp;
  }
  function arrayToString(array) {
    return joinToString$default(array, ', ', '[', ']', 0, null, arrayToString$lambda(), 24, null);
  }
  function contentEqualsInternal(_this__u8e3s4, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = other;
    }
    var b = tmp$ret$1;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_1(a[i], b[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function contentHashCodeInternal(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode_0(a[i]) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function arrayToString$lambda() {
    return function (it) {
      return toString_2(it);
    };
  }
  function compareTo_0(a, b) {
    var tmp0_subject = typeof a;
    var tmp;
    switch (tmp0_subject) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.jg());
          } else {
            tmp_0 = primitiveCompareTo(a, b);
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:
        tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        var tmp$ret$0;
        {
          tmp$ret$0 = 1;
        }
        var ia = tmp$ret$0 / a;
        var tmp_1;
        var tmp$ret$1;
        {
          tmp$ret$1 = 1;
        }
        if (ia === tmp$ret$1 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            tmp_1 = 1;
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.u6(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    if (!jsIn('kotlinHashCodeValue$', obj)) {
      var hash = jsBitwiseOr(Math.random() * 4.294967296E9, 0);
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = obj['kotlinHashCodeValue$'];
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function toString_2(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      var tmp$ret$0;
      {
        var tmp0_unsafeCast = o.toString();
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function equals_1(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }
    if (obj2 == null) {
      return false;
    }
    if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }
    if (obj1 !== obj1) {
      return obj2 !== obj2;
    }
    if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          {
            tmp$ret$0 = 1;
          }
          var tmp_1 = tmp$ret$0 / obj1;
          var tmp$ret$1;
          {
            tmp$ret$1 = 1;
          }
          tmp_0 = tmp_1 === tmp$ret$1 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }
    return obj1 === obj2;
  }
  function hashCode_0(obj) {
    if (obj == null)
      return 0;
    var tmp0_subject = typeof obj;
    var tmp;
    switch (tmp0_subject) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        var tmp$ret$0;
        {
          tmp$ret$0 = obj;
        }

        if (tmp$ret$0) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = getStringHashCode(String(obj));
        break;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last = length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = str;
        }
        var code = tmp$ret$0.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last));
    return hash;
  }
  function anyToString(o) {
    return Object.prototype.toString.call(o);
  }
  function boxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function unboxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = instance;
      }
      tmp$ret$0.stack = (new Error()).stack;
    }
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    if (!hasOwnPrototypeProperty(this_, 'message')) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp0_safe_receiver = cause;
          var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
          tmp_0 = tmp1_elvis_lhs == null ? undefined : tmp1_elvis_lhs;
        } else {
          tmp_0 = undefined;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }
    if (!hasOwnPrototypeProperty(this_, 'cause')) {
      this_.cause = cause;
    }
    this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function hasOwnPrototypeProperty(o, name) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Object.getPrototypeOf(o).hasOwnProperty(name);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('lateinit property ' + name + ' has not been initialized');
  }
  function throwKotlinNothingValueException() {
    throw KotlinNothingValueException_init_$Create$();
  }
  function lazy(initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function lazy_0(mode, initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function emptyArray() {
    return [];
  }
  function fillFrom(src, dst) {
    var srcLen = src.length;
    var dstLen = dst.length;
    var index = 0;
    var tmp$ret$0;
    {
      tmp$ret$0 = dst;
    }
    var arr = tmp$ret$0;
    while (index < srcLen ? index < dstLen : false) {
      var tmp = index;
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      arr[tmp] = src[tmp0];
    }
    return dst;
  }
  function arrayCopyResize(source, newSize, defaultValue) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = source.slice(0, newSize);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    var result = tmp$ret$0;
    {
      if (source.$type$ !== undefined) {
        result.$type$ = source.$type$;
      }
    }
    var index = source.length;
    if (newSize > index) {
      var tmp$ret$1;
      {
        tmp$ret$1 = result;
      }
      tmp$ret$1.length = newSize;
      while (index < newSize) {
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        result[tmp0] = defaultValue;
      }
    }
    return result;
  }
  function copyArrayType(from, to) {
    if (from.$type$ !== undefined) {
      to.$type$ = from.$type$;
    }
  }
  function Companion_15() {
    Companion_instance_15 = this;
    this.kg_1 = new Long(0, -2147483648);
    this.lg_1 = new Long(-1, 2147483647);
    this.mg_1 = 8;
    this.ng_1 = 64;
  }
  Companion_15.prototype.w8 = function () {
    return this.lg_1;
  };
  Companion_15.$metadata$ = objectMeta('Companion');
  var Companion_instance_15;
  function Companion_getInstance_15() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function Long(low, high) {
    Companion_getInstance_15();
    Number_0.call(this);
    this.e1_1 = low;
    this.f1_1 = high;
  }
  Long.prototype.g1 = function (other) {
    return compare(this, other);
  };
  Long.prototype.u6 = function (other) {
    return this.g1(other instanceof Long ? other : THROW_CCE());
  };
  Long.prototype.og = function (other) {
    return this.f5(toLong_0(other));
  };
  Long.prototype.f5 = function (other) {
    return add(this, other);
  };
  Long.prototype.pg = function (other) {
    return this.g5(toLong_0(other));
  };
  Long.prototype.g5 = function (other) {
    return subtract(this, other);
  };
  Long.prototype.qg = function (other) {
    return this.e5(toLong_0(other));
  };
  Long.prototype.e5 = function (other) {
    return multiply(this, other);
  };
  Long.prototype.rg = function (other) {
    return this.d5(toLong_0(other));
  };
  Long.prototype.d5 = function (other) {
    return divide(this, other);
  };
  Long.prototype.c5 = function () {
    return this.sg().f5(new Long(1, 0));
  };
  Long.prototype.r7 = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  Long.prototype.q7 = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  Long.prototype.a7 = function (other) {
    return new Long(this.e1_1 & other.e1_1, this.f1_1 & other.f1_1);
  };
  Long.prototype.p7 = function (other) {
    return new Long(this.e1_1 ^ other.e1_1, this.f1_1 ^ other.f1_1);
  };
  Long.prototype.sg = function () {
    return new Long(~this.e1_1, ~this.f1_1);
  };
  Long.prototype.c7 = function () {
    return this.e1_1;
  };
  Long.prototype.jg = function () {
    return toNumber(this);
  };
  Long.prototype.valueOf = function () {
    return this.jg();
  };
  Long.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Long.prototype.hashCode = function () {
    return hashCode_1(this);
  };
  Long.prototype.toString = function () {
    return toStringImpl(this, 10);
  };
  Long.$metadata$ = classMeta('Long', [Comparable], undefined, undefined, undefined, Number_0.prototype);
  function get_ZERO() {
    init_properties_longjs_kt_ttk8rv();
    return ZERO;
  }
  var ZERO;
  function get_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return ONE;
  }
  var ONE;
  function get_NEG_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return NEG_ONE;
  }
  var NEG_ONE;
  function get_MAX_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MAX_VALUE;
  }
  var MAX_VALUE;
  function get_MIN_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MIN_VALUE;
  }
  var MIN_VALUE;
  function get_TWO_PWR_24_() {
    init_properties_longjs_kt_ttk8rv();
    return TWO_PWR_24_;
  }
  var TWO_PWR_24_;
  function compare(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (equalsLong(_this__u8e3s4, other)) {
      return 0;
    }
    var thisNeg = isNegative(_this__u8e3s4);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
  }
  function add(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    var a48 = _this__u8e3s4.f1_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.f1_1 & 65535;
    var a16 = _this__u8e3s4.e1_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.e1_1 & 65535;
    var b48 = other.f1_1 >>> 16 | 0;
    var b32 = other.f1_1 & 65535;
    var b16 = other.e1_1 >>> 16 | 0;
    var b00 = other.e1_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return add(_this__u8e3s4, other.c5());
  }
  function multiply(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    } else if (isZero(other)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this__u8e3s4), negate(other));
      } else {
        tmp = negate(multiply(negate(_this__u8e3s4), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this__u8e3s4, negate(other)));
    }
    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) ? lessThan(other, get_TWO_PWR_24_()) : false) {
      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
    }
    var a48 = _this__u8e3s4.f1_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.f1_1 & 65535;
    var a16 = _this__u8e3s4.e1_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.e1_1 & 65535;
    var b48 = other.f1_1 >>> 16 | 0;
    var b32 = other.f1_1 & 65535;
    var b16 = other.e1_1 >>> 16 | 0;
    var b00 = other.e1_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      if (equalsLong(other, get_ONE()) ? true : equalsLong(other, get_NEG_ONE())) {
        return get_MIN_VALUE();
      } else if (equalsLong(other, get_MIN_VALUE())) {
        return get_ONE();
      } else {
        var halfThis = shiftRight(_this__u8e3s4, 1);
        var approx = shiftLeft(halfThis.d5(other), 1);
        if (equalsLong(approx, get_ZERO())) {
          return isNegative(other) ? get_ONE() : get_NEG_ONE();
        } else {
          var rem = subtract(_this__u8e3s4, multiply(other, approx));
          return add(approx, rem.d5(other));
        }
      }
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this__u8e3s4).d5(negate(other));
      } else {
        tmp = negate(negate(_this__u8e3s4).d5(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this__u8e3s4.d5(negate(other)));
    }
    var res = get_ZERO();
    var rem_0 = _this__u8e3s4;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = Math.max(1.0, Math.floor(approxDouble));
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = get_ONE();
      }
      res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function shiftLeft(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.e1_1 << numBits_0, _this__u8e3s4.f1_1 << numBits_0 | (_this__u8e3s4.e1_1 >>> (32 - numBits_0 | 0) | 0));
      } else {
        return new Long(0, _this__u8e3s4.e1_1 << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.e1_1 >>> numBits_0 | 0 | _this__u8e3s4.f1_1 << (32 - numBits_0 | 0), _this__u8e3s4.f1_1 >> numBits_0);
      } else {
        return new Long(_this__u8e3s4.f1_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.f1_1 >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.e1_1 >>> numBits_0 | 0 | _this__u8e3s4.f1_1 << (32 - numBits_0 | 0), _this__u8e3s4.f1_1 >>> numBits_0 | 0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this__u8e3s4.f1_1, 0);
        } else {
          tmp = new Long(_this__u8e3s4.f1_1 >>> (numBits_0 - 32 | 0) | 0, 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.f1_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
  }
  function equalsLong(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.f1_1 === other.f1_1 ? _this__u8e3s4.e1_1 === other.e1_1 : false;
  }
  function hashCode_1(l) {
    init_properties_longjs_kt_ttk8rv();
    return l.e1_1 ^ l.f1_1;
  }
  function toStringImpl(_this__u8e3s4, radix) {
    init_properties_longjs_kt_ttk8rv();
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('radix out of range: ' + radix);
    }
    if (isZero(_this__u8e3s4)) {
      return '0';
    }
    if (isNegative(_this__u8e3s4)) {
      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
        var radixLong = fromInt(radix);
        var div = _this__u8e3s4.d5(radixLong);
        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).c7();
        var tmp = toStringImpl(div, radix);
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = rem;
          }
          var tmp0_unsafeCast = tmp$ret$0.toString(radix);
          tmp$ret$1 = tmp0_unsafeCast;
        }
        return tmp + tmp$ret$1;
      } else {
        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
      }
    }
    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
    var rem_0 = _this__u8e3s4;
    var result = '';
    while (true) {
      var remDiv = rem_0.d5(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).c7();
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = intval;
        }
        var tmp1_unsafeCast = tmp$ret$2.toString(radix);
        tmp$ret$3 = tmp1_unsafeCast;
      }
      var digits = tmp$ret$3;
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits + result;
      } else {
        while (digits.length < digitsPerTime) {
          digits = '0' + digits;
        }
        result = digits + result;
      }
    }
  }
  function fromInt(value) {
    init_properties_longjs_kt_ttk8rv();
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.f1_1 < 0;
  }
  function isZero(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.f1_1 === 0 ? _this__u8e3s4.e1_1 === 0 : false;
  }
  function isOdd(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return (_this__u8e3s4.e1_1 & 1) === 1;
  }
  function negate(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.c5();
  }
  function lessThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) < 0;
  }
  function fromNumber(value) {
    init_properties_longjs_kt_ttk8rv();
    if (isNaN_0(value)) {
      return get_ZERO();
    } else if (value <= -9.223372036854776E18) {
      return get_MIN_VALUE();
    } else if (value + 1 >= 9.223372036854776E18) {
      return get_MAX_VALUE();
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      return new Long(jsBitwiseOr(value % twoPwr32, 0), jsBitwiseOr(value / twoPwr32, 0));
    }
  }
  function greaterThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) > 0;
  }
  function greaterThanOrEqual(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) >= 0;
  }
  function getLowBitsUnsigned(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.e1_1 >= 0 ? _this__u8e3s4.e1_1 : 4.294967296E9 + _this__u8e3s4.e1_1;
  }
  var properties_initialized_longjs_kt_5aju7t;
  function init_properties_longjs_kt_ttk8rv() {
    if (properties_initialized_longjs_kt_5aju7t) {
    } else {
      properties_initialized_longjs_kt_5aju7t = true;
      ZERO = fromInt(0);
      ONE = fromInt(1);
      NEG_ONE = fromInt(-1);
      MAX_VALUE = new Long(-1, 2147483647);
      MIN_VALUE = new Long(0, -2147483648);
      TWO_PWR_24_ = fromInt(16777216);
    }
  }
  function withType(type, array) {
    array.$type$ = type;
    return array;
  }
  function toByte_0(a) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = a << 24 >> 24;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.c7();
    } else {
      tmp = doubleToInt(a);
    }
    return tmp;
  }
  function doubleToInt(a) {
    return a > 2.147483647E9 ? 2147483647 : a < -2.147483648E9 ? -2147483648 : jsBitwiseOr(a, 0);
  }
  function toShort_0(a) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = a << 16 >> 16;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      tmp = fromNumber(a);
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = numberToInt(a);
      tmp$ret$0 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
    }
    return _Char___init__impl__6a9atx_0(tmp$ret$0);
  }
  function toLong_0(a) {
    return fromInt(a);
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  function get_propertyRefClassMetadataCache() {
    init_properties_reflectRuntime_kt_yf9l8h();
    return propertyRefClassMetadataCache;
  }
  var propertyRefClassMetadataCache;
  function metadataObject() {
    init_properties_reflectRuntime_kt_yf9l8h();
    var undef = undefined;
    return classMeta(undef, undef, undef, undef, undef, undef);
  }
  function getPropertyCallableRef(name, paramCount, type, getter, setter) {
    init_properties_reflectRuntime_kt_yf9l8h();
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = getPropertyRefClass(getter, getKPropMetadata(paramCount, setter, type));
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function getPropertyRefClass(obj, metadata) {
    init_properties_reflectRuntime_kt_yf9l8h();
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    return obj;
  }
  function getKPropMetadata(paramCount, setter, type) {
    init_properties_reflectRuntime_kt_yf9l8h();
    var mdata = get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
    if (mdata.interfaces.length === 0) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = mdata.interfaces;
        tmp$ret$0 = tmp0_asDynamic;
      }
      tmp$ret$0.push(type);
      if (mdata.interfacesCache == null) {
        mdata.interfacesCache = generateInterfaceCache();
      } else {
        ensureNotNull(mdata.interfacesCache).isComplete = false;
      }
      extendCacheWithSingle(ensureNotNull(mdata.interfacesCache), type);
    }
    return mdata;
  }
  var properties_initialized_reflectRuntime_kt_inkhwd;
  function init_properties_reflectRuntime_kt_yf9l8h() {
    if (properties_initialized_reflectRuntime_kt_inkhwd) {
    } else {
      properties_initialized_reflectRuntime_kt_inkhwd = true;
      var tmp$ret$11;
      {
        var tmp$ret$2;
        {
          var tmp0_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0_arrayOf;
            }
            tmp$ret$1 = tmp$ret$0;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        var tmp = tmp$ret$2;
        var tmp$ret$5;
        {
          var tmp1_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$4;
          {
            var tmp$ret$3;
            {
              tmp$ret$3 = tmp1_arrayOf;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        var tmp_0 = tmp$ret$5;
        var tmp$ret$8;
        {
          var tmp2_arrayOf = [metadataObject(), metadataObject()];
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              tmp$ret$6 = tmp2_arrayOf;
            }
            tmp$ret$7 = tmp$ret$6;
          }
          tmp$ret$8 = tmp$ret$7;
        }
        var tmp3_arrayOf = [tmp, tmp_0, tmp$ret$8];
        var tmp$ret$10;
        {
          var tmp$ret$9;
          {
            tmp$ret$9 = tmp3_arrayOf;
          }
          tmp$ret$10 = tmp$ret$9;
        }
        tmp$ret$11 = tmp$ret$10;
      }
      propertyRefClassMetadataCache = tmp$ret$11;
    }
  }
  var interfacesCounter;
  function classMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('class', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function createMetadata(kind, name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return {kind: kind, simpleName: name, interfaceId: kind === 'interface' ? -1 : undefined, interfaces: interfaces || [], associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, fastPrototype: fastPrototype, $kClass$: undefined, interfacesCache: {isComplete: fastPrototype === undefined && (interfaces === undefined || interfaces.length === 0), implementInterfaceMemo: {}}};
  }
  function isArrayish(o) {
    return isJsArray(o) ? true : isView(o);
  }
  function isJsArray(obj) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = Array.isArray(obj);
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function isInterface(obj, iface) {
    var tmp0_elvis_lhs = obj.constructor;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ctor = tmp;
    return isInterfaceImpl(ctor, iface);
  }
  function isInterfaceImpl(ctor, iface) {
    if (ctor === iface) {
      return true;
    }
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    var tmp;
    if (!(interfacesCache == null)) {
      if (!interfacesCache.isComplete) {
        completeInterfaceCache(ctor);
      }
      var tmp1_safe_receiver = iface.$metadata$;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.interfaceId;
      var tmp_0;
      if (tmp2_elvis_lhs == null) {
        return false;
      } else {
        tmp_0 = tmp2_elvis_lhs;
      }
      var interfaceId = tmp_0;
      tmp = !!interfacesCache.implementInterfaceMemo[interfaceId];
    } else {
      var tmp3_safe_receiver = fastGetPrototype(ctor);
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.constructor;
      var tmp_1;
      if (tmp4_elvis_lhs == null) {
        return false;
      } else {
        tmp_1 = tmp4_elvis_lhs;
      }
      var constructor = tmp_1;
      tmp = isInterfaceImpl(constructor, iface);
    }
    return tmp;
  }
  function generateInterfaceCache() {
    return {isComplete: false, implementInterfaceMemo: {}};
  }
  function completeInterfaceCache(ctor) {
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    if (!(interfacesCache == null)) {
      if (interfacesCache.isComplete === true) {
        return interfacesCache;
      }
      var indexedObject = metadata.interfaces;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var i = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        extendCacheWithSingle(interfacesCache, i);
        extendCacheWith(interfacesCache, completeInterfaceCache(i));
      }
    }
    var tmp2_safe_receiver = fastGetPrototype(ctor);
    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.constructor;
    var tmp;
    if (tmp3_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = completeInterfaceCache(tmp3_safe_receiver);
      }
      tmp = tmp$ret$0;
    }
    var parentInterfacesCache = tmp;
    var tmp4_safe_receiver = interfacesCache;
    var tmp_0;
    if (tmp4_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          extendCacheWith(tmp4_safe_receiver, parentInterfacesCache);
          tmp4_safe_receiver.isComplete = true;
        }
        tmp$ret$1 = tmp4_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    var tmp5_elvis_lhs = tmp_0;
    return tmp5_elvis_lhs == null ? parentInterfacesCache : tmp5_elvis_lhs;
  }
  function fastGetPrototype(ctor) {
    var tmp0_safe_receiver = ctor.$metadata$;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          if (tmp0_safe_receiver.fastPrototype == null) {
            tmp0_safe_receiver.fastPrototype = getPrototype(ctor);
          }
          tmp$ret$0 = tmp0_safe_receiver.fastPrototype;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? getPrototype(ctor) : tmp1_elvis_lhs;
  }
  function extendCacheWithSingle(_this__u8e3s4, intr) {
    _this__u8e3s4.implementInterfaceMemo[getOrDefineInterfaceId(intr)] = true;
  }
  function extendCacheWith(_this__u8e3s4, cache) {
    var tmp0_safe_receiver = cache;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.implementInterfaceMemo;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var anotherInterfaceMemo = tmp;
    Object.assign(_this__u8e3s4.implementInterfaceMemo, anotherInterfaceMemo);
  }
  function getPrototype(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.prototype;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$2;
      {
        {
        }
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_unsafeCast = Object.getPrototypeOf(tmp0_safe_receiver);
            tmp$ret$0 = tmp0_unsafeCast;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function getOrDefineInterfaceId(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_unsafeCast = _this__u8e3s4.$metadata$;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_unsafeCast;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var metadata = tmp$ret$1;
    var tmp0_elvis_lhs = metadata.interfaceId;
    var interfaceId = tmp0_elvis_lhs == null ? -1 : tmp0_elvis_lhs;
    var tmp;
    if (!equals_1(interfaceId, -1)) {
      tmp = interfaceId;
    } else {
      var tmp1 = interfacesCounter;
      interfacesCounter = tmp1 + 1 | 0;
      var result = tmp1;
      metadata.interfaceId = result;
      tmp = result;
    }
    return tmp;
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      var tmp$ret$0;
      {
        tmp$ret$0 = obj;
      }
      tmp = !tmp$ret$0.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp0_subject = objTypeOf;
    switch (tmp0_subject) {
      case 'string':
        return true;
      case 'number':
        return true;
      case 'boolean':
        return true;
      case 'function':
        return true;
      default:
        return jsInstanceOf(obj, Object);
    }
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isComparable(value) {
    var type = typeof value;
    return ((type === 'string' ? true : type === 'boolean') ? true : isNumber(value)) ? true : isInterface(value, get_js(getKClass(Comparable)));
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, get_js(getKClass(CharSequence)));
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    return jsInstanceOf(a, Int8Array);
  }
  function isShortArray(a) {
    return jsInstanceOf(a, Int16Array);
  }
  function isCharArray(a) {
    return jsInstanceOf(a, Uint16Array) ? a.$type$ === 'CharArray' : false;
  }
  function isIntArray(a) {
    return jsInstanceOf(a, Int32Array);
  }
  function isFloatArray(a) {
    return jsInstanceOf(a, Float32Array);
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    return jsInstanceOf(a, Float64Array);
  }
  function interfaceMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('interface', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, undefined);
  }
  function objectMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('object', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function jsIsType(obj, jsClass) {
    if (jsClass === Object) {
      return isObject(obj);
    }
    if ((obj == null ? true : jsClass == null) ? true : !(typeof obj === 'object') ? !(typeof obj === 'function') : false) {
      return false;
    }
    if (typeof jsClass === 'function' ? jsInstanceOf(obj, jsClass) : false) {
      return true;
    }
    var proto = jsGetPrototypeOf(jsClass);
    var tmp0_safe_receiver = proto;
    var constructor = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.constructor;
    if (constructor != null ? jsIn('$metadata$', constructor) : false) {
      var metadata = constructor.$metadata$;
      if (metadata.kind === 'object') {
        return obj === jsClass;
      }
    }
    var klassMetadata = jsClass.$metadata$;
    if (klassMetadata == null) {
      return jsInstanceOf(obj, jsClass);
    }
    if (klassMetadata.kind === 'interface' ? obj.constructor != null : false) {
      return isInterfaceImpl(obj.constructor, jsClass);
    }
    return false;
  }
  function jsGetPrototypeOf(jsClass) {
    return Object.getPrototypeOf(jsClass);
  }
  function copyInto(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex) {
    arrayCopy(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex);
    return destination;
  }
  function copyOf(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = fillFrom(_this__u8e3s4, charArray(newSize));
      tmp1_withType.$type$ = 'CharArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function copyOf_0(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Float64Array(newSize));
  }
  function copyOf_1(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Float32Array(newSize));
  }
  function copyOf_2(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
      tmp1_withType.$type$ = 'LongArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function copyOf_3(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int32Array(newSize));
  }
  function copyOf_4(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int16Array(newSize));
  }
  function copyOf_5(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    return fillFrom(_this__u8e3s4, new Int8Array(newSize));
  }
  function copyOf_6(_this__u8e3s4, newSize) {
    {
      var tmp0_require = newSize >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$_0(toString_2(message));
      }
    }
    var tmp$ret$1;
    {
      var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, false);
      tmp1_withType.$type$ = 'BooleanArray';
      tmp$ret$1 = tmp1_withType;
    }
    return tmp$ret$1;
  }
  function contentEquals(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function asList(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return new ArrayList(tmp$ret$1);
  }
  function sortWith_0(_this__u8e3s4, comparator) {
    if (_this__u8e3s4.length > 1)
      sortArrayWith(_this__u8e3s4, comparator);
  }
  function plus_6(_this__u8e3s4, elements) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0.concat(elements);
  }
  function toTypedArray_0(_this__u8e3s4) {
    return [].slice.call(_this__u8e3s4);
  }
  function reverse(_this__u8e3s4) {
    var midPoint = (_this__u8e3s4.g() / 2 | 0) - 1 | 0;
    if (midPoint < 0)
      return Unit_getInstance();
    var reverseIndex = get_lastIndex_0(_this__u8e3s4);
    var inductionVariable = 0;
    if (inductionVariable <= midPoint)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = _this__u8e3s4.l(index);
        _this__u8e3s4.q9(index, _this__u8e3s4.l(reverseIndex));
        _this__u8e3s4.q9(reverseIndex, tmp);
        var tmp1 = reverseIndex;
        reverseIndex = tmp1 - 1 | 0;
      }
       while (!(index === midPoint));
  }
  function minOf(a, b) {
    return Math.min(a, b);
  }
  function minOf_0(a, b) {
    return a.g1(b) <= 0 ? a : b;
  }
  function minOf_1(a, b, c) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = b.g1(c) <= 0 ? b : c;
      }
      var tmp0_minOf = tmp$ret$0;
      tmp$ret$1 = a.g1(tmp0_minOf) <= 0 ? a : tmp0_minOf;
    }
    return tmp$ret$1;
  }
  function maxOf(a, b) {
    return a.g1(b) >= 0 ? a : b;
  }
  function maxOf_0(a, b) {
    return Math.max(a, b);
  }
  function digitToIntImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    var index = binarySearchRange(Digit_getInstance().tg_1, ch);
    var diff = ch - Digit_getInstance().tg_1[index] | 0;
    return diff < 10 ? diff : -1;
  }
  function binarySearchRange(array, needle) {
    var bottom = 0;
    var top = array.length - 1 | 0;
    var middle = -1;
    var value = 0;
    while (bottom <= top) {
      middle = (bottom + top | 0) / 2 | 0;
      value = array[middle];
      if (needle > value)
        bottom = middle + 1 | 0;
      else if (needle === value)
        return middle;
      else
        top = middle - 1 | 0;
    }
    return middle - (needle < value ? 1 : 0) | 0;
  }
  function Digit() {
    Digit_instance = this;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
    }
    tmp.tg_1 = tmp$ret$0;
  }
  Digit.$metadata$ = objectMeta('Digit');
  var Digit_instance;
  function Digit_getInstance() {
    if (Digit_instance == null)
      new Digit();
    return Digit_instance;
  }
  function isWhitespaceImpl(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    }
    var ch = tmp$ret$0;
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function releaseIntercepted($this) {
    var intercepted = $this.bh_1;
    if (!(intercepted == null) ? !(intercepted === $this) : false) {
      ensureNotNull($this.q3().w3(Key_getInstance())).v3(intercepted);
    }
    $this.bh_1 = CompletedContinuation_getInstance();
  }
  function CoroutineImpl(resultContinuation) {
    this.ug_1 = resultContinuation;
    this.vg_1 = 0;
    this.wg_1 = 0;
    this.xg_1 = null;
    this.yg_1 = null;
    this.zg_1 = null;
    var tmp = this;
    var tmp0_safe_receiver = this.ug_1;
    tmp.ah_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q3();
    this.bh_1 = null;
  }
  CoroutineImpl.prototype.ch = function () {
    return this.yg_1;
  };
  CoroutineImpl.prototype.q3 = function () {
    return ensureNotNull(this.ah_1);
  };
  CoroutineImpl.prototype.dh = function () {
    var tmp2_elvis_lhs = this.bh_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_safe_receiver = this.q3().w3(Key_getInstance());
        var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u3(this);
        var tmp0_also = tmp1_elvis_lhs == null ? this : tmp1_elvis_lhs;
        {
        }
        {
          this.bh_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  CoroutineImpl.prototype.ed = function (result) {
    var current = this;
    var tmp$ret$0;
    {
      var tmp;
      if (_Result___get_isFailure__impl__jpiriv(result)) {
        tmp = null;
      } else {
        var tmp_0 = _Result___get_value__impl__bjfvqg(result);
        tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
      }
      tmp$ret$0 = tmp;
    }
    var currentResult = tmp$ret$0;
    var currentException = Result__exceptionOrNull_impl_p6xea9(result);
    while (true) {
      var tmp$ret$6;
      {
        var tmp0_with = current;
        {
        }
        if (currentException == null) {
          tmp0_with.xg_1 = currentResult;
        } else {
          tmp0_with.vg_1 = tmp0_with.wg_1;
          tmp0_with.yg_1 = currentException;
        }
        try {
          var outcome = tmp0_with.eh();
          if (outcome === get_COROUTINE_SUSPENDED())
            return Unit_getInstance();
          currentResult = outcome;
          currentException = null;
        } catch ($p) {
          currentResult = null;
          var tmp$ret$1;
          {
            tmp$ret$1 = $p;
          }
          currentException = tmp$ret$1;
        }
        releaseIntercepted(tmp0_with);
        var completion = ensureNotNull(tmp0_with.ug_1);
        var tmp_1;
        if (completion instanceof CoroutineImpl) {
          current = completion;
          tmp_1 = Unit_getInstance();
        } else {
          if (!(currentException == null)) {
            var tmp$ret$3;
            {
              var tmp0_resumeWithException = ensureNotNull(currentException);
              var tmp$ret$2;
              {
                var tmp0_failure = Companion_getInstance_3();
                tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
              }
              tmp$ret$3 = completion.r3(tmp$ret$2);
            }
          } else {
            var tmp$ret$5;
            {
              var tmp1_resume = currentResult;
              var tmp$ret$4;
              {
                var tmp0_success = Companion_getInstance_3();
                tmp$ret$4 = _Result___init__impl__xyqfz8(tmp1_resume);
              }
              tmp$ret$5 = completion.r3(tmp$ret$4);
            }
          }
          return Unit_getInstance();
        }
        tmp$ret$6 = tmp_1;
      }
    }
  };
  CoroutineImpl.prototype.r3 = function (result) {
    return this.ed(result);
  };
  CoroutineImpl.$metadata$ = classMeta('CoroutineImpl', [Continuation]);
  function CompletedContinuation() {
    CompletedContinuation_instance = this;
  }
  CompletedContinuation.prototype.q3 = function () {
    throw IllegalStateException_init_$Create$('This continuation is already complete');
  };
  CompletedContinuation.prototype.ed = function (result) {
    {
      throw IllegalStateException_init_$Create$('This continuation is already complete');
    }
  };
  CompletedContinuation.prototype.r3 = function (result) {
    return this.ed(result);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'This continuation is already complete';
  };
  CompletedContinuation.$metadata$ = objectMeta('CompletedContinuation', [Continuation]);
  var CompletedContinuation_instance;
  function CompletedContinuation_getInstance() {
    if (CompletedContinuation_instance == null)
      new CompletedContinuation();
    return CompletedContinuation_instance;
  }
  function intercepted(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CoroutineImpl ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.dh();
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function createCoroutineUnintercepted(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv_3(completion, _this__u8e3s4, receiver);
    }
    return tmp$ret$0;
  }
  function startCoroutineUninterceptedOrReturn(_this__u8e3s4, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    return typeof a === 'function' ? a(completion) : _this__u8e3s4.fh(completion);
  }
  function startCoroutineUninterceptedOrReturn_0(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var a = tmp$ret$0;
    return typeof a === 'function' ? a(receiver, completion) : _this__u8e3s4.gh(receiver, completion);
  }
  function createCoroutineFromSuspendFunction(completion, block) {
    return new _no_name_provided__qut3iv_4(completion, block);
  }
  function invokeSuspendSuperTypeWithReceiver(_this__u8e3s4, receiver, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function invokeSuspendSuperType(_this__u8e3s4, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function _no_name_provided__qut3iv_3($completion, $this_createCoroutineUnintercepted, $receiver) {
    this.ph_1 = $completion;
    this.qh_1 = $this_createCoroutineUnintercepted;
    this.rh_1 = $receiver;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_3.prototype.eh = function () {
    if (this.ch() != null)
      throw this.ch();
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.qh_1;
      }
      var a = tmp$ret$0;
      tmp$ret$1 = typeof a === 'function' ? a(this.rh_1, this.ph_1) : this.qh_1.gh(this.rh_1, this.ph_1);
    }
    return tmp$ret$1;
  };
  _no_name_provided__qut3iv_3.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function _no_name_provided__qut3iv_4($completion, $block) {
    this.ai_1 = $block;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_4.prototype.eh = function () {
    if (this.ch() != null)
      throw this.ch();
    return this.ai_1();
  };
  _no_name_provided__qut3iv_4.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Exception_init_$Init$($this) {
    extendThrowable($this, void 1, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, Object.create(Exception.prototype));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  Exception.$metadata$ = classMeta('Exception', undefined, undefined, undefined, undefined, Error.prototype);
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message, void 1);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Create$(message) {
    var tmp = Error_init_$Init$(message, Object.create(Error_0.prototype));
    captureStack(tmp, Error_init_$Create$);
    return tmp;
  }
  function Error_init_$Init$_0(message, cause, $this) {
    extendThrowable($this, message, cause);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Create$_0(message, cause) {
    var tmp = Error_init_$Init$_0(message, cause, Object.create(Error_0.prototype));
    captureStack(tmp, Error_init_$Create$_0);
    return tmp;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  Error_0.$metadata$ = classMeta('Error', undefined, undefined, undefined, undefined, Error.prototype);
  function IllegalArgumentException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$() {
    var tmp = IllegalArgumentException_init_$Init$(Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_0(message) {
    var tmp = IllegalArgumentException_init_$Init$_0(message, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
    return tmp;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  IllegalArgumentException.$metadata$ = classMeta('IllegalArgumentException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  NoSuchElementException.$metadata$ = classMeta('NoSuchElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message, cause) {
    var tmp = RuntimeException_init_$Init$_1(message, cause, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  RuntimeException.$metadata$ = classMeta('RuntimeException', undefined, undefined, undefined, undefined, Exception.prototype);
  function IllegalStateException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$(message) {
    var tmp = IllegalStateException_init_$Init$_0(message, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_0(message, cause) {
    var tmp = IllegalStateException_init_$Init$_1(message, cause, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_0);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  IllegalStateException.$metadata$ = classMeta('IllegalStateException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  UnsupportedOperationException.$metadata$ = classMeta('UnsupportedOperationException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function IndexOutOfBoundsException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$() {
    var tmp = IndexOutOfBoundsException_init_$Init$(Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$_0(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$_0(message, Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$_0);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  IndexOutOfBoundsException.$metadata$ = classMeta('IndexOutOfBoundsException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, Object.create(ArithmeticException.prototype));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  ArithmeticException.$metadata$ = classMeta('ArithmeticException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, Object.create(NumberFormatException.prototype));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  NumberFormatException.$metadata$ = classMeta('NumberFormatException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(Object.create(NullPointerException.prototype));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  NullPointerException.$metadata$ = classMeta('NullPointerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(Object.create(NoWhenBranchMatchedException.prototype));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  NoWhenBranchMatchedException.$metadata$ = classMeta('NoWhenBranchMatchedException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(Object.create(ClassCastException.prototype));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  ClassCastException.$metadata$ = classMeta('ClassCastException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, Object.create(UninitializedPropertyAccessException.prototype));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  UninitializedPropertyAccessException.$metadata$ = classMeta('UninitializedPropertyAccessException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function jsIn(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = lhs_hack in rhs_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsBitwiseOr(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = lhs_hack | rhs_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsTypeOf(value_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = typeof value_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function jsDeleteProperty(obj_hack, property_hack) {
    delete obj_hack[property_hack];
  }
  function jsInstanceOf(obj_hack, jsClass_hack) {
    var tmp$ret$0;
    {
      var tmp0_unsafeCast = obj_hack instanceof jsClass_hack;
      tmp$ret$0 = tmp0_unsafeCast;
    }
    return tmp$ret$0;
  }
  function findAssociatedObject(_this__u8e3s4, annotationClass) {
    var tmp;
    var tmp_0;
    if (_this__u8e3s4 instanceof KClassImpl) {
      tmp_0 = annotationClass instanceof KClassImpl;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_asDynamic = annotationClass.gd();
          tmp$ret$0 = tmp0_asDynamic;
        }
        var tmp1_unsafeCast = tmp$ret$0;
        tmp$ret$1 = tmp1_unsafeCast;
      }
      var tmp0_safe_receiver = tmp$ret$1.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = tmp1_safe_receiver;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp_1 = tmp$ret$3;
      }
      var tmp2_elvis_lhs = tmp_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        return null;
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var key = tmp_2;
      var tmp$ret$5;
      {
        var tmp$ret$4;
        {
          var tmp2_asDynamic = _this__u8e3s4.gd();
          tmp$ret$4 = tmp2_asDynamic;
        }
        var tmp3_unsafeCast = tmp$ret$4;
        tmp$ret$5 = tmp3_unsafeCast;
      }
      var tmp3_safe_receiver = tmp$ret$5.$metadata$;
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
      var tmp_3;
      if (tmp4_elvis_lhs == null) {
        return null;
      } else {
        tmp_3 = tmp4_elvis_lhs;
      }
      var map = tmp_3;
      var tmp5_elvis_lhs = map[key];
      var tmp_4;
      if (tmp5_elvis_lhs == null) {
        return null;
      } else {
        tmp_4 = tmp5_elvis_lhs;
      }
      var factory = tmp_4;
      return factory();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function toString_3(_this__u8e3s4, radix) {
    return toStringImpl(_this__u8e3s4, checkRadix(radix));
  }
  function Function1() {
  }
  Function1.$metadata$ = interfaceMeta('Function1');
  function Function2() {
  }
  Function2.$metadata$ = interfaceMeta('Function2');
  function SuspendFunction0() {
  }
  SuspendFunction0.$metadata$ = interfaceMeta('SuspendFunction0');
  function SuspendFunction1() {
  }
  SuspendFunction1.$metadata$ = interfaceMeta('SuspendFunction1');
  function SuspendFunction2() {
  }
  SuspendFunction2.$metadata$ = interfaceMeta('SuspendFunction2');
  function SuspendFunction3() {
  }
  SuspendFunction3.$metadata$ = interfaceMeta('SuspendFunction3');
  //region block: post-declaration
  CombinedContext.prototype.d4 = plus;
  AbstractCoroutineContextElement.prototype.w3 = get;
  AbstractCoroutineContextElement.prototype.c4 = fold;
  AbstractCoroutineContextElement.prototype.b4 = minusKey;
  AbstractCoroutineContextElement.prototype.d4 = plus;
  InternalHashCodeMap.prototype.zb = createJsMap;
  //endregion
  //region block: init
  _stableSortingIsSupported = null;
  interfacesCounter = 0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = createInvariantKTypeProjection;
  _.$_$.b = createKType;
  _.$_$.c = findAssociatedObject;
  _.$_$.d = getKClassFromExpression;
  _.$_$.e = getKClass;
  _.$_$.f = LazyThreadSafetyMode_NONE_getInstance;
  _.$_$.g = joinToString$default_0;
  _.$_$.h = joinTo$default;
  _.$_$.i = contains$default;
  _.$_$.j = endsWith$default;
  _.$_$.k = indexOfAny$default;
  _.$_$.l = indexOf$default_0;
  _.$_$.m = indexOf$default;
  _.$_$.n = lastIndexOf$default_0;
  _.$_$.o = replace$default;
  _.$_$.p = split$default;
  _.$_$.q = startsWith$default;
  _.$_$.r = trimMargin$default;
  _.$_$.s = ArrayList_init_$Create$_0;
  _.$_$.t = ArrayList_init_$Create$;
  _.$_$.u = ArrayList_init_$Create$_1;
  _.$_$.v = HashMap_init_$Create$;
  _.$_$.w = HashMap_init_$Create$_2;
  _.$_$.x = HashSet_init_$Create$_1;
  _.$_$.y = HashSet_init_$Create$;
  _.$_$.z = HashSet_init_$Create$_0;
  _.$_$.a1 = LinkedHashMap_init_$Create$_1;
  _.$_$.b1 = LinkedHashMap_init_$Create$;
  _.$_$.c1 = LinkedHashMap_init_$Create$_2;
  _.$_$.d1 = LinkedHashSet_init_$Create$;
  _.$_$.e1 = LinkedHashSet_init_$Create$_0;
  _.$_$.f1 = StringBuilder_init_$Create$;
  _.$_$.g1 = StringBuilder_init_$Create$_0;
  _.$_$.h1 = Error_init_$Create$;
  _.$_$.i1 = Error_init_$Init$_0;
  _.$_$.j1 = Error_init_$Create$_0;
  _.$_$.k1 = Exception_init_$Init$_0;
  _.$_$.l1 = Exception_init_$Init$_1;
  _.$_$.m1 = IllegalArgumentException_init_$Create$;
  _.$_$.n1 = IllegalArgumentException_init_$Init$_0;
  _.$_$.o1 = IllegalArgumentException_init_$Create$_0;
  _.$_$.p1 = IllegalStateException_init_$Init$;
  _.$_$.q1 = IllegalStateException_init_$Init$_0;
  _.$_$.r1 = IllegalStateException_init_$Create$;
  _.$_$.s1 = IllegalStateException_init_$Init$_1;
  _.$_$.t1 = IllegalStateException_init_$Create$_0;
  _.$_$.u1 = IndexOutOfBoundsException_init_$Create$;
  _.$_$.v1 = IndexOutOfBoundsException_init_$Create$_0;
  _.$_$.w1 = NoSuchElementException_init_$Create$;
  _.$_$.x1 = NoSuchElementException_init_$Init$_0;
  _.$_$.y1 = RuntimeException_init_$Init$_1;
  _.$_$.z1 = RuntimeException_init_$Create$;
  _.$_$.a2 = UnsupportedOperationException_init_$Init$;
  _.$_$.b2 = UnsupportedOperationException_init_$Create$;
  _.$_$.c2 = UnsupportedOperationException_init_$Create$_0;
  _.$_$.d2 = _Char___init__impl__6a9atx;
  _.$_$.e2 = Char__compareTo_impl_ypi4mb;
  _.$_$.f2 = Char__minus_impl_a2frrh;
  _.$_$.g2 = Char__minus_impl_a2frrh_0;
  _.$_$.h2 = Char__plus_impl_qi7pgj;
  _.$_$.i2 = Char__rangeTo_impl_tkncvp;
  _.$_$.j2 = Char__toByte_impl_7s7yt0;
  _.$_$.k2 = Char__toInt_impl_vasixd;
  _.$_$.l2 = toString_0;
  _.$_$.m2 = _Result___init__impl__xyqfz8;
  _.$_$.n2 = Result__exceptionOrNull_impl_p6xea9;
  _.$_$.o2 = _Result___get_isFailure__impl__jpiriv;
  _.$_$.p2 = _Result___get_value__impl__bjfvqg;
  _.$_$.q2 = _UByte___init__impl__g9hnc4;
  _.$_$.r2 = _UByte___get_data__impl__jof9qr;
  _.$_$.s2 = UByte__toString_impl_v72jg;
  _.$_$.t2 = _UInt___init__impl__l7qpdl;
  _.$_$.u2 = _UInt___get_data__impl__f0vqqw;
  _.$_$.v2 = UInt__toString_impl_dbgl21;
  _.$_$.w2 = _ULong___init__impl__c78o9k;
  _.$_$.x2 = _ULong___get_data__impl__fggpzb;
  _.$_$.y2 = ULong__toString_impl_f9au7k;
  _.$_$.z2 = _UShort___init__impl__jigrne;
  _.$_$.a3 = _UShort___get_data__impl__g0245;
  _.$_$.b3 = UShort__toString_impl_edaoee;
  _.$_$.c3 = Key_getInstance;
  _.$_$.d3 = EmptyCoroutineContext_getInstance;
  _.$_$.e3 = BooleanCompanionObject_getInstance;
  _.$_$.f3 = ByteCompanionObject_getInstance;
  _.$_$.g3 = DoubleCompanionObject_getInstance;
  _.$_$.h3 = FloatCompanionObject_getInstance;
  _.$_$.i3 = IntCompanionObject_getInstance;
  _.$_$.j3 = ShortCompanionObject_getInstance;
  _.$_$.k3 = StringCompanionObject_getInstance;
  _.$_$.l3 = PrimitiveClasses_getInstance;
  _.$_$.m3 = Companion_getInstance_13;
  _.$_$.n3 = Companion_getInstance_15;
  _.$_$.o3 = Companion_getInstance_3;
  _.$_$.p3 = Companion_getInstance_4;
  _.$_$.q3 = Companion_getInstance_5;
  _.$_$.r3 = Companion_getInstance_6;
  _.$_$.s3 = Companion_getInstance_7;
  _.$_$.t3 = Unit_getInstance;
  _.$_$.u3 = ArrayList;
  _.$_$.v3 = Collection;
  _.$_$.w3 = HashMap;
  _.$_$.x3 = HashSet;
  _.$_$.y3 = Iterable_0;
  _.$_$.z3 = Iterator;
  _.$_$.a4 = LinkedHashMap;
  _.$_$.b4 = LinkedHashSet;
  _.$_$.c4 = ListIterator;
  _.$_$.d4 = List;
  _.$_$.e4 = Entry;
  _.$_$.f4 = Map;
  _.$_$.g4 = MutableCollection;
  _.$_$.h4 = MutableIterable;
  _.$_$.i4 = MutableIterator;
  _.$_$.j4 = MutableListIterator;
  _.$_$.k4 = MutableList;
  _.$_$.l4 = MutableEntry;
  _.$_$.m4 = MutableMap;
  _.$_$.n4 = MutableSet;
  _.$_$.o4 = Set;
  _.$_$.p4 = addAll_0;
  _.$_$.q4 = addAll;
  _.$_$.r4 = arrayCopy;
  _.$_$.s4 = asList;
  _.$_$.t4 = checkIndexOverflow;
  _.$_$.u4 = collectionSizeOrDefault;
  _.$_$.v4 = contentEquals;
  _.$_$.w4 = contentHashCode;
  _.$_$.x4 = copyOf_4;
  _.$_$.y4 = copyOf_2;
  _.$_$.z4 = copyOf_6;
  _.$_$.a5 = copyOf;
  _.$_$.b5 = copyOf_5;
  _.$_$.c5 = copyOf_0;
  _.$_$.d5 = copyOf_1;
  _.$_$.e5 = copyOf_3;
  _.$_$.f5 = copyToArray;
  _.$_$.g5 = emptyList;
  _.$_$.h5 = emptyMap;
  _.$_$.i5 = emptySet;
  _.$_$.j5 = filterNotNull;
  _.$_$.k5 = firstOrNull_2;
  _.$_$.l5 = firstOrNull;
  _.$_$.m5 = first;
  _.$_$.n5 = getValue;
  _.$_$.o5 = get_indices;
  _.$_$.p5 = get_lastIndex_0;
  _.$_$.q5 = get_lastIndex;
  _.$_$.r5 = lastOrNull;
  _.$_$.s5 = last;
  _.$_$.t5 = listOf_0;
  _.$_$.u5 = listOf;
  _.$_$.v5 = mapCapacity;
  _.$_$.w5 = mapOf;
  _.$_$.x5 = mutableListOf_0;
  _.$_$.y5 = plus_3;
  _.$_$.z5 = plus_1;
  _.$_$.a6 = plus_0;
  _.$_$.b6 = plus_2;
  _.$_$.c6 = reversed;
  _.$_$.d6 = setOf_0;
  _.$_$.e6 = setOf;
  _.$_$.f6 = singleOrNull_0;
  _.$_$.g6 = single_0;
  _.$_$.h6 = sortedWith;
  _.$_$.i6 = toBooleanArray;
  _.$_$.j6 = toHashSet;
  _.$_$.k6 = toList_1;
  _.$_$.l6 = toList_0;
  _.$_$.m6 = toList;
  _.$_$.n6 = toMap_2;
  _.$_$.o6 = toMap;
  _.$_$.p6 = toSet_0;
  _.$_$.q6 = toTypedArray_0;
  _.$_$.r6 = withIndex;
  _.$_$.s6 = compareValues;
  _.$_$.t6 = get_COROUTINE_SUSPENDED;
  _.$_$.u6 = createCoroutineUnintercepted;
  _.$_$.v6 = intercepted;
  _.$_$.w6 = get_EmptyContinuation;
  _.$_$.x6 = AbstractCoroutineContextElement;
  _.$_$.y6 = AbstractCoroutineContextKey;
  _.$_$.z6 = get_0;
  _.$_$.a7 = minusKey_0;
  _.$_$.b7 = ContinuationInterceptor;
  _.$_$.c7 = Continuation;
  _.$_$.d7 = fold;
  _.$_$.e7 = get;
  _.$_$.f7 = minusKey;
  _.$_$.g7 = Element;
  _.$_$.h7 = Key_0;
  _.$_$.i7 = plus;
  _.$_$.j7 = CoroutineImpl;
  _.$_$.k7 = SuspendFunction0;
  _.$_$.l7 = SuspendFunction1;
  _.$_$.m7 = SuspendFunction2;
  _.$_$.n7 = SuspendFunction3;
  _.$_$.o7 = startCoroutine;
  _.$_$.p7 = println;
  _.$_$.q7 = anyToString;
  _.$_$.r7 = arrayIterator;
  _.$_$.s7 = booleanArray;
  _.$_$.t7 = captureStack;
  _.$_$.u7 = charArray;
  _.$_$.v7 = charSequenceGet;
  _.$_$.w7 = charSequenceLength;
  _.$_$.x7 = charSequenceSubSequence;
  _.$_$.y7 = classMeta;
  _.$_$.z7 = compareTo_0;
  _.$_$.a8 = equals_1;
  _.$_$.b8 = extendThrowable;
  _.$_$.c8 = fillArrayVal;
  _.$_$.d8 = getPropertyCallableRef;
  _.$_$.e8 = getStringHashCode;
  _.$_$.f8 = hashCode_0;
  _.$_$.g8 = interfaceMeta;
  _.$_$.h8 = isArray;
  _.$_$.i8 = isBooleanArray;
  _.$_$.j8 = isByteArray;
  _.$_$.k8 = isCharArray;
  _.$_$.l8 = isCharSequence;
  _.$_$.m8 = isDoubleArray;
  _.$_$.n8 = isFloatArray;
  _.$_$.o8 = isIntArray;
  _.$_$.p8 = isInterface;
  _.$_$.q8 = isLongArray;
  _.$_$.r8 = isObject;
  _.$_$.s8 = isShortArray;
  _.$_$.t8 = get_js;
  _.$_$.u8 = longArray;
  _.$_$.v8 = numberToChar;
  _.$_$.w8 = numberToInt;
  _.$_$.x8 = numberToLong;
  _.$_$.y8 = objectMeta;
  _.$_$.z8 = toByte_0;
  _.$_$.a9 = toLong_0;
  _.$_$.b9 = toShort_0;
  _.$_$.c9 = toString_2;
  _.$_$.d9 = roundToInt_0;
  _.$_$.e9 = ReadOnlyProperty;
  _.$_$.f9 = ReadWriteProperty;
  _.$_$.g9 = coerceAtLeast;
  _.$_$.h9 = coerceAtMost_0;
  _.$_$.i9 = coerceAtMost;
  _.$_$.j9 = coerceIn_0;
  _.$_$.k9 = rangeTo;
  _.$_$.l9 = step;
  _.$_$.m9 = until;
  _.$_$.n9 = KClass;
  _.$_$.o9 = KMutableProperty1;
  _.$_$.p9 = KProperty1;
  _.$_$.q9 = Appendable;
  _.$_$.r9 = capitalize;
  _.$_$.s9 = concatToString;
  _.$_$.t9 = decodeToString;
  _.$_$.u9 = equals_0;
  _.$_$.v9 = first_0;
  _.$_$.w9 = isBlank;
  _.$_$.x9 = isHighSurrogate;
  _.$_$.y9 = isLowSurrogate;
  _.$_$.z9 = isSurrogate;
  _.$_$.aa = isWhitespace;
  _.$_$.ba = get_lastIndex_1;
  _.$_$.ca = last_0;
  _.$_$.da = single_2;
  _.$_$.ea = take;
  _.$_$.fa = toByte;
  _.$_$.ga = toDoubleOrNull;
  _.$_$.ha = toDouble;
  _.$_$.ia = toIntOrNull;
  _.$_$.ja = toInt;
  _.$_$.ka = toLongOrNull;
  _.$_$.la = toLong;
  _.$_$.ma = toShort;
  _.$_$.na = toUByte_1;
  _.$_$.oa = toUInt_1;
  _.$_$.pa = toULongOrNull;
  _.$_$.qa = toULong_1;
  _.$_$.ra = toUShort_1;
  _.$_$.sa = trimIndent;
  _.$_$.ta = trim_0;
  _.$_$.ua = Annotation;
  _.$_$.va = Char_0;
  _.$_$.wa = Comparable;
  _.$_$.xa = Comparator;
  _.$_$.ya = Enum;
  _.$_$.za = Error_0;
  _.$_$.ab = Exception;
  _.$_$.bb = IllegalArgumentException;
  _.$_$.cb = IllegalStateException;
  _.$_$.db = Long;
  _.$_$.eb = NoSuchElementException;
  _.$_$.fb = Pair;
  _.$_$.gb = RuntimeException;
  _.$_$.hb = THROW_CCE;
  _.$_$.ib = Triple;
  _.$_$.jb = UByte;
  _.$_$.kb = UInt;
  _.$_$.lb = ULong;
  _.$_$.mb = UShort;
  _.$_$.nb = Unit;
  _.$_$.ob = UnsupportedOperationException;
  _.$_$.pb = addSuppressed;
  _.$_$.qb = arrayOf;
  _.$_$.rb = createFailure;
  _.$_$.sb = ensureNotNull;
  _.$_$.tb = isFinite_0;
  _.$_$.ub = isFinite;
  _.$_$.vb = isNaN_0;
  _.$_$.wb = lazy_0;
  _.$_$.xb = lazy;
  _.$_$.yb = noWhenBranchMatchedException;
  _.$_$.zb = throwUninitializedPropertyAccessException;
  _.$_$.ac = toString_1;
  _.$_$.bc = to;
  //endregion
  return _;
}(module.exports));

//# sourceMappingURL=kotlin-kotlin-stdlib-js-ir.js.map

/***/ }),

/***/ 499:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_kotlin, kotlin_io_ktor_ktor_utils, kotlin_io_ktor_ktor_io, kotlin_org_jetbrains_kotlinx_atomicfu, kotlin_io_ktor_ktor_http, kotlin_io_ktor_ktor_http_cio) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var cancel$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.i;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var CoroutineImpl = kotlin_kotlin.$_$.j7;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var PipelineContext = kotlin_io_ktor_ktor_utils.$_$.g;
  var isInterface = kotlin_kotlin.$_$.p8;
  var isObject = kotlin_kotlin.$_$.r8;
  var toString = kotlin_kotlin.$_$.c9;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.t6;
  var classMeta = kotlin_kotlin.$_$.y7;
  var shared$1 = kotlin_io_ktor_ktor_io.$_$.j1;
  var atomic$boolean$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.b;
  var Key_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.r;
  var Job = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c1;
  var Attributes = kotlin_io_ktor_ktor_utils.$_$.k;
  var makeShared = kotlin_io_ktor_ktor_io.$_$.h1;
  var AttributeKey = kotlin_io_ktor_ktor_utils.$_$.j;
  var Closeable = kotlin_io_ktor_ktor_io.$_$.y;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a1;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var KMutableProperty1 = kotlin_kotlin.$_$.o9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.d8;
  var SuspendFunction2 = kotlin_kotlin.$_$.m7;
  var PlatformUtils_getInstance = kotlin_io_ktor_ktor_utils.$_$.e;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var cancel = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g1;
  var threadLocal = kotlin_io_ktor_ktor_io.$_$.s;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.zb;
  var ByteReadChannel = kotlin_io_ktor_ktor_io.$_$.e1;
  var IllegalStateException = kotlin_kotlin.$_$.cb;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.p1;
  var captureStack = kotlin_kotlin.$_$.t7;
  var UnsupportedOperationException = kotlin_kotlin.$_$.ob;
  var UnsupportedOperationException_init_$Init$ = kotlin_kotlin.$_$.a2;
  var flattenEntries = kotlin_io_ktor_ktor_utils.$_$.r;
  var joinToString$default = kotlin_kotlin.$_$.g;
  var trimMargin$default = kotlin_kotlin.$_$.r;
  var KProperty1 = kotlin_kotlin.$_$.p9;
  var toByteArray = kotlin_io_ktor_ktor_utils.$_$.a;
  var ByteReadChannel_0 = kotlin_io_ktor_ktor_io.$_$.d1;
  var Job$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f;
  var readRemaining = kotlin_io_ktor_ktor_io.$_$.b;
  var readBytes$default = kotlin_io_ktor_ktor_io.$_$.h;
  var hashCode = kotlin_kotlin.$_$.f8;
  var equals = kotlin_kotlin.$_$.a8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var async$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.h;
  var emptySet = kotlin_kotlin.$_$.i5;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.t;
  var HttpHeaders_getInstance = kotlin_io_ktor_ktor_http.$_$.h;
  var UnsafeHeaderException = kotlin_io_ktor_ktor_http.$_$.w;
  var CoroutineName = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.y;
  var SuspendFunction1 = kotlin_kotlin.$_$.l7;
  var IllegalStateException_init_$Init$_0 = kotlin_kotlin.$_$.q1;
  var SilentSupervisor$default = kotlin_io_ktor_ktor_utils.$_$.c;
  var lazy = kotlin_kotlin.$_$.xb;
  var CompletableJob = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.w;
  var setOf = kotlin_kotlin.$_$.d6;
  var Key = kotlin_kotlin.$_$.h7;
  var get = kotlin_kotlin.$_$.e7;
  var fold = kotlin_kotlin.$_$.d7;
  var minusKey = kotlin_kotlin.$_$.f7;
  var plus = kotlin_kotlin.$_$.i7;
  var Element = kotlin_kotlin.$_$.g7;
  var CancellationException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.l;
  var ByteArrayContent = kotlin_io_ktor_ktor_http.$_$.m;
  var Application_getInstance = kotlin_io_ktor_ktor_http.$_$.d;
  var toLong = kotlin_kotlin.$_$.a9;
  var ReadChannelContent = kotlin_io_ktor_ktor_http.$_$.o;
  var Companion_getInstance = kotlin_io_ktor_ktor_http.$_$.e;
  var isByteArray = kotlin_kotlin.$_$.j8;
  var Text_getInstance = kotlin_io_ktor_ktor_http.$_$.f;
  var TextContent_init_$Create$ = kotlin_io_ktor_ktor_http.$_$.a;
  var WriterScope = kotlin_io_ktor_ktor_io.$_$.f1;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.n3;
  var Long = kotlin_kotlin.$_$.db;
  var copyTo = kotlin_io_ktor_ktor_io.$_$.a;
  var cancel_0 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.h1;
  var CancellationException = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.v;
  var toLong_0 = kotlin_kotlin.$_$.la;
  var cancel_1 = kotlin_io_ktor_ktor_io.$_$.g1;
  var HttpStatusCode = kotlin_io_ktor_ktor_http.$_$.v;
  var getKClass = kotlin_kotlin.$_$.e;
  var writer$default = kotlin_io_ktor_ktor_io.$_$.l;
  var readRemaining_0 = kotlin_io_ktor_ktor_io.$_$.c;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.l3;
  var Input = kotlin_io_ktor_ktor_io.$_$.z;
  var ByteReadPacket = kotlin_io_ktor_ktor_io.$_$.x;
  var Unit = kotlin_kotlin.$_$.nb;
  var toInt = kotlin_kotlin.$_$.ja;
  var reversed = kotlin_kotlin.$_$.c6;
  var PipelinePhase = kotlin_io_ktor_ktor_utils.$_$.h;
  var SuspendFunction3 = kotlin_kotlin.$_$.n7;
  var contentType = kotlin_io_ktor_ktor_http.$_$.b1;
  var charset = kotlin_io_ktor_ktor_http.$_$.a1;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.d1;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var Charsets_getInstance = kotlin_io_ktor_ktor_io.$_$.n;
  var withCharset = kotlin_io_ktor_ktor_http.$_$.g1;
  var Comparator = kotlin_kotlin.$_$.xa;
  var compareValues = kotlin_kotlin.$_$.s6;
  var get_name = kotlin_io_ktor_ktor_io.$_$.r;
  var toList = kotlin_kotlin.$_$.k6;
  var sortedWith = kotlin_kotlin.$_$.h6;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.g1;
  var roundToInt = kotlin_kotlin.$_$.d9;
  var charSequenceLength = kotlin_kotlin.$_$.w7;
  var firstOrNull = kotlin_kotlin.$_$.k5;
  var charset_0 = kotlin_io_ktor_ktor_http.$_$.z;
  var readText$default = kotlin_io_ktor_ktor_io.$_$.i;
  var get_authority = kotlin_io_ktor_ktor_http.$_$.y;
  var takeFrom = kotlin_io_ktor_ktor_http.$_$.f1;
  var isSecure = kotlin_io_ktor_ktor_http.$_$.d1;
  var get_authority_0 = kotlin_io_ktor_ktor_http.$_$.x;
  var Companion_getInstance_1 = kotlin_io_ktor_ktor_http.$_$.k;
  var Companion_getInstance_2 = kotlin_io_ktor_ktor_http.$_$.i;
  var setOf_0 = kotlin_kotlin.$_$.e6;
  var cancel_2 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.i1;
  var OutgoingContent = kotlin_io_ktor_ktor_http.$_$.q;
  var delay = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a;
  var launch$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j;
  var CancellationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.k;
  var NoContent = kotlin_io_ktor_ktor_http.$_$.n;
  var URLBuilder_init_$Create$ = kotlin_io_ktor_ktor_http.$_$.c;
  var HeadersBuilder_init_$Create$ = kotlin_io_ktor_ktor_http.$_$.b;
  var SupervisorJob$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g;
  var takeFrom_0 = kotlin_io_ktor_ktor_http.$_$.e1;
  var isBlank = kotlin_kotlin.$_$.w9;
  var appendAll = kotlin_io_ktor_ktor_utils.$_$.q;
  var HttpMessageBuilder = kotlin_io_ktor_ktor_http.$_$.t;
  var GMTDate$default = kotlin_io_ktor_ktor_utils.$_$.b;
  var HttpMessage = kotlin_io_ktor_ktor_http.$_$.u;
  var Companion_getInstance_3 = kotlin_io_ktor_ktor_http.$_$.l;
  var get_DEFAULT_PORT = kotlin_io_ktor_ktor_http.$_$.s;
  var Pipeline = kotlin_io_ktor_ktor_utils.$_$.i;
  var Companion_getInstance_4 = kotlin_io_ktor_ktor_io.$_$.o;
  var arrayOf = kotlin_kotlin.$_$.qb;
  var createKType = kotlin_kotlin.$_$.b;
  var decode$default = kotlin_io_ktor_ktor_io.$_$.e;
  var ConcurrentMap_init_$Create$ = kotlin_io_ktor_ktor_utils.$_$.d;
  var ConcurrentList = kotlin_io_ktor_ktor_utils.$_$.f;
  var numberToInt = kotlin_kotlin.$_$.w8;
  var Companion_getInstance_5 = kotlin_io_ktor_ktor_http.$_$.j;
  var CoroutineScope_0 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.z;
  var cancel_3 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j1;
  var Companion_getInstance_6 = kotlin_io_ktor_ktor_http.$_$.g;
  var Dispatchers_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.p;
  var intercepted = kotlin_kotlin.$_$.v6;
  var get_MODE_CANCELLABLE = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e1;
  var CancellableContinuationImpl = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.u;
  var extendThrowable = kotlin_kotlin.$_$.b8;
  var Companion_getInstance_7 = kotlin_kotlin.$_$.o3;
  var createFailure = kotlin_kotlin.$_$.rb;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.m2;
  var toTypedArray = kotlin_kotlin.$_$.q6;
  var GlobalScope_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.q;
  var WriteChannelContent = kotlin_io_ktor_ktor_http.$_$.p;
  var writeFully = kotlin_io_ktor_ktor_io.$_$.d;
  var Error_init_$Create$ = kotlin_kotlin.$_$.h1;
  var Error_init_$Create$_0 = kotlin_kotlin.$_$.j1;
  var Channel$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.b;
  var Companion_getInstance_8 = kotlin_io_ktor_ktor_http_cio.$_$.f;
  var Codes_CLOSED_ABNORMALLY_getInstance = kotlin_io_ktor_ktor_http_cio.$_$.a;
  var Text_init_$Create$ = kotlin_io_ktor_ktor_http_cio.$_$.e;
  var Binary_init_$Create$ = kotlin_io_ktor_ktor_http_cio.$_$.c;
  var CloseReason = kotlin_io_ktor_ktor_http_cio.$_$.g;
  var Close_init_$Create$ = kotlin_io_ktor_ktor_http_cio.$_$.d;
  var String$default = kotlin_io_ktor_ktor_io.$_$.g;
  var BytePacketBuilder = kotlin_io_ktor_ktor_io.$_$.w;
  var writeFully$default = kotlin_io_ktor_ktor_io.$_$.j;
  var readShort = kotlin_io_ktor_ktor_io.$_$.b1;
  var cancelConsumed = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.s;
  var Codes_INTERNAL_ERROR_getInstance = kotlin_io_ktor_ktor_http_cio.$_$.b;
  var CompletableDeferred$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c;
  var Factory_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.m;
  var DefaultWebSocketSession = kotlin_io_ktor_ktor_http_cio.$_$.h;
  //endregion
  //region block: pre-declaration
  HttpClient$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpClient$slambda.prototype.constructor = HttpClient$slambda;
  $executeCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $executeCOROUTINE$0.prototype.constructor = $executeCOROUTINE$0;
  $receiveCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $receiveCOROUTINE$1.prototype.constructor = $receiveCOROUTINE$1;
  DoubleReceiveException.prototype = Object.create(IllegalStateException.prototype);
  DoubleReceiveException.prototype.constructor = DoubleReceiveException;
  NoTransformationFoundException.prototype = Object.create(UnsupportedOperationException.prototype);
  NoTransformationFoundException.prototype.constructor = NoTransformationFoundException;
  $getResponseContentCOROUTINE$3.prototype = Object.create(CoroutineImpl.prototype);
  $getResponseContentCOROUTINE$3.prototype.constructor = $getResponseContentCOROUTINE$3;
  SavedHttpCall.prototype = Object.create(HttpClientCall.prototype);
  SavedHttpCall.prototype.constructor = SavedHttpCall;
  function get_coroutineContext() {
    return this.u26().si();
  }
  SavedHttpResponse.prototype = Object.create(HttpResponse.prototype);
  SavedHttpResponse.prototype.constructor = SavedHttpResponse;
  $saveCOROUTINE$2.prototype = Object.create(CoroutineImpl.prototype);
  $saveCOROUTINE$2.prototype.constructor = $saveCOROUTINE$2;
  HttpClientEngine$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpClientEngine$install$slambda.prototype.constructor = HttpClientEngine$install$slambda;
  HttpClientEngine$executeWithinCallContext$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpClientEngine$executeWithinCallContext$slambda.prototype.constructor = HttpClientEngine$executeWithinCallContext$slambda;
  $executeWithinCallContextCOROUTINE$4.prototype = Object.create(CoroutineImpl.prototype);
  $executeWithinCallContextCOROUTINE$4.prototype.constructor = $executeWithinCallContextCOROUTINE$4;
  function get_supportedCapabilities() {
    return emptySet();
  }
  function install(client) {
    var tmp = Phases_getInstance_0().y27_1;
    client.u25_1.p1r(tmp, HttpClientEngine$install$slambda_0(this, client, null));
  }
  ClientEngineClosedException.prototype = Object.create(IllegalStateException.prototype);
  ClientEngineClosedException.prototype.constructor = ClientEngineClosedException;
  ResponseException.prototype = Object.create(IllegalStateException.prototype);
  ResponseException.prototype.constructor = ResponseException;
  RedirectResponseException.prototype = Object.create(ResponseException.prototype);
  RedirectResponseException.prototype.constructor = RedirectResponseException;
  ClientRequestException.prototype = Object.create(ResponseException.prototype);
  ClientRequestException.prototype.constructor = ClientRequestException;
  ServerResponseException.prototype = Object.create(ResponseException.prototype);
  ServerResponseException.prototype.constructor = ServerResponseException;
  addDefaultResponseValidation$lambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  addDefaultResponseValidation$lambda$slambda.prototype.constructor = addDefaultResponseValidation$lambda$slambda;
  defaultTransformers$1$content$1.prototype = Object.create(ByteArrayContent.prototype);
  defaultTransformers$1$content$1.prototype.constructor = defaultTransformers$1$content$1;
  defaultTransformers$1$content$2.prototype = Object.create(ReadChannelContent.prototype);
  defaultTransformers$1$content$2.prototype.constructor = defaultTransformers$1$content$2;
  defaultTransformers$slambda.prototype = Object.create(CoroutineImpl.prototype);
  defaultTransformers$slambda.prototype.constructor = defaultTransformers$slambda;
  defaultTransformers$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  defaultTransformers$slambda$slambda.prototype.constructor = defaultTransformers$slambda$slambda;
  defaultTransformers$slambda_1.prototype = Object.create(CoroutineImpl.prototype);
  defaultTransformers$slambda_1.prototype.constructor = defaultTransformers$slambda_1;
  HttpCallValidator$Companion$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpCallValidator$Companion$install$slambda.prototype.constructor = HttpCallValidator$Companion$install$slambda;
  HttpCallValidator$Companion$install$slambda_1.prototype = Object.create(CoroutineImpl.prototype);
  HttpCallValidator$Companion$install$slambda_1.prototype.constructor = HttpCallValidator$Companion$install$slambda_1;
  HttpCallValidator$Companion$install$slambda_3.prototype = Object.create(CoroutineImpl.prototype);
  HttpCallValidator$Companion$install$slambda_3.prototype.constructor = HttpCallValidator$Companion$install$slambda_3;
  $validateResponseCOROUTINE$5.prototype = Object.create(CoroutineImpl.prototype);
  $validateResponseCOROUTINE$5.prototype.constructor = $validateResponseCOROUTINE$5;
  $processExceptionCOROUTINE$6.prototype = Object.create(CoroutineImpl.prototype);
  $processExceptionCOROUTINE$6.prototype.constructor = $processExceptionCOROUTINE$6;
  HttpPlainText$Feature$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpPlainText$Feature$install$slambda.prototype.constructor = HttpPlainText$Feature$install$slambda;
  HttpPlainText$Feature$install$slambda_1.prototype = Object.create(CoroutineImpl.prototype);
  HttpPlainText$Feature$install$slambda_1.prototype.constructor = HttpPlainText$Feature$install$slambda_1;
  HttpRedirect$Feature$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpRedirect$Feature$install$slambda.prototype.constructor = HttpRedirect$Feature$install$slambda;
  $handleCallCOROUTINE$7.prototype = Object.create(CoroutineImpl.prototype);
  $handleCallCOROUTINE$7.prototype.constructor = $handleCallCOROUTINE$7;
  HttpRequestLifecycle$Feature$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpRequestLifecycle$Feature$install$slambda.prototype.constructor = HttpRequestLifecycle$Feature$install$slambda;
  HttpSend$Feature$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpSend$Feature$install$slambda.prototype.constructor = HttpSend$Feature$install$slambda;
  $executeCOROUTINE$8.prototype = Object.create(CoroutineImpl.prototype);
  $executeCOROUTINE$8.prototype.constructor = $executeCOROUTINE$8;
  SendCountExceedException.prototype = Object.create(IllegalStateException.prototype);
  SendCountExceedException.prototype.constructor = SendCountExceedException;
  HttpTimeout$Feature$install$slambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpTimeout$Feature$install$slambda$slambda.prototype.constructor = HttpTimeout$Feature$install$slambda$slambda;
  HttpTimeout$Feature$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpTimeout$Feature$install$slambda.prototype.constructor = HttpTimeout$Feature$install$slambda;
  HttpRequestTimeoutException.prototype = Object.create(CancellationException.prototype);
  HttpRequestTimeoutException.prototype.constructor = HttpRequestTimeoutException;
  WebSocketException.prototype = Object.create(IllegalStateException.prototype);
  WebSocketException.prototype.constructor = WebSocketException;
  ClientUpgradeContent.prototype = Object.create(NoContent.prototype);
  ClientUpgradeContent.prototype.constructor = ClientUpgradeContent;
  HttpRequestPipeline.prototype = Object.create(Pipeline.prototype);
  HttpRequestPipeline.prototype.constructor = HttpRequestPipeline;
  HttpSendPipeline.prototype = Object.create(Pipeline.prototype);
  HttpSendPipeline.prototype.constructor = HttpSendPipeline;
  DefaultHttpResponse.prototype = Object.create(HttpResponse.prototype);
  DefaultHttpResponse.prototype.constructor = DefaultHttpResponse;
  HttpResponsePipeline.prototype = Object.create(Pipeline.prototype);
  HttpResponsePipeline.prototype.constructor = HttpResponsePipeline;
  HttpReceivePipeline.prototype = Object.create(Pipeline.prototype);
  HttpReceivePipeline.prototype.constructor = HttpReceivePipeline;
  HttpStatement$execute$slambda.prototype = Object.create(CoroutineImpl.prototype);
  HttpStatement$execute$slambda.prototype.constructor = HttpStatement$execute$slambda;
  $executeCOROUTINE$11.prototype = Object.create(CoroutineImpl.prototype);
  $executeCOROUTINE$11.prototype.constructor = $executeCOROUTINE$11;
  $executeUnsafeCOROUTINE$12.prototype = Object.create(CoroutineImpl.prototype);
  $executeUnsafeCOROUTINE$12.prototype.constructor = $executeUnsafeCOROUTINE$12;
  $cleanupCOROUTINE$13.prototype = Object.create(CoroutineImpl.prototype);
  $cleanupCOROUTINE$13.prototype.constructor = $cleanupCOROUTINE$13;
  $readTextCOROUTINE$10.prototype = Object.create(CoroutineImpl.prototype);
  $readTextCOROUTINE$10.prototype.constructor = $readTextCOROUTINE$10;
  EmptyContent.prototype = Object.create(NoContent.prototype);
  EmptyContent.prototype.constructor = EmptyContent;
  $executeCOROUTINE$14.prototype = Object.create(CoroutineImpl.prototype);
  $executeCOROUTINE$14.prototype.constructor = $executeCOROUTINE$14;
  $executeWebSocketRequestCOROUTINE$15.prototype = Object.create(CoroutineImpl.prototype);
  $executeWebSocketRequestCOROUTINE$15.prototype.constructor = $executeWebSocketRequestCOROUTINE$15;
  JsClientEngine.prototype = Object.create(HttpClientEngineBase.prototype);
  JsClientEngine.prototype.constructor = JsClientEngine;
  JsError.prototype = Object.create(Error.prototype);
  JsError.prototype.constructor = JsError;
  toRaw$slambda.prototype = Object.create(CoroutineImpl.prototype);
  toRaw$slambda.prototype.constructor = toRaw$slambda;
  $toRawCOROUTINE$16.prototype = Object.create(CoroutineImpl.prototype);
  $toRawCOROUTINE$16.prototype.constructor = $toRawCOROUTINE$16;
  channelFromStream$slambda.prototype = Object.create(CoroutineImpl.prototype);
  channelFromStream$slambda.prototype.constructor = channelFromStream$slambda;
  readBodyNode$slambda.prototype = Object.create(CoroutineImpl.prototype);
  readBodyNode$slambda.prototype.constructor = readBodyNode$slambda;
  JsWebSocketSession$lambda$slambda.prototype = Object.create(CoroutineImpl.prototype);
  JsWebSocketSession$lambda$slambda.prototype.constructor = JsWebSocketSession$lambda$slambda;
  JsWebSocketSession$lambda$slambda_1.prototype = Object.create(CoroutineImpl.prototype);
  JsWebSocketSession$lambda$slambda_1.prototype.constructor = JsWebSocketSession$lambda$slambda_1;
  JsWebSocketSession$slambda.prototype = Object.create(CoroutineImpl.prototype);
  JsWebSocketSession$slambda.prototype.constructor = JsWebSocketSession$slambda;
  //endregion
  function _set_manageEngine__r3e33k($this, _set____db54di) {
    return $this.o25_1.m4($this, manageEngine$factory(), _set____db54di);
  }
  function _get_manageEngine__sdz8bg($this) {
    return $this.o25_1.l4($this, manageEngine$factory_0());
  }
  function HttpClient_init_$Init$(engine, userConfig, manageEngine, $this) {
    HttpClient.call($this, engine, userConfig);
    _set_manageEngine__r3e33k($this, manageEngine);
    return $this;
  }
  function HttpClient_init_$Create$(engine, userConfig, manageEngine) {
    return HttpClient_init_$Init$(engine, userConfig, manageEngine, Object.create(HttpClient.prototype));
  }
  function HttpClient$lambda(this$0) {
    return function (it) {
      var tmp;
      if (!(it == null)) {
        tmp = cancel$default(this$0.m25_1, null, 1, null);
      }
      return Unit_getInstance();
    };
  }
  function HttpClient$slambda(this$0, resultContinuation) {
    this.h26_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpClient$slambda.prototype.m26 = function ($this$intercept, call, $cont) {
    var tmp = this.n26($this$intercept, call, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpClient$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpClient$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            var tmp_0 = this.j26_1;
            if (!(tmp_0 instanceof HttpClientCall)) {
              var message = 'Error: HttpClientCall expected, but found ' + toString(this.j26_1) + '(' + getKClassFromExpression(this.j26_1) + ').';
              throw IllegalStateException_init_$Create$(toString(message));
            }

            this.vg_1 = 1;
            suspendResult = this.h26_1.v25_1.n1r(this.j26_1, this.j26_1.t26(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k26_1 = suspendResult;
            this.l26_1 = this.k26_1.u26();
            this.vg_1 = 2;
            suspendResult = this.i26_1.p1q(this.l26_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            ;
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpClient$slambda.prototype.n26 = function ($this$intercept, call, completion) {
    var i = new HttpClient$slambda(this.h26_1, completion);
    i.i26_1 = $this$intercept;
    i.j26_1 = call;
    return i;
  };
  HttpClient$slambda.$metadata$ = classMeta('HttpClient$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpClient$slambda_0(this$0, resultContinuation) {
    var i = new HttpClient$slambda(this$0, resultContinuation);
    var l = function ($this$intercept, call, $cont) {
      return i.m26($this$intercept, call, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function HttpClient$lambda_0() {
    return function ($this$install) {
      defaultTransformers($this$install);
      return Unit_getInstance();
    };
  }
  function $executeCOROUTINE$0(_this__u8e3s4, builder, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.d27_1 = _this__u8e3s4;
    this.e27_1 = builder;
  }
  $executeCOROUTINE$0.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.d27_1.s25_1.n1r(this.e27_1, this.e27_1.i27_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult instanceof HttpClientCall ? suspendResult : THROW_CCE();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$0.$metadata$ = classMeta('$executeCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function HttpClient(engine, userConfig) {
    this.m25_1 = engine;
    this.n25_1 = userConfig;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(false);
    }
    tmp.o25_1 = tmp$ret$0;
    this.p25_1 = atomic$boolean$1(false);
    this.q25_1 = Job(this.m25_1.si().w3(Key_getInstance()));
    this.r25_1 = this.m25_1.si().d4(this.q25_1);
    this.s25_1 = new HttpRequestPipeline(this.n25_1.m1r());
    this.t25_1 = new HttpResponsePipeline(this.n25_1.m1r());
    this.u25_1 = new HttpSendPipeline(this.n25_1.m1r());
    this.v25_1 = new HttpReceivePipeline(this.n25_1.m1r());
    this.w25_1 = Attributes(true);
    this.x25_1 = this.m25_1.t27();
    this.y25_1 = new HttpClientConfig();
    checkCoroutinesVersion();
    if (_get_manageEngine__sdz8bg(this)) {
      this.q25_1.vj(HttpClient$lambda(this));
    }
    this.m25_1.u27(this);
    var tmp_0 = Phases_getInstance_0().z27_1;
    this.u25_1.p1r(tmp_0, HttpClient$slambda_0(this, null));
    var tmp$ret$1;
    {
      var tmp0_with = this.n25_1;
      {
      }
      var tmp_1 = Feature_getInstance_1();
      this.y25_1.a28(tmp_1, null, 2, null);
      if (tmp0_with.c28()) {
        var tmp_2 = Feature_getInstance();
        this.y25_1.a28(tmp_2, null, 2, null);
        this.y25_1.b28('DefaultTransformers', HttpClient$lambda_0());
      }
      var tmp_3 = Feature_getInstance_2();
      this.y25_1.a28(tmp_3, null, 2, null);
      if (tmp0_with.d28()) {
        var tmp_4 = Feature_getInstance_0();
        this.y25_1.a28(tmp_4, null, 2, null);
      }
      var tmp0_this = this;
      tmp0_this.y25_1.e28(tmp0_with);
      addDefaultResponseValidation(this.y25_1);
      tmp$ret$1 = this.y25_1.u27(this);
    }
    makeShared(this);
  }
  HttpClient.prototype.si = function () {
    return this.r25_1;
  };
  HttpClient.prototype.f28 = function () {
    return this.w25_1;
  };
  HttpClient.prototype.g28 = function (builder, $cont) {
    var tmp = new $executeCOROUTINE$0(this, builder, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpClient.prototype.e1b = function () {
    var success = this.p25_1.atomicfu$compareAndSet(false, true);
    if (!success)
      return Unit_getInstance();
    {
      var tmp0_forEach = this.w25_1.z1j();
      var tmp0_iterator = tmp0_forEach.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          var feature = this.w25_1.u1j(element instanceof AttributeKey ? element : THROW_CCE());
          if (isInterface(feature, Closeable)) {
            feature.e1b();
          }
        }
      }
    }
    this.q25_1.bp();
    if (_get_manageEngine__sdz8bg(this)) {
      this.m25_1.e1b();
    }
  };
  HttpClient.prototype.toString = function () {
    return 'HttpClient[' + this.m25_1 + ']';
  };
  HttpClient.$metadata$ = classMeta('HttpClient', [CoroutineScope, Closeable]);
  function HttpClient_0(engineFactory, block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new HttpClientConfig();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    var config = tmp$ret$0;
    var engine = engineFactory.i28(config.h28());
    var client = HttpClient_init_$Create$(engine, config, true);
    var tmp = ensureNotNull(client.r25_1.w3(Key_getInstance()));
    tmp.vj(HttpClient$lambda_1(engine));
    return client;
  }
  function HttpClient$lambda_1($engine) {
    return function (it) {
      $engine.e1b();
      return Unit_getInstance();
    };
  }
  function manageEngine$factory() {
    return getPropertyCallableRef('manageEngine', 1, KMutableProperty1, function (receiver) {
      return _get_manageEngine__sdz8bg(receiver);
    }, function (receiver, value) {
      return _set_manageEngine__r3e33k(receiver, value);
    });
  }
  function manageEngine$factory_0() {
    return getPropertyCallableRef('manageEngine', 1, KMutableProperty1, function (receiver) {
      return _get_manageEngine__sdz8bg(receiver);
    }, function (receiver, value) {
      return _set_manageEngine__r3e33k(receiver, value);
    });
  }
  function HttpClientConfig$engineConfig$delegate$lambda() {
    return function ($this$shared) {
      return Unit_getInstance();
    };
  }
  function HttpClientConfig$install$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function HttpClientConfig$install$lambda_0($previousConfigBlock, $configure) {
    return function ($this$null) {
      var tmp0_safe_receiver = $previousConfigBlock;
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver($this$null);
      $configure(isObject($this$null) ? $this$null : THROW_CCE());
      return Unit_getInstance();
    };
  }
  function HttpClientConfig$install$lambda$lambda() {
    return function () {
      return Attributes(true);
    };
  }
  function HttpClientConfig$install$lambda_1($feature) {
    return function (scope) {
      var tmp = get_FEATURE_INSTALLED_LIST();
      var attributes = scope.w25_1.y1j(tmp, HttpClientConfig$install$lambda$lambda());
      var config = ensureNotNull(scope.y25_1.m27_1.i2($feature.s()));
      var featureData = $feature.j28(config);
      $feature.k28(featureData, scope);
      attributes.x1j($feature.s(), featureData);
      return Unit_getInstance();
    };
  }
  function HttpClientConfig() {
    this.l27_1 = sharedMap();
    this.m27_1 = sharedMap();
    this.n27_1 = sharedMap();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(HttpClientConfig$engineConfig$delegate$lambda());
    }
    tmp.o27_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(true);
    }
    tmp_0.p27_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = new shared$1(true);
    }
    tmp_1.q27_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    {
      tmp$ret$3 = new shared$1(true);
    }
    tmp_2.r27_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    {
      var tmp0_shared = PlatformUtils_getInstance().h1m_1;
      tmp$ret$4 = new shared$1(tmp0_shared);
    }
    tmp_3.s27_1 = tmp$ret$4;
  }
  HttpClientConfig.prototype.l28 = function (_set____db54di) {
    return this.o27_1.m4(this, engineConfig$factory(), _set____db54di);
  };
  HttpClientConfig.prototype.h28 = function () {
    return this.o27_1.l4(this, engineConfig$factory_0());
  };
  HttpClientConfig.prototype.m28 = function (_set____db54di) {
    return this.p27_1.m4(this, followRedirects$factory(), _set____db54di);
  };
  HttpClientConfig.prototype.d28 = function () {
    return this.p27_1.l4(this, followRedirects$factory_0());
  };
  HttpClientConfig.prototype.n28 = function (_set____db54di) {
    return this.q27_1.m4(this, useDefaultTransformers$factory(), _set____db54di);
  };
  HttpClientConfig.prototype.c28 = function () {
    return this.q27_1.l4(this, useDefaultTransformers$factory_0());
  };
  HttpClientConfig.prototype.o28 = function (_set____db54di) {
    return this.r27_1.m4(this, expectSuccess$factory(), _set____db54di);
  };
  HttpClientConfig.prototype.p28 = function () {
    return this.r27_1.l4(this, expectSuccess$factory_0());
  };
  HttpClientConfig.prototype.q28 = function (_set____db54di) {
    return this.s27_1.m4(this, developmentMode$factory(), _set____db54di);
  };
  HttpClientConfig.prototype.m1r = function () {
    return this.s27_1.l4(this, developmentMode$factory_0());
  };
  HttpClientConfig.prototype.r28 = function (feature, configure) {
    var previousConfigBlock = this.m27_1.i2(feature.s());
    {
      var tmp0_set = this.m27_1;
      var tmp1_set = feature.s();
      tmp0_set.c(tmp1_set, HttpClientConfig$install$lambda_0(previousConfigBlock, configure));
    }
    if (this.l27_1.c2(feature.s()))
      return Unit_getInstance();
    {
      var tmp2_set = this.l27_1;
      var tmp3_set = feature.s();
      tmp2_set.c(tmp3_set, HttpClientConfig$install$lambda_1(feature));
    }
  };
  HttpClientConfig.prototype.a28 = function (feature, configure, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      configure = HttpClientConfig$install$lambda();
    }
    return this.r28(feature, configure);
  };
  HttpClientConfig.prototype.b28 = function (key, block) {
    {
      var tmp0_set = this.n27_1;
      tmp0_set.c(key, block);
    }
  };
  HttpClientConfig.prototype.u27 = function (client) {
    {
      var tmp0_forEach = this.l27_1.k2();
      var tmp0_iterator = tmp0_forEach.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          var tmp$ret$0;
          {
            {
            }
            element(client);
            tmp$ret$0 = client;
          }
        }
      }
    }
    {
      var tmp1_forEach = this.n27_1.k2();
      var tmp0_iterator_0 = tmp1_forEach.d();
      while (tmp0_iterator_0.e()) {
        var element_0 = tmp0_iterator_0.f();
        {
          var tmp$ret$1;
          {
            {
            }
            element_0(client);
            tmp$ret$1 = client;
          }
        }
      }
    }
  };
  HttpClientConfig.prototype.e28 = function (other) {
    this.m28(other.d28());
    this.n28(other.c28());
    this.o28(other.p28());
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.l27_1;
      var tmp1_plusAssign = other.l27_1;
      tmp0_plusAssign.b3(tmp1_plusAssign);
    }
    var tmp1_this = this;
    {
      var tmp2_plusAssign = tmp1_this.m27_1;
      var tmp3_plusAssign = other.m27_1;
      tmp2_plusAssign.b3(tmp3_plusAssign);
    }
    var tmp2_this = this;
    {
      var tmp4_plusAssign = tmp2_this.n27_1;
      var tmp5_plusAssign = other.n27_1;
      tmp4_plusAssign.b3(tmp5_plusAssign);
    }
  };
  HttpClientConfig.$metadata$ = classMeta('HttpClientConfig');
  function engineConfig$factory() {
    return getPropertyCallableRef('engineConfig', 1, KMutableProperty1, function (receiver) {
      return receiver.h28();
    }, function (receiver, value) {
      return receiver.l28(value);
    });
  }
  function engineConfig$factory_0() {
    return getPropertyCallableRef('engineConfig', 1, KMutableProperty1, function (receiver) {
      return receiver.h28();
    }, function (receiver, value) {
      return receiver.l28(value);
    });
  }
  function followRedirects$factory() {
    return getPropertyCallableRef('followRedirects', 1, KMutableProperty1, function (receiver) {
      return receiver.d28();
    }, function (receiver, value) {
      return receiver.m28(value);
    });
  }
  function followRedirects$factory_0() {
    return getPropertyCallableRef('followRedirects', 1, KMutableProperty1, function (receiver) {
      return receiver.d28();
    }, function (receiver, value) {
      return receiver.m28(value);
    });
  }
  function useDefaultTransformers$factory() {
    return getPropertyCallableRef('useDefaultTransformers', 1, KMutableProperty1, function (receiver) {
      return receiver.c28();
    }, function (receiver, value) {
      return receiver.n28(value);
    });
  }
  function useDefaultTransformers$factory_0() {
    return getPropertyCallableRef('useDefaultTransformers', 1, KMutableProperty1, function (receiver) {
      return receiver.c28();
    }, function (receiver, value) {
      return receiver.n28(value);
    });
  }
  function expectSuccess$factory() {
    return getPropertyCallableRef('expectSuccess', 1, KMutableProperty1, function (receiver) {
      return receiver.p28();
    }, function (receiver, value) {
      return receiver.o28(value);
    });
  }
  function expectSuccess$factory_0() {
    return getPropertyCallableRef('expectSuccess', 1, KMutableProperty1, function (receiver) {
      return receiver.p28();
    }, function (receiver, value) {
      return receiver.o28(value);
    });
  }
  function developmentMode$factory() {
    return getPropertyCallableRef('developmentMode', 1, KMutableProperty1, function (receiver) {
      return receiver.m1r();
    }, function (receiver, value) {
      return receiver.q28(value);
    });
  }
  function developmentMode$factory_0() {
    return getPropertyCallableRef('developmentMode', 1, KMutableProperty1, function (receiver) {
      return receiver.m1r();
    }, function (receiver, value) {
      return receiver.q28(value);
    });
  }
  function Companion() {
    Companion_instance = this;
    this.s28_1 = new AttributeKey('CustomResponse');
  }
  Companion.prototype.t28 = function () {
    return this.s28_1;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_9() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function $receiveCOROUTINE$1(_this__u8e3s4, info, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.c29_1 = _this__u8e3s4;
    this.d29_1 = info;
  }
  $receiveCOROUTINE$1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 10;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.wg_1 = 9;
            this.wg_1 = 8;
            if (instanceOf(this.c29_1.t26(), this.d29_1.k29_1)) {
              this.e29_1 = this.c29_1.t26();
              this.wg_1 = 10;
              this.vg_1 = 7;
              continue $sm;
            } else {
              this.vg_1 = 3;
              continue $sm;
            }

            break;
          case 3:
            if (!this.c29_1.n29() ? !this.c29_1.o26_1.atomicfu$compareAndSet(false, true) : false) {
              throw new DoubleReceiveException(this.c29_1);
            }

            this.f29_1 = this.c29_1.f28().v1j(Companion_getInstance_9().s28_1);
            if (this.f29_1 == null) {
              this.vg_1 = 4;
              suspendResult = this.c29_1.o29(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.g29_1 = this.f29_1;
              this.vg_1 = 5;
              continue $sm;
            }

            break;
          case 4:
            this.g29_1 = suspendResult;
            this.vg_1 = 5;
            continue $sm;
          case 5:
            this.h29_1 = this.g29_1;
            this.i29_1 = new HttpResponseContainer(this.d29_1, this.h29_1);
            var tmp_0 = this;
            var tmp1_elvis_lhs = this.c29_1.p29();
            var tmp_1;
            if (tmp1_elvis_lhs == null) {
              var tmp0_error = 'Failed to receive call(' + this.c29_1 + ') in different native thread.';
              throw IllegalStateException_init_$Create$(toString(tmp0_error));
            } else {
              tmp_1 = tmp1_elvis_lhs;
            }

            tmp_0.j29_1 = tmp_1;
            this.vg_1 = 6;
            suspendResult = this.j29_1.t25_1.n1r(this.c29_1, this.i29_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            var ARGUMENT = suspendResult;
            var result = ARGUMENT.r29_1;
            if (!instanceOf(result, this.d29_1.k29_1)) {
              var from = getKClassFromExpression(result);
              var to = this.d29_1.k29_1;
              throw new NoTransformationFoundException(this.c29_1.t26(), from, to);
            }

            this.e29_1 = result;
            this.wg_1 = 10;
            this.vg_1 = 7;
            var tmp_2 = this;
            continue $sm;
          case 7:
            var tmp_3 = this.e29_1;
            complete(this.c29_1.t26());
            return tmp_3;
          case 8:
            this.wg_1 = 9;
            var tmp_4 = this.yg_1;
            if (tmp_4 instanceof Error) {
              var cause = this.yg_1;
              var tmp_5 = this;
              cancel(this.c29_1.t26(), 'Receive failed', cause);
              throw cause;
            } else {
              throw this.yg_1;
            }

            break;
          case 9:
            this.wg_1 = 10;
            var t = this.yg_1;
            complete(this.c29_1.t26());
            throw t;
          case 10:
            throw this.yg_1;
          case 11:
            complete(this.c29_1.t26());
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 10) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $receiveCOROUTINE$1.$metadata$ = classMeta('$receiveCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function HttpClientCall(client) {
    Companion_getInstance_9();
    this.o26_1 = atomic$boolean$1(false);
    this.p26_1 = threadLocal(client);
    this.s26_1 = false;
  }
  HttpClientCall.prototype.p29 = function () {
    return this.p26_1.l4(this, client$factory());
  };
  HttpClientCall.prototype.si = function () {
    return this.t26().si();
  };
  HttpClientCall.prototype.f28 = function () {
    return this.s29().f28();
  };
  HttpClientCall.prototype.t29 = function (_set____db54di) {
    this.q26_1 = _set____db54di;
  };
  HttpClientCall.prototype.s29 = function () {
    var tmp = this.q26_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('request');
    }
  };
  HttpClientCall.prototype.u29 = function (_set____db54di) {
    this.r26_1 = _set____db54di;
  };
  HttpClientCall.prototype.t26 = function () {
    var tmp = this.r26_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('response');
    }
  };
  HttpClientCall.prototype.n29 = function () {
    return this.s26_1;
  };
  HttpClientCall.prototype.o29 = function ($cont) {
    return this.t26().v1u();
  };
  HttpClientCall.prototype.v29 = function (info, $cont) {
    var tmp = new $receiveCOROUTINE$1(this, info, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpClientCall.prototype.toString = function () {
    return 'HttpClientCall[' + this.s29().w29() + ', ' + this.t26().x29() + ']';
  };
  HttpClientCall.$metadata$ = classMeta('HttpClientCall', [CoroutineScope]);
  function HttpClientCall_0(client, requestData, responseData) {
    var tmp$ret$0;
    {
      var tmp0_apply = new HttpClientCall(client);
      {
      }
      {
        tmp0_apply.q26_1 = new DefaultHttpRequest(tmp0_apply, requestData);
        tmp0_apply.r26_1 = new DefaultHttpResponse(tmp0_apply, responseData);
        var tmp = responseData.c2a_1;
        if (!isInterface(tmp, ByteReadChannel)) {
          tmp0_apply.f28().x1j(Companion_getInstance_9().s28_1, responseData.c2a_1);
        }
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function DoubleReceiveException(call) {
    IllegalStateException_init_$Init$(this);
    this.f2a_1 = 'Response already received: ' + call;
    captureStack(this, DoubleReceiveException);
  }
  DoubleReceiveException.prototype.j1 = function () {
    return this.f2a_1;
  };
  DoubleReceiveException.$metadata$ = classMeta('DoubleReceiveException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  Object.defineProperty(DoubleReceiveException.prototype, 'message', {
    configurable: true,
    get: function () {
      return this.j1();
    }
  });
  function NoTransformationFoundException$message$lambda() {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var key = _name_for_destructuring_parameter_0__wldtmu.h3();
      var value = _name_for_destructuring_parameter_0__wldtmu.i3();
      return key + ': ' + value + '\n';
    };
  }
  function NoTransformationFoundException(response, from, to) {
    UnsupportedOperationException_init_$Init$(this);
    var tmp = this;
    var tmp_0 = get_request(response).w29();
    var tmp_1 = response.x29();
    var tmp_2 = flattenEntries(response.g1z());
    var tmp_3 = 'No transformation found: ' + from + ' -> ' + to + '\n        |with response from ' + tmp_0 + ':\n        |status: ' + tmp_1 + '\n        |response headers: \n        |' + joinToString$default(tmp_2, null, null, null, 0, null, NoTransformationFoundException$message$lambda(), 31, null) + '\n    ';
    tmp.g2a_1 = trimMargin$default(tmp_3, null, 1, null);
    captureStack(this, NoTransformationFoundException);
  }
  NoTransformationFoundException.prototype.j1 = function () {
    return this.g2a_1;
  };
  NoTransformationFoundException.$metadata$ = classMeta('NoTransformationFoundException', undefined, undefined, undefined, undefined, UnsupportedOperationException.prototype);
  Object.defineProperty(NoTransformationFoundException.prototype, 'message', {
    configurable: true,
    get: function () {
      return this.j1();
    }
  });
  function client$factory() {
    return getPropertyCallableRef('client', 1, KProperty1, function (receiver) {
      return receiver.p29();
    }, null);
  }
  function save(_this__u8e3s4, $cont) {
    var tmp = new $saveCOROUTINE$2(_this__u8e3s4, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $getResponseContentCOROUTINE$3(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.a2b_1 = _this__u8e3s4;
  }
  $getResponseContentCOROUTINE$3.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            if (this.a2b_1.g2b_1 == null) {
              this.a2b_1.g2b_1 = this.a2b_1.t26().v1u();
            }

            this.vg_1 = 1;
            suspendResult = toByteArray(ensureNotNull(this.a2b_1.g2b_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var contentBytes = suspendResult;
            this.a2b_1.g2b_1 = ByteReadChannel_0(contentBytes);
            return ByteReadChannel_0(contentBytes);
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $getResponseContentCOROUTINE$3.$metadata$ = classMeta('$getResponseContentCOROUTINE$3', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function SavedHttpCall(client) {
    HttpClientCall.call(this, client);
    this.g2b_1 = null;
    this.h2b_1 = true;
  }
  SavedHttpCall.prototype.o29 = function ($cont) {
    var tmp = new $getResponseContentCOROUTINE$3(this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  SavedHttpCall.prototype.n29 = function () {
    return this.h2b_1;
  };
  SavedHttpCall.$metadata$ = classMeta('SavedHttpCall', undefined, undefined, undefined, undefined, HttpClientCall.prototype);
  function SavedHttpRequest(call, origin) {
    this.i2b_1 = call;
    this.j2b_1 = origin;
  }
  SavedHttpRequest.prototype.u26 = function () {
    return this.i2b_1;
  };
  SavedHttpRequest.prototype.f28 = function () {
    return this.j2b_1.f28();
  };
  SavedHttpRequest.prototype.si = function () {
    return this.j2b_1.si();
  };
  SavedHttpRequest.prototype.g1z = function () {
    return this.j2b_1.g1z();
  };
  SavedHttpRequest.prototype.k2b = function () {
    return this.j2b_1.k2b();
  };
  SavedHttpRequest.prototype.w29 = function () {
    return this.j2b_1.w29();
  };
  SavedHttpRequest.$metadata$ = classMeta('SavedHttpRequest', [HttpRequest]);
  function SavedHttpResponse(call, body, origin) {
    HttpResponse.call(this);
    this.l2b_1 = call;
    var tmp = this;
    tmp.m2b_1 = Job$default(null, 1, null);
    this.n2b_1 = origin.x29();
    this.o2b_1 = origin.u2b();
    this.p2b_1 = origin.v2b();
    this.q2b_1 = origin.w2b();
    this.r2b_1 = origin.g1z();
    this.s2b_1 = origin.si().d4(this.m2b_1);
    this.t2b_1 = ByteReadChannel_0(body);
  }
  SavedHttpResponse.prototype.u26 = function () {
    return this.l2b_1;
  };
  SavedHttpResponse.prototype.x29 = function () {
    return this.n2b_1;
  };
  SavedHttpResponse.prototype.u2b = function () {
    return this.o2b_1;
  };
  SavedHttpResponse.prototype.v2b = function () {
    return this.p2b_1;
  };
  SavedHttpResponse.prototype.w2b = function () {
    return this.q2b_1;
  };
  SavedHttpResponse.prototype.g1z = function () {
    return this.r2b_1;
  };
  SavedHttpResponse.prototype.si = function () {
    return this.s2b_1;
  };
  SavedHttpResponse.prototype.v1u = function () {
    return this.t2b_1;
  };
  SavedHttpResponse.$metadata$ = classMeta('SavedHttpResponse', undefined, undefined, undefined, undefined, HttpResponse.prototype);
  function $saveCOROUTINE$2(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.p2a_1 = _this__u8e3s4;
  }
  $saveCOROUTINE$2.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this.p2a_1.p29();
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              throw IllegalStateException_init_$Create$('Failed to save call in different native thread.');
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0.q2a_1 = tmp_1;
            var tmp_2 = this;
            tmp_2.r2a_1 = new SavedHttpCall(this.q2a_1);
            this.vg_1 = 1;
            suspendResult = readRemaining(this.p2a_1.t26().v1u(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var content = suspendResult;
            this.r2a_1.t29(new SavedHttpRequest(this.r2a_1, this.p2a_1.s29()));
            this.r2a_1.u29(new SavedHttpResponse(this.r2a_1, readBytes$default(content, 0, 1, null), this.p2a_1.t26()));
            return this.r2a_1;
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $saveCOROUTINE$2.$metadata$ = classMeta('$saveCOROUTINE$2', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function TypeInfo_init_$Init$(type, reifiedType, kotlinType, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      kotlinType = null;
    TypeInfo.call($this, type, reifiedType, kotlinType);
    return $this;
  }
  function TypeInfo_init_$Create$(type, reifiedType, kotlinType, $mask0, $marker) {
    return TypeInfo_init_$Init$(type, reifiedType, kotlinType, $mask0, $marker, Object.create(TypeInfo.prototype));
  }
  function TypeInfo(type, reifiedType, kotlinType) {
    this.k29_1 = type;
    this.l29_1 = reifiedType;
    this.m29_1 = kotlinType;
  }
  TypeInfo.prototype.toString = function () {
    return 'TypeInfo(type=' + this.k29_1 + ', reifiedType=' + this.l29_1 + ', kotlinType=' + this.m29_1 + ')';
  };
  TypeInfo.prototype.hashCode = function () {
    var result = this.k29_1.hashCode();
    result = imul(result, 31) + hashCode(this.l29_1) | 0;
    result = imul(result, 31) + (this.m29_1 == null ? 0 : hashCode(this.m29_1)) | 0;
    return result;
  };
  TypeInfo.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TypeInfo))
      return false;
    var tmp0_other_with_cast = other instanceof TypeInfo ? other : THROW_CCE();
    if (!this.k29_1.equals(tmp0_other_with_cast.k29_1))
      return false;
    if (!equals(this.l29_1, tmp0_other_with_cast.l29_1))
      return false;
    if (!equals(this.m29_1, tmp0_other_with_cast.m29_1))
      return false;
    return true;
  };
  TypeInfo.$metadata$ = classMeta('TypeInfo');
  function get_CALL_COROUTINE() {
    init_properties_HttpClientEngine_kt_umcrvf();
    return CALL_COROUTINE;
  }
  var CALL_COROUTINE;
  function _get_closed__iwkfs1($this) {
    var tmp0_safe_receiver = $this.si().w3(Key_getInstance());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ti();
    return !(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs);
  }
  function executeWithinCallContext($this, requestData, $cont) {
    var tmp = new $executeWithinCallContextCOROUTINE$4($this, requestData, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function checkExtensions($this, requestData) {
    var tmp0_iterator = requestData.p2c_1.d();
    while (tmp0_iterator.e()) {
      var requestedExtension = tmp0_iterator.f();
      {
        var tmp0_require = $this.q2c().l1(requestedExtension);
        {
        }
        if (!tmp0_require) {
          var tmp$ret$0;
          {
            tmp$ret$0 = "Engine doesn't support " + requestedExtension;
          }
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
      }
    }
  }
  function HttpClientEngine$install$slambda(this$0, $client, resultContinuation) {
    this.z2c_1 = this$0;
    this.a2d_1 = $client;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpClientEngine$install$slambda.prototype.m26 = function ($this$intercept, content, $cont) {
    var tmp = this.n26($this$intercept, content, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpClientEngine$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpClientEngine$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.d2d_1 = new HttpRequestBuilder();
            this.d2d_1.h2d(this.b2d_1.q3());
            ;
            this.d2d_1.i27_1 = this.c2d_1;
            tmp_0.e2d_1 = this.d2d_1.o16();
            validateHeaders(this.e2d_1);
            checkExtensions(this.z2c_1, this.e2d_1);
            this.vg_1 = 1;
            suspendResult = executeWithinCallContext(this.z2c_1, this.e2d_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.f2d_1 = suspendResult;
            this.g2d_1 = HttpClientCall_0(this.a2d_1, this.e2d_1, this.f2d_1);
            this.vg_1 = 2;
            suspendResult = this.b2d_1.p1q(this.g2d_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            ;
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpClientEngine$install$slambda.prototype.n26 = function ($this$intercept, content, completion) {
    var i = new HttpClientEngine$install$slambda(this.z2c_1, this.a2d_1, completion);
    i.b2d_1 = $this$intercept;
    i.c2d_1 = content;
    return i;
  };
  HttpClientEngine$install$slambda.$metadata$ = classMeta('HttpClientEngine$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpClientEngine$install$slambda_0(this$0, $client, resultContinuation) {
    var i = new HttpClientEngine$install$slambda(this$0, $client, resultContinuation);
    var l = function ($this$intercept, content, $cont) {
      return i.m26($this$intercept, content, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function HttpClientEngine$executeWithinCallContext$slambda(this$0, $requestData, resultContinuation) {
    this.q2d_1 = this$0;
    this.r2d_1 = $requestData;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpClientEngine$executeWithinCallContext$slambda.prototype.t2d = function ($this$async, $cont) {
    var tmp = this.i19($this$async, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpClientEngine$executeWithinCallContext$slambda.prototype.gh = function (p1, $cont) {
    return this.t2d((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  HttpClientEngine$executeWithinCallContext$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            if (_get_closed__iwkfs1(this.q2d_1)) {
              throw ClientEngineClosedException_init_$Create$(null, 1, null);
            }

            this.vg_1 = 1;
            suspendResult = this.q2d_1.u2d(this.r2d_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpClientEngine$executeWithinCallContext$slambda.prototype.i19 = function ($this$async, completion) {
    var i = new HttpClientEngine$executeWithinCallContext$slambda(this.q2d_1, this.r2d_1, completion);
    i.s2d_1 = $this$async;
    return i;
  };
  HttpClientEngine$executeWithinCallContext$slambda.$metadata$ = classMeta('HttpClientEngine$executeWithinCallContext$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function HttpClientEngine$executeWithinCallContext$slambda_0(this$0, $requestData, resultContinuation) {
    var i = new HttpClientEngine$executeWithinCallContext$slambda(this$0, $requestData, resultContinuation);
    var l = function ($this$async, $cont) {
      return i.t2d($this$async, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $executeWithinCallContextCOROUTINE$4(_this__u8e3s4, requestData, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.f2c_1 = _this__u8e3s4;
    this.g2c_1 = requestData;
  }
  $executeWithinCallContextCOROUTINE$4.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.vg_1 = 1;
            suspendResult = createCallContext(this.f2c_1, this.g2c_1.n2c_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.h2c_1 = suspendResult;
            makeShared(this.h2c_1);
            this.i2c_1 = this.h2c_1.d4(new KtorCallContextElement(this.h2c_1));
            this.vg_1 = 2;
            suspendResult = async$default(this.f2c_1, this.i2c_1, null, HttpClientEngine$executeWithinCallContext$slambda_0(this.f2c_1, this.g2c_1, null), 2, null).ol(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeWithinCallContextCOROUTINE$4.$metadata$ = classMeta('$executeWithinCallContextCOROUTINE$4', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function HttpClientEngine() {
  }
  HttpClientEngine.$metadata$ = interfaceMeta('HttpClientEngine', [CoroutineScope, Closeable]);
  function validateHeaders(request) {
    init_properties_HttpClientEngine_kt_umcrvf();
    var requestHeaders = request.l2c_1;
    var tmp$ret$2;
    {
      var tmp0_filter = requestHeaders.c1m();
      var tmp$ret$1;
      {
        var tmp0_filterTo = ArrayList_init_$Create$();
        var tmp0_iterator = tmp0_filter.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$0;
          {
            tmp$ret$0 = HttpHeaders_getInstance().x1y_1.l1(element);
          }
          if (tmp$ret$0) {
            tmp0_filterTo.a(element);
          }
        }
        tmp$ret$1 = tmp0_filterTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    var unsafeRequestHeaders = tmp$ret$2;
    var tmp$ret$3;
    {
      tmp$ret$3 = !unsafeRequestHeaders.m();
    }
    if (tmp$ret$3) {
      throw new UnsafeHeaderException(toString(unsafeRequestHeaders));
    }
  }
  function HttpClientEngineFactory() {
  }
  HttpClientEngineFactory.$metadata$ = interfaceMeta('HttpClientEngineFactory');
  var properties_initialized_HttpClientEngine_kt_5uiebb;
  function init_properties_HttpClientEngine_kt_umcrvf() {
    if (properties_initialized_HttpClientEngine_kt_5uiebb) {
    } else {
      properties_initialized_HttpClientEngine_kt_5uiebb = true;
      CALL_COROUTINE = new CoroutineName('call-context');
    }
  }
  function ClientEngineClosedException_init_$Init$(cause, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    ClientEngineClosedException.call($this, cause);
    return $this;
  }
  function ClientEngineClosedException_init_$Create$(cause, $mask0, $marker) {
    var tmp = ClientEngineClosedException_init_$Init$(cause, $mask0, $marker, Object.create(ClientEngineClosedException.prototype));
    captureStack(tmp, ClientEngineClosedException_init_$Create$);
    return tmp;
  }
  function ClientEngineClosedException(cause) {
    IllegalStateException_init_$Init$_0('Client already closed', this);
    this.v2d_1 = cause;
    captureStack(this, ClientEngineClosedException);
  }
  ClientEngineClosedException.prototype.k1 = function () {
    return this.v2d_1;
  };
  ClientEngineClosedException.$metadata$ = classMeta('ClientEngineClosedException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  Object.defineProperty(ClientEngineClosedException.prototype, 'cause', {
    configurable: true,
    get: function () {
      return this.k1();
    }
  });
  function HttpClientEngineBase$coroutineContext$delegate$lambda(this$0) {
    return function () {
      return SilentSupervisor$default(null, 1, null).d4(this$0.w2d()).d4(new CoroutineName(this$0.x2d_1 + '-context'));
    };
  }
  function HttpClientEngineBase$close$lambda(this$0) {
    return function (it) {
      close(this$0.w2d());
      return Unit_getInstance();
    };
  }
  function HttpClientEngineBase(engineName) {
    this.x2d_1 = engineName;
    this.y2d_1 = atomic$boolean$1(false);
    var tmp = this;
    tmp.z2d_1 = lazy(HttpClientEngineBase$coroutineContext$delegate$lambda(this));
  }
  HttpClientEngineBase.prototype.si = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = coroutineContext$factory();
      tmp$ret$0 = this.z2d_1.t();
    }
    return tmp$ret$0;
  };
  HttpClientEngineBase.prototype.e1b = function () {
    if (!this.y2d_1.atomicfu$compareAndSet(false, true))
      return Unit_getInstance();
    var tmp = this.si().w3(Key_getInstance());
    var tmp0_elvis_lhs = (!(tmp == null) ? isInterface(tmp, CompletableJob) : false) ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var requestJob = tmp_0;
    requestJob.bp();
    requestJob.vj(HttpClientEngineBase$close$lambda(this));
  };
  HttpClientEngineBase.$metadata$ = classMeta('HttpClientEngineBase', [HttpClientEngine]);
  function close(_this__u8e3s4) {
    var tmp;
    try {
      var tmp0_safe_receiver = isInterface(_this__u8e3s4, Closeable) ? _this__u8e3s4 : null;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        tmp0_safe_receiver.e1b();
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        tmp_1 = Unit_getInstance();
      } else {
        throw $p;
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function coroutineContext$factory() {
    return getPropertyCallableRef('coroutineContext', 1, KProperty1, function (receiver) {
      return receiver.si();
    }, null);
  }
  function get_ENGINE_CAPABILITIES_KEY() {
    init_properties_HttpClientEngineCapability_kt_68uqzx();
    return ENGINE_CAPABILITIES_KEY;
  }
  var ENGINE_CAPABILITIES_KEY;
  var DEFAULT_CAPABILITIES;
  function HttpClientEngineCapability() {
  }
  HttpClientEngineCapability.$metadata$ = interfaceMeta('HttpClientEngineCapability');
  var properties_initialized_HttpClientEngineCapability_kt_qarzcf;
  function init_properties_HttpClientEngineCapability_kt_68uqzx() {
    if (properties_initialized_HttpClientEngineCapability_kt_qarzcf) {
    } else {
      properties_initialized_HttpClientEngineCapability_kt_qarzcf = true;
      ENGINE_CAPABILITIES_KEY = new AttributeKey('EngineCapabilities');
      DEFAULT_CAPABILITIES = setOf(Feature_getInstance_3());
    }
  }
  function HttpClientEngineConfig() {
    this.a2e_1 = 4;
    this.b2e_1 = false;
    this.c2e_1 = null;
  }
  HttpClientEngineConfig.$metadata$ = classMeta('HttpClientEngineConfig');
  var KTOR_DEFAULT_USER_AGENT;
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.$metadata$ = objectMeta('Companion', [Key]);
  var Companion_instance_0;
  function Companion_getInstance_10() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function KtorCallContextElement(callContext) {
    Companion_getInstance_10();
    this.d2e_1 = callContext;
  }
  KtorCallContextElement.prototype.s = function () {
    return Companion_getInstance_10();
  };
  KtorCallContextElement.$metadata$ = classMeta('KtorCallContextElement', [Element]);
  function callContext($cont) {
    var tmp$ret$0;
    {
      tmp$ret$0 = $cont.q3();
    }
    return ensureNotNull(tmp$ret$0.w3(Companion_getInstance_10())).d2e_1;
  }
  function mergeHeaders(requestHeaders, content, block) {
    var tmp = buildHeaders(mergeHeaders$lambda(requestHeaders, content));
    tmp.x1l(mergeHeaders$lambda_0(block));
    var missingAgent = requestHeaders.n1k(HttpHeaders_getInstance().b1y_1) == null ? content.g1z().n1k(HttpHeaders_getInstance().b1y_1) == null : false;
    if (missingAgent ? needUserAgent() : false) {
      block(HttpHeaders_getInstance().b1y_1, KTOR_DEFAULT_USER_AGENT);
    }
    var tmp0_safe_receiver = content.a24();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var type = tmp1_elvis_lhs == null ? content.g1z().n1k(HttpHeaders_getInstance().v1v_1) : tmp1_elvis_lhs;
    var tmp2_safe_receiver = content.b24();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.toString();
    var length = tmp3_elvis_lhs == null ? content.g1z().n1k(HttpHeaders_getInstance().s1v_1) : tmp3_elvis_lhs;
    var tmp4_safe_receiver = type;
    if (tmp4_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = block(HttpHeaders_getInstance().v1v_1, tmp4_safe_receiver);
      }
    }
    var tmp5_safe_receiver = length;
    if (tmp5_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        tmp$ret$1 = block(HttpHeaders_getInstance().s1v_1, tmp5_safe_receiver);
      }
    }
  }
  function needUserAgent() {
    return !PlatformUtils_getInstance().d1m_1;
  }
  function attachToUserJob$lambda($callJob) {
    return function (cause) {
      var tmp0_elvis_lhs = cause;
      if (tmp0_elvis_lhs == null)
        return Unit_getInstance();
      else
        tmp0_elvis_lhs;
      $callJob.ak(CancellationException_init_$Create$(cause.message));
      return Unit_getInstance();
    };
  }
  function attachToUserJob$lambda_0($cleanupHandler) {
    return function (it) {
      $cleanupHandler.fm();
      return Unit_getInstance();
    };
  }
  function mergeHeaders$lambda($requestHeaders, $content) {
    return function ($this$buildHeaders) {
      $this$buildHeaders.w1l($requestHeaders);
      $this$buildHeaders.w1l($content.g1z());
      return Unit_getInstance();
    };
  }
  function mergeHeaders$lambda_0($block) {
    return function (key, values) {
      var tmp;
      if (HttpHeaders_getInstance().s1v_1 === key) {
        return Unit_getInstance();
      }
      var tmp_0;
      if (HttpHeaders_getInstance().v1v_1 === key) {
        return Unit_getInstance();
      }
      $block(key, joinToString$default(values, ',', null, null, 0, null, null, 62, null));
      return Unit_getInstance();
    };
  }
  function get_ValidateMark() {
    init_properties_DefaultResponseValidation_kt_dx65ax();
    return ValidateMark;
  }
  var ValidateMark;
  function addDefaultResponseValidation(_this__u8e3s4) {
    init_properties_DefaultResponseValidation_kt_dx65ax();
    HttpResponseValidator(_this__u8e3s4, addDefaultResponseValidation$lambda(_this__u8e3s4));
  }
  function RedirectResponseException(response, cachedResponseText) {
    ResponseException.call(this, response, cachedResponseText);
    this.f2e_1 = 'Unhandled redirect: ' + response.u26().s29().w29() + '. ' + ('Status: ' + response.x29() + '. Text: "' + cachedResponseText + '"');
    captureStack(this, RedirectResponseException);
  }
  RedirectResponseException.prototype.j1 = function () {
    return this.f2e_1;
  };
  RedirectResponseException.$metadata$ = classMeta('RedirectResponseException', undefined, undefined, undefined, undefined, ResponseException.prototype);
  Object.defineProperty(RedirectResponseException.prototype, 'message', {
    configurable: true,
    get: function () {
      return this.j1();
    }
  });
  function ClientRequestException(response, cachedResponseText) {
    ResponseException.call(this, response, cachedResponseText);
    this.h2e_1 = 'Client request(' + response.u26().s29().w29() + ') ' + ('invalid: ' + response.x29() + '. Text: "' + cachedResponseText + '"');
    captureStack(this, ClientRequestException);
  }
  ClientRequestException.prototype.j1 = function () {
    return this.h2e_1;
  };
  ClientRequestException.$metadata$ = classMeta('ClientRequestException', undefined, undefined, undefined, undefined, ResponseException.prototype);
  Object.defineProperty(ClientRequestException.prototype, 'message', {
    configurable: true,
    get: function () {
      return this.j1();
    }
  });
  function ServerResponseException(response, cachedResponseText) {
    ResponseException.call(this, response, cachedResponseText);
    this.j2e_1 = 'Server error(' + response.u26().s29().w29() + ': ' + ('' + response.x29() + '. Text: "' + cachedResponseText + '"');
    captureStack(this, ServerResponseException);
  }
  ServerResponseException.prototype.j1 = function () {
    return this.j2e_1;
  };
  ServerResponseException.$metadata$ = classMeta('ServerResponseException', undefined, undefined, undefined, undefined, ResponseException.prototype);
  Object.defineProperty(ServerResponseException.prototype, 'message', {
    configurable: true,
    get: function () {
      return this.j1();
    }
  });
  function ResponseException(response, cachedResponseText) {
    IllegalStateException_init_$Init$_0('Bad response: ' + response + '. Text: "' + cachedResponseText + '"', this);
    this.k2e_1 = threadLocal(response);
    captureStack(this, ResponseException);
  }
  ResponseException.$metadata$ = classMeta('ResponseException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function addDefaultResponseValidation$lambda$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  addDefaultResponseValidation$lambda$slambda.prototype.a2f = function (response, $cont) {
    var tmp = this.b2f(response, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  addDefaultResponseValidation$lambda$slambda.prototype.gh = function (p1, $cont) {
    return this.a2f(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
  };
  addDefaultResponseValidation$lambda$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.u2e_1 = this.t2e_1.u26().f28().u1j(get_ExpectSuccessAttributeKey());
            if (!this.u2e_1) {
              return Unit_getInstance();
            }

            this.v2e_1 = this.t2e_1.x29().a22_1;
            this.w2e_1 = this.t2e_1.u26();
            if (this.v2e_1 < 300 ? true : this.w2e_1.f28().w1j(get_ValidateMark())) {
              return Unit_getInstance();
            }

            this.vg_1 = 1;
            suspendResult = save(this.w2e_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.x2e_1 = suspendResult;
            this.x2e_1.f28().x1j(get_ValidateMark(), Unit_getInstance());
            this.y2e_1 = this.x2e_1;
            this.z2e_1 = this.y2e_1.t26();
            this.vg_1 = 2;
            suspendResult = readText$default_0(this.z2e_1, null, this, 1, null);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var exceptionResponseText = suspendResult;
            var tmp0_subject = this.v2e_1;
            if (300 <= tmp0_subject ? tmp0_subject <= 399 : false)
              throw new RedirectResponseException(this.z2e_1, exceptionResponseText);
            else if (400 <= tmp0_subject ? tmp0_subject <= 499 : false)
              throw new ClientRequestException(this.z2e_1, exceptionResponseText);
            else if (500 <= tmp0_subject ? tmp0_subject <= 599 : false)
              throw new ServerResponseException(this.z2e_1, exceptionResponseText);
            else
              throw new ResponseException(this.z2e_1, exceptionResponseText);
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  addDefaultResponseValidation$lambda$slambda.prototype.b2f = function (response, completion) {
    var i = new addDefaultResponseValidation$lambda$slambda(completion);
    i.t2e_1 = response;
    return i;
  };
  addDefaultResponseValidation$lambda$slambda.$metadata$ = classMeta('addDefaultResponseValidation$lambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function addDefaultResponseValidation$lambda$slambda_0(resultContinuation) {
    var i = new addDefaultResponseValidation$lambda$slambda(resultContinuation);
    var l = function (response, $cont) {
      return i.a2f(response, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function addDefaultResponseValidation$lambda($this_addDefaultResponseValidation) {
    return function ($this$HttpResponseValidator) {
      $this$HttpResponseValidator.e2f_1 = $this_addDefaultResponseValidation.p28();
      $this$HttpResponseValidator.f2f(addDefaultResponseValidation$lambda$slambda_0(null));
      return Unit_getInstance();
    };
  }
  var properties_initialized_DefaultResponseValidation_kt_akvzqt;
  function init_properties_DefaultResponseValidation_kt_dx65ax() {
    if (properties_initialized_DefaultResponseValidation_kt_akvzqt) {
    } else {
      properties_initialized_DefaultResponseValidation_kt_akvzqt = true;
      ValidateMark = new AttributeKey('ValidateMark');
    }
  }
  function defaultTransformers(_this__u8e3s4) {
    var client = _this__u8e3s4;
    var tmp = Phases_getInstance().j2f_1;
    _this__u8e3s4.s25_1.p1r(tmp, defaultTransformers$slambda_0(null));
    var tmp_0 = Phases_getInstance_1().m2f_1;
    _this__u8e3s4.t25_1.p1r(tmp_0, defaultTransformers$slambda_2(client, null));
    platformDefaultTransformers(_this__u8e3s4);
  }
  function defaultTransformers$1$content$1($contentType, $body) {
    this.t2f_1 = $body;
    ByteArrayContent.call(this);
    var tmp = this;
    var tmp0_elvis_lhs = $contentType;
    tmp.r2f_1 = tmp0_elvis_lhs == null ? Application_getInstance().u1t_1 : tmp0_elvis_lhs;
    this.s2f_1 = toLong($body.length);
  }
  defaultTransformers$1$content$1.prototype.a24 = function () {
    return this.r2f_1;
  };
  defaultTransformers$1$content$1.prototype.b24 = function () {
    return this.s2f_1;
  };
  defaultTransformers$1$content$1.prototype.h24 = function () {
    return this.t2f_1;
  };
  defaultTransformers$1$content$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, ByteArrayContent.prototype);
  function defaultTransformers$1$content$2($contentType, $body) {
    this.w2f_1 = $body;
    ReadChannelContent.call(this);
    var tmp = this;
    var tmp0_elvis_lhs = $contentType;
    tmp.v2f_1 = tmp0_elvis_lhs == null ? Application_getInstance().u1t_1 : tmp0_elvis_lhs;
  }
  defaultTransformers$1$content$2.prototype.a24 = function () {
    return this.v2f_1;
  };
  defaultTransformers$1$content$2.prototype.d24 = function () {
    return this.w2f_1;
  };
  defaultTransformers$1$content$2.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, ReadChannelContent.prototype);
  function defaultTransformers$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  defaultTransformers$slambda.prototype.m26 = function ($this$intercept, body, $cont) {
    var tmp = this.n26($this$intercept, body, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  defaultTransformers$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  defaultTransformers$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            if (this.f2g_1.q3().h27_1.n1k(HttpHeaders_getInstance().d1v_1) == null) {
              this.f2g_1.q3().h27_1.v1l(HttpHeaders_getInstance().d1v_1, '*/*');
            }

            var tmp_0 = this;
            var tmp0_safe_receiver = this.f2g_1.q3().h27_1.n1k(HttpHeaders_getInstance().v1v_1);
            var tmp_1;
            if (tmp0_safe_receiver == null) {
              tmp_1 = null;
            } else {
              tmp_1 = Companion_getInstance().j1t(tmp0_safe_receiver);
            }

            tmp_0.h2g_1 = tmp_1;
            var tmp_2 = this;
            var tmp1_subject = this.g2g_1;
            var tmp_3;
            if (typeof tmp1_subject === 'string') {
              var tmp2_elvis_lhs = this.h2g_1;
              var tmp_4 = tmp2_elvis_lhs == null ? Text_getInstance().i1u_1 : tmp2_elvis_lhs;
              tmp_3 = TextContent_init_$Create$(this.g2g_1, tmp_4, null, 4, null);
            } else {
              if (isByteArray(tmp1_subject)) {
                tmp_3 = new defaultTransformers$1$content$1(this.h2g_1, this.g2g_1);
              } else {
                if (isInterface(tmp1_subject, ByteReadChannel)) {
                  tmp_3 = new defaultTransformers$1$content$2(this.h2g_1, this.g2g_1);
                } else {
                  tmp_3 = null;
                }
              }
            }

            tmp_2.i2g_1 = tmp_3;
            if (!(this.i2g_1 == null)) {
              this.f2g_1.q3().h27_1.y1l(HttpHeaders_getInstance().v1v_1);
              this.vg_1 = 1;
              suspendResult = this.f2g_1.p1q(this.i2g_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.vg_1 = 2;
              continue $sm;
            }

            break;
          case 1:
            ;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  defaultTransformers$slambda.prototype.n26 = function ($this$intercept, body, completion) {
    var i = new defaultTransformers$slambda(completion);
    i.f2g_1 = $this$intercept;
    i.g2g_1 = body;
    return i;
  };
  defaultTransformers$slambda.$metadata$ = classMeta('defaultTransformers$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function defaultTransformers$slambda_0(resultContinuation) {
    var i = new defaultTransformers$slambda(resultContinuation);
    var l = function ($this$intercept, body, $cont) {
      return i.m26($this$intercept, body, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function defaultTransformers$slambda$slambda($body, $response, resultContinuation) {
    this.r2g_1 = $body;
    this.s2g_1 = $response;
    CoroutineImpl.call(this, resultContinuation);
  }
  defaultTransformers$slambda$slambda.prototype.v2g = function ($this$writer, $cont) {
    var tmp = this.w2g($this$writer, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  defaultTransformers$slambda$slambda.prototype.gh = function (p1, $cont) {
    return this.v2g((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  defaultTransformers$slambda$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 5;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.wg_1 = 4;
            this.wg_1 = 3;
            this.vg_1 = 2;
            var tmp_0 = this.t2g_1.cv();
            Companion_getInstance_0();
            suspendResult = copyTo(this.r2g_1, tmp_0, new Long(-1, 2147483647), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp_1 = this;
            tmp_1.u2g_1 = Unit_getInstance();
            this.wg_1 = 5;
            this.vg_1 = 6;
            continue $sm;
          case 3:
            this.wg_1 = 4;
            var tmp_2 = this.yg_1;
            if (tmp_2 instanceof CancellationException) {
              var cause = this.yg_1;
              var tmp_3 = this;
              cancel_0(this.s2g_1, cause);
              throw cause;
            } else {
              var tmp_4 = this.yg_1;
              if (tmp_4 instanceof Error) {
                var cause_0 = this.yg_1;
                var tmp_5 = this;
                cancel(this.s2g_1, 'Receive failed', cause_0);
                throw cause_0;
              } else {
                throw this.yg_1;
              }
            }

            break;
          case 4:
            this.wg_1 = 5;
            var t = this.yg_1;
            complete(this.s2g_1);
            throw t;
          case 5:
            throw this.yg_1;
          case 6:
            complete(this.s2g_1);
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 5) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  defaultTransformers$slambda$slambda.prototype.w2g = function ($this$writer, completion) {
    var i = new defaultTransformers$slambda$slambda(this.r2g_1, this.s2g_1, completion);
    i.t2g_1 = $this$writer;
    return i;
  };
  defaultTransformers$slambda$slambda.$metadata$ = classMeta('defaultTransformers$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function defaultTransformers$slambda$slambda_0($body, $response, resultContinuation) {
    var i = new defaultTransformers$slambda$slambda($body, $response, resultContinuation);
    var l = function ($this$writer, $cont) {
      return i.v2g($this$writer, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function defaultTransformers$slambda$lambda($responseJobHolder) {
    return function (it) {
      $responseJobHolder.bp();
      return Unit_getInstance();
    };
  }
  function defaultTransformers$slambda_1($client, resultContinuation) {
    this.f2h_1 = $client;
    CoroutineImpl.call(this, resultContinuation);
  }
  defaultTransformers$slambda_1.prototype.x2h = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont) {
    var tmp = this.y2h($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  defaultTransformers$slambda_1.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.x2h(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
  };
  defaultTransformers$slambda_1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 11;
            this.i2h_1 = this.h2h_1.h3();
            this.j2h_1 = this.h2h_1.i3();
            var tmp_0 = this.j2h_1;
            if (!isInterface(tmp_0, ByteReadChannel))
              return Unit_getInstance();
            this.k2h_1 = this.g2h_1.q3().t26();
            var tmp_1 = this;
            var tmp0_safe_receiver = this.k2h_1.g1z().n1k(HttpHeaders_getInstance().s1v_1);
            var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toLong_0(tmp0_safe_receiver);
            var tmp_2;
            if (tmp1_elvis_lhs == null) {
              Companion_getInstance_0();
              tmp_2 = new Long(-1, 2147483647);
            } else {
              tmp_2 = tmp1_elvis_lhs;
            }

            tmp_1.l2h_1 = tmp_2;
            this.m2h_1 = this.i2h_1.k29_1;
            if (this.m2h_1.equals(getKClass(Unit))) {
              cancel_1(this.j2h_1);
              this.vg_1 = 9;
              suspendResult = this.g2h_1.p1q(new HttpResponseContainer(this.i2h_1, Unit_getInstance()), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              if (this.m2h_1.equals(PrimitiveClasses_getInstance().we())) {
                this.vg_1 = 7;
                suspendResult = readRemaining(this.j2h_1, this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                if (this.m2h_1.equals(getKClass(ByteReadPacket)) ? true : this.m2h_1.equals(getKClass(Input))) {
                  this.vg_1 = 5;
                  suspendResult = readRemaining(this.j2h_1, this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.m2h_1.equals(PrimitiveClasses_getInstance().ef())) {
                    this.vg_1 = 3;
                    suspendResult = readRemaining_0(this.j2h_1, this.l2h_1, this);
                    if (suspendResult === get_COROUTINE_SUSPENDED()) {
                      return suspendResult;
                    }
                    continue $sm;
                  } else {
                    if (this.m2h_1.equals(getKClass(ByteReadChannel))) {
                      this.n2h_1 = Job(this.k2h_1.si().w3(Key_getInstance()));
                      var tmp_3 = this;
                      var tmp_4 = this;
                      tmp_4.o2h_1 = writer$default(this.g2h_1, this.f2h_1.r25_1, false, defaultTransformers$slambda$slambda_0(this.j2h_1, this.k2h_1, null), 2, null);
                      this.o2h_1.vj(defaultTransformers$slambda$lambda(this.n2h_1));
                      tmp_3.p2h_1 = this.o2h_1.cv();
                      this.vg_1 = 2;
                      suspendResult = this.g2h_1.p1q(new HttpResponseContainer(this.i2h_1, this.p2h_1), this);
                      if (suspendResult === get_COROUTINE_SUSPENDED()) {
                        return suspendResult;
                      }
                      continue $sm;
                    } else {
                      if (this.m2h_1.equals(getKClass(HttpStatusCode))) {
                        cancel_1(this.j2h_1);
                        this.vg_1 = 1;
                        suspendResult = this.g2h_1.p1q(new HttpResponseContainer(this.i2h_1, this.k2h_1.x29()), this);
                        if (suspendResult === get_COROUTINE_SUSPENDED()) {
                          return suspendResult;
                        }
                        continue $sm;
                      } else {
                        this.vg_1 = 10;
                        continue $sm;
                      }
                    }
                  }
                }
              }
            }

            break;
          case 1:
            ;
            this.vg_1 = 10;
            continue $sm;
          case 2:
            ;
            this.vg_1 = 10;
            continue $sm;
          case 3:
            this.q2h_1 = suspendResult;
            Companion_getInstance_0();
            if (this.l2h_1.g1(new Long(-1, 2147483647)) < 0) {
              var tmp0_check = this.q2h_1.l16().equals(this.l2h_1);
              if (!tmp0_check) {
                var message = 'Expected ' + toString(this.l2h_1) + ', actual ' + toString(this.q2h_1.l16());
                throw IllegalStateException_init_$Create$(toString(message));
              }
            }

            this.vg_1 = 4;
            suspendResult = this.g2h_1.p1q(new HttpResponseContainer(this.i2h_1, readBytes$default(this.q2h_1, 0, 1, null)), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            ;
            this.vg_1 = 10;
            continue $sm;
          case 5:
            this.r2h_1 = suspendResult;
            this.s2h_1 = new HttpResponseContainer(this.i2h_1, this.r2h_1);
            this.vg_1 = 6;
            suspendResult = this.g2h_1.p1q(this.s2h_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            ;
            this.vg_1 = 10;
            continue $sm;
          case 7:
            this.t2h_1 = suspendResult;
            var tmp_5 = this;
            tmp_5.u2h_1 = this.t2h_1.l1b(0, 0, 3, null);
            this.v2h_1 = toInt(this.u2h_1);
            this.w2h_1 = new HttpResponseContainer(this.i2h_1, this.v2h_1);
            this.vg_1 = 8;
            suspendResult = this.g2h_1.p1q(this.w2h_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            ;
            this.vg_1 = 10;
            continue $sm;
          case 9:
            ;
            this.vg_1 = 10;
            continue $sm;
          case 10:
            return Unit_getInstance();
          case 11:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 11) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  defaultTransformers$slambda_1.prototype.y2h = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, completion) {
    var i = new defaultTransformers$slambda_1(this.f2h_1, completion);
    i.g2h_1 = $this$intercept;
    i.h2h_1 = _name_for_destructuring_parameter_0__wldtmu;
    return i;
  };
  defaultTransformers$slambda_1.$metadata$ = classMeta('defaultTransformers$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function defaultTransformers$slambda_2($client, resultContinuation) {
    var i = new defaultTransformers$slambda_1($client, resultContinuation);
    var l = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont) {
      return i.x2h($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function get_ExpectSuccessAttributeKey() {
    init_properties_HttpCallValidator_kt_nw40ag();
    return ExpectSuccessAttributeKey;
  }
  var ExpectSuccessAttributeKey;
  function HttpResponseValidator(_this__u8e3s4, block) {
    init_properties_HttpCallValidator_kt_nw40ag();
    _this__u8e3s4.r28(Companion_getInstance_11(), block);
  }
  function HttpCallValidator$Companion$install$slambda$lambda($feature) {
    return function () {
      return $feature.b2i_1;
    };
  }
  function HttpCallValidator$Companion$install$slambda($feature, resultContinuation) {
    this.k2i_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpCallValidator$Companion$install$slambda.prototype.m26 = function ($this$intercept, it, $cont) {
    var tmp = this.n26($this$intercept, it, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpCallValidator$Companion$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpCallValidator$Companion$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 5;
            this.wg_1 = 3;
            var tmp_0 = this.l2i_1.q3().k27_1;
            var tmp_1 = get_ExpectSuccessAttributeKey();
            tmp_0.y1j(tmp_1, HttpCallValidator$Companion$install$slambda$lambda(this.k2i_1));
            ;
            this.vg_1 = 1;
            suspendResult = this.l2i_1.p1q(this.m2i_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            ;
            this.wg_1 = 5;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.wg_1 = 5;
            return Unit_getInstance();
          case 3:
            this.wg_1 = 5;
            var tmp_2 = this.yg_1;
            if (tmp_2 instanceof Error) {
              this.n2i_1 = this.yg_1;
              this.o2i_1 = unwrapCancellationException(this.n2i_1);
              this.vg_1 = 4;
              suspendResult = processException(this.k2i_1, this.o2i_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              throw this.yg_1;
            }

            break;
          case 4:
            throw this.o2i_1;
          case 5:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 5) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpCallValidator$Companion$install$slambda.prototype.n26 = function ($this$intercept, it, completion) {
    var i = new HttpCallValidator$Companion$install$slambda(this.k2i_1, completion);
    i.l2i_1 = $this$intercept;
    i.m2i_1 = it;
    return i;
  };
  HttpCallValidator$Companion$install$slambda.$metadata$ = classMeta('HttpCallValidator$Companion$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpCallValidator$Companion$install$slambda_0($feature, resultContinuation) {
    var i = new HttpCallValidator$Companion$install$slambda($feature, resultContinuation);
    var l = function ($this$intercept, it, $cont) {
      return i.m26($this$intercept, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function HttpCallValidator$Companion$install$slambda_1($feature, resultContinuation) {
    this.x2i_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpCallValidator$Companion$install$slambda_1.prototype.x2h = function ($this$intercept, container, $cont) {
    var tmp = this.y2h($this$intercept, container, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpCallValidator$Companion$install$slambda_1.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.x2h(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
  };
  HttpCallValidator$Companion$install$slambda_1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 5;
            this.wg_1 = 3;
            this.vg_1 = 1;
            suspendResult = this.y2i_1.p1q(this.z2i_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            ;
            this.wg_1 = 5;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.wg_1 = 5;
            return Unit_getInstance();
          case 3:
            this.wg_1 = 5;
            var tmp_0 = this.yg_1;
            if (tmp_0 instanceof Error) {
              this.a2j_1 = this.yg_1;
              this.b2j_1 = unwrapCancellationException(this.a2j_1);
              this.vg_1 = 4;
              suspendResult = processException(this.x2i_1, this.b2j_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              throw this.yg_1;
            }

            break;
          case 4:
            throw this.b2j_1;
          case 5:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 5) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpCallValidator$Companion$install$slambda_1.prototype.y2h = function ($this$intercept, container, completion) {
    var i = new HttpCallValidator$Companion$install$slambda_1(this.x2i_1, completion);
    i.y2i_1 = $this$intercept;
    i.z2i_1 = container;
    return i;
  };
  HttpCallValidator$Companion$install$slambda_1.$metadata$ = classMeta('HttpCallValidator$Companion$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpCallValidator$Companion$install$slambda_2($feature, resultContinuation) {
    var i = new HttpCallValidator$Companion$install$slambda_1($feature, resultContinuation);
    var l = function ($this$intercept, container, $cont) {
      return i.x2h($this$intercept, container, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function HttpCallValidator$Companion$install$slambda_3($feature, resultContinuation) {
    this.k2j_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpCallValidator$Companion$install$slambda_3.prototype.o2j = function ($this$intercept, call, _anonymous_parameter_1__qggqgd, $cont) {
    var tmp = this.p2j($this$intercept, call, _anonymous_parameter_1__qggqgd, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpCallValidator$Companion$install$slambda_3.prototype.ei = function (p1, p2, p3, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, Sender) : false) ? p1 : THROW_CCE();
    var tmp_0 = p2 instanceof HttpClientCall ? p2 : THROW_CCE();
    return this.o2j(tmp, tmp_0, p3 instanceof HttpRequestBuilder ? p3 : THROW_CCE(), $cont);
  };
  HttpCallValidator$Companion$install$slambda_3.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = validateResponse(this.k2j_1, this.m2j_1.t26(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return this.m2j_1;
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpCallValidator$Companion$install$slambda_3.prototype.p2j = function ($this$intercept, call, _anonymous_parameter_1__qggqgd, completion) {
    var i = new HttpCallValidator$Companion$install$slambda_3(this.k2j_1, completion);
    i.l2j_1 = $this$intercept;
    i.m2j_1 = call;
    i.n2j_1 = _anonymous_parameter_1__qggqgd;
    return i;
  };
  HttpCallValidator$Companion$install$slambda_3.$metadata$ = classMeta('HttpCallValidator$Companion$install$slambda', undefined, undefined, undefined, [3], CoroutineImpl.prototype);
  function HttpCallValidator$Companion$install$slambda_4($feature, resultContinuation) {
    var i = new HttpCallValidator$Companion$install$slambda_3($feature, resultContinuation);
    var l = function ($this$intercept, call, _anonymous_parameter_1__qggqgd, $cont) {
      return i.o2j($this$intercept, call, _anonymous_parameter_1__qggqgd, $cont);
    };
    l.$arity = 3;
    return l;
  }
  function validateResponse($this, response, $cont) {
    var tmp = new $validateResponseCOROUTINE$5($this, response, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function processException($this, cause, $cont) {
    var tmp = new $processExceptionCOROUTINE$6($this, cause, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function Config() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    tmp.c2f_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = ArrayList_init_$Create$();
    }
    tmp_0.d2f_1 = tmp$ret$1;
    this.e2f_1 = true;
  }
  Config.prototype.f2f = function (block) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.c2f_1;
      tmp0_plusAssign.a(block);
    }
  };
  Config.$metadata$ = classMeta('Config');
  function Companion_1() {
    Companion_instance_1 = this;
    this.q2k_1 = new AttributeKey('HttpResponseValidator');
  }
  Companion_1.prototype.s = function () {
    return this.q2k_1;
  };
  Companion_1.prototype.r2k = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new Config();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    var config = tmp$ret$0;
    return new HttpCallValidator(reversed(config.c2f_1), reversed(config.d2f_1), config.e2f_1);
  };
  Companion_1.prototype.j28 = function (block) {
    return this.r2k(block);
  };
  Companion_1.prototype.s2k = function (feature, scope) {
    var tmp = Phases_getInstance().g2f_1;
    scope.s25_1.p1r(tmp, HttpCallValidator$Companion$install$slambda_0(feature, null));
    var BeforeReceive = new PipelinePhase('BeforeReceive');
    scope.t25_1.o1r(Phases_getInstance_1().l2f_1, BeforeReceive);
    scope.t25_1.p1r(BeforeReceive, HttpCallValidator$Companion$install$slambda_2(feature, null));
    var tmp_0 = get_0(scope, Feature_getInstance_2());
    tmp_0.v2k(HttpCallValidator$Companion$install$slambda_4(feature, null));
  };
  Companion_1.prototype.k28 = function (feature, scope) {
    return this.s2k(feature instanceof HttpCallValidator ? feature : THROW_CCE(), scope);
  };
  Companion_1.$metadata$ = objectMeta('Companion', [HttpClientFeature]);
  var Companion_instance_1;
  function Companion_getInstance_11() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function $validateResponseCOROUTINE$5(_this__u8e3s4, response, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.y2j_1 = _this__u8e3s4;
    this.z2j_1 = response;
  }
  $validateResponseCOROUTINE$5.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            var tmp_0 = this;
            tmp_0.a2k_1 = this.y2j_1.z2h_1;
            this.b2k_1 = this.a2k_1.d();
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!this.b2k_1.e()) {
              this.vg_1 = 3;
              continue $sm;
            }

            this.c2k_1 = this.b2k_1.f();
            this.vg_1 = 2;
            suspendResult = this.c2k_1(this.z2j_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.vg_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $validateResponseCOROUTINE$5.$metadata$ = classMeta('$validateResponseCOROUTINE$5', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $processExceptionCOROUTINE$6(_this__u8e3s4, cause, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.l2k_1 = _this__u8e3s4;
    this.m2k_1 = cause;
  }
  $processExceptionCOROUTINE$6.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            var tmp_0 = this;
            tmp_0.n2k_1 = this.l2k_1.a2i_1;
            this.o2k_1 = this.n2k_1.d();
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!this.o2k_1.e()) {
              this.vg_1 = 3;
              continue $sm;
            }

            this.p2k_1 = this.o2k_1.f();
            this.vg_1 = 2;
            suspendResult = this.p2k_1(this.m2k_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.vg_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $processExceptionCOROUTINE$6.$metadata$ = classMeta('$processExceptionCOROUTINE$6', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function HttpCallValidator(responseValidators, callExceptionHandlers, expectSuccess) {
    Companion_getInstance_11();
    this.z2h_1 = responseValidators;
    this.a2i_1 = callExceptionHandlers;
    this.b2i_1 = expectSuccess;
  }
  HttpCallValidator.$metadata$ = classMeta('HttpCallValidator');
  var properties_initialized_HttpCallValidator_kt_xrx49w;
  function init_properties_HttpCallValidator_kt_nw40ag() {
    if (properties_initialized_HttpCallValidator_kt_xrx49w) {
    } else {
      properties_initialized_HttpCallValidator_kt_xrx49w = true;
      ExpectSuccessAttributeKey = new AttributeKey('ExpectSuccessAttribyteKey');
    }
  }
  function get_FEATURE_INSTALLED_LIST() {
    init_properties_HttpClientFeature_kt_iw5lht();
    return FEATURE_INSTALLED_LIST;
  }
  var FEATURE_INSTALLED_LIST;
  function HttpClientFeature() {
  }
  HttpClientFeature.$metadata$ = interfaceMeta('HttpClientFeature');
  function get_0(_this__u8e3s4, feature_0) {
    init_properties_HttpClientFeature_kt_iw5lht();
    var requestedFeature = feature(_this__u8e3s4, feature_0);
    if (!(requestedFeature == null)) {
      return requestedFeature;
    }
    var message = 'Feature ' + feature_0 + ' is not installed. Consider using `install(' + feature_0.s() + ')` in client config first.';
    {
      throw IllegalStateException_init_$Create$(toString(message));
    }
  }
  function feature(_this__u8e3s4, feature) {
    init_properties_HttpClientFeature_kt_iw5lht();
    var tmp0_safe_receiver = _this__u8e3s4.w25_1.v1j(get_FEATURE_INSTALLED_LIST());
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.v1j(feature.s());
  }
  var properties_initialized_HttpClientFeature_kt_5j2o31;
  function init_properties_HttpClientFeature_kt_iw5lht() {
    if (properties_initialized_HttpClientFeature_kt_5j2o31) {
    } else {
      properties_initialized_HttpClientFeature_kt_5j2o31 = true;
      FEATURE_INSTALLED_LIST = new AttributeKey('ApplicationFeatureRegistry');
    }
  }
  function HttpPlainText$Feature$install$slambda($feature, resultContinuation) {
    this.e2l_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpPlainText$Feature$install$slambda.prototype.m26 = function ($this$intercept, content, $cont) {
    var tmp = this.n26($this$intercept, content, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpPlainText$Feature$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpPlainText$Feature$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.e2l_1.m2l(this.f2l_1.q3());
            var tmp_0 = this.g2l_1;
            if (!(typeof tmp_0 === 'string')) {
              return Unit_getInstance();
            }

            this.h2l_1 = contentType(this.f2l_1.q3());
            if (!(this.h2l_1 == null) ? !(this.h2l_1.s1u_1 === Text_getInstance().i1u_1.s1u_1) : false) {
              return Unit_getInstance();
            }

            var tmp_1 = this;
            var tmp0_safe_receiver = this.h2l_1;
            tmp_1.i2l_1 = tmp0_safe_receiver == null ? null : charset(tmp0_safe_receiver);
            this.vg_1 = 1;
            suspendResult = this.f2l_1.p1q(wrapContent(this.e2l_1, this.g2l_1, this.i2l_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            ;
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpPlainText$Feature$install$slambda.prototype.n26 = function ($this$intercept, content, completion) {
    var i = new HttpPlainText$Feature$install$slambda(this.e2l_1, completion);
    i.f2l_1 = $this$intercept;
    i.g2l_1 = content;
    return i;
  };
  HttpPlainText$Feature$install$slambda.$metadata$ = classMeta('HttpPlainText$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpPlainText$Feature$install$slambda_0($feature, resultContinuation) {
    var i = new HttpPlainText$Feature$install$slambda($feature, resultContinuation);
    var l = function ($this$intercept, content, $cont) {
      return i.m26($this$intercept, content, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function HttpPlainText$Feature$install$slambda_1($feature, resultContinuation) {
    this.v2l_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpPlainText$Feature$install$slambda_1.prototype.x2h = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont) {
    var tmp = this.y2h($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpPlainText$Feature$install$slambda_1.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.x2h(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
  };
  HttpPlainText$Feature$install$slambda_1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.y2l_1 = this.x2l_1.h3();
            this.z2l_1 = this.x2l_1.i3();
            var tmp_0;
            if (!this.y2l_1.k29_1.equals(PrimitiveClasses_getInstance().af())) {
              tmp_0 = true;
            } else {
              var tmp_1 = this.z2l_1;
              tmp_0 = !isInterface(tmp_1, ByteReadChannel);
            }

            if (tmp_0)
              return Unit_getInstance();
            this.vg_1 = 1;
            suspendResult = readRemaining(this.z2l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.a2m_1 = suspendResult;
            this.b2m_1 = this.v2l_1.c2m(this.w2l_1.q3(), this.a2m_1);
            this.vg_1 = 2;
            suspendResult = this.w2l_1.p1q(new HttpResponseContainer(this.y2l_1, this.b2m_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            ;
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpPlainText$Feature$install$slambda_1.prototype.y2h = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, completion) {
    var i = new HttpPlainText$Feature$install$slambda_1(this.v2l_1, completion);
    i.w2l_1 = $this$intercept;
    i.x2l_1 = _name_for_destructuring_parameter_0__wldtmu;
    return i;
  };
  HttpPlainText$Feature$install$slambda_1.$metadata$ = classMeta('HttpPlainText$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpPlainText$Feature$install$slambda_2($feature, resultContinuation) {
    var i = new HttpPlainText$Feature$install$slambda_1($feature, resultContinuation);
    var l = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont) {
      return i.x2h($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function Config_0() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    tmp.d2m_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = LinkedHashMap_init_$Create$();
    }
    tmp_0.e2m_1 = tmp$ret$1;
    this.f2m_1 = null;
    this.g2m_1 = Charsets_getInstance().s1c_1;
    this.h2m_1 = Charsets_getInstance().s1c_1;
  }
  Config_0.$metadata$ = classMeta('Config');
  function Feature() {
    Feature_instance = this;
    this.i2m_1 = new AttributeKey('HttpPlainText');
  }
  Feature.prototype.s = function () {
    return this.i2m_1;
  };
  Feature.prototype.r2k = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new Config_0();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    var config = tmp$ret$0;
    var tmp$ret$1;
    {
      {
      }
      return new HttpPlainText(config.d2m_1, config.e2m_1, config.f2m_1, config.g2m_1);
    }
  };
  Feature.prototype.j28 = function (block) {
    return this.r2k(block);
  };
  Feature.prototype.j2m = function (feature, scope) {
    var tmp = Phases_getInstance().j2f_1;
    scope.s25_1.p1r(tmp, HttpPlainText$Feature$install$slambda_0(feature, null));
    var tmp_0 = Phases_getInstance_1().m2f_1;
    scope.t25_1.p1r(tmp_0, HttpPlainText$Feature$install$slambda_2(feature, null));
  };
  Feature.prototype.k28 = function (feature, scope) {
    return this.j2m(feature instanceof HttpPlainText ? feature : THROW_CCE(), scope);
  };
  Feature.$metadata$ = objectMeta('Feature', [HttpClientFeature]);
  var Feature_instance;
  function Feature_getInstance() {
    if (Feature_instance == null)
      new Feature();
    return Feature_instance;
  }
  function wrapContent($this, content, contentCharset) {
    var tmp0_elvis_lhs = contentCharset;
    var charset = tmp0_elvis_lhs == null ? $this.k2l_1 : tmp0_elvis_lhs;
    var tmp = withCharset(Text_getInstance().i1u_1, charset);
    return TextContent_init_$Create$(content, tmp, null, 4, null);
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.k2m_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.p = function (a, b) {
    return this.k2m_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.p(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function HttpPlainText$lambda() {
    return function (a, b) {
      var tmp$ret$2;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = b.g3_1;
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = a.g3_1;
        }
        tmp$ret$2 = compareValues(tmp, tmp$ret$1);
      }
      return tmp$ret$2;
    };
  }
  function HttpPlainText$lambda_0() {
    return function (a, b) {
      var tmp$ret$2;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_name(a);
        }
        var tmp = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = get_name(b);
        }
        tmp$ret$2 = compareValues(tmp, tmp$ret$1);
      }
      return tmp$ret$2;
    };
  }
  function HttpPlainText(charsets, charsetQuality, sendCharset, responseCharsetFallback) {
    Feature_getInstance();
    this.j2l_1 = responseCharsetFallback;
    var tmp$ret$1;
    {
      var tmp0_sortedByDescending = toList(charsetQuality);
      var tmp$ret$0;
      {
        var tmp = HttpPlainText$lambda();
        tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
      }
      tmp$ret$1 = sortedWith(tmp0_sortedByDescending, tmp$ret$0);
    }
    var withQuality = tmp$ret$1;
    var tmp$ret$6;
    {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp0_filterTo = ArrayList_init_$Create$();
          var tmp0_iterator = charsets.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            var tmp$ret$2;
            {
              tmp$ret$2 = !charsetQuality.c2(element);
            }
            if (tmp$ret$2) {
              tmp0_filterTo.a(element);
            }
          }
          tmp$ret$3 = tmp0_filterTo;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      var tmp1_sortedBy = tmp$ret$4;
      var tmp$ret$5;
      {
        var tmp_0 = HttpPlainText$lambda_0();
        tmp$ret$5 = new sam$kotlin_Comparator$0(tmp_0);
      }
      tmp$ret$6 = sortedWith(tmp1_sortedBy, tmp$ret$5);
    }
    var withoutQuality = tmp$ret$6;
    var tmp_1 = this;
    var tmp$ret$11;
    {
      {
      }
      var tmp$ret$10;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          {
            var tmp0_iterator_0 = withoutQuality.d();
            while (tmp0_iterator_0.e()) {
              var element_0 = tmp0_iterator_0.f();
              {
                if (tmp0_apply.s7() > 0) {
                  tmp0_apply.pf(',');
                }
                tmp0_apply.pf(get_name(element_0));
              }
            }
          }
          {
            var tmp0_iterator_1 = withQuality.d();
            while (tmp0_iterator_1.e()) {
              var element_1 = tmp0_iterator_1.f();
              {
                var charset = element_1.h3();
                var quality = element_1.i3();
                if (tmp0_apply.s7() > 0) {
                  tmp0_apply.pf(',');
                }
                {
                  var containsArg = quality;
                  var tmp0_check = 0.0 <= containsArg ? containsArg <= 1.0 : false;
                  {
                  }
                  {
                    {
                    }
                    if (!tmp0_check) {
                      var tmp$ret$7;
                      {
                        tmp$ret$7 = 'Check failed.';
                      }
                      var message = tmp$ret$7;
                      throw IllegalStateException_init_$Create$(toString(message));
                    }
                  }
                }
                var tmp$ret$8;
                {
                  var tmp1_roundToInt = 100 * quality;
                  tmp$ret$8 = roundToInt(tmp1_roundToInt);
                }
                var truncatedQuality = tmp$ret$8 / 100.0;
                tmp0_apply.pf(get_name(charset) + ';q=' + truncatedQuality);
              }
            }
          }
          var tmp$ret$9;
          {
            tmp$ret$9 = charSequenceLength(tmp0_apply) === 0;
          }
          if (tmp$ret$9) {
            tmp0_apply.pf(get_name(this.j2l_1));
          }
        }
        tmp$ret$10 = tmp0_apply;
      }
      tmp$ret$11 = tmp$ret$10.toString();
    }
    tmp_1.l2l_1 = tmp$ret$11;
    var tmp_2 = this;
    var tmp0_elvis_lhs = sendCharset;
    var tmp2_elvis_lhs = tmp0_elvis_lhs == null ? firstOrNull(withoutQuality) : tmp0_elvis_lhs;
    var tmp_3;
    if (tmp2_elvis_lhs == null) {
      var tmp1_safe_receiver = firstOrNull(withQuality);
      tmp_3 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.f3_1;
    } else {
      tmp_3 = tmp2_elvis_lhs;
    }
    var tmp3_elvis_lhs = tmp_3;
    tmp_2.k2l_1 = tmp3_elvis_lhs == null ? Charsets_getInstance().s1c_1 : tmp3_elvis_lhs;
  }
  HttpPlainText.prototype.c2m = function (call, body) {
    var tmp0_elvis_lhs = charset_0(call.t26());
    var actualCharset = tmp0_elvis_lhs == null ? this.j2l_1 : tmp0_elvis_lhs;
    return readText$default(body, actualCharset, 0, 2, null);
  };
  HttpPlainText.prototype.m2l = function (context) {
    if (!(context.h27_1.n1k(HttpHeaders_getInstance().e1v_1) == null))
      return Unit_getInstance();
    context.h27_1.t1l(HttpHeaders_getInstance().e1v_1, this.l2l_1);
  };
  HttpPlainText.$metadata$ = classMeta('HttpPlainText');
  function get_ALLOWED_FOR_REDIRECT() {
    init_properties_HttpRedirect_kt_rcsi6u();
    return ALLOWED_FOR_REDIRECT;
  }
  var ALLOWED_FOR_REDIRECT;
  function handleCall(_this__u8e3s4, $this, context, origin, allowHttpsDowngrade, $cont) {
    var tmp = new $handleCallCOROUTINE$7($this, _this__u8e3s4, context, origin, allowHttpsDowngrade, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function HttpRedirect$Feature$install$slambda($feature, resultContinuation) {
    this.m2n_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpRedirect$Feature$install$slambda.prototype.o2j = function ($this$intercept, origin, context, $cont) {
    var tmp = this.p2j($this$intercept, origin, context, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpRedirect$Feature$install$slambda.prototype.ei = function (p1, p2, p3, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, Sender) : false) ? p1 : THROW_CCE();
    var tmp_0 = p2 instanceof HttpClientCall ? p2 : THROW_CCE();
    return this.o2j(tmp, tmp_0, p3 instanceof HttpRequestBuilder ? p3 : THROW_CCE(), $cont);
  };
  HttpRedirect$Feature$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            if (this.m2n_1.s2n() ? !get_ALLOWED_FOR_REDIRECT().l1(this.o2n_1.s29().k2b()) : false) {
              return this.o2n_1;
            }

            this.vg_1 = 1;
            suspendResult = handleCall(this.n2n_1, Feature_getInstance_0(), this.p2n_1, this.o2n_1, this.m2n_1.t2n(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpRedirect$Feature$install$slambda.prototype.p2j = function ($this$intercept, origin, context, completion) {
    var i = new HttpRedirect$Feature$install$slambda(this.m2n_1, completion);
    i.n2n_1 = $this$intercept;
    i.o2n_1 = origin;
    i.p2n_1 = context;
    return i;
  };
  HttpRedirect$Feature$install$slambda.$metadata$ = classMeta('HttpRedirect$Feature$install$slambda', undefined, undefined, undefined, [3], CoroutineImpl.prototype);
  function HttpRedirect$Feature$install$slambda_0($feature, resultContinuation) {
    var i = new HttpRedirect$Feature$install$slambda($feature, resultContinuation);
    var l = function ($this$intercept, origin, context, $cont) {
      return i.o2j($this$intercept, origin, context, $cont);
    };
    l.$arity = 3;
    return l;
  }
  function $handleCallCOROUTINE$7(_this__u8e3s4, _this__u8e3s4_0, context, origin, allowHttpsDowngrade, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.t2m_1 = _this__u8e3s4;
    this.u2m_1 = _this__u8e3s4_0;
    this.v2m_1 = context;
    this.w2m_1 = origin;
    this.x2m_1 = allowHttpsDowngrade;
  }
  $handleCallCOROUTINE$7.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            if (!isRedirect(this.w2m_1.t26().x29()))
              return this.w2m_1;
            this.y2m_1 = this.w2m_1;
            this.z2m_1 = this.v2m_1;
            this.a2n_1 = this.w2m_1.s29().w29().j23_1;
            this.b2n_1 = get_authority(this.w2m_1.s29().w29());
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (false) {}

            this.c2n_1 = this.y2m_1.t26().g1z().n1k(HttpHeaders_getInstance().r1w_1);
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.d2n_1 = new HttpRequestBuilder();
            this.d2n_1.h2d(this.z2m_1);
            ;
            this.d2n_1.f27_1.w22_1.s9();
            var tmp0_safe_receiver = this.c2n_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              takeFrom(this.d2n_1.f27_1, tmp0_safe_receiver);
            }

            ;
            if ((!this.x2m_1 ? isSecure(this.a2n_1) : false) ? !isSecure(this.d2n_1.f27_1.q22_1) : false) {
              return this.y2m_1;
            }

            if (!(this.b2n_1 === get_authority_0(this.d2n_1.f27_1))) {
              this.d2n_1.h27_1.y1l(HttpHeaders_getInstance().m1v_1);
            }

            tmp_0.z2m_1 = this.d2n_1;
            this.vg_1 = 2;
            suspendResult = this.u2m_1.g28(this.z2m_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.y2m_1 = suspendResult;
            if (!isRedirect(this.y2m_1.t26().x29()))
              return this.y2m_1;
            this.vg_1 = 1;
            continue $sm;
          case 3:
            throw this.yg_1;
          case 4:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $handleCallCOROUTINE$7.$metadata$ = classMeta('$handleCallCOROUTINE$7', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function Feature_0() {
    Feature_instance_0 = this;
    this.u2n_1 = new AttributeKey('HttpRedirect');
  }
  Feature_0.prototype.s = function () {
    return this.u2n_1;
  };
  Feature_0.prototype.v2n = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new HttpRedirect();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  Feature_0.prototype.j28 = function (block) {
    return this.v2n(block);
  };
  Feature_0.prototype.w2n = function (feature, scope) {
    var tmp = get_0(scope, Feature_getInstance_2());
    tmp.v2k(HttpRedirect$Feature$install$slambda_0(feature, null));
  };
  Feature_0.prototype.k28 = function (feature, scope) {
    return this.w2n(feature instanceof HttpRedirect ? feature : THROW_CCE(), scope);
  };
  Feature_0.$metadata$ = objectMeta('Feature', [HttpClientFeature]);
  var Feature_instance_0;
  function Feature_getInstance_0() {
    if (Feature_instance_0 == null)
      new Feature_0();
    return Feature_instance_0;
  }
  function HttpRedirect() {
    Feature_getInstance_0();
    this.q2n_1 = atomic$boolean$1(true);
    this.r2n_1 = atomic$boolean$1(false);
  }
  HttpRedirect.prototype.s2n = function () {
    return this.q2n_1.li_1;
  };
  HttpRedirect.prototype.t2n = function () {
    return this.r2n_1.li_1;
  };
  HttpRedirect.$metadata$ = classMeta('HttpRedirect');
  function isRedirect(_this__u8e3s4) {
    init_properties_HttpRedirect_kt_rcsi6u();
    var tmp0_subject = _this__u8e3s4.a22_1;
    return ((((tmp0_subject === Companion_getInstance_1().k20_1.a22_1 ? true : tmp0_subject === Companion_getInstance_1().l20_1.a22_1) ? true : tmp0_subject === Companion_getInstance_1().q20_1.a22_1) ? true : tmp0_subject === Companion_getInstance_1().r20_1.a22_1) ? true : tmp0_subject === Companion_getInstance_1().m20_1.a22_1) ? true : false;
  }
  var properties_initialized_HttpRedirect_kt_klj746;
  function init_properties_HttpRedirect_kt_rcsi6u() {
    if (properties_initialized_HttpRedirect_kt_klj746) {
    } else {
      properties_initialized_HttpRedirect_kt_klj746 = true;
      ALLOWED_FOR_REDIRECT = setOf_0([Companion_getInstance_2().h1z_1, Companion_getInstance_2().m1z_1]);
    }
  }
  function HttpRequestLifecycle$Feature$install$slambda($scope, resultContinuation) {
    this.f2o_1 = $scope;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpRequestLifecycle$Feature$install$slambda.prototype.m26 = function ($this$intercept, it, $cont) {
    var tmp = this.n26($this$intercept, it, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpRequestLifecycle$Feature$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpRequestLifecycle$Feature$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 6;
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.i2o_1 = Job(this.g2o_1.q3().j27_1);
            makeShared(this.i2o_1);
            tmp_0.j2o_1 = this.i2o_1;
            attachToClientEngineJob(this.j2o_1, ensureNotNull(this.f2o_1.r25_1.w3(Key_getInstance())));
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.wg_1 = 4;
            this.wg_1 = 3;
            this.g2o_1.q3().l2o(this.j2o_1);
            this.vg_1 = 2;
            suspendResult = this.g2o_1.q1q(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp_2 = this;
            tmp_2.k2o_1 = Unit_getInstance();
            this.wg_1 = 6;
            this.vg_1 = 5;
            continue $sm;
          case 3:
            this.wg_1 = 4;
            var tmp_3 = this.yg_1;
            if (tmp_3 instanceof Error) {
              var cause = this.yg_1;
              var tmp_4 = this;
              this.j2o_1.oo(cause);
              throw cause;
            } else {
              throw this.yg_1;
            }

            break;
          case 4:
            this.wg_1 = 6;
            var t = this.yg_1;
            this.j2o_1.bp();
            ;
            throw t;
          case 5:
            this.j2o_1.bp();
            ;
            return Unit_getInstance();
          case 6:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 6) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpRequestLifecycle$Feature$install$slambda.prototype.n26 = function ($this$intercept, it, completion) {
    var i = new HttpRequestLifecycle$Feature$install$slambda(this.f2o_1, completion);
    i.g2o_1 = $this$intercept;
    i.h2o_1 = it;
    return i;
  };
  HttpRequestLifecycle$Feature$install$slambda.$metadata$ = classMeta('HttpRequestLifecycle$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpRequestLifecycle$Feature$install$slambda_0($scope, resultContinuation) {
    var i = new HttpRequestLifecycle$Feature$install$slambda($scope, resultContinuation);
    var l = function ($this$intercept, it, $cont) {
      return i.m26($this$intercept, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function Feature_1() {
    Feature_instance_1 = this;
    this.m2o_1 = new AttributeKey('RequestLifecycle');
  }
  Feature_1.prototype.s = function () {
    return this.m2o_1;
  };
  Feature_1.prototype.n2o = function (block) {
    return new HttpRequestLifecycle();
  };
  Feature_1.prototype.j28 = function (block) {
    return this.n2o(block);
  };
  Feature_1.prototype.o2o = function (feature, scope) {
    var tmp = Phases_getInstance().g2f_1;
    scope.s25_1.p1r(tmp, HttpRequestLifecycle$Feature$install$slambda_0(scope, null));
  };
  Feature_1.prototype.k28 = function (feature, scope) {
    return this.o2o(feature instanceof HttpRequestLifecycle ? feature : THROW_CCE(), scope);
  };
  Feature_1.$metadata$ = objectMeta('Feature', [HttpClientFeature]);
  var Feature_instance_1;
  function Feature_getInstance_1() {
    if (Feature_instance_1 == null)
      new Feature_1();
    return Feature_instance_1;
  }
  function HttpRequestLifecycle() {
    Feature_getInstance_1();
  }
  HttpRequestLifecycle.$metadata$ = classMeta('HttpRequestLifecycle');
  function attachToClientEngineJob(requestJob, clientEngineJob) {
    makeShared(clientEngineJob);
    var handler = clientEngineJob.vj(attachToClientEngineJob$lambda(requestJob));
    requestJob.vj(attachToClientEngineJob$lambda_0(handler));
  }
  function attachToClientEngineJob$lambda($requestJob) {
    return function (cause) {
      var tmp;
      if (!(cause == null)) {
        tmp = cancel_2($requestJob, 'Engine failed', cause);
      } else {
        $requestJob.bp();
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function attachToClientEngineJob$lambda_0($handler) {
    return function (it) {
      $handler.fm();
      return Unit_getInstance();
    };
  }
  function HttpSend$Feature$install$slambda($feature, $scope, resultContinuation) {
    this.x2o_1 = $feature;
    this.y2o_1 = $scope;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpSend$Feature$install$slambda.prototype.m26 = function ($this$intercept, content, $cont) {
    var tmp = this.n26($this$intercept, content, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpSend$Feature$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpSend$Feature$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 9;
            var tmp_0 = this.a2p_1;
            if (!(tmp_0 instanceof OutgoingContent)) {
              var tmp_1 = '\n|Fail to serialize body. Content has type: ' + getKClassFromExpression(this.a2p_1) + ', but OutgoingContent expected.\n|If you expect serialized body, please check that you have installed the corresponding feature(like `Json`) and set `Content-Type` header.';
              var message = trimMargin$default(tmp_1, null, 1, null);
              throw IllegalStateException_init_$Create$(toString(message));
            }

            this.z2o_1.q3().i27_1 = this.a2p_1;
            this.b2p_1 = new DefaultSender(this.x2o_1.h2p(), this.y2o_1);
            this.vg_1 = 1;
            suspendResult = this.b2p_1.g28(this.z2o_1.q3(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.c2p_1 = suspendResult;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.d2p_1 = false;
            this.e2p_1 = this.x2o_1.u2k_1.d();
            this.vg_1 = 3;
            continue $sm;
          case 3:
            if (!this.e2p_1.e()) {
              this.vg_1 = 6;
              continue $sm;
            }

            this.f2p_1 = this.e2p_1.f();
            this.vg_1 = 4;
            suspendResult = this.f2p_1(this.b2p_1, this.c2p_1, this.z2o_1.q3(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.g2p_1 = suspendResult;
            if (this.g2p_1 === this.c2p_1) {
              this.vg_1 = 3;
              continue $sm;
            } else {
              this.vg_1 = 5;
              continue $sm;
            }

            break;
          case 5:
            this.c2p_1 = this.g2p_1;
            this.d2p_1 = true;
            this.vg_1 = 6;
            continue $sm;
          case 6:
            if (this.d2p_1) {
              this.vg_1 = 2;
              continue $sm;
            }

            this.vg_1 = 7;
            continue $sm;
          case 7:
            this.vg_1 = 8;
            suspendResult = this.z2o_1.p1q(this.c2p_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            ;
            return Unit_getInstance();
          case 9:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 9) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpSend$Feature$install$slambda.prototype.n26 = function ($this$intercept, content, completion) {
    var i = new HttpSend$Feature$install$slambda(this.x2o_1, this.y2o_1, completion);
    i.z2o_1 = $this$intercept;
    i.a2p_1 = content;
    return i;
  };
  HttpSend$Feature$install$slambda.$metadata$ = classMeta('HttpSend$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpSend$Feature$install$slambda_0($feature, $scope, resultContinuation) {
    var i = new HttpSend$Feature$install$slambda($feature, $scope, resultContinuation);
    var l = function ($this$intercept, content, $cont) {
      return i.m26($this$intercept, content, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function $executeCOROUTINE$8(_this__u8e3s4, requestBuilder, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.u2p_1 = _this__u8e3s4;
    this.v2p_1 = requestBuilder;
  }
  $executeCOROUTINE$8.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp0_safe_receiver = this.u2p_1.l2p_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              cancel$default(tmp0_safe_receiver, null, 1, null);
            }

            ;
            if (this.u2p_1.k2p_1 >= this.u2p_1.i2p_1) {
              throw new SendCountExceedException('Max send count ' + this.u2p_1.i2p_1 + ' exceeded. Consider increasing the property ' + 'maxSendCount if more is required.');
            }

            var tmp1_this = this.u2p_1;
            var tmp2 = tmp1_this.k2p_1;
            tmp1_this.k2p_1 = tmp2 + 1 | 0;
            ;
            this.vg_1 = 1;
            suspendResult = this.u2p_1.j2p_1.u25_1.n1r(this.v2p_1, this.v2p_1.i27_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var sendResult = suspendResult;
            var tmp3_elvis_lhs = sendResult instanceof HttpClientCall ? sendResult : null;
            var tmp_0;
            if (tmp3_elvis_lhs == null) {
              var tmp0_error = 'Failed to execute send pipeline. Expected [HttpClientCall], but received ' + toString(sendResult);
              throw IllegalStateException_init_$Create$(toString(tmp0_error));
            } else {
              tmp_0 = tmp3_elvis_lhs;
            }

            var call = tmp_0;
            this.u2p_1.l2p_1 = call;
            return call;
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$8.$metadata$ = classMeta('$executeCOROUTINE$8', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function HttpSend_init_$Init$(maxSendCount, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      maxSendCount = 20;
    HttpSend.call($this, maxSendCount);
    return $this;
  }
  function HttpSend_init_$Create$(maxSendCount, $mask0, $marker) {
    return HttpSend_init_$Init$(maxSendCount, $mask0, $marker, Object.create(HttpSend.prototype));
  }
  function Feature_2() {
    Feature_instance_2 = this;
    this.w2p_1 = new AttributeKey('HttpSend');
  }
  Feature_2.prototype.s = function () {
    return this.w2p_1;
  };
  Feature_2.prototype.x2p = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = HttpSend_init_$Create$(0, 1, null);
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  Feature_2.prototype.j28 = function (block) {
    return this.x2p(block);
  };
  Feature_2.prototype.y2p = function (feature, scope) {
    var tmp = Phases_getInstance().k2f_1;
    scope.s25_1.p1r(tmp, HttpSend$Feature$install$slambda_0(feature, scope, null));
  };
  Feature_2.prototype.k28 = function (feature, scope) {
    return this.y2p(feature instanceof HttpSend ? feature : THROW_CCE(), scope);
  };
  Feature_2.$metadata$ = objectMeta('Feature', [HttpClientFeature]);
  var Feature_instance_2;
  function Feature_getInstance_2() {
    if (Feature_instance_2 == null)
      new Feature_2();
    return Feature_instance_2;
  }
  function DefaultSender(maxSendCount, client) {
    this.i2p_1 = maxSendCount;
    this.j2p_1 = client;
    this.k2p_1 = 0;
    this.l2p_1 = null;
  }
  DefaultSender.prototype.g28 = function (requestBuilder, $cont) {
    var tmp = new $executeCOROUTINE$8(this, requestBuilder, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  DefaultSender.$metadata$ = classMeta('DefaultSender', [Sender]);
  function HttpSend(maxSendCount) {
    Feature_getInstance_2();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(maxSendCount);
    }
    tmp.t2k_1 = tmp$ret$0;
    this.u2k_1 = sharedList();
    makeShared(this);
  }
  HttpSend.prototype.z2p = function (_set____db54di) {
    return this.t2k_1.m4(this, maxSendCount$factory(), _set____db54di);
  };
  HttpSend.prototype.h2p = function () {
    return this.t2k_1.l4(this, maxSendCount$factory_0());
  };
  HttpSend.prototype.v2k = function (block) {
    var tmp0_this = this;
    {
      var tmp0_plusAssign = tmp0_this.u2k_1;
      tmp0_plusAssign.a(block);
    }
  };
  HttpSend.$metadata$ = classMeta('HttpSend');
  function Sender() {
  }
  Sender.$metadata$ = interfaceMeta('Sender');
  function SendCountExceedException(message) {
    IllegalStateException_init_$Init$_0(message, this);
    captureStack(this, SendCountExceedException);
  }
  SendCountExceedException.$metadata$ = classMeta('SendCountExceedException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function maxSendCount$factory() {
    return getPropertyCallableRef('maxSendCount', 1, KMutableProperty1, function (receiver) {
      return receiver.h2p();
    }, function (receiver, value) {
      return receiver.z2p(value);
    });
  }
  function maxSendCount$factory_0() {
    return getPropertyCallableRef('maxSendCount', 1, KMutableProperty1, function (receiver) {
      return receiver.h2p();
    }, function (receiver, value) {
      return receiver.z2p(value);
    });
  }
  function _set__requestTimeoutMillis__sraopa($this, _set____db54di) {
    return $this.a2q_1.m4($this, _requestTimeoutMillis$factory(), _set____db54di);
  }
  function _get__requestTimeoutMillis__mloc9m($this) {
    return $this.a2q_1.l4($this, _requestTimeoutMillis$factory_0());
  }
  function _set__connectTimeoutMillis__byh7iv($this, _set____db54di) {
    return $this.b2q_1.m4($this, _connectTimeoutMillis$factory(), _set____db54di);
  }
  function _get__connectTimeoutMillis__i43jyj($this) {
    return $this.b2q_1.l4($this, _connectTimeoutMillis$factory_0());
  }
  function _set__socketTimeoutMillis__e5zq02($this, _set____db54di) {
    return $this.c2q_1.m4($this, _socketTimeoutMillis$factory(), _set____db54di);
  }
  function _get__socketTimeoutMillis__7x1zq($this) {
    return $this.c2q_1.l4($this, _socketTimeoutMillis$factory_0());
  }
  function HttpTimeoutCapabilityConfiguration_init_$Init$(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $this) {
    HttpTimeoutCapabilityConfiguration.call($this);
    $this.d2q(requestTimeoutMillis);
    $this.e2q(connectTimeoutMillis);
    $this.f2q(socketTimeoutMillis);
    return $this;
  }
  function HttpTimeoutCapabilityConfiguration_init_$Init$_0(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      requestTimeoutMillis = null;
    if (!(($mask0 & 2) === 0))
      connectTimeoutMillis = null;
    if (!(($mask0 & 4) === 0))
      socketTimeoutMillis = null;
    HttpTimeoutCapabilityConfiguration_init_$Init$(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $this);
    return $this;
  }
  function HttpTimeoutCapabilityConfiguration_init_$Create$(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $mask0, $marker) {
    return HttpTimeoutCapabilityConfiguration_init_$Init$_0(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis, $mask0, $marker, Object.create(HttpTimeoutCapabilityConfiguration.prototype));
  }
  function checkTimeoutValue($this, value) {
    {
      var tmp0_require = value == null ? true : value.g1(new Long(0, 0)) > 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Only positive timeout values are allowed, for infinite timeout use HttpTimeout.INFINITE_TIMEOUT_MS';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return value;
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.g2q_1 = new AttributeKey('TimeoutConfiguration');
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_12() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function HttpTimeout$Feature$install$slambda$slambda($requestTimeout, $executionContext, $this_intercept, resultContinuation) {
    this.p2q_1 = $requestTimeout;
    this.q2q_1 = $executionContext;
    this.r2q_1 = $this_intercept;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpTimeout$Feature$install$slambda$slambda.prototype.h19 = function ($this$launch, $cont) {
    var tmp = this.i19($this$launch, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpTimeout$Feature$install$slambda$slambda.prototype.gh = function (p1, $cont) {
    return this.h19((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  HttpTimeout$Feature$install$slambda$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = delay(this.p2q_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.q2q_1.ak(new HttpRequestTimeoutException(this.r2q_1.q3()));
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpTimeout$Feature$install$slambda$slambda.prototype.i19 = function ($this$launch, completion) {
    var i = new HttpTimeout$Feature$install$slambda$slambda(this.p2q_1, this.q2q_1, this.r2q_1, completion);
    i.s2q_1 = $this$launch;
    return i;
  };
  HttpTimeout$Feature$install$slambda$slambda.$metadata$ = classMeta('HttpTimeout$Feature$install$slambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function HttpTimeout$Feature$install$slambda$slambda_0($requestTimeout, $executionContext, $this_intercept, resultContinuation) {
    var i = new HttpTimeout$Feature$install$slambda$slambda($requestTimeout, $executionContext, $this_intercept, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.h19($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function HttpTimeout$Feature$install$slambda$lambda($killer) {
    return function (it) {
      $killer.bk(null, 1, null);
      return Unit_getInstance();
    };
  }
  function HttpTimeout$Feature$install$slambda($feature, $scope, resultContinuation) {
    this.b2r_1 = $feature;
    this.c2r_1 = $scope;
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpTimeout$Feature$install$slambda.prototype.m26 = function ($this$intercept, it, $cont) {
    var tmp = this.n26($this$intercept, it, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpTimeout$Feature$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  HttpTimeout$Feature$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        if (tmp === 0) {
          this.wg_1 = 1;
          var configuration = this.d2r_1.q3().f2r(Feature_getInstance_3());
          if (configuration == null ? hasNotNullTimeouts(this.b2r_1) : false) {
            configuration = HttpTimeoutCapabilityConfiguration_init_$Create$(null, null, null, 7, null);
            this.d2r_1.q3().g2r(Feature_getInstance_3(), configuration);
          }
          var tmp0_safe_receiver = configuration;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$0;
            l$ret$1: do {
              var tmp0_elvis_lhs = tmp0_safe_receiver.h2r();
              tmp0_safe_receiver.e2q(tmp0_elvis_lhs == null ? this.b2r_1.j2r_1 : tmp0_elvis_lhs);
              var tmp1_elvis_lhs = tmp0_safe_receiver.l2r();
              tmp0_safe_receiver.f2q(tmp1_elvis_lhs == null ? this.b2r_1.k2r_1 : tmp1_elvis_lhs);
              var tmp2_elvis_lhs = tmp0_safe_receiver.m2r();
              tmp0_safe_receiver.d2q(tmp2_elvis_lhs == null ? this.b2r_1.i2r_1 : tmp2_elvis_lhs);
              var tmp3_elvis_lhs = tmp0_safe_receiver.m2r();
              var requestTimeout = tmp3_elvis_lhs == null ? this.b2r_1.i2r_1 : tmp3_elvis_lhs;
              var tmp_0;
              if (requestTimeout == null) {
                tmp_0 = true;
              } else {
                Feature_getInstance_3();
                tmp_0 = equals(requestTimeout, new Long(-1, 2147483647));
              }
              if (tmp_0) {
                tmp$ret$0 = Unit_getInstance();
                break l$ret$1;
              }
              var executionContext = this.d2r_1.q3().j27_1;
              var killer = launch$default(this.c2r_1, null, null, HttpTimeout$Feature$install$slambda$slambda_0(requestTimeout, executionContext, this.d2r_1, null), 3, null);
              var tmp_1 = this.d2r_1.q3().j27_1;
              tmp_1.vj(HttpTimeout$Feature$install$slambda$lambda(killer));
            }
             while (false);
          }
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.yg_1;
        }
      } catch ($p) {
        throw $p;
      }
     while (true);
  };
  HttpTimeout$Feature$install$slambda.prototype.n26 = function ($this$intercept, it, completion) {
    var i = new HttpTimeout$Feature$install$slambda(this.b2r_1, this.c2r_1, completion);
    i.d2r_1 = $this$intercept;
    i.e2r_1 = it;
    return i;
  };
  HttpTimeout$Feature$install$slambda.$metadata$ = classMeta('HttpTimeout$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function HttpTimeout$Feature$install$slambda_0($feature, $scope, resultContinuation) {
    var i = new HttpTimeout$Feature$install$slambda($feature, $scope, resultContinuation);
    var l = function ($this$intercept, it, $cont) {
      return i.m26($this$intercept, it, $cont);
    };
    l.$arity = 2;
    return l;
  }
  HttpTimeoutCapabilityConfiguration.prototype.d2q = function (value) {
    _set__requestTimeoutMillis__sraopa(this, checkTimeoutValue(this, value));
  };
  HttpTimeoutCapabilityConfiguration.prototype.m2r = function () {
    return _get__requestTimeoutMillis__mloc9m(this);
  };
  HttpTimeoutCapabilityConfiguration.prototype.e2q = function (value) {
    _set__connectTimeoutMillis__byh7iv(this, checkTimeoutValue(this, value));
  };
  HttpTimeoutCapabilityConfiguration.prototype.h2r = function () {
    return _get__connectTimeoutMillis__i43jyj(this);
  };
  HttpTimeoutCapabilityConfiguration.prototype.f2q = function (value) {
    _set__socketTimeoutMillis__e5zq02(this, checkTimeoutValue(this, value));
  };
  HttpTimeoutCapabilityConfiguration.prototype.l2r = function () {
    return _get__socketTimeoutMillis__7x1zq(this);
  };
  HttpTimeoutCapabilityConfiguration.prototype.o16 = function () {
    return new HttpTimeout(this.m2r(), this.h2r(), this.l2r());
  };
  HttpTimeoutCapabilityConfiguration.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof HttpTimeoutCapabilityConfiguration)
      other;
    else
      THROW_CCE();
    if (!equals(_get__requestTimeoutMillis__mloc9m(this), _get__requestTimeoutMillis__mloc9m(other)))
      return false;
    if (!equals(_get__connectTimeoutMillis__i43jyj(this), _get__connectTimeoutMillis__i43jyj(other)))
      return false;
    if (!equals(_get__socketTimeoutMillis__7x1zq(this), _get__socketTimeoutMillis__7x1zq(other)))
      return false;
    return true;
  };
  HttpTimeoutCapabilityConfiguration.prototype.hashCode = function () {
    var tmp0_safe_receiver = _get__requestTimeoutMillis__mloc9m(this);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp = imul(31, result);
    var tmp2_safe_receiver = _get__connectTimeoutMillis__i43jyj(this);
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp4_safe_receiver = _get__socketTimeoutMillis__7x1zq(this);
    var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.hashCode();
    result = tmp_0 + (tmp5_elvis_lhs == null ? 0 : tmp5_elvis_lhs) | 0;
    return result;
  };
  function HttpTimeoutCapabilityConfiguration() {
    Companion_getInstance_12();
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(new Long(0, 0));
    }
    tmp.a2q_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(new Long(0, 0));
    }
    tmp_0.b2q_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = new shared$1(new Long(0, 0));
    }
    tmp_1.c2q_1 = tmp$ret$2;
  }
  HttpTimeoutCapabilityConfiguration.$metadata$ = classMeta('HttpTimeoutCapabilityConfiguration');
  function hasNotNullTimeouts($this) {
    return (!($this.i2r_1 == null) ? true : !($this.j2r_1 == null)) ? true : !($this.k2r_1 == null);
  }
  function Feature_3() {
    Feature_instance_3 = this;
    this.n2r_1 = new AttributeKey('TimeoutFeature');
    this.o2r_1 = new Long(-1, 2147483647);
  }
  Feature_3.prototype.s = function () {
    return this.n2r_1;
  };
  Feature_3.prototype.p2r = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = HttpTimeoutCapabilityConfiguration_init_$Create$(null, null, null, 7, null);
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.o16();
  };
  Feature_3.prototype.j28 = function (block) {
    return this.p2r(block);
  };
  Feature_3.prototype.q2r = function (feature, scope) {
    var tmp = Phases_getInstance().g2f_1;
    scope.s25_1.p1r(tmp, HttpTimeout$Feature$install$slambda_0(feature, scope, null));
  };
  Feature_3.prototype.k28 = function (feature, scope) {
    return this.q2r(feature instanceof HttpTimeout ? feature : THROW_CCE(), scope);
  };
  Feature_3.$metadata$ = objectMeta('Feature', [HttpClientFeature, HttpClientEngineCapability]);
  var Feature_instance_3;
  function Feature_getInstance_3() {
    if (Feature_instance_3 == null)
      new Feature_3();
    return Feature_instance_3;
  }
  function HttpTimeout(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis) {
    Feature_getInstance_3();
    this.i2r_1 = requestTimeoutMillis;
    this.j2r_1 = connectTimeoutMillis;
    this.k2r_1 = socketTimeoutMillis;
  }
  HttpTimeout.$metadata$ = classMeta('HttpTimeout');
  function HttpRequestTimeoutException(request) {
    var tmp = 'Request timeout has expired [url=' + request.f27_1.i23() + ', ';
    var tmp0_safe_receiver = request.f2r(Feature_getInstance_3());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m2r();
    CancellationException_init_$Init$(tmp + ('request_timeout=' + toString(tmp1_elvis_lhs == null ? 'unknown' : tmp1_elvis_lhs) + ' ms]'), this);
    captureStack(this, HttpRequestTimeoutException);
  }
  HttpRequestTimeoutException.$metadata$ = classMeta('HttpRequestTimeoutException', undefined, undefined, undefined, undefined, CancellationException.prototype);
  function _requestTimeoutMillis$factory() {
    return getPropertyCallableRef('_requestTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__requestTimeoutMillis__mloc9m(receiver);
    }, function (receiver, value) {
      return _set__requestTimeoutMillis__sraopa(receiver, value);
    });
  }
  function _requestTimeoutMillis$factory_0() {
    return getPropertyCallableRef('_requestTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__requestTimeoutMillis__mloc9m(receiver);
    }, function (receiver, value) {
      return _set__requestTimeoutMillis__sraopa(receiver, value);
    });
  }
  function _connectTimeoutMillis$factory() {
    return getPropertyCallableRef('_connectTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__connectTimeoutMillis__i43jyj(receiver);
    }, function (receiver, value) {
      return _set__connectTimeoutMillis__byh7iv(receiver, value);
    });
  }
  function _connectTimeoutMillis$factory_0() {
    return getPropertyCallableRef('_connectTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__connectTimeoutMillis__i43jyj(receiver);
    }, function (receiver, value) {
      return _set__connectTimeoutMillis__byh7iv(receiver, value);
    });
  }
  function _socketTimeoutMillis$factory() {
    return getPropertyCallableRef('_socketTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__socketTimeoutMillis__7x1zq(receiver);
    }, function (receiver, value) {
      return _set__socketTimeoutMillis__e5zq02(receiver, value);
    });
  }
  function _socketTimeoutMillis$factory_0() {
    return getPropertyCallableRef('_socketTimeoutMillis', 1, KMutableProperty1, function (receiver) {
      return _get__socketTimeoutMillis__7x1zq(receiver);
    }, function (receiver, value) {
      return _set__socketTimeoutMillis__e5zq02(receiver, value);
    });
  }
  function WebSocketCapability() {
    WebSocketCapability_instance = this;
  }
  WebSocketCapability.prototype.toString = function () {
    return 'WebSocketCapability';
  };
  WebSocketCapability.$metadata$ = objectMeta('WebSocketCapability', [HttpClientEngineCapability]);
  var WebSocketCapability_instance;
  function WebSocketCapability_getInstance() {
    if (WebSocketCapability_instance == null)
      new WebSocketCapability();
    return WebSocketCapability_instance;
  }
  function WebSocketException(message) {
    IllegalStateException_init_$Init$_0(message, this);
    captureStack(this, WebSocketException);
  }
  WebSocketException.$metadata$ = classMeta('WebSocketException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function ClientUpgradeContent() {
  }
  ClientUpgradeContent.$metadata$ = classMeta('ClientUpgradeContent', undefined, undefined, undefined, undefined, NoContent.prototype);
  function DefaultHttpRequest(call, data) {
    this.r2r_1 = call;
    this.s2r_1 = data.k2c_1;
    this.t2r_1 = data.j2c_1;
    this.u2r_1 = data.m2c_1;
    this.v2r_1 = data.l2c_1;
    this.w2r_1 = data.o2c_1;
  }
  DefaultHttpRequest.prototype.u26 = function () {
    return this.r2r_1;
  };
  DefaultHttpRequest.prototype.si = function () {
    return this.u26().si();
  };
  DefaultHttpRequest.prototype.k2b = function () {
    return this.s2r_1;
  };
  DefaultHttpRequest.prototype.w29 = function () {
    return this.t2r_1;
  };
  DefaultHttpRequest.prototype.g1z = function () {
    return this.v2r_1;
  };
  DefaultHttpRequest.prototype.f28 = function () {
    return this.w2r_1;
  };
  DefaultHttpRequest.$metadata$ = classMeta('DefaultHttpRequest', [HttpRequest]);
  function Companion_3() {
    Companion_instance_3 = this;
  }
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_13() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function HttpRequestBuilder$setCapability$lambda() {
    return function () {
      return sharedMap();
    };
  }
  function HttpRequestBuilder() {
    Companion_getInstance_13();
    var tmp = this;
    tmp.f27_1 = URLBuilder_init_$Create$(null, null, 0, null, null, null, null, null, false, 511, null);
    this.g27_1 = Companion_getInstance_2().h1z_1;
    var tmp_0 = this;
    tmp_0.h27_1 = HeadersBuilder_init_$Create$(0, 1, null);
    this.i27_1 = EmptyContent_getInstance();
    var tmp_1 = this;
    var tmp$ret$0;
    {
      var tmp0_also = SupervisorJob$default(null, 1, null);
      {
      }
      {
        makeShared(tmp0_also);
      }
      tmp$ret$0 = tmp0_also;
    }
    tmp_1.j27_1 = tmp$ret$0;
    this.k27_1 = Attributes(true);
  }
  HttpRequestBuilder.prototype.w29 = function () {
    return this.f27_1;
  };
  HttpRequestBuilder.prototype.g1z = function () {
    return this.h27_1;
  };
  HttpRequestBuilder.prototype.l2o = function (value) {
    makeShared(value);
    this.j27_1 = value;
  };
  HttpRequestBuilder.prototype.o16 = function () {
    var tmp = this.f27_1.o16();
    var tmp_0 = this.g27_1;
    var tmp_1 = this.h27_1.o16();
    var tmp_2 = this.i27_1;
    var tmp0_elvis_lhs = tmp_2 instanceof OutgoingContent ? tmp_2 : null;
    var tmp_3;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error = 'No request transformation found: ' + toString(this.i27_1);
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    } else {
      tmp_3 = tmp0_elvis_lhs;
    }
    return new HttpRequestData(tmp, tmp_0, tmp_1, tmp_3, this.j27_1, this.k27_1);
  };
  HttpRequestBuilder.prototype.h2d = function (builder) {
    this.l2o(builder.j27_1);
    return this.x2r(builder);
  };
  HttpRequestBuilder.prototype.x2r = function (builder) {
    this.g27_1 = builder.g27_1;
    this.i27_1 = builder.i27_1;
    takeFrom_0(this.f27_1, builder.f27_1);
    this.f27_1.v22_1 = isBlank(this.f27_1.v22_1) ? '/' : this.f27_1.v22_1;
    appendAll(this.h27_1, builder.h27_1);
    putAll(this.k27_1, builder.k27_1);
    return this;
  };
  HttpRequestBuilder.prototype.g2r = function (key, capability) {
    var tmp = get_ENGINE_CAPABILITIES_KEY();
    var capabilities = this.k27_1.y1j(tmp, HttpRequestBuilder$setCapability$lambda());
    {
      capabilities.c(key, capability);
    }
  };
  HttpRequestBuilder.prototype.f2r = function (key) {
    var tmp0_safe_receiver = this.k27_1.v1j(get_ENGINE_CAPABILITIES_KEY());
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i2(key);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  HttpRequestBuilder.$metadata$ = classMeta('HttpRequestBuilder', [HttpMessageBuilder]);
  function HttpRequestData(url, method, headers, body, executionContext, attributes) {
    this.j2c_1 = url;
    this.k2c_1 = method;
    this.l2c_1 = headers;
    this.m2c_1 = body;
    this.n2c_1 = executionContext;
    this.o2c_1 = attributes;
    var tmp = this;
    var tmp0_safe_receiver = this.o2c_1.v1j(get_ENGINE_CAPABILITIES_KEY());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j2();
    tmp.p2c_1 = tmp1_elvis_lhs == null ? emptySet() : tmp1_elvis_lhs;
  }
  HttpRequestData.prototype.toString = function () {
    return 'HttpRequestData(url=' + this.j2c_1 + ', method=' + this.k2c_1 + ')';
  };
  HttpRequestData.$metadata$ = classMeta('HttpRequestData');
  function putAll(_this__u8e3s4, other) {
    {
      var tmp0_forEach = other.z1j();
      var tmp0_iterator = tmp0_forEach.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          _this__u8e3s4.x1j(element instanceof AttributeKey ? element : THROW_CCE(), other.u1j(element));
        }
      }
    }
  }
  function HttpResponseData(statusCode, requestTime, headers, version, body, callContext) {
    this.y29_1 = statusCode;
    this.z29_1 = requestTime;
    this.a2a_1 = headers;
    this.b2a_1 = version;
    this.c2a_1 = body;
    this.d2a_1 = callContext;
    var tmp = this;
    tmp.e2a_1 = GMTDate$default(null, 1, null);
  }
  HttpResponseData.prototype.y2r = function () {
    return this.c2a_1;
  };
  HttpResponseData.prototype.toString = function () {
    return 'HttpResponseData=(statusCode=' + this.y29_1 + ')';
  };
  HttpResponseData.$metadata$ = classMeta('HttpResponseData');
  function HttpRequest() {
  }
  HttpRequest.$metadata$ = interfaceMeta('HttpRequest', [HttpMessage, CoroutineScope]);
  function url(_this__u8e3s4, scheme, host, port, path, block) {
    var tmp$ret$0;
    {
      var tmp0_apply = _this__u8e3s4.f27_1;
      {
      }
      {
        tmp0_apply.q22_1 = Companion_getInstance_3().w23(scheme);
        tmp0_apply.r22_1 = host;
        tmp0_apply.s22_1 = port;
        tmp0_apply.v22_1 = path;
        block(_this__u8e3s4.f27_1);
      }
      tmp$ret$0 = tmp0_apply;
    }
  }
  function url$default(_this__u8e3s4, scheme, host, port, path, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      scheme = 'http';
    if (!(($mask0 & 2) === 0))
      host = 'localhost';
    if (!(($mask0 & 4) === 0))
      port = get_DEFAULT_PORT();
    if (!(($mask0 & 8) === 0))
      path = '/';
    if (!(($mask0 & 16) === 0)) {
      block = url$lambda();
    }
    return url(_this__u8e3s4, scheme, host, port, path, block);
  }
  function isUpgradeRequest(_this__u8e3s4) {
    var tmp = _this__u8e3s4.m2c_1;
    return tmp instanceof ClientUpgradeContent;
  }
  function url$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function Phases() {
    Phases_instance = this;
    this.g2f_1 = new PipelinePhase('Before');
    this.h2f_1 = new PipelinePhase('State');
    this.i2f_1 = new PipelinePhase('Transform');
    this.j2f_1 = new PipelinePhase('Render');
    this.k2f_1 = new PipelinePhase('Send');
  }
  Phases.$metadata$ = objectMeta('Phases');
  var Phases_instance;
  function Phases_getInstance() {
    if (Phases_instance == null)
      new Phases();
    return Phases_instance;
  }
  function HttpRequestPipeline(developmentMode) {
    Phases_getInstance();
    Pipeline.call(this, [Phases_getInstance().g2f_1, Phases_getInstance().h2f_1, Phases_getInstance().i2f_1, Phases_getInstance().j2f_1, Phases_getInstance().k2f_1]);
    this.g2s_1 = developmentMode;
  }
  HttpRequestPipeline.prototype.m1r = function () {
    return this.g2s_1;
  };
  HttpRequestPipeline.$metadata$ = classMeta('HttpRequestPipeline', undefined, undefined, undefined, undefined, Pipeline.prototype);
  function Phases_0() {
    Phases_instance_0 = this;
    this.v27_1 = new PipelinePhase('Before');
    this.w27_1 = new PipelinePhase('State');
    this.x27_1 = new PipelinePhase('Monitoring');
    this.y27_1 = new PipelinePhase('Engine');
    this.z27_1 = new PipelinePhase('Receive');
  }
  Phases_0.$metadata$ = objectMeta('Phases');
  var Phases_instance_0;
  function Phases_getInstance_0() {
    if (Phases_instance_0 == null)
      new Phases_0();
    return Phases_instance_0;
  }
  function HttpSendPipeline(developmentMode) {
    Phases_getInstance_0();
    Pipeline.call(this, [Phases_getInstance_0().v27_1, Phases_getInstance_0().w27_1, Phases_getInstance_0().x27_1, Phases_getInstance_0().y27_1, Phases_getInstance_0().z27_1]);
    this.o2s_1 = developmentMode;
  }
  HttpSendPipeline.prototype.m1r = function () {
    return this.o2s_1;
  };
  HttpSendPipeline.$metadata$ = classMeta('HttpSendPipeline', undefined, undefined, undefined, undefined, Pipeline.prototype);
  function header(_this__u8e3s4, key, value) {
    var tmp0_safe_receiver = value;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = _this__u8e3s4.h27_1.v1l(key, toString(tmp0_safe_receiver));
      }
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      tmp_0 = Unit_getInstance();
    } else {
      tmp_0 = Unit_getInstance();
    }
    return tmp_0;
  }
  function accept(_this__u8e3s4, contentType) {
    return _this__u8e3s4.h27_1.v1l(HttpHeaders_getInstance().d1v_1, contentType.toString());
  }
  function DefaultHttpResponse(call, responseData) {
    HttpResponse.call(this);
    this.p2s_1 = call;
    this.q2s_1 = responseData.d2a_1;
    this.r2s_1 = responseData.y29_1;
    this.s2s_1 = responseData.b2a_1;
    this.t2s_1 = responseData.z29_1;
    this.u2s_1 = responseData.e2a_1;
    var tmp = this;
    var tmp_0 = responseData.c2a_1;
    var tmp0_elvis_lhs = isInterface(tmp_0, ByteReadChannel) ? tmp_0 : null;
    tmp.v2s_1 = tmp0_elvis_lhs == null ? Companion_getInstance_4().k1a() : tmp0_elvis_lhs;
    this.w2s_1 = responseData.a2a_1;
  }
  DefaultHttpResponse.prototype.u26 = function () {
    return this.p2s_1;
  };
  DefaultHttpResponse.prototype.si = function () {
    return this.q2s_1;
  };
  DefaultHttpResponse.prototype.x29 = function () {
    return this.r2s_1;
  };
  DefaultHttpResponse.prototype.u2b = function () {
    return this.s2s_1;
  };
  DefaultHttpResponse.prototype.v2b = function () {
    return this.t2s_1;
  };
  DefaultHttpResponse.prototype.w2b = function () {
    return this.u2s_1;
  };
  DefaultHttpResponse.prototype.v1u = function () {
    return this.v2s_1;
  };
  DefaultHttpResponse.prototype.g1z = function () {
    return this.w2s_1;
  };
  DefaultHttpResponse.$metadata$ = classMeta('DefaultHttpResponse', undefined, undefined, undefined, undefined, HttpResponse.prototype);
  function HttpResponse() {
  }
  HttpResponse.prototype.toString = function () {
    return 'HttpResponse[' + get_request(this).w29() + ', ' + this.x29() + ']';
  };
  HttpResponse.$metadata$ = classMeta('HttpResponse', [HttpMessage, CoroutineScope]);
  function complete(_this__u8e3s4) {
    var tmp = ensureNotNull(_this__u8e3s4.si().w3(Key_getInstance()));
    var job = isInterface(tmp, CompletableJob) ? tmp : THROW_CCE();
    job.bp();
  }
  function get_request(_this__u8e3s4) {
    return _this__u8e3s4.u26().s29();
  }
  function Phases_1() {
    Phases_instance_1 = this;
    this.l2f_1 = new PipelinePhase('Receive');
    this.m2f_1 = new PipelinePhase('Parse');
    this.n2f_1 = new PipelinePhase('Transform');
    this.o2f_1 = new PipelinePhase('State');
    this.p2f_1 = new PipelinePhase('After');
  }
  Phases_1.$metadata$ = objectMeta('Phases');
  var Phases_instance_1;
  function Phases_getInstance_1() {
    if (Phases_instance_1 == null)
      new Phases_1();
    return Phases_instance_1;
  }
  function HttpResponsePipeline(developmentMode) {
    Phases_getInstance_1();
    Pipeline.call(this, [Phases_getInstance_1().l2f_1, Phases_getInstance_1().m2f_1, Phases_getInstance_1().n2f_1, Phases_getInstance_1().o2f_1, Phases_getInstance_1().p2f_1]);
    this.e2t_1 = developmentMode;
  }
  HttpResponsePipeline.prototype.m1r = function () {
    return this.e2t_1;
  };
  HttpResponsePipeline.$metadata$ = classMeta('HttpResponsePipeline', undefined, undefined, undefined, undefined, Pipeline.prototype);
  function Phases_2() {
    Phases_instance_2 = this;
    this.f2t_1 = new PipelinePhase('Before');
    this.g2t_1 = new PipelinePhase('State');
    this.h2t_1 = new PipelinePhase('After');
  }
  Phases_2.$metadata$ = objectMeta('Phases');
  var Phases_instance_2;
  function Phases_getInstance_2() {
    if (Phases_instance_2 == null)
      new Phases_2();
    return Phases_instance_2;
  }
  function HttpReceivePipeline(developmentMode) {
    Phases_getInstance_2();
    Pipeline.call(this, [Phases_getInstance_2().f2t_1, Phases_getInstance_2().g2t_1, Phases_getInstance_2().h2t_1]);
    this.p2t_1 = developmentMode;
  }
  HttpReceivePipeline.prototype.m1r = function () {
    return this.p2t_1;
  };
  HttpReceivePipeline.$metadata$ = classMeta('HttpReceivePipeline', undefined, undefined, undefined, undefined, Pipeline.prototype);
  function HttpResponseContainer(expectedType, response) {
    this.q29_1 = expectedType;
    this.r29_1 = response;
  }
  HttpResponseContainer.prototype.h3 = function () {
    return this.q29_1;
  };
  HttpResponseContainer.prototype.i3 = function () {
    return this.r29_1;
  };
  HttpResponseContainer.prototype.toString = function () {
    return 'HttpResponseContainer(expectedType=' + this.q29_1 + ', response=' + toString(this.r29_1) + ')';
  };
  HttpResponseContainer.prototype.hashCode = function () {
    var result = this.q29_1.hashCode();
    result = imul(result, 31) + hashCode(this.r29_1) | 0;
    return result;
  };
  HttpResponseContainer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpResponseContainer))
      return false;
    var tmp0_other_with_cast = other instanceof HttpResponseContainer ? other : THROW_CCE();
    if (!this.q29_1.equals(tmp0_other_with_cast.q29_1))
      return false;
    if (!equals(this.r29_1, tmp0_other_with_cast.r29_1))
      return false;
    return true;
  };
  HttpResponseContainer.$metadata$ = classMeta('HttpResponseContainer');
  function readText(_this__u8e3s4, fallbackCharset, $cont) {
    var tmp = new $readTextCOROUTINE$10(_this__u8e3s4, fallbackCharset, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function readText$default_0(_this__u8e3s4, fallbackCharset, $cont, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      fallbackCharset = null;
    return readText(_this__u8e3s4, fallbackCharset, $cont);
  }
  function checkCapabilities($this) {
    var tmp0_safe_receiver = $this.c2u_1.k27_1.v1j(get_ENGINE_CAPABILITIES_KEY());
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j2();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_filterIsInstanceTo = ArrayList_init_$Create$();
          var tmp0_iterator = tmp1_safe_receiver.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            if (!(element == null) ? isInterface(element, HttpClientFeature) : false) {
              tmp0_filterIsInstanceTo.a(element);
            }
          }
          tmp$ret$0 = tmp0_filterIsInstanceTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp2_safe_receiver = tmp;
    if (tmp2_safe_receiver == null)
      null;
    else {
      {
        var tmp0_iterator_0 = tmp2_safe_receiver.d();
        while (tmp0_iterator_0.e()) {
          var element_0 = tmp0_iterator_0.f();
          {
            var tmp$ret$3;
            $l$block: {
              var tmp0_requireNotNull = feature($this.d2u_1, element_0);
              {
              }
              if (tmp0_requireNotNull == null) {
                var tmp$ret$2;
                {
                  tmp$ret$2 = 'Consider installing ' + element_0 + ' feature because the request requires it to be installed';
                }
                var message = tmp$ret$2;
                throw IllegalArgumentException_init_$Create$(toString(message));
              } else {
                tmp$ret$3 = tmp0_requireNotNull;
                break $l$block;
              }
            }
          }
        }
      }
    }
  }
  function HttpStatement$execute$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  HttpStatement$execute$slambda.prototype.n2u = function (it, $cont) {
    var tmp = this.b2f(it, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpStatement$execute$slambda.prototype.gh = function (p1, $cont) {
    return this.n2u(p1 instanceof HttpResponse ? p1 : THROW_CCE(), $cont);
  };
  HttpStatement$execute$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = save(this.m2u_1.u26(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var savedCall = suspendResult;
            return savedCall.t26();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  HttpStatement$execute$slambda.prototype.b2f = function (it, completion) {
    var i = new HttpStatement$execute$slambda(completion);
    i.m2u_1 = it;
    return i;
  };
  HttpStatement$execute$slambda.$metadata$ = classMeta('HttpStatement$execute$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function HttpStatement$execute$slambda_0(resultContinuation) {
    var i = new HttpStatement$execute$slambda(resultContinuation);
    var l = function (it, $cont) {
      return i.n2u(it, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function $executeCOROUTINE$11(_this__u8e3s4, block, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.w2u_1 = _this__u8e3s4;
    this.x2u_1 = block;
  }
  $executeCOROUTINE$11.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 11;
            this.vg_1 = 1;
            suspendResult = this.w2u_1.c2v(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.y2u_1 = suspendResult;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.vg_1 = 3;
            continue $sm;
          case 3:
            this.wg_1 = 9;
            this.vg_1 = 4;
            suspendResult = this.x2u_1(this.y2u_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.z2u_1 = suspendResult;
            this.wg_1 = 11;
            this.vg_1 = 5;
            var tmp_0 = this;
            continue $sm;
          case 5:
            this.a2v_1 = this.z2u_1;
            this.vg_1 = 6;
            suspendResult = this.w2u_1.d2v(this.y2u_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            return this.a2v_1;
          case 7:
            this.vg_1 = 8;
            suspendResult = this.w2u_1.d2v(this.y2u_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            return Unit_getInstance();
          case 9:
            this.wg_1 = 11;
            this.b2v_1 = this.yg_1;
            this.vg_1 = 10;
            suspendResult = this.w2u_1.d2v(this.y2u_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 10:
            throw this.b2v_1;
          case 11:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 11) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$11.$metadata$ = classMeta('$executeCOROUTINE$11', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $executeUnsafeCOROUTINE$12(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.m2v_1 = _this__u8e3s4;
  }
  $executeUnsafeCOROUTINE$12.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.n2v_1 = (new HttpRequestBuilder()).h2d(this.m2v_1.c2u_1);
            this.vg_1 = 1;
            suspendResult = this.m2v_1.d2u_1.g28(this.n2v_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var call = suspendResult;
            return call.t26();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeUnsafeCOROUTINE$12.$metadata$ = classMeta('$executeUnsafeCOROUTINE$12', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $cleanupCOROUTINE$13(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.w2v_1 = _this__u8e3s4;
    this.x2v_1 = _this__u8e3s4_0;
  }
  $cleanupCOROUTINE$13.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            var tmp_0 = this;
            var tmp_1 = ensureNotNull(this.x2v_1.si().w3(Key_getInstance()));
            tmp_0.y2v_1 = isInterface(tmp_1, CompletableJob) ? tmp_1 : THROW_CCE();
            this.y2v_1.bp();
            ;
            this.wg_1 = 1;
            cancel_1(this.x2v_1.v1u());
            ;
            this.wg_1 = 4;
            this.vg_1 = 2;
            continue $sm;
          case 1:
            this.wg_1 = 4;
            var tmp_2 = this.yg_1;
            if (tmp_2 instanceof Error) {
              this.z2v_1 = this.yg_1;
              this.vg_1 = 2;
              continue $sm;
            } else {
              throw this.yg_1;
            }

            break;
          case 2:
            this.wg_1 = 4;
            this.vg_1 = 3;
            suspendResult = this.y2v_1.cp(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            ;
            return Unit_getInstance();
          case 4:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $cleanupCOROUTINE$13.$metadata$ = classMeta('$cleanupCOROUTINE$13', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function HttpStatement(builder, client) {
    this.c2u_1 = builder;
    this.d2u_1 = client;
    checkCapabilities(this);
  }
  HttpStatement.prototype.a2w = function (block, $cont) {
    var tmp = new $executeCOROUTINE$11(this, block, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpStatement.prototype.b2w = function ($cont) {
    return this.a2w(HttpStatement$execute$slambda_0(null), $cont);
  };
  HttpStatement.prototype.c2v = function ($cont) {
    var tmp = new $executeUnsafeCOROUTINE$12(this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpStatement.prototype.d2v = function (_this__u8e3s4, $cont) {
    var tmp = new $cleanupCOROUTINE$13(this, _this__u8e3s4, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  HttpStatement.prototype.toString = function () {
    return 'HttpStatement[' + this.c2u_1.f27_1.i23() + ']';
  };
  HttpStatement.$metadata$ = classMeta('HttpStatement');
  function $readTextCOROUTINE$10(_this__u8e3s4, fallbackCharset, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.y2t_1 = _this__u8e3s4;
    this.z2t_1 = fallbackCharset;
  }
  $readTextCOROUTINE$10.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = charset_0(this.y2t_1);
            var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? this.z2t_1 : tmp0_elvis_lhs;
            tmp_0.a2u_1 = tmp1_elvis_lhs == null ? Charsets_getInstance().s1c_1 : tmp1_elvis_lhs;
            this.b2u_1 = this.a2u_1.k1f();
            this.vg_1 = 1;
            var tmp_1 = this.y2t_1.u26();
            var tmp_2;
            try {
              tmp_2 = new TypeInfo(getKClass(Input), JsType_getInstance(), createKType(getKClass(Input), arrayOf([]), false));
            } catch ($p) {
              var tmp_3;
              {
                var tmp_4 = getKClass(Input);
                var tmp_5 = JsType_getInstance();
                tmp_3 = TypeInfo_init_$Create$(tmp_4, tmp_5, null, 4, null);
              }
              tmp_2 = tmp_3;
            }

            suspendResult = tmp_1.v29(tmp_2, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var input = isInterface(suspendResult, Input) ? suspendResult : THROW_CCE();
            return decode$default(this.b2u_1, input, 0, 2, null);
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $readTextCOROUTINE$10.$metadata$ = classMeta('$readTextCOROUTINE$10', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function EmptyContent() {
    EmptyContent_instance = this;
    NoContent.call(this);
    this.d2w_1 = new Long(0, 0);
  }
  EmptyContent.prototype.b24 = function () {
    return this.d2w_1;
  };
  EmptyContent.prototype.toString = function () {
    return 'EmptyContent';
  };
  EmptyContent.$metadata$ = objectMeta('EmptyContent', undefined, undefined, undefined, undefined, NoContent.prototype);
  var EmptyContent_instance;
  function EmptyContent_getInstance() {
    if (EmptyContent_instance == null)
      new EmptyContent();
    return EmptyContent_instance;
  }
  function sharedMap() {
    if (PlatformUtils_getInstance().g1m_1) {
      return ConcurrentMap_init_$Create$(null, 0, 3, null);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    return tmp$ret$0;
  }
  function sharedList() {
    if (PlatformUtils_getInstance().g1m_1) {
      return new ConcurrentList();
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    return tmp$ret$0;
  }
  function buildHeaders(block) {
    var tmp$ret$0;
    {
      var tmp0_apply = HeadersBuilder_init_$Create$(0, 1, null);
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.o16();
  }
  function instanceOf(_this__u8e3s4, type) {
    return type.id(_this__u8e3s4);
  }
  function Type() {
  }
  Type.$metadata$ = interfaceMeta('Type');
  function JsType() {
    JsType_instance = this;
  }
  JsType.$metadata$ = objectMeta('JsType', [Type]);
  var JsType_instance;
  function JsType_getInstance() {
    if (JsType_instance == null)
      new JsType();
    return JsType_instance;
  }
  function createCallContext(_this__u8e3s4, parentJob, $cont) {
    var callJob = Job(parentJob);
    var callContext = _this__u8e3s4.si().d4(callJob).d4(get_CALL_COROUTINE());
    var tmp$ret$1;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = $cont.q3();
      }
      var tmp0_elvis_lhs = tmp$ret$0.w3(Key_getInstance());
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$1 = Unit_getInstance();
        break $l$block;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var userJob = tmp;
      var cleanupHandler = userJob.xj(true, false, createCallContext$lambda(callJob), 2, null);
      callJob.vj(createCallContext$lambda_0(cleanupHandler));
    }
    return callContext;
  }
  function createCallContext$lambda($callJob) {
    return function (cause) {
      var tmp0_elvis_lhs = cause;
      if (tmp0_elvis_lhs == null)
        return Unit_getInstance();
      else
        tmp0_elvis_lhs;
      $callJob.ak(CancellationException_init_$Create$(cause.message));
      return Unit_getInstance();
    };
  }
  function createCallContext$lambda_0($cleanupHandler) {
    return function (it) {
      $cleanupHandler.fm();
      return Unit_getInstance();
    };
  }
  function Js() {
    Js_instance = this;
  }
  Js.prototype.e2w = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new HttpClientEngineConfig();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return new JsClientEngine(tmp$ret$0);
  };
  Js.prototype.i28 = function (block) {
    return this.e2w(block);
  };
  Js.$metadata$ = objectMeta('Js', [HttpClientEngineFactory]);
  var Js_instance;
  function Js_getInstance() {
    if (Js_instance == null)
      new Js();
    return Js_instance;
  }
  function createWebSocket($this, urlString_capturingHack) {
    var tmp;
    if (PlatformUtils_getInstance().e1m_1) {
      var ws_capturingHack = __nccwpck_require__(28);
      tmp = new ws_capturingHack(urlString_capturingHack);
    } else {
      tmp = new WebSocket(urlString_capturingHack);
    }
    return tmp;
  }
  function executeWebSocketRequest($this, request, callContext, $cont) {
    var tmp = new $executeWebSocketRequestCOROUTINE$15($this, request, callContext, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $executeCOROUTINE$14(_this__u8e3s4, data, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.b2x_1 = _this__u8e3s4;
    this.c2x_1 = data;
  }
  $executeCOROUTINE$14.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 6;
            this.vg_1 = 1;
            suspendResult = callContext(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.d2x_1 = suspendResult;
            if (isUpgradeRequest(this.c2x_1)) {
              this.vg_1 = 5;
              suspendResult = executeWebSocketRequest(this.b2x_1, this.c2x_1, this.d2x_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.vg_1 = 2;
              continue $sm;
            }

            break;
          case 2:
            var tmp_0 = this;
            tmp_0.e2x_1 = GMTDate$default(null, 1, null);
            this.vg_1 = 3;
            suspendResult = toRaw(this.c2x_1, this.d2x_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.f2x_1 = suspendResult;
            this.vg_1 = 4;
            suspendResult = commonFetch(this.c2x_1.j2c_1.toString(), this.f2x_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            var rawResponse = suspendResult;
            var status = new HttpStatusCode(numberToInt(rawResponse.status), rawResponse.statusText);
            var headers = mapToKtor(rawResponse.headers);
            var version = Companion_getInstance_5().r1z_1;
            var body = readBody(CoroutineScope_0(this.d2x_1), rawResponse);
            return new HttpResponseData(status, this.e2x_1, headers, version, body, this.d2x_1);
          case 5:
            return suspendResult;
          case 6:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 6) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeCOROUTINE$14.$metadata$ = classMeta('$executeCOROUTINE$14', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $executeWebSocketRequestCOROUTINE$15(_this__u8e3s4, request, callContext, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.n2w_1 = _this__u8e3s4;
    this.o2w_1 = request;
    this.p2w_1 = callContext;
  }
  $executeWebSocketRequestCOROUTINE$15.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            var tmp_0 = this;
            tmp_0.q2w_1 = GMTDate$default(null, 1, null);
            this.r2w_1 = this.o2w_1.j2c_1.toString();
            this.s2w_1 = createWebSocket(this.n2w_1, this.r2w_1);
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = awaitConnection(this.s2w_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            ;
            this.wg_1 = 4;
            this.vg_1 = 3;
            continue $sm;
          case 2:
            this.wg_1 = 4;
            var tmp_1 = this.yg_1;
            if (tmp_1 instanceof Error) {
              var cause = this.yg_1;
              cancel_3(this.p2w_1, new CancellationException('Failed to connect to ' + this.r2w_1, cause));
              throw cause;
            } else {
              throw this.yg_1;
            }

            break;
          case 3:
            this.wg_1 = 4;
            var session = new JsWebSocketSession(this.p2w_1, this.s2w_1);
            return new HttpResponseData(Companion_getInstance_1().b20_1, this.q2w_1, Companion_getInstance_6().a1z_1, Companion_getInstance_5().r1z_1, session, this.p2w_1);
          case 4:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $executeWebSocketRequestCOROUTINE$15.$metadata$ = classMeta('$executeWebSocketRequestCOROUTINE$15', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function JsClientEngine(config) {
    HttpClientEngineBase.call(this, 'ktor-js');
    this.j2x_1 = config;
    this.k2x_1 = Dispatchers_getInstance().yt_1;
    this.l2x_1 = setOf_0([Feature_getInstance_3(), WebSocketCapability_getInstance()]);
    {
      var tmp0_check = this.j2x_1.c2e_1 == null;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Proxy unsupported in Js engine.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  JsClientEngine.prototype.t27 = function () {
    return this.j2x_1;
  };
  JsClientEngine.prototype.w2d = function () {
    return this.k2x_1;
  };
  JsClientEngine.prototype.q2c = function () {
    return this.l2x_1;
  };
  JsClientEngine.prototype.u2d = function (data, $cont) {
    var tmp = new $executeCOROUTINE$14(this, data, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  JsClientEngine.$metadata$ = classMeta('JsClientEngine', undefined, undefined, undefined, undefined, HttpClientEngineBase.prototype);
  function mapToKtor(_this__u8e3s4) {
    return buildHeaders(mapToKtor$lambda(_this__u8e3s4));
  }
  function awaitConnection(_this__u8e3s4, $cont) {
    var tmp$ret$1;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = new CancellableContinuationImpl(intercepted(tmp0__anonymous__q1qw7t), get_MODE_CANCELLABLE());
      cancellable.rn();
      var tmp$ret$0;
      $l$block: {
        if (cancellable.ul()) {
          tmp$ret$0 = Unit_getInstance();
          break $l$block;
        }
        var eventListener = awaitConnection$lambda(cancellable, _this__u8e3s4);
        _this__u8e3s4.addEventListener('open', eventListener);
        _this__u8e3s4.addEventListener('error', eventListener);
        cancellable.am(awaitConnection$lambda_0(_this__u8e3s4, eventListener));
      }
      tmp$ret$1 = cancellable.ao();
    }
    return tmp$ret$1;
  }
  function JsError(origin) {
    extendThrowable(this, 'Error from javascript[' + origin + '].', void 1);
    this.m2x_1 = origin;
    captureStack(this, JsError);
  }
  JsError.$metadata$ = classMeta('JsError', undefined, undefined, undefined, undefined, Error.prototype);
  function mapToKtor$lambda$lambda($this_buildHeaders) {
    return function (value, key) {
      $this_buildHeaders.v1l(key, value);
      return Unit_getInstance();
    };
  }
  function mapToKtor$lambda($this_mapToKtor) {
    return function ($this$buildHeaders) {
      var tmp$ret$0;
      {
        tmp$ret$0 = $this_mapToKtor;
      }
      tmp$ret$0.forEach(mapToKtor$lambda$lambda($this$buildHeaders));
      return Unit_getInstance();
    };
  }
  function awaitConnection$lambda($cancellable, $this_awaitConnection) {
    return function (event) {
      var tmp0_subject = event.type;
      var tmp;
      if (tmp0_subject === 'open') {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_success = Companion_getInstance_7();
            tmp$ret$0 = _Result___init__impl__xyqfz8($this_awaitConnection);
          }
          tmp$ret$1 = $cancellable.r3(tmp$ret$0);
        }
        tmp = tmp$ret$1;
      } else if (tmp0_subject === 'error') {
        var tmp$ret$3;
        {
          var tmp0_resumeWithException = new WebSocketException(JSON.stringify(event));
          var tmp$ret$2;
          {
            var tmp0_failure = Companion_getInstance_7();
            tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
          }
          tmp$ret$3 = $cancellable.r3(tmp$ret$2);
        }
        tmp = tmp$ret$3;
      }
      return Unit_getInstance();
    };
  }
  function awaitConnection$lambda_0($this_awaitConnection, $eventListener) {
    return function (it) {
      $this_awaitConnection.removeEventListener('open', $eventListener);
      $this_awaitConnection.removeEventListener('error', $eventListener);
      var tmp;
      if (!(it == null)) {
        tmp = $this_awaitConnection.close();
      }
      return Unit_getInstance();
    };
  }
  function toRaw(_this__u8e3s4, callContext, $cont) {
    var tmp = new $toRawCOROUTINE$16(_this__u8e3s4, callContext, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function buildObject(block) {
    var tmp$ret$0;
    {
      var tmp = {};
      var tmp0_apply = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function toRaw$lambda($jsHeaders) {
    return function (key, value) {
      $jsHeaders[key] = value;
      return Unit_getInstance();
    };
  }
  function toRaw$slambda($content, resultContinuation) {
    this.i2y_1 = $content;
    CoroutineImpl.call(this, resultContinuation);
  }
  toRaw$slambda.prototype.v2g = function ($this$writer, $cont) {
    var tmp = this.w2g($this$writer, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  toRaw$slambda.prototype.gh = function (p1, $cont) {
    return this.v2g((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  toRaw$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.i2y_1.f24(this.j2y_1.cv(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  toRaw$slambda.prototype.w2g = function ($this$writer, completion) {
    var i = new toRaw$slambda(this.i2y_1, completion);
    i.j2y_1 = $this$writer;
    return i;
  };
  toRaw$slambda.$metadata$ = classMeta('toRaw$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function toRaw$slambda_0($content, resultContinuation) {
    var i = new toRaw$slambda($content, resultContinuation);
    var l = function ($this$writer, $cont) {
      return i.v2g($this$writer, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function toRaw$lambda_0($this_toRaw, $jsHeaders, $bodyBytes) {
    return function ($this$buildObject) {
      $this$buildObject.method = $this_toRaw.k2c_1.p1z_1;
      $this$buildObject.headers = $jsHeaders;
      var tmp$ret$2;
      {
        var tmp0__get_FOLLOW__lsxog0 = null;
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'follow';
          }
          var tmp0_unsafeCast = tmp$ret$0;
          tmp$ret$1 = tmp0_unsafeCast;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      $this$buildObject.redirect = tmp$ret$2;
      var tmp0_safe_receiver = $bodyBytes;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$3;
        {
          {
          }
          tmp$ret$3 = $this$buildObject.body = new Uint8Array(toTypedArray(tmp0_safe_receiver));
        }
      }
      return Unit_getInstance();
    };
  }
  function $toRawCOROUTINE$16(_this__u8e3s4, callContext, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.v2x_1 = _this__u8e3s4;
    this.w2x_1 = callContext;
  }
  $toRawCOROUTINE$16.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            this.x2x_1 = {};
            mergeHeaders(this.v2x_1.l2c_1, this.v2x_1.m2c_1, toRaw$lambda(this.x2x_1));
            this.y2x_1 = this.v2x_1.m2c_1;
            var tmp_0 = this.y2x_1;
            if (tmp_0 instanceof ByteArrayContent) {
              this.z2x_1 = this.y2x_1.h24();
              this.vg_1 = 3;
              continue $sm;
            } else {
              var tmp_1 = this.y2x_1;
              if (tmp_1 instanceof ReadChannelContent) {
                this.vg_1 = 2;
                suspendResult = readRemaining(this.y2x_1.d24(), this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                var tmp_2 = this.y2x_1;
                if (tmp_2 instanceof WriteChannelContent) {
                  this.vg_1 = 1;
                  var tmp_3 = GlobalScope_getInstance();
                  suspendResult = readRemaining(writer$default(tmp_3, this.w2x_1, false, toRaw$slambda_0(this.y2x_1, null), 2, null).cv(), this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  this.z2x_1 = null;
                  this.vg_1 = 3;
                  continue $sm;
                }
              }
            }

            break;
          case 1:
            var ARGUMENT = suspendResult;
            var tmp_4 = this;
            tmp_4.z2x_1 = readBytes$default(ARGUMENT, 0, 1, null);
            this.vg_1 = 3;
            continue $sm;
          case 2:
            var ARGUMENT_0 = suspendResult;
            var tmp_5 = this;
            tmp_5.z2x_1 = readBytes$default(ARGUMENT_0, 0, 1, null);
            this.vg_1 = 3;
            continue $sm;
          case 3:
            var bodyBytes = this.z2x_1;
            return buildObject(toRaw$lambda_0(this.v2x_1, this.x2x_1, bodyBytes));
          case 4:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $toRawCOROUTINE$16.$metadata$ = classMeta('$toRawCOROUTINE$16', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function readChunk(_this__u8e3s4, $cont) {
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = new CancellableContinuationImpl(intercepted(tmp0__anonymous__q1qw7t), get_MODE_CANCELLABLE());
      cancellable.rn();
      {
        var tmp = _this__u8e3s4.read();
        var tmp_0 = tmp.then(readChunk$lambda(cancellable));
        tmp_0.catch(readChunk$lambda_0(cancellable));
      }
      tmp$ret$0 = cancellable.ao();
    }
    return tmp$ret$0;
  }
  function asByteArray(_this__u8e3s4) {
    var tmp$ret$0;
    {
      var tmp0_asDynamic = new Int8Array(_this__u8e3s4.buffer, _this__u8e3s4.byteOffset, _this__u8e3s4.length);
      tmp$ret$0 = tmp0_asDynamic;
    }
    return tmp$ret$0;
  }
  function readChunk$lambda($cancellable) {
    return function (it) {
      var chunk = it.value;
      var result = (it.done ? true : chunk == null) ? null : chunk;
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_7();
        tmp$ret$0 = _Result___init__impl__xyqfz8(result);
      }
      $cancellable.r3(tmp$ret$0);
      return Unit_getInstance();
    };
  }
  function readChunk$lambda_0($cancellable) {
    return function (cause) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance_7();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(cause));
        }
        tmp$ret$1 = $cancellable.r3(tmp$ret$0);
      }
      return Unit_getInstance();
    };
  }
  function readBodyBrowser(_this__u8e3s4, response) {
    var tmp = response.body;
    var tmp0_elvis_lhs = (!(tmp == null) ? isObject(tmp) : false) ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        tmp$ret$0 = response;
      }
      var tmp0_error = 'Fail to obtain native stream: ' + tmp$ret$0;
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var stream = tmp_0;
    return channelFromStream(_this__u8e3s4, stream);
  }
  function channelFromStream(_this__u8e3s4, stream) {
    return writer$default(_this__u8e3s4, null, false, channelFromStream$slambda_0(stream, null), 3, null).cv();
  }
  function channelFromStream$slambda($stream, resultContinuation) {
    this.s2y_1 = $stream;
    CoroutineImpl.call(this, resultContinuation);
  }
  channelFromStream$slambda.prototype.v2g = function ($this$writer, $cont) {
    var tmp = this.w2g($this$writer, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  channelFromStream$slambda.prototype.gh = function (p1, $cont) {
    return this.v2g((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  channelFromStream$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 6;
            this.u2y_1 = this.s2y_1.getReader();
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (false) {}

            this.wg_1 = 5;
            this.vg_1 = 2;
            suspendResult = readChunk(this.u2y_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.v2y_1 = suspendResult;
            if (this.v2y_1 == null) {
              this.wg_1 = 6;
              this.vg_1 = 8;
              var tmp_0 = this;
              continue $sm;
            } else {
              this.w2y_1 = this.v2y_1;
              this.vg_1 = 3;
              continue $sm;
            }

            break;
          case 3:
            this.x2y_1 = this.w2y_1;
            this.vg_1 = 4;
            suspendResult = writeFully(this.t2y_1.cv(), asByteArray(this.x2y_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.wg_1 = 6;
            this.vg_1 = 7;
            continue $sm;
          case 5:
            this.wg_1 = 6;
            var tmp_1 = this.yg_1;
            if (tmp_1 instanceof Error) {
              var cause = this.yg_1;
              this.u2y_1.cancel(cause);
              throw cause;
            } else {
              throw this.yg_1;
            }

            break;
          case 6:
            throw this.yg_1;
          case 7:
            this.wg_1 = 6;
            this.vg_1 = 1;
            continue $sm;
          case 8:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 6) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  channelFromStream$slambda.prototype.w2g = function ($this$writer, completion) {
    var i = new channelFromStream$slambda(this.s2y_1, completion);
    i.t2y_1 = $this$writer;
    return i;
  };
  channelFromStream$slambda.$metadata$ = classMeta('channelFromStream$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function channelFromStream$slambda_0($stream, resultContinuation) {
    var i = new channelFromStream$slambda($stream, resultContinuation);
    var l = function ($this$writer, $cont) {
      return i.v2g($this$writer, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function commonFetch(input, init, $cont) {
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = new CancellableContinuationImpl(intercepted(tmp0__anonymous__q1qw7t), get_MODE_CANCELLABLE());
      cancellable.rn();
      {
        var controller = AbortController_0();
        init.signal = controller.signal;
        cancellable.am(commonFetch$lambda(controller));
        var tmp;
        if (PlatformUtils_getInstance().d1m_1) {
          tmp = fetch(input, init);
        } else {
          tmp = jsRequireNodeFetch()(input, init);
        }
        var promise = tmp;
        var tmp_0 = commonFetch$lambda_0(cancellable);
        promise.then(tmp_0, commonFetch$lambda_1(cancellable));
      }
      tmp$ret$0 = cancellable.ao();
    }
    return tmp$ret$0;
  }
  function readBody(_this__u8e3s4, response) {
    var tmp;
    if (PlatformUtils_getInstance().d1m_1) {
      tmp = readBodyBrowser(_this__u8e3s4, response);
    } else {
      tmp = readBodyNode(_this__u8e3s4, response);
    }
    return tmp;
  }
  function AbortController_0() {
    var tmp;
    if (PlatformUtils_getInstance().d1m_1) {
      tmp = new AbortController();
    } else {
      var controller = __nccwpck_require__(27);
      tmp = new controller();
    }
    return tmp;
  }
  function jsRequireNodeFetch() {
    var tmp;
    try {
      tmp = __nccwpck_require__(197);
    } catch ($p) {
      var tmp_0;
      {
        throw Error_init_$Create$("Error loading module 'node-fetch': " + $p);
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function commonFetch$lambda($controller) {
    return function (it) {
      $controller.abort();
      return Unit_getInstance();
    };
  }
  function commonFetch$lambda_0($cancellable) {
    return function (it) {
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_7();
        tmp$ret$0 = _Result___init__impl__xyqfz8(it);
      }
      $cancellable.r3(tmp$ret$0);
      return Unit_getInstance();
    };
  }
  function commonFetch$lambda_1($cancellable) {
    return function (it) {
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance_7();
        var tmp1_failure = Error_init_$Create$_0('Fail to fetch', it);
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
      }
      $cancellable.r3(tmp$ret$0);
      return Unit_getInstance();
    };
  }
  function readBodyNode(_this__u8e3s4, response) {
    return writer$default(_this__u8e3s4, null, false, readBodyNode$slambda_0(response, null), 3, null).cv();
  }
  function readBodyNode$slambda$lambda($responseData, $body) {
    return function (chunk) {
      var result = $responseData.ww(asByteArray(new Uint8Array(chunk)));
      return $body.pause();
    };
  }
  function readBodyNode$slambda$lambda_0($responseData, $this_writer) {
    return function (error) {
      var cause = new JsError(error);
      $responseData.lw(cause);
      return $this_writer.cv().lw(cause);
    };
  }
  function readBodyNode$slambda$lambda_1($responseData) {
    return function () {
      return $responseData.yw(null, 1, null);
    };
  }
  function readBodyNode$slambda($response, resultContinuation) {
    this.g2z_1 = $response;
    CoroutineImpl.call(this, resultContinuation);
  }
  readBodyNode$slambda.prototype.v2g = function ($this$writer, $cont) {
    var tmp = this.w2g($this$writer, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  readBodyNode$slambda.prototype.gh = function (p1, $cont) {
    return this.v2g((!(p1 == null) ? isInterface(p1, WriterScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  readBodyNode$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 6;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this.g2z_1.body;
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              throw IllegalStateException_init_$Create$('Fail to get body');
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0.i2z_1 = tmp_1;
            var tmp_2 = this;
            tmp_2.j2z_1 = Channel$default(1, null, null, 6, null);
            this.i2z_1.on('data', readBodyNode$slambda$lambda(this.j2z_1, this.i2z_1));
            this.i2z_1.on('error', readBodyNode$slambda$lambda_0(this.j2z_1, this.h2z_1));
            this.i2z_1.on('end', readBodyNode$slambda$lambda_1(this.j2z_1));
            this.wg_1 = 5;
            this.k2z_1 = this.j2z_1.d();
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.vg_1 = 2;
            suspendResult = this.k2z_1.ev(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            if (!suspendResult) {
              this.vg_1 = 4;
              continue $sm;
            }

            this.l2z_1 = this.k2z_1.f();
            this.vg_1 = 3;
            suspendResult = writeFully(this.h2z_1.cv(), this.l2z_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.i2z_1.resume();
            this.vg_1 = 1;
            continue $sm;
          case 4:
            this.wg_1 = 6;
            this.vg_1 = 7;
            continue $sm;
          case 5:
            this.wg_1 = 6;
            var tmp_3 = this.yg_1;
            if (tmp_3 instanceof Error) {
              var cause = this.yg_1;
              this.i2z_1.destroy(cause);
              throw cause;
            } else {
              throw this.yg_1;
            }

            break;
          case 6:
            throw this.yg_1;
          case 7:
            this.wg_1 = 6;
            ;
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 6) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  readBodyNode$slambda.prototype.w2g = function ($this$writer, completion) {
    var i = new readBodyNode$slambda(this.g2z_1, completion);
    i.h2z_1 = $this$writer;
    return i;
  };
  readBodyNode$slambda.$metadata$ = classMeta('readBodyNode$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function readBodyNode$slambda_0($response, resultContinuation) {
    var i = new readBodyNode$slambda($response, resultContinuation);
    var l = function ($this$writer, $cont) {
      return i.v2g($this$writer, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function platformDefaultTransformers(_this__u8e3s4) {
  }
  function isReservedStatusCode(_this__u8e3s4, $this) {
    var tmp$ret$1;
    {
      var tmp0_let = Companion_getInstance_8().s24(_this__u8e3s4);
      {
      }
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_let == null ? true : equals(tmp0_let, Codes_CLOSED_ABNORMALLY_getInstance());
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  }
  function JsWebSocketSession$lambda$slambda($event, this$0, resultContinuation) {
    this.u2z_1 = $event;
    this.v2z_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsWebSocketSession$lambda$slambda.prototype.h19 = function ($this$launch, $cont) {
    var tmp = this.i19($this$launch, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  JsWebSocketSession$lambda$slambda.prototype.gh = function (p1, $cont) {
    return this.h19((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  JsWebSocketSession$lambda$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        if (tmp === 0) {
          this.wg_1 = 1;
          var data = this.u2z_1.data;
          var tmp0_subject = data;
          var tmp_0;
          if (tmp0_subject instanceof ArrayBuffer) {
            var tmp0_unsafeCast = new Int8Array(data);
            tmp_0 = Binary_init_$Create$(false, tmp0_unsafeCast);
          } else {
            if (!(tmp0_subject == null) ? typeof tmp0_subject === 'string' : false) {
              tmp_0 = Text_init_$Create$(data);
            } else {
              var error = IllegalStateException_init_$Create$('Unknown frame type: ' + this.u2z_1.type);
              this.v2z_1.z2z_1.oo(error);
              throw error;
            }
          }
          var frame = tmp_0;
          this.v2z_1.a30_1.ww(frame);
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.yg_1;
        }
      } catch ($p) {
        throw $p;
      }
     while (true);
  };
  JsWebSocketSession$lambda$slambda.prototype.i19 = function ($this$launch, completion) {
    var i = new JsWebSocketSession$lambda$slambda(this.u2z_1, this.v2z_1, completion);
    i.w2z_1 = $this$launch;
    return i;
  };
  JsWebSocketSession$lambda$slambda.$metadata$ = classMeta('JsWebSocketSession$lambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function JsWebSocketSession$lambda$slambda_0($event, this$0, resultContinuation) {
    var i = new JsWebSocketSession$lambda$slambda($event, this$0, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.h19($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function JsWebSocketSession$lambda(this$0) {
    return function (it) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = it;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var event = tmp$ret$1;
      launch$default(this$0, null, null, JsWebSocketSession$lambda$slambda_0(event, this$0, null), 3, null);
      return Unit_getInstance();
    };
  }
  function JsWebSocketSession$lambda_0(this$0) {
    return function (it) {
      var cause = new WebSocketException('' + it);
      this$0.z2z_1.oo(cause);
      this$0.a30_1.lw(cause);
      this$0.b30_1.bk(null, 1, null);
      return Unit_getInstance();
    };
  }
  function JsWebSocketSession$lambda$slambda_1($event, this$0, resultContinuation) {
    this.n30_1 = $event;
    this.o30_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsWebSocketSession$lambda$slambda_1.prototype.h19 = function ($this$launch, $cont) {
    var tmp = this.i19($this$launch, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  JsWebSocketSession$lambda$slambda_1.prototype.gh = function (p1, $cont) {
    return this.h19((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  JsWebSocketSession$lambda$slambda_1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp_0 = this;
            var tmp_1 = this.n30_1.code;
            var tmp_2 = (!(tmp_1 == null) ? typeof tmp_1 === 'number' : false) ? tmp_1 : THROW_CCE();
            var tmp_3 = this.n30_1.reason;
            tmp_0.q30_1 = new CloseReason(tmp_2, (!(tmp_3 == null) ? typeof tmp_3 === 'string' : false) ? tmp_3 : THROW_CCE());
            this.o30_1.z2z_1.no(this.q30_1);
            ;
            this.vg_1 = 1;
            suspendResult = this.o30_1.a30_1.vw(Close_init_$Create$(this.q30_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.o30_1.a30_1.yw(null, 1, null);
            ;
            this.o30_1.b30_1.bk(null, 1, null);
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  JsWebSocketSession$lambda$slambda_1.prototype.i19 = function ($this$launch, completion) {
    var i = new JsWebSocketSession$lambda$slambda_1(this.n30_1, this.o30_1, completion);
    i.p30_1 = $this$launch;
    return i;
  };
  JsWebSocketSession$lambda$slambda_1.$metadata$ = classMeta('JsWebSocketSession$lambda$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function JsWebSocketSession$lambda$slambda_2($event, this$0, resultContinuation) {
    var i = new JsWebSocketSession$lambda$slambda_1($event, this$0, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.h19($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function JsWebSocketSession$lambda_1(this$0) {
    return function (event) {
      launch$default(this$0, null, null, JsWebSocketSession$lambda$slambda_2(event, this$0, null), 3, null);
      return Unit_getInstance();
    };
  }
  function JsWebSocketSession$slambda(this$0, resultContinuation) {
    this.z30_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsWebSocketSession$slambda.prototype.h19 = function ($this$launch, $cont) {
    var tmp = this.i19($this$launch, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  JsWebSocketSession$slambda.prototype.gh = function (p1, $cont) {
    return this.h19((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  JsWebSocketSession$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 10;
            var tmp_0 = this;
            tmp_0.b31_1 = this.z30_1.b30_1;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.d31_1 = null;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.vg_1 = 3;
            continue $sm;
          case 3:
            this.wg_1 = 9;
            this.wg_1 = 8;
            this.f31_1 = this.b31_1.d();
            this.vg_1 = 4;
            continue $sm;
          case 4:
            this.vg_1 = 5;
            suspendResult = this.f31_1.ev(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            if (!suspendResult) {
              this.vg_1 = 6;
              continue $sm;
            }

            var e = this.f31_1.f();
            var tmp0_subject = e.g25_1;
            var tmp0 = tmp0_subject.a5();
            switch (tmp0) {
              case 0:
                var text = e.h25_1;
                this.z30_1.y2z_1.send(String$default(text, 0, 0, null, 14, null));
                break;
              case 1:
                var tmp_1 = e.h25_1;
                var source = tmp_1 instanceof Int8Array ? tmp_1 : THROW_CCE();
                var frameData = source.buffer.slice(source.byteOffset, source.byteOffset + source.byteLength | 0);
                this.z30_1.y2z_1.send(frameData);
                break;
              case 2:
                var tmp$ret$0;
                l$ret$1: do {
                  var builder = BytePacketBuilder(0);
                  try {
                    writeFully$default(builder, e.h25_1, 0, 0, 6, null);
                    tmp$ret$0 = builder.o16();
                    break l$ret$1;
                  } catch ($p) {
                    if ($p instanceof Error) {
                      builder.q12();
                      throw $p;
                    } else {
                      throw $p;
                    }
                  }
                }
                 while (false);
                var data = tmp$ret$0;
                var code = readShort(data);
                var reason = data.l1b(0, 0, 3, null);
                this.z30_1.z2z_1.no(new CloseReason(code, reason));
                ;
                if (isReservedStatusCode(code, this.z30_1)) {
                  this.z30_1.y2z_1.close();
                } else {
                  this.z30_1.y2z_1.close(code, reason);
                }

                break;
              case 3:
              case 4:
                break;
            }

            this.vg_1 = 4;
            continue $sm;
          case 6:
            this.e31_1 = Unit_getInstance();
            this.wg_1 = 10;
            this.vg_1 = 7;
            var tmp_2 = this;
            continue $sm;
          case 7:
            var tmp_3 = this;
            tmp_3.c31_1 = cancelConsumed(this.b31_1, this.d31_1);
            this.vg_1 = 12;
            continue $sm;
          case 8:
            this.wg_1 = 9;
            var tmp_4 = this.yg_1;
            if (tmp_4 instanceof Error) {
              var e_0 = this.yg_1;
              var tmp_5 = this;
              this.d31_1 = e_0;
              throw e_0;
            } else {
              throw this.yg_1;
            }

            break;
          case 9:
            this.wg_1 = 10;
            var t = this.yg_1;
            cancelConsumed(this.b31_1, this.d31_1);
            throw t;
          case 10:
            throw this.yg_1;
          case 11:
            cancelConsumed(this.b31_1, this.d31_1);
            if (false) {}

            this.vg_1 = 12;
            continue $sm;
          case 12:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 10) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  JsWebSocketSession$slambda.prototype.i19 = function ($this$launch, completion) {
    var i = new JsWebSocketSession$slambda(this.z30_1, completion);
    i.a31_1 = $this$launch;
    return i;
  };
  JsWebSocketSession$slambda.$metadata$ = classMeta('JsWebSocketSession$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function JsWebSocketSession$slambda_0(this$0, resultContinuation) {
    var i = new JsWebSocketSession$slambda(this$0, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.h19($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function JsWebSocketSession$lambda_2(this$0) {
    return function (cause) {
      var tmp;
      if (cause == null) {
        tmp = this$0.y2z_1.close();
      } else {
        tmp = this$0.y2z_1.close(Codes_INTERNAL_ERROR_getInstance().p24_1, 'Client failed');
      }
      return Unit_getInstance();
    };
  }
  function JsWebSocketSession(coroutineContext, websocket) {
    this.x2z_1 = coroutineContext;
    this.y2z_1 = websocket;
    var tmp = this;
    tmp.z2z_1 = CompletableDeferred$default(null, 1, null);
    var tmp_0 = this;
    Factory_getInstance();
    tmp_0.a30_1 = Channel$default(2147483647, null, null, 6, null);
    var tmp_1 = this;
    Factory_getInstance();
    tmp_1.b30_1 = Channel$default(2147483647, null, null, 6, null);
    this.c30_1 = this.a30_1;
    this.d30_1 = this.b30_1;
    this.e30_1 = this.z2z_1;
    var tmp$ret$2;
    {
      var tmp0__get_ARRAYBUFFER__ua4cvm = null;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'arraybuffer';
        }
        var tmp0_unsafeCast = tmp$ret$0;
        tmp$ret$1 = tmp0_unsafeCast;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    this.y2z_1.binaryType = tmp$ret$2;
    this.y2z_1.addEventListener('message', JsWebSocketSession$lambda(this));
    this.y2z_1.addEventListener('error', JsWebSocketSession$lambda_0(this));
    this.y2z_1.addEventListener('close', JsWebSocketSession$lambda_1(this));
    launch$default(this, null, null, JsWebSocketSession$slambda_0(this, null), 3, null);
    var tmp0_safe_receiver = this.x2z_1.w3(Key_getInstance());
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.vj(JsWebSocketSession$lambda_2(this));
    }
  }
  JsWebSocketSession.prototype.si = function () {
    return this.x2z_1;
  };
  JsWebSocketSession.$metadata$ = classMeta('JsWebSocketSession', [DefaultWebSocketSession]);
  function checkCoroutinesVersion() {
  }
  function unwrapCancellationException(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  //region block: post-declaration
  HttpClientEngineBase.prototype.q2c = get_supportedCapabilities;
  HttpClientEngineBase.prototype.u27 = install;
  KtorCallContextElement.prototype.w3 = get;
  KtorCallContextElement.prototype.c4 = fold;
  KtorCallContextElement.prototype.b4 = minusKey;
  KtorCallContextElement.prototype.d4 = plus;
  JsClientEngine.prototype.u27 = install;
  //endregion
  //region block: init
  KTOR_DEFAULT_USER_AGENT = 'Ktor client';
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = url$default;
  _.$_$.b = TypeInfo_init_$Create$;
  _.$_$.c = JsType_getInstance;
  _.$_$.d = Js_getInstance;
  _.$_$.e = Phases_getInstance;
  _.$_$.f = Phases_getInstance_1;
  _.$_$.g = EmptyContent_getInstance;
  _.$_$.h = TypeInfo;
  _.$_$.i = HttpClientFeature;
  _.$_$.j = HttpRequestBuilder;
  _.$_$.k = accept;
  _.$_$.l = header;
  _.$_$.m = HttpResponseContainer;
  _.$_$.n = HttpResponse;
  _.$_$.o = HttpStatement;
  _.$_$.p = complete;
  _.$_$.q = EmptyContent;
  _.$_$.r = HttpClient_0;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(925), __nccwpck_require__(391), __nccwpck_require__(219), __nccwpck_require__(230), __nccwpck_require__(329), __nccwpck_require__(363), __nccwpck_require__(838)));

//# sourceMappingURL=kotlin_io_ktor_ktor_client_core.js.map

/***/ }),

/***/ 636:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_io_ktor_ktor_http, kotlin_kotlin, kotlin_io_ktor_ktor_utils, kotlin_io_ktor_ktor_client_core, kotlin_io_ktor_ktor_io) {
  'use strict';
  //region block: imports
  var Application_getInstance = kotlin_io_ktor_ktor_http.$_$.d;
  var endsWith$default = kotlin_kotlin.$_$.j;
  var startsWith$default = kotlin_kotlin.$_$.q;
  var ContentTypeMatcher = kotlin_io_ktor_ktor_http.$_$.r;
  var classMeta = kotlin_kotlin.$_$.y7;
  var CoroutineImpl = kotlin_kotlin.$_$.j7;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var PipelineContext = kotlin_io_ktor_ktor_utils.$_$.g;
  var isInterface = kotlin_kotlin.$_$.p8;
  var isObject = kotlin_kotlin.$_$.r8;
  var accept = kotlin_io_ktor_ktor_client_core.$_$.k;
  var contentType = kotlin_io_ktor_ktor_http.$_$.b1;
  var HttpHeaders_getInstance = kotlin_io_ktor_ktor_http.$_$.h;
  var EmptyContent_getInstance = kotlin_io_ktor_ktor_client_core.$_$.g;
  var EmptyContent = kotlin_io_ktor_ktor_client_core.$_$.q;
  var equals = kotlin_kotlin.$_$.a8;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.t6;
  var HttpResponseContainer = kotlin_io_ktor_ktor_client_core.$_$.m;
  var ByteReadChannel = kotlin_io_ktor_ktor_io.$_$.e1;
  var contentType_0 = kotlin_io_ktor_ktor_http.$_$.c1;
  var readRemaining = kotlin_io_ktor_ktor_io.$_$.b;
  var mutableListOf = kotlin_kotlin.$_$.x5;
  var AttributeKey = kotlin_io_ktor_ktor_utils.$_$.j;
  var toList = kotlin_kotlin.$_$.l6;
  var Phases_getInstance = kotlin_io_ktor_ktor_client_core.$_$.e;
  var Phases_getInstance_0 = kotlin_io_ktor_ktor_client_core.$_$.f;
  var HttpClientFeature = kotlin_io_ktor_ktor_client_core.$_$.i;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var Collection = kotlin_kotlin.$_$.v3;
  var SuspendFunction2 = kotlin_kotlin.$_$.m7;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var first = kotlin_kotlin.$_$.m5;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.t;
  //endregion
  //region block: pre-declaration
  JsonFeature$Feature$install$slambda.prototype = Object.create(CoroutineImpl.prototype);
  JsonFeature$Feature$install$slambda.prototype.constructor = JsonFeature$Feature$install$slambda;
  JsonFeature$Feature$install$slambda_1.prototype = Object.create(CoroutineImpl.prototype);
  JsonFeature$Feature$install$slambda_1.prototype.constructor = JsonFeature$Feature$install$slambda_1;
  //endregion
  function JsonContentTypeMatcher() {
  }
  JsonContentTypeMatcher.prototype.c1t = function (contentType) {
    if (Application_getInstance().r1t_1.x1u(contentType)) {
      return true;
    }
    var value = contentType.w1u().toString();
    var tmp;
    if (startsWith$default(value, 'application/', false, 2, null)) {
      tmp = endsWith$default(value, '+json', false, 2, null);
    } else {
      tmp = false;
    }
    return tmp;
  };
  JsonContentTypeMatcher.$metadata$ = classMeta('JsonContentTypeMatcher', [ContentTypeMatcher]);
  function JsonFeature$Feature$install$slambda($feature, resultContinuation) {
    this.o31_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsonFeature$Feature$install$slambda.prototype.m26 = function ($this$intercept, payload, $cont) {
    var tmp = this.n26($this$intercept, payload, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  JsonFeature$Feature$install$slambda.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.m26(tmp, isObject(p2) ? p2 : THROW_CCE(), $cont);
  };
  JsonFeature$Feature$install$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp_0 = this;
            tmp_0.r31_1 = this.o31_1.v31_1;
            var tmp0_iterator = this.r31_1.d();
            while (tmp0_iterator.e()) {
              var element = tmp0_iterator.f();
              accept(this.p31_1.q3(), element);
            }

            var tmp_1 = this;
            var tmp0_elvis_lhs = contentType(this.p31_1.q3());
            var tmp_2;
            if (tmp0_elvis_lhs == null) {
              return Unit_getInstance();
            } else {
              tmp_2 = tmp0_elvis_lhs;
            }

            tmp_1.s31_1 = tmp_2;
            if (!this.o31_1.x31(this.s31_1))
              return Unit_getInstance();
            this.p31_1.q3().h27_1.y1l(HttpHeaders_getInstance().v1v_1);
            var tmp_3 = this;
            var tmp1_subject = this.q31_1;
            var tmp_4;
            if (equals(tmp1_subject, Unit_getInstance())) {
              tmp_4 = EmptyContent_getInstance();
            } else {
              if (tmp1_subject instanceof EmptyContent) {
                tmp_4 = EmptyContent_getInstance();
              } else {
                tmp_4 = this.o31_1.u31_1.y31(this.q31_1, this.s31_1);
              }
            }

            tmp_3.t31_1 = tmp_4;
            this.vg_1 = 1;
            suspendResult = this.p31_1.p1q(this.t31_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            ;
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  JsonFeature$Feature$install$slambda.prototype.n26 = function ($this$intercept, payload, completion) {
    var i = new JsonFeature$Feature$install$slambda(this.o31_1, completion);
    i.p31_1 = $this$intercept;
    i.q31_1 = payload;
    return i;
  };
  JsonFeature$Feature$install$slambda.$metadata$ = classMeta('JsonFeature$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function JsonFeature$Feature$install$slambda_0($feature, resultContinuation) {
    var i = new JsonFeature$Feature$install$slambda($feature, resultContinuation);
    var l = function ($this$intercept, payload, $cont) {
      return i.m26($this$intercept, payload, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function JsonFeature$Feature$install$slambda_1($feature, resultContinuation) {
    this.h32_1 = $feature;
    CoroutineImpl.call(this, resultContinuation);
  }
  JsonFeature$Feature$install$slambda_1.prototype.x2h = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont) {
    var tmp = this.y2h($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  JsonFeature$Feature$install$slambda_1.prototype.di = function (p1, p2, $cont) {
    var tmp = (!(p1 == null) ? isInterface(p1, PipelineContext) : false) ? p1 : THROW_CCE();
    return this.x2h(tmp, p2 instanceof HttpResponseContainer ? p2 : THROW_CCE(), $cont);
  };
  JsonFeature$Feature$install$slambda_1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.k32_1 = this.j32_1.h3();
            this.l32_1 = this.j32_1.i3();
            var tmp_0 = this.l32_1;
            if (!isInterface(tmp_0, ByteReadChannel))
              return Unit_getInstance();
            var tmp_1 = this;
            var tmp0_elvis_lhs = contentType_0(this.i32_1.q3().t26());
            var tmp_2;
            if (tmp0_elvis_lhs == null) {
              return Unit_getInstance();
            } else {
              tmp_2 = tmp0_elvis_lhs;
            }

            tmp_1.m32_1 = tmp_2;
            if (!this.h32_1.x31(this.m32_1))
              return Unit_getInstance();
            this.n32_1 = this.h32_1.u31_1;
            this.vg_1 = 1;
            suspendResult = readRemaining(this.l32_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.o32_1 = suspendResult;
            this.p32_1 = this.n32_1.r32(this.k32_1, this.o32_1);
            this.q32_1 = new HttpResponseContainer(this.k32_1, this.p32_1);
            this.vg_1 = 2;
            suspendResult = this.i32_1.p1q(this.q32_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            ;
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  JsonFeature$Feature$install$slambda_1.prototype.y2h = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, completion) {
    var i = new JsonFeature$Feature$install$slambda_1(this.h32_1, completion);
    i.i32_1 = $this$intercept;
    i.j32_1 = _name_for_destructuring_parameter_0__wldtmu;
    return i;
  };
  JsonFeature$Feature$install$slambda_1.$metadata$ = classMeta('JsonFeature$Feature$install$slambda', undefined, undefined, undefined, [2], CoroutineImpl.prototype);
  function JsonFeature$Feature$install$slambda_2($feature, resultContinuation) {
    var i = new JsonFeature$Feature$install$slambda_1($feature, resultContinuation);
    var l = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont) {
      return i.x2h($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $cont);
    };
    l.$arity = 2;
    return l;
  }
  function Config() {
    this.s32_1 = null;
    this.t32_1 = mutableListOf([Application_getInstance().r1t_1]);
    this.u32_1 = mutableListOf([new JsonContentTypeMatcher()]);
  }
  Config.prototype.v32 = function () {
    return this.t32_1;
  };
  Config.prototype.w32 = function () {
    return this.u32_1;
  };
  Config.$metadata$ = classMeta('Config');
  function Feature() {
    Feature_instance = this;
    this.x32_1 = new AttributeKey('Json');
  }
  Feature.prototype.s = function () {
    return this.x32_1;
  };
  Feature.prototype.y32 = function (block) {
    var tmp$ret$0;
    {
      var tmp0_apply = new Config();
      {
      }
      block(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    var config = tmp$ret$0;
    var tmp0_elvis_lhs = config.s32_1;
    var serializer = tmp0_elvis_lhs == null ? defaultSerializer() : tmp0_elvis_lhs;
    var allowedContentTypes = toList(config.v32());
    var receiveContentTypeMatchers = config.w32();
    return new JsonFeature(serializer, allowedContentTypes, receiveContentTypeMatchers);
  };
  Feature.prototype.j28 = function (block) {
    return this.y32(block);
  };
  Feature.prototype.z32 = function (feature, scope) {
    var tmp = Phases_getInstance().i2f_1;
    scope.s25_1.p1r(tmp, JsonFeature$Feature$install$slambda_0(feature, null));
    var tmp_0 = Phases_getInstance_0().n2f_1;
    scope.t25_1.p1r(tmp_0, JsonFeature$Feature$install$slambda_2(feature, null));
  };
  Feature.prototype.k28 = function (feature, scope) {
    return this.z32(feature instanceof JsonFeature ? feature : THROW_CCE(), scope);
  };
  Feature.$metadata$ = objectMeta('Feature', [HttpClientFeature]);
  var Feature_instance;
  function Feature_getInstance() {
    if (Feature_instance == null)
      new Feature();
    return Feature_instance;
  }
  function JsonFeature(serializer, acceptContentTypes, receiveContentTypeMatchers) {
    Feature_getInstance();
    this.u31_1 = serializer;
    this.v31_1 = acceptContentTypes;
    this.w31_1 = receiveContentTypeMatchers;
  }
  JsonFeature.prototype.x31 = function (contentType) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0_any = this.v31_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = contentType.x1u(element);
        }
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    var accepted = tmp$ret$0;
    var matchers = this.w31_1;
    var tmp_0;
    if (accepted) {
      tmp_0 = true;
    } else {
      var tmp$ret$2;
      $l$block_2: {
        var tmp_1;
        if (isInterface(matchers, Collection)) {
          tmp_1 = matchers.m();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp$ret$2 = false;
          break $l$block_2;
        }
        var tmp0_iterator_0 = matchers.d();
        while (tmp0_iterator_0.e()) {
          var element_0 = tmp0_iterator_0.f();
          var tmp$ret$3;
          {
            tmp$ret$3 = element_0.c1t(contentType);
          }
          if (tmp$ret$3) {
            tmp$ret$2 = true;
            break $l$block_2;
          }
        }
        tmp$ret$2 = false;
      }
      tmp_0 = tmp$ret$2;
    }
    return tmp_0;
  };
  JsonFeature.$metadata$ = classMeta('JsonFeature');
  function JsonSerializer() {
  }
  JsonSerializer.$metadata$ = interfaceMeta('JsonSerializer');
  function get_serializersStore() {
    init_properties_DefaultJs_kt_5pqbey();
    return serializersStore;
  }
  var serializersStore;
  function defaultSerializer() {
    init_properties_DefaultJs_kt_5pqbey();
    return first(get_serializersStore());
  }
  var properties_initialized_DefaultJs_kt_mit67a;
  function init_properties_DefaultJs_kt_5pqbey() {
    if (properties_initialized_DefaultJs_kt_mit67a) {
    } else {
      properties_initialized_DefaultJs_kt_mit67a = true;
      var tmp$ret$0;
      {
        tmp$ret$0 = ArrayList_init_$Create$();
      }
      serializersStore = tmp$ret$0;
    }
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Feature_getInstance;
  _.$_$.b = JsonSerializer;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(363), __nccwpck_require__(391), __nccwpck_require__(219), __nccwpck_require__(499), __nccwpck_require__(230)));

//# sourceMappingURL=kotlin_io_ktor_ktor_client_json.js.map

/***/ }),

/***/ 29:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_io_ktor_ktor_http, kotlin_io_ktor_ktor_io, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_io_ktor_ktor_client_json) {
  'use strict';
  //region block: imports
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var Json$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var TextContent_init_$Create$ = kotlin_io_ktor_ktor_http.$_$.a;
  var readText$default = kotlin_io_ktor_ktor_io.$_$.i;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var JsonSerializer = kotlin_io_ktor_ktor_client_json.$_$.b;
  var classMeta = kotlin_kotlin.$_$.y7;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var Map = kotlin_kotlin.$_$.f4;
  var isInterface = kotlin_kotlin.$_$.p8;
  var SetSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var Set = kotlin_kotlin.$_$.o4;
  var firstOrNull = kotlin_kotlin.$_$.l5;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.k3;
  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var isArray = kotlin_kotlin.$_$.h8;
  var List = kotlin_kotlin.$_$.d4;
  var Companion_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.c;
  var JsonElement = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.d;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
  var filterNotNull = kotlin_kotlin.$_$.j5;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.u4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.y;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var toString = kotlin_kotlin.$_$.c9;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var singleOrNull = kotlin_kotlin.$_$.f6;
  var Collection = kotlin_kotlin.$_$.v3;
  var get_nullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
  //endregion
  //region block: pre-declaration
  //endregion
  function KotlinxSerializer$Companion$DefaultJsonConfiguration$lambda() {
    return function ($this$Json) {
      $this$Json.r3j_1 = false;
      $this$Json.q3j_1 = false;
      $this$Json.y3j_1 = true;
      $this$Json.w3j_1 = false;
      return Unit_getInstance();
    };
  }
  function KotlinxSerializer$Companion$DefaultJson$lambda() {
    return function ($this$Json) {
      $this$Json.r3j_1 = false;
      $this$Json.q3j_1 = false;
      $this$Json.y3j_1 = true;
      $this$Json.w3j_1 = false;
      return Unit_getInstance();
    };
  }
  function Companion() {
    Companion_instance = this;
    var tmp = this;
    tmp.w3o_1 = Json$default(null, KotlinxSerializer$Companion$DefaultJsonConfiguration$lambda(), 1, null);
    var tmp_0 = this;
    tmp_0.x3o_1 = Json$default(null, KotlinxSerializer$Companion$DefaultJson$lambda(), 1, null);
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function KotlinxSerializer(json) {
    Companion_getInstance_0();
    this.y3o_1 = json;
  }
  KotlinxSerializer.prototype.y31 = function (data, contentType) {
    var tmp = this.z3o(data);
    return TextContent_init_$Create$(tmp, contentType, null, 4, null);
  };
  KotlinxSerializer.prototype.z3o = function (data) {
    return this.y3o_1.g3i(buildSerializer(data, this.y3o_1.p35()), data);
  };
  KotlinxSerializer.prototype.r32 = function (type, body) {
    var text = readText$default(body, null, 0, 3, null);
    var deserializationStrategy = this.y3o_1.p35().f33(type.k29_1);
    var tmp2_elvis_lhs = deserializationStrategy;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp0_safe_receiver = type.m29_1;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = serializer(tmp0_safe_receiver);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp_0 = tmp$ret$1;
      }
      var tmp1_elvis_lhs = tmp_0;
      tmp = tmp1_elvis_lhs == null ? serializer_0(type.k29_1) : tmp1_elvis_lhs;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    var mapper = tmp;
    return ensureNotNull(this.y3o_1.h3i(mapper, text));
  };
  KotlinxSerializer.$metadata$ = classMeta('KotlinxSerializer', [JsonSerializer]);
  function buildSerializer(value, module_0) {
    var tmp0_subject = value;
    var tmp;
    if (tmp0_subject instanceof JsonElement) {
      tmp = Companion_getInstance().d3k();
    } else {
      if (isInterface(tmp0_subject, List)) {
        tmp = ListSerializer(elementSerializer(value, module_0));
      } else {
        if (isArray(tmp0_subject)) {
          var tmp1_safe_receiver = firstOrNull(value);
          var tmp_0;
          if (tmp1_safe_receiver == null) {
            tmp_0 = null;
          } else {
            var tmp$ret$1;
            {
              {
              }
              var tmp$ret$0;
              {
                tmp$ret$0 = buildSerializer(tmp1_safe_receiver, module_0);
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp_0 = tmp$ret$1;
          }
          var tmp2_elvis_lhs = tmp_0;
          tmp = tmp2_elvis_lhs == null ? ListSerializer(serializer_1(StringCompanionObject_getInstance())) : tmp2_elvis_lhs;
        } else {
          if (isInterface(tmp0_subject, Set)) {
            tmp = SetSerializer(elementSerializer(value, module_0));
          } else {
            if (isInterface(tmp0_subject, Map)) {
              var keySerializer = elementSerializer(value.j2(), module_0);
              var valueSerializer = elementSerializer(value.k2(), module_0);
              tmp = MapSerializer(keySerializer, valueSerializer);
            } else {
              var tmp3_elvis_lhs = module_0.f33(getKClassFromExpression(value));
              tmp = tmp3_elvis_lhs == null ? serializer_0(getKClassFromExpression(value)) : tmp3_elvis_lhs;
            }
          }
        }
      }
    }
    var tmp_1 = tmp;
    return isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
  }
  function elementSerializer(_this__u8e3s4, module_0) {
    var tmp$ret$4;
    {
      var tmp$ret$2;
      {
        var tmp0_map = filterNotNull(_this__u8e3s4);
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
          var tmp0_iterator = tmp0_map.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            var tmp$ret$0;
            {
              tmp$ret$0 = buildSerializer(item, module_0);
            }
            tmp0_mapTo.a(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var tmp1_distinctBy = tmp$ret$2;
      var set = HashSet_init_$Create$();
      var list = ArrayList_init_$Create$_0();
      var tmp0_iterator_0 = tmp1_distinctBy.d();
      while (tmp0_iterator_0.e()) {
        var e = tmp0_iterator_0.f();
        var tmp$ret$3;
        {
          tmp$ret$3 = e.a33().h33();
        }
        var key = tmp$ret$3;
        if (set.a(key)) {
          list.a(e);
        }
      }
      tmp$ret$4 = list;
    }
    var serializers = tmp$ret$4;
    if (serializers.g() > 1) {
      {
        var tmp$ret$7;
        {
          var tmp$ret$6;
          {
            var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(serializers, 10));
            var tmp0_iterator_1 = serializers.d();
            while (tmp0_iterator_1.e()) {
              var item_0 = tmp0_iterator_1.f();
              var tmp$ret$5;
              {
                tmp$ret$5 = item_0.a33().h33();
              }
              tmp0_mapTo_0.a(tmp$ret$5);
            }
            tmp$ret$6 = tmp0_mapTo_0;
          }
          tmp$ret$7 = tmp$ret$6;
        }
        var tmp2_error = 'Serializing collections of different element types is not yet supported. ' + ('Selected serializers: ' + tmp$ret$7);
        throw IllegalStateException_init_$Create$(toString(tmp2_error));
      }
    }
    var tmp0_elvis_lhs = singleOrNull(serializers);
    var selected = tmp0_elvis_lhs == null ? serializer_1(StringCompanionObject_getInstance()) : tmp0_elvis_lhs;
    if (selected.a33().g33()) {
      return selected;
    }
    if (isInterface(selected, KSerializer))
      selected;
    else
      THROW_CCE();
    var tmp$ret$8;
    $l$block_0: {
      var tmp;
      if (isInterface(_this__u8e3s4, Collection)) {
        tmp = _this__u8e3s4.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$8 = false;
        break $l$block_0;
      }
      var tmp0_iterator_2 = _this__u8e3s4.d();
      while (tmp0_iterator_2.e()) {
        var element = tmp0_iterator_2.f();
        var tmp$ret$9;
        {
          tmp$ret$9 = element == null;
        }
        if (tmp$ret$9) {
          tmp$ret$8 = true;
          break $l$block_0;
        }
      }
      tmp$ret$8 = false;
    }
    if (tmp$ret$8) {
      return get_nullable(selected);
    }
    return selected;
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = KotlinxSerializer;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(713), __nccwpck_require__(363), __nccwpck_require__(230), __nccwpck_require__(755), __nccwpck_require__(636)));

//# sourceMappingURL=kotlin_io_ktor_ktor_client_serialization.js.map

/***/ }),

/***/ 363:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_io_ktor_ktor_io, kotlin_io_ktor_ktor_utils) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.g1;
  var Charsets_getInstance = kotlin_io_ktor_ktor_io.$_$.n;
  var charSequenceGet = kotlin_kotlin.$_$.v7;
  var Char = kotlin_kotlin.$_$.va;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.d2;
  var equals = kotlin_kotlin.$_$.a8;
  var isSurrogate = kotlin_kotlin.$_$.z9;
  var encode = kotlin_io_ktor_ktor_io.$_$.q;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var encode$default = kotlin_io_ktor_ktor_io.$_$.f;
  var prepareReadFirstHead = kotlin_io_ktor_ktor_io.$_$.u;
  var prepareReadNextHead = kotlin_io_ktor_ktor_io.$_$.v;
  var completeReadHead = kotlin_io_ktor_ktor_io.$_$.t;
  var StringBuilder_init_$Create$_0 = kotlin_kotlin.$_$.f1;
  var toString = kotlin_kotlin.$_$.c9;
  var Char__plus_impl_qi7pgj = kotlin_kotlin.$_$.h2;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.g2;
  var charSequenceLength = kotlin_kotlin.$_$.w7;
  var charSequenceSubSequence = kotlin_kotlin.$_$.x7;
  var toByte = kotlin_kotlin.$_$.z8;
  var String_0 = kotlin_io_ktor_ktor_io.$_$.a1;
  var Exception = kotlin_kotlin.$_$.ab;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.k1;
  var captureStack = kotlin_kotlin.$_$.t7;
  var classMeta = kotlin_kotlin.$_$.y7;
  var Char__minus_impl_a2frrh_0 = kotlin_kotlin.$_$.f2;
  var numberToChar = kotlin_kotlin.$_$.v8;
  var Char__rangeTo_impl_tkncvp = kotlin_kotlin.$_$.i2;
  var plus = kotlin_kotlin.$_$.z5;
  var plus_0 = kotlin_kotlin.$_$.a6;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.u4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var Char__toByte_impl_7s7yt0 = kotlin_kotlin.$_$.j2;
  var listOf = kotlin_kotlin.$_$.u5;
  var toSet = kotlin_kotlin.$_$.p6;
  var plus_1 = kotlin_kotlin.$_$.y5;
  var setOf = kotlin_kotlin.$_$.e6;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var emptyList = kotlin_kotlin.$_$.g5;
  var equals_0 = kotlin_kotlin.$_$.u9;
  var Collection = kotlin_kotlin.$_$.v3;
  var isInterface = kotlin_kotlin.$_$.p8;
  var isBlank = kotlin_kotlin.$_$.w9;
  var single = kotlin_kotlin.$_$.g6;
  var indexOf$default = kotlin_kotlin.$_$.m;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var isCharSequence = kotlin_kotlin.$_$.l8;
  var trim = kotlin_kotlin.$_$.ta;
  var contains$default = kotlin_kotlin.$_$.i;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var plus_2 = kotlin_kotlin.$_$.b6;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var hashCode = kotlin_kotlin.$_$.f8;
  var Companion_getInstance = kotlin_io_ktor_ktor_io.$_$.m;
  var get_name = kotlin_io_ktor_ktor_io.$_$.r;
  var last = kotlin_kotlin.$_$.ca;
  var first = kotlin_kotlin.$_$.v9;
  var get_lastIndex = kotlin_kotlin.$_$.ba;
  var StringValuesBuilder = kotlin_io_ktor_ktor_utils.$_$.n;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var StringValues = kotlin_io_ktor_ktor_utils.$_$.p;
  var StringValuesImpl = kotlin_io_ktor_ktor_utils.$_$.o;
  var emptySet = kotlin_kotlin.$_$.i5;
  var get = kotlin_io_ktor_ktor_utils.$_$.m;
  var forEach = kotlin_io_ktor_ktor_utils.$_$.l;
  var toDoubleOrNull = kotlin_kotlin.$_$.ga;
  var rangeTo = kotlin_kotlin.$_$.k9;
  var LazyThreadSafetyMode_NONE_getInstance = kotlin_kotlin.$_$.f;
  var lazy = kotlin_kotlin.$_$.wb;
  var to = kotlin_kotlin.$_$.bc;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var asList = kotlin_kotlin.$_$.s4;
  var Char__compareTo_impl_ypi4mb = kotlin_kotlin.$_$.e2;
  var IllegalArgumentException = kotlin_kotlin.$_$.bb;
  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.n1;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.k2;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  var listOf_0 = kotlin_kotlin.$_$.t5;
  var addAll = kotlin_kotlin.$_$.q4;
  var joinTo$default = kotlin_kotlin.$_$.h;
  var toString_0 = kotlin_kotlin.$_$.ac;
  var isWhitespace = kotlin_kotlin.$_$.aa;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var toCharArray = kotlin_io_ktor_ktor_utils.$_$.t;
  var indexOfAny$default = kotlin_kotlin.$_$.k;
  var lastIndexOf$default = kotlin_kotlin.$_$.n;
  var IllegalStateException = kotlin_kotlin.$_$.cb;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.s1;
  var indexOf$default_0 = kotlin_kotlin.$_$.l;
  var toInt = kotlin_kotlin.$_$.ja;
  var mapCapacity = kotlin_kotlin.$_$.v5;
  var coerceAtLeast = kotlin_kotlin.$_$.g9;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.a1;
  var toLowerCasePreservingASCIIRules = kotlin_io_ktor_ktor_utils.$_$.u;
  var isLowerCase = kotlin_io_ktor_ktor_utils.$_$.s;
  var appendAll = kotlin_io_ktor_ktor_utils.$_$.q;
  var startsWith$default = kotlin_kotlin.$_$.q;
  var encodeToByteArray = kotlin_io_ktor_ktor_io.$_$.p;
  var toLong = kotlin_kotlin.$_$.a9;
  var take = kotlin_kotlin.$_$.ea;
  var PlatformUtils_getInstance = kotlin_io_ktor_ktor_utils.$_$.e;
  //endregion
  //region block: pre-declaration
  URLDecodeException.prototype = Object.create(Exception.prototype);
  URLDecodeException.prototype.constructor = URLDecodeException;
  ContentType.prototype = Object.create(HeaderValueWithParameters.prototype);
  ContentType.prototype.constructor = ContentType;
  BadContentTypeFormatException.prototype = Object.create(Exception.prototype);
  BadContentTypeFormatException.prototype.constructor = BadContentTypeFormatException;
  HeadersBuilder.prototype = Object.create(StringValuesBuilder.prototype);
  HeadersBuilder.prototype.constructor = HeadersBuilder;
  HeadersImpl.prototype = Object.create(StringValuesImpl.prototype);
  HeadersImpl.prototype.constructor = HeadersImpl;
  UnsafeHeaderException.prototype = Object.create(IllegalArgumentException.prototype);
  UnsafeHeaderException.prototype.constructor = UnsafeHeaderException;
  IllegalHeaderNameException.prototype = Object.create(IllegalArgumentException.prototype);
  IllegalHeaderNameException.prototype.constructor = IllegalHeaderNameException;
  IllegalHeaderValueException.prototype = Object.create(IllegalArgumentException.prototype);
  IllegalHeaderValueException.prototype.constructor = IllegalHeaderValueException;
  ParametersBuilder.prototype = Object.create(StringValuesBuilder.prototype);
  ParametersBuilder.prototype.constructor = ParametersBuilder;
  ParametersImpl.prototype = Object.create(StringValuesImpl.prototype);
  ParametersImpl.prototype.constructor = ParametersImpl;
  URLParserException.prototype = Object.create(IllegalStateException.prototype);
  URLParserException.prototype.constructor = URLParserException;
  NoContent.prototype = Object.create(OutgoingContent.prototype);
  NoContent.prototype.constructor = NoContent;
  ReadChannelContent.prototype = Object.create(OutgoingContent.prototype);
  ReadChannelContent.prototype.constructor = ReadChannelContent;
  WriteChannelContent.prototype = Object.create(OutgoingContent.prototype);
  WriteChannelContent.prototype.constructor = WriteChannelContent;
  ByteArrayContent.prototype = Object.create(OutgoingContent.prototype);
  ByteArrayContent.prototype.constructor = ByteArrayContent;
  TextContent.prototype = Object.create(ByteArrayContent.prototype);
  TextContent.prototype.constructor = TextContent;
  //endregion
  function get_URL_ALPHABET() {
    init_properties_Codecs_kt_hjkt7n();
    return URL_ALPHABET;
  }
  var URL_ALPHABET;
  function get_URL_ALPHABET_CHARS() {
    init_properties_Codecs_kt_hjkt7n();
    return URL_ALPHABET_CHARS;
  }
  var URL_ALPHABET_CHARS;
  function get_HEX_ALPHABET() {
    init_properties_Codecs_kt_hjkt7n();
    return HEX_ALPHABET;
  }
  var HEX_ALPHABET;
  function get_URL_PROTOCOL_PART() {
    init_properties_Codecs_kt_hjkt7n();
    return URL_PROTOCOL_PART;
  }
  var URL_PROTOCOL_PART;
  function get_VALID_PATH_PART() {
    init_properties_Codecs_kt_hjkt7n();
    return VALID_PATH_PART;
  }
  var VALID_PATH_PART;
  function get_OAUTH_SYMBOLS() {
    init_properties_Codecs_kt_hjkt7n();
    return OAUTH_SYMBOLS;
  }
  var OAUTH_SYMBOLS;
  function get_LETTERS_AND_NUMBERS() {
    init_properties_Codecs_kt_hjkt7n();
    return LETTERS_AND_NUMBERS;
  }
  var LETTERS_AND_NUMBERS;
  var TOKENS;
  function encodeURLPath(_this__u8e3s4) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          var charset = Charsets_getInstance().s1c_1;
          var index = 0;
          $l$loop_0: while (index < _this__u8e3s4.length) {
            var current = charSequenceGet(_this__u8e3s4, index);
            if ((equals(new Char(current), new Char(_Char___init__impl__6a9atx(47))) ? true : get_URL_ALPHABET_CHARS().l1(new Char(current))) ? true : get_VALID_PATH_PART().l1(new Char(current))) {
              tmp0_apply.b5(current);
              var tmp0 = index;
              index = tmp0 + 1 | 0;
              continue $l$loop_0;
            }
            if (((equals(new Char(current), new Char(_Char___init__impl__6a9atx(37))) ? (index + 2 | 0) < _this__u8e3s4.length : false) ? get_HEX_ALPHABET().l1(new Char(charSequenceGet(_this__u8e3s4, index + 1 | 0))) : false) ? get_HEX_ALPHABET().l1(new Char(charSequenceGet(_this__u8e3s4, index + 2 | 0))) : false) {
              tmp0_apply.b5(current);
              tmp0_apply.b5(charSequenceGet(_this__u8e3s4, index + 1 | 0));
              tmp0_apply.b5(charSequenceGet(_this__u8e3s4, index + 2 | 0));
              index = index + 3 | 0;
              continue $l$loop_0;
            }
            var symbolSize = isSurrogate(current) ? 2 : 1;
            var tmp = encode(charset.j1f(), _this__u8e3s4, index, index + symbolSize | 0);
            forEach_0(tmp, encodeURLPath$lambda(tmp0_apply));
            index = index + symbolSize | 0;
          }
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function encodeURLQueryComponent(_this__u8e3s4, encodeFull, spaceToPlus, charset) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          var tmp = charset.j1f();
          var content = encode$default(tmp, _this__u8e3s4, 0, 0, 6, null);
          forEach_0(content, encodeURLQueryComponent$lambda(spaceToPlus, tmp0_apply, encodeFull));
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function encodeURLQueryComponent$default(_this__u8e3s4, encodeFull, spaceToPlus, charset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      encodeFull = false;
    if (!(($mask0 & 2) === 0))
      spaceToPlus = false;
    if (!(($mask0 & 4) === 0))
      charset = Charsets_getInstance().s1c_1;
    return encodeURLQueryComponent(_this__u8e3s4, encodeFull, spaceToPlus, charset);
  }
  function encodeURLParameter(_this__u8e3s4, spaceToPlus) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          var tmp = Charsets_getInstance().s1c_1.j1f();
          var content = encode$default(tmp, _this__u8e3s4, 0, 0, 6, null);
          forEach_0(content, encodeURLParameter$lambda(tmp0_apply, spaceToPlus));
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function encodeURLParameter$default(_this__u8e3s4, spaceToPlus, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      spaceToPlus = false;
    return encodeURLParameter(_this__u8e3s4, spaceToPlus);
  }
  function decodeURLPart(_this__u8e3s4, start, end, charset) {
    init_properties_Codecs_kt_hjkt7n();
    return decodeScan(_this__u8e3s4, start, end, false, charset);
  }
  function decodeURLPart$default(_this__u8e3s4, start, end, charset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      start = 0;
    if (!(($mask0 & 2) === 0))
      end = _this__u8e3s4.length;
    if (!(($mask0 & 4) === 0))
      charset = Charsets_getInstance().s1c_1;
    return decodeURLPart(_this__u8e3s4, start, end, charset);
  }
  function forEach_0(_this__u8e3s4, block) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp$ret$0;
    $l$block: {
      var release = true;
      var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      try {
        $l$loop_1: do {
          var tmp$ret$2;
          {
            var tmp0__anonymous__q1qw7t = current;
            $l$loop: while (true) {
              var tmp$ret$1;
              {
                tmp$ret$1 = tmp0__anonymous__q1qw7t.a15() > tmp0__anonymous__q1qw7t.b15();
              }
              if (!tmp$ret$1) {
                break $l$loop;
              }
              block(tmp0__anonymous__q1qw7t.y1d());
            }
            tmp$ret$2 = true;
          }
          if (!tmp$ret$2) {
            break $l$loop_1;
          }
          release = false;
          var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
          var tmp_0;
          if (tmp1_elvis_lhs == null) {
            break $l$loop_1;
          } else {
            tmp_0 = tmp1_elvis_lhs;
          }
          var next = tmp_0;
          current = next;
          release = true;
        }
         while (true);
      }finally {
        if (release) {
          completeReadHead(_this__u8e3s4, current);
        }
      }
    }
  }
  function percentEncode(_this__u8e3s4) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$_0(3);
        {
        }
        {
          var code = _this__u8e3s4 & 255;
          tmp0_apply.b5(_Char___init__impl__6a9atx(37));
          tmp0_apply.b5(hexDigitToChar(code >> 4));
          tmp0_apply.b5(hexDigitToChar(code & 15));
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function decodeScan(_this__u8e3s4, start, end, plusIsSpace, charset) {
    init_properties_Codecs_kt_hjkt7n();
    var inductionVariable = start;
    if (inductionVariable < end)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var ch = charSequenceGet(_this__u8e3s4, index);
        if (equals(new Char(ch), new Char(_Char___init__impl__6a9atx(37))) ? true : plusIsSpace ? equals(new Char(ch), new Char(_Char___init__impl__6a9atx(43))) : false) {
          return decodeImpl(_this__u8e3s4, start, end, index, plusIsSpace, charset);
        }
      }
       while (inductionVariable < end);
    var tmp;
    if (start === 0 ? end === _this__u8e3s4.length : false) {
      tmp = toString(_this__u8e3s4);
    } else {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.substring(start, end);
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function hexDigitToChar(digit) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp0_subject = digit;
    return (0 <= tmp0_subject ? tmp0_subject <= 9 : false) ? Char__plus_impl_qi7pgj(_Char___init__impl__6a9atx(48), digit) : Char__minus_impl_a2frrh(Char__plus_impl_qi7pgj(_Char___init__impl__6a9atx(65), digit), 10);
  }
  function decodeImpl(_this__u8e3s4, start, end, prefixEnd, plusIsSpace, charset) {
    init_properties_Codecs_kt_hjkt7n();
    var length = end - start | 0;
    var sbSize = length > 255 ? length / 3 | 0 : length;
    var sb = StringBuilder_init_$Create$_0(sbSize);
    if (prefixEnd > start) {
      sb.lf(_this__u8e3s4, start, prefixEnd);
    }
    var index = prefixEnd;
    var bytes = null;
    while (index < end) {
      var c = charSequenceGet(_this__u8e3s4, index);
      if (plusIsSpace ? equals(new Char(c), new Char(_Char___init__impl__6a9atx(43))) : false) {
        sb.b5(_Char___init__impl__6a9atx(32));
        var tmp0 = index;
        index = tmp0 + 1 | 0;
      } else if (equals(new Char(c), new Char(_Char___init__impl__6a9atx(37)))) {
        if (bytes == null) {
          bytes = new Int8Array((end - index | 0) / 3 | 0);
        }
        var count = 0;
        while (index < end ? equals(new Char(charSequenceGet(_this__u8e3s4, index)), new Char(_Char___init__impl__6a9atx(37))) : false) {
          if ((index + 2 | 0) >= end) {
            var tmp$ret$0;
            {
              var tmp0_substring = index;
              var tmp1_substring = charSequenceLength(_this__u8e3s4);
              tmp$ret$0 = toString(charSequenceSubSequence(_this__u8e3s4, tmp0_substring, tmp1_substring));
            }
            throw new URLDecodeException('Incomplete trailing HEX escape: ' + tmp$ret$0 + ', in ' + _this__u8e3s4 + ' at ' + index);
          }
          var digit1 = charToHexDigit(charSequenceGet(_this__u8e3s4, index + 1 | 0));
          var digit2 = charToHexDigit(charSequenceGet(_this__u8e3s4, index + 2 | 0));
          if (digit1 === -1 ? true : digit2 === -1) {
            throw new URLDecodeException('Wrong HEX escape: %' + new Char(charSequenceGet(_this__u8e3s4, index + 1 | 0)) + new Char(charSequenceGet(_this__u8e3s4, index + 2 | 0)) + ', in ' + _this__u8e3s4 + ', at ' + index);
          }
          var tmp = bytes;
          var tmp1 = count;
          count = tmp1 + 1 | 0;
          tmp[tmp1] = toByte(imul(digit1, 16) + digit2 | 0);
          index = index + 3 | 0;
        }
        sb.pf(String_0(bytes, 0, count, charset));
      } else {
        sb.b5(c);
        var tmp2 = index;
        index = tmp2 + 1 | 0;
      }
    }
    return sb.toString();
  }
  function URLDecodeException(message) {
    Exception_init_$Init$(message, this);
    captureStack(this, URLDecodeException);
  }
  URLDecodeException.$metadata$ = classMeta('URLDecodeException', undefined, undefined, undefined, undefined, Exception.prototype);
  function charToHexDigit(c2) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp0_subject = c2;
    return (_Char___init__impl__6a9atx(48) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(57) : false) ? Char__minus_impl_a2frrh_0(c2, _Char___init__impl__6a9atx(48)) : (_Char___init__impl__6a9atx(65) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(70) : false) ? Char__minus_impl_a2frrh_0(c2, _Char___init__impl__6a9atx(65)) + 10 | 0 : (_Char___init__impl__6a9atx(97) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(102) : false) ? Char__minus_impl_a2frrh_0(c2, _Char___init__impl__6a9atx(97)) + 10 | 0 : -1;
  }
  function encodeURLParameterValue(_this__u8e3s4) {
    init_properties_Codecs_kt_hjkt7n();
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          var tmp = Charsets_getInstance().s1c_1.j1f();
          var content = encode$default(tmp, _this__u8e3s4, 0, 0, 6, null);
          forEach_0(content, encodeURLParameterValue$lambda(tmp0_apply));
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function decodeURLQueryComponent(_this__u8e3s4, start, end, plusIsSpace, charset) {
    init_properties_Codecs_kt_hjkt7n();
    return decodeScan(_this__u8e3s4, start, end, plusIsSpace, charset);
  }
  function decodeURLQueryComponent$default(_this__u8e3s4, start, end, plusIsSpace, charset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      start = 0;
    if (!(($mask0 & 2) === 0))
      end = _this__u8e3s4.length;
    if (!(($mask0 & 4) === 0))
      plusIsSpace = false;
    if (!(($mask0 & 8) === 0))
      charset = Charsets_getInstance().s1c_1;
    return decodeURLQueryComponent(_this__u8e3s4, start, end, plusIsSpace, charset);
  }
  function encodeURLPath$lambda($tmp0_apply) {
    return function (it) {
      $tmp0_apply.pf(percentEncode(it));
      return Unit_getInstance();
    };
  }
  function encodeURLQueryComponent$lambda($spaceToPlus, $tmp0_apply, $encodeFull) {
    return function (it) {
      var tmp;
      if (it === 32) {
        var tmp_0;
        if ($spaceToPlus) {
          $tmp0_apply.b5(_Char___init__impl__6a9atx(43));
          tmp_0 = Unit_getInstance();
        } else {
          $tmp0_apply.pf('%20');
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      } else if (get_URL_ALPHABET().l1(it) ? true : !$encodeFull ? get_URL_PROTOCOL_PART().l1(it) : false) {
        $tmp0_apply.b5(numberToChar(it));
        tmp = Unit_getInstance();
      } else {
        $tmp0_apply.pf(percentEncode(it));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function encodeURLParameter$lambda($tmp0_apply, $spaceToPlus) {
    return function (it) {
      var tmp;
      if (get_URL_ALPHABET().l1(it) ? true : get_OAUTH_SYMBOLS().l1(it)) {
        $tmp0_apply.b5(numberToChar(it));
        tmp = Unit_getInstance();
      } else if ($spaceToPlus ? it === 32 : false) {
        $tmp0_apply.b5(_Char___init__impl__6a9atx(43));
        tmp = Unit_getInstance();
      } else {
        $tmp0_apply.pf(percentEncode(it));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function encodeURLParameterValue$lambda($tmp0_apply) {
    return function (it) {
      var tmp;
      if ((get_URL_ALPHABET().l1(it) ? true : get_OAUTH_SYMBOLS().l1(it)) ? true : it === 61) {
        $tmp0_apply.b5(numberToChar(it));
        tmp = Unit_getInstance();
      } else if (it === 32) {
        $tmp0_apply.b5(_Char___init__impl__6a9atx(43));
        tmp = Unit_getInstance();
      } else {
        $tmp0_apply.pf(percentEncode(it));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  var properties_initialized_Codecs_kt_hkj9s1;
  function init_properties_Codecs_kt_hjkt7n() {
    if (properties_initialized_Codecs_kt_hkj9s1) {
    } else {
      properties_initialized_Codecs_kt_hkj9s1 = true;
      var tmp$ret$2;
      {
        var tmp0_map = plus_0(plus(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(97), _Char___init__impl__6a9atx(122)), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(65), _Char___init__impl__6a9atx(90))), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(48), _Char___init__impl__6a9atx(57)));
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
          var tmp0_iterator = tmp0_map.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f().i1_1;
            var tmp$ret$0;
            {
              tmp$ret$0 = Char__toByte_impl_7s7yt0(item);
            }
            tmp0_mapTo.a(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      URL_ALPHABET = tmp$ret$2;
      URL_ALPHABET_CHARS = plus_0(plus(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(97), _Char___init__impl__6a9atx(122)), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(65), _Char___init__impl__6a9atx(90))), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(48), _Char___init__impl__6a9atx(57)));
      HEX_ALPHABET = plus_0(plus(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(97), _Char___init__impl__6a9atx(102)), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(65), _Char___init__impl__6a9atx(70))), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(48), _Char___init__impl__6a9atx(57)));
      var tmp$ret$2_0;
      {
        var tmp0_map_0 = listOf([new Char(_Char___init__impl__6a9atx(58)), new Char(_Char___init__impl__6a9atx(47)), new Char(_Char___init__impl__6a9atx(63)), new Char(_Char___init__impl__6a9atx(35)), new Char(_Char___init__impl__6a9atx(91)), new Char(_Char___init__impl__6a9atx(93)), new Char(_Char___init__impl__6a9atx(64)), new Char(_Char___init__impl__6a9atx(33)), new Char(_Char___init__impl__6a9atx(36)), new Char(_Char___init__impl__6a9atx(38)), new Char(_Char___init__impl__6a9atx(39)), new Char(_Char___init__impl__6a9atx(40)), new Char(_Char___init__impl__6a9atx(41)), new Char(_Char___init__impl__6a9atx(42)), new Char(_Char___init__impl__6a9atx(44)), new Char(_Char___init__impl__6a9atx(59)), new Char(_Char___init__impl__6a9atx(61)), new Char(_Char___init__impl__6a9atx(45)), new Char(_Char___init__impl__6a9atx(46)), new Char(_Char___init__impl__6a9atx(95)), new Char(_Char___init__impl__6a9atx(126)), new Char(_Char___init__impl__6a9atx(43))]);
        var tmp$ret$1_0;
        {
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
          var tmp0_iterator_0 = tmp0_map_0.d();
          while (tmp0_iterator_0.e()) {
            var item_0 = tmp0_iterator_0.f().i1_1;
            var tmp$ret$0_0;
            {
              tmp$ret$0_0 = Char__toByte_impl_7s7yt0(item_0);
            }
            tmp0_mapTo_0.a(tmp$ret$0_0);
          }
          tmp$ret$1_0 = tmp0_mapTo_0;
        }
        tmp$ret$2_0 = tmp$ret$1_0;
      }
      URL_PROTOCOL_PART = tmp$ret$2_0;
      VALID_PATH_PART = listOf([new Char(_Char___init__impl__6a9atx(58)), new Char(_Char___init__impl__6a9atx(64)), new Char(_Char___init__impl__6a9atx(33)), new Char(_Char___init__impl__6a9atx(36)), new Char(_Char___init__impl__6a9atx(38)), new Char(_Char___init__impl__6a9atx(39)), new Char(_Char___init__impl__6a9atx(40)), new Char(_Char___init__impl__6a9atx(41)), new Char(_Char___init__impl__6a9atx(42)), new Char(_Char___init__impl__6a9atx(43)), new Char(_Char___init__impl__6a9atx(44)), new Char(_Char___init__impl__6a9atx(59)), new Char(_Char___init__impl__6a9atx(61)), new Char(_Char___init__impl__6a9atx(45)), new Char(_Char___init__impl__6a9atx(46)), new Char(_Char___init__impl__6a9atx(95)), new Char(_Char___init__impl__6a9atx(126))]);
      var tmp$ret$2_1;
      {
        var tmp0_map_1 = listOf([new Char(_Char___init__impl__6a9atx(45)), new Char(_Char___init__impl__6a9atx(46)), new Char(_Char___init__impl__6a9atx(95)), new Char(_Char___init__impl__6a9atx(126))]);
        var tmp$ret$1_1;
        {
          var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_1, 10));
          var tmp0_iterator_1 = tmp0_map_1.d();
          while (tmp0_iterator_1.e()) {
            var item_1 = tmp0_iterator_1.f().i1_1;
            var tmp$ret$0_1;
            {
              tmp$ret$0_1 = Char__toByte_impl_7s7yt0(item_1);
            }
            tmp0_mapTo_1.a(tmp$ret$0_1);
          }
          tmp$ret$1_1 = tmp0_mapTo_1;
        }
        tmp$ret$2_1 = tmp$ret$1_1;
      }
      OAUTH_SYMBOLS = tmp$ret$2_1;
      LETTERS_AND_NUMBERS = plus_1(plus_1(toSet(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(97), _Char___init__impl__6a9atx(122))), toSet(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(65), _Char___init__impl__6a9atx(90)))), toSet(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(48), _Char___init__impl__6a9atx(57))));
      TOKENS = plus_1(setOf([new Char(_Char___init__impl__6a9atx(33)), new Char(_Char___init__impl__6a9atx(35)), new Char(_Char___init__impl__6a9atx(37)), new Char(_Char___init__impl__6a9atx(38)), new Char(_Char___init__impl__6a9atx(39)), new Char(_Char___init__impl__6a9atx(42)), new Char(_Char___init__impl__6a9atx(43)), new Char(_Char___init__impl__6a9atx(45)), new Char(_Char___init__impl__6a9atx(46)), new Char(_Char___init__impl__6a9atx(94)), new Char(_Char___init__impl__6a9atx(95)), new Char(_Char___init__impl__6a9atx(96)), new Char(_Char___init__impl__6a9atx(124)), new Char(_Char___init__impl__6a9atx(126))]), get_LETTERS_AND_NUMBERS());
    }
  }
  function ContentTypeMatcher() {
  }
  ContentTypeMatcher.$metadata$ = interfaceMeta('ContentTypeMatcher');
  function ContentType_init_$Init$(contentType, contentSubtype, parameters, $this) {
    ContentType.call($this, contentType, contentSubtype, contentType + '/' + contentSubtype, parameters);
    return $this;
  }
  function ContentType_init_$Create$(contentType, contentSubtype, parameters) {
    return ContentType_init_$Init$(contentType, contentSubtype, parameters, Object.create(ContentType.prototype));
  }
  function ContentType_init_$Init$_0(contentType, contentSubtype, parameters, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      parameters = emptyList();
    ContentType_init_$Init$(contentType, contentSubtype, parameters, $this);
    return $this;
  }
  function ContentType_init_$Create$_0(contentType, contentSubtype, parameters, $mask0, $marker) {
    return ContentType_init_$Init$_0(contentType, contentSubtype, parameters, $mask0, $marker, Object.create(ContentType.prototype));
  }
  function hasParameter($this, name, value) {
    var tmp0_subject = $this.f1t().g();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = false;
        break;
      case 1:
        var tmp$ret$1;
        {
          var tmp0_let = $this.f1t().l(0);
          {
          }
          var tmp$ret$0;
          {
            tmp$ret$0 = equals_0(tmp0_let.g1t_1, name, true) ? equals_0(tmp0_let.h1t_1, value, true) : false;
          }
          tmp$ret$1 = tmp$ret$0;
        }

        tmp = tmp$ret$1;
        break;
      default:
        var tmp$ret$2;
        $l$block_0: {
          var tmp1_any = $this.f1t();
          var tmp_0;
          if (isInterface(tmp1_any, Collection)) {
            tmp_0 = tmp1_any.m();
          } else {
            tmp_0 = false;
          }
          if (tmp_0) {
            tmp$ret$2 = false;
            break $l$block_0;
          }
          var tmp0_iterator = tmp1_any.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            var tmp$ret$3;
            {
              tmp$ret$3 = equals_0(element.g1t_1, name, true) ? equals_0(element.h1t_1, value, true) : false;
            }
            if (tmp$ret$3) {
              tmp$ret$2 = true;
              break $l$block_0;
            }
          }
          tmp$ret$2 = false;
        }

        tmp = tmp$ret$2;
        break;
    }
    return tmp;
  }
  function Companion() {
    Companion_instance = this;
    var tmp = this;
    tmp.i1t_1 = ContentType_init_$Create$_0('*', '*', null, 4, null);
  }
  Companion.prototype.j1t = function (value) {
    if (isBlank(value))
      return this.i1t_1;
    var tmp$ret$10;
    {
      var tmp0_parse = Companion_getInstance_1();
      var headerValue = single(parseHeaderValue(value));
      var tmp$ret$9;
      {
        var tmp1__anonymous__uwfjfc = headerValue.k1t_1;
        var tmp2__anonymous__z9zvc9 = headerValue.l1t_1;
        var tmp = _Char___init__impl__6a9atx(47);
        var slash = indexOf$default(tmp1__anonymous__uwfjfc, tmp, 0, false, 6, null);
        if (slash === -1) {
          var tmp$ret$0;
          {
            tmp$ret$0 = toString(trim(isCharSequence(tmp1__anonymous__uwfjfc) ? tmp1__anonymous__uwfjfc : THROW_CCE()));
          }
          if (tmp$ret$0 === '*') {
            return Companion_getInstance_0().i1t_1;
          }
          throw new BadContentTypeFormatException(value);
        }
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              tmp$ret$1 = tmp1__anonymous__uwfjfc;
            }
            tmp$ret$2 = tmp$ret$1.substring(0, slash);
          }
          var tmp0_trim = tmp$ret$2;
          tmp$ret$3 = toString(trim(isCharSequence(tmp0_trim) ? tmp0_trim : THROW_CCE()));
        }
        var type = tmp$ret$3;
        var tmp$ret$4;
        {
          tmp$ret$4 = charSequenceLength(type) === 0;
        }
        if (tmp$ret$4) {
          throw new BadContentTypeFormatException(value);
        }
        var tmp$ret$7;
        {
          var tmp$ret$6;
          {
            var tmp1_substring = slash + 1 | 0;
            var tmp$ret$5;
            {
              tmp$ret$5 = tmp1__anonymous__uwfjfc;
            }
            tmp$ret$6 = tmp$ret$5.substring(tmp1_substring);
          }
          var tmp2_trim = tmp$ret$6;
          tmp$ret$7 = toString(trim(isCharSequence(tmp2_trim) ? tmp2_trim : THROW_CCE()));
        }
        var subtype = tmp$ret$7;
        var tmp_0;
        var tmp$ret$8;
        {
          tmp$ret$8 = charSequenceLength(subtype) === 0;
        }
        if (tmp$ret$8) {
          tmp_0 = true;
        } else {
          var tmp_1 = _Char___init__impl__6a9atx(47);
          tmp_0 = contains$default(subtype, tmp_1, false, 2, null);
        }
        if (tmp_0) {
          throw new BadContentTypeFormatException(value);
        }
        tmp$ret$9 = ContentType_init_$Create$(type, subtype, tmp2__anonymous__z9zvc9);
      }
      tmp$ret$10 = tmp$ret$9;
    }
    return tmp$ret$10;
  };
  Companion.prototype.n1t = function () {
    return this.i1t_1;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function Application() {
    Application_instance = this;
    var tmp = this;
    tmp.o1t_1 = ContentType_init_$Create$_0('application', '*', null, 4, null);
    var tmp_0 = this;
    tmp_0.p1t_1 = ContentType_init_$Create$_0('application', 'atom+xml', null, 4, null);
    var tmp_1 = this;
    tmp_1.q1t_1 = ContentType_init_$Create$_0('application', 'cbor', null, 4, null);
    var tmp_2 = this;
    tmp_2.r1t_1 = ContentType_init_$Create$_0('application', 'json', null, 4, null);
    var tmp_3 = this;
    tmp_3.s1t_1 = ContentType_init_$Create$_0('application', 'hal+json', null, 4, null);
    var tmp_4 = this;
    tmp_4.t1t_1 = ContentType_init_$Create$_0('application', 'javascript', null, 4, null);
    var tmp_5 = this;
    tmp_5.u1t_1 = ContentType_init_$Create$_0('application', 'octet-stream', null, 4, null);
    var tmp_6 = this;
    tmp_6.v1t_1 = ContentType_init_$Create$_0('application', 'font-woff', null, 4, null);
    var tmp_7 = this;
    tmp_7.w1t_1 = ContentType_init_$Create$_0('application', 'rss+xml', null, 4, null);
    var tmp_8 = this;
    tmp_8.x1t_1 = ContentType_init_$Create$_0('application', 'xml', null, 4, null);
    var tmp_9 = this;
    tmp_9.y1t_1 = ContentType_init_$Create$_0('application', 'xml-dtd', null, 4, null);
    var tmp_10 = this;
    tmp_10.z1t_1 = ContentType_init_$Create$_0('application', 'zip', null, 4, null);
    var tmp_11 = this;
    tmp_11.a1u_1 = ContentType_init_$Create$_0('application', 'gzip', null, 4, null);
    var tmp_12 = this;
    tmp_12.b1u_1 = ContentType_init_$Create$_0('application', 'x-www-form-urlencoded', null, 4, null);
    var tmp_13 = this;
    tmp_13.c1u_1 = ContentType_init_$Create$_0('application', 'pdf', null, 4, null);
    var tmp_14 = this;
    tmp_14.d1u_1 = ContentType_init_$Create$_0('application', 'protobuf', null, 4, null);
    var tmp_15 = this;
    tmp_15.e1u_1 = ContentType_init_$Create$_0('application', 'wasm', null, 4, null);
    var tmp_16 = this;
    tmp_16.f1u_1 = ContentType_init_$Create$_0('application', 'problem+json', null, 4, null);
    var tmp_17 = this;
    tmp_17.g1u_1 = ContentType_init_$Create$_0('application', 'problem+xml', null, 4, null);
  }
  Application.$metadata$ = objectMeta('Application');
  var Application_instance;
  function Application_getInstance() {
    if (Application_instance == null)
      new Application();
    return Application_instance;
  }
  function Text() {
    Text_instance = this;
    var tmp = this;
    tmp.h1u_1 = ContentType_init_$Create$_0('text', '*', null, 4, null);
    var tmp_0 = this;
    tmp_0.i1u_1 = ContentType_init_$Create$_0('text', 'plain', null, 4, null);
    var tmp_1 = this;
    tmp_1.j1u_1 = ContentType_init_$Create$_0('text', 'css', null, 4, null);
    var tmp_2 = this;
    tmp_2.k1u_1 = ContentType_init_$Create$_0('text', 'csv', null, 4, null);
    var tmp_3 = this;
    tmp_3.l1u_1 = ContentType_init_$Create$_0('text', 'html', null, 4, null);
    var tmp_4 = this;
    tmp_4.m1u_1 = ContentType_init_$Create$_0('text', 'javascript', null, 4, null);
    var tmp_5 = this;
    tmp_5.n1u_1 = ContentType_init_$Create$_0('text', 'vcard', null, 4, null);
    var tmp_6 = this;
    tmp_6.o1u_1 = ContentType_init_$Create$_0('text', 'xml', null, 4, null);
    var tmp_7 = this;
    tmp_7.p1u_1 = ContentType_init_$Create$_0('text', 'event-stream', null, 4, null);
  }
  Text.$metadata$ = objectMeta('Text');
  var Text_instance;
  function Text_getInstance() {
    if (Text_instance == null)
      new Text();
    return Text_instance;
  }
  function ContentType(contentType, contentSubtype, existingContent, parameters) {
    Companion_getInstance_0();
    HeaderValueWithParameters.call(this, existingContent, parameters);
    this.s1u_1 = contentType;
    this.t1u_1 = contentSubtype;
  }
  ContentType.prototype.u1u = function (name, value) {
    if (hasParameter(this, name, value))
      return this;
    return new ContentType(this.s1u_1, this.t1u_1, this.v1u(), plus_2(this.f1t(), new HeaderValueParam(name, value)));
  };
  ContentType.prototype.w1u = function () {
    var tmp;
    if (this.f1t().m()) {
      tmp = this;
    } else {
      tmp = ContentType_init_$Create$_0(this.s1u_1, this.t1u_1, null, 4, null);
    }
    return tmp;
  };
  ContentType.prototype.x1u = function (pattern) {
    if (!(pattern.s1u_1 === '*') ? !equals_0(pattern.s1u_1, this.s1u_1, true) : false) {
      return false;
    }
    if (!(pattern.t1u_1 === '*') ? !equals_0(pattern.t1u_1, this.t1u_1, true) : false) {
      return false;
    }
    var tmp0_iterator = pattern.f1t().d();
    while (tmp0_iterator.e()) {
      var tmp1_loop_parameter = tmp0_iterator.f();
      var patternName = tmp1_loop_parameter.h3();
      var patternValue = tmp1_loop_parameter.i3();
      var tmp2_subject = patternName;
      var tmp;
      if (tmp2_subject === '*') {
        var tmp3_subject = patternValue;
        var tmp_0;
        if (tmp3_subject === '*') {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          $l$block_0: {
            var tmp0_any = this.f1t();
            var tmp_1;
            if (isInterface(tmp0_any, Collection)) {
              tmp_1 = tmp0_any.m();
            } else {
              tmp_1 = false;
            }
            if (tmp_1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
            var tmp0_iterator_0 = tmp0_any.d();
            while (tmp0_iterator_0.e()) {
              var element = tmp0_iterator_0.f();
              var tmp$ret$1;
              {
                tmp$ret$1 = equals_0(element.h1t_1, patternValue, true);
              }
              if (tmp$ret$1) {
                tmp$ret$0 = true;
                break $l$block_0;
              }
            }
            tmp$ret$0 = false;
          }
          tmp_0 = tmp$ret$0;
        }
        tmp = tmp_0;
      } else {
        var value = this.y1u(patternName);
        var tmp4_subject = patternValue;
        tmp = tmp4_subject === '*' ? !(value == null) : equals_0(value, patternValue, true);
      }
      var matches = tmp;
      if (!matches) {
        return false;
      }
    }
    return true;
  };
  ContentType.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof ContentType) {
      tmp_1 = equals_0(this.s1u_1, other.s1u_1, true);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals_0(this.t1u_1, other.t1u_1, true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = equals(this.f1t(), other.f1t());
    } else {
      tmp = false;
    }
    return tmp;
  };
  ContentType.prototype.hashCode = function () {
    var tmp$ret$1;
    {
      var tmp0_toLowerCase = this.s1u_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_toLowerCase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var result = getStringHashCode(tmp$ret$1);
    var tmp = result;
    var tmp_0 = imul(31, result);
    var tmp$ret$3;
    {
      var tmp1_toLowerCase = this.t1u_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_toLowerCase;
      }
      tmp$ret$3 = tmp$ret$2.toLowerCase();
    }
    result = tmp + (tmp_0 + getStringHashCode(tmp$ret$3) | 0) | 0;
    result = result + imul(31, hashCode(this.f1t())) | 0;
    return result;
  };
  ContentType.$metadata$ = classMeta('ContentType', undefined, undefined, undefined, undefined, HeaderValueWithParameters.prototype);
  function BadContentTypeFormatException(value) {
    Exception_init_$Init$('Bad Content-Type format: ' + value, this);
    captureStack(this, BadContentTypeFormatException);
  }
  BadContentTypeFormatException.$metadata$ = classMeta('BadContentTypeFormatException', undefined, undefined, undefined, undefined, Exception.prototype);
  function charset(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.y1u('charset');
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = Companion_getInstance().i1i(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function withCharset(_this__u8e3s4, charset) {
    return _this__u8e3s4.u1u('charset', get_name(charset));
  }
  function get_HeaderFieldValueSeparators() {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    return HeaderFieldValueSeparators;
  }
  var HeaderFieldValueSeparators;
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.z1u = function (value, init) {
    var headerValue = single(parseHeaderValue(value));
    return init(headerValue.k1t_1, headerValue.l1t_1);
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_1() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function HeaderValueWithParameters(content, parameters) {
    Companion_getInstance_1();
    this.d1t_1 = content;
    this.e1t_1 = parameters;
  }
  HeaderValueWithParameters.prototype.v1u = function () {
    return this.d1t_1;
  };
  HeaderValueWithParameters.prototype.f1t = function () {
    return this.e1t_1;
  };
  HeaderValueWithParameters.prototype.y1u = function (name) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_firstOrNull = this.e1t_1;
      var tmp0_iterator = tmp0_firstOrNull.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$0;
        {
          tmp$ret$0 = equals_0(element.g1t_1, name, true);
        }
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h1t_1;
  };
  HeaderValueWithParameters.prototype.toString = function () {
    var tmp;
    if (this.e1t_1.m()) {
      tmp = this.d1t_1;
    } else {
      var tmp_0 = this.d1t_1.length;
      var tmp$ret$1;
      {
        var tmp0_sumBy = this.e1t_1;
        var sum = 0;
        var tmp0_iterator = tmp0_sumBy.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp_1 = sum;
          var tmp$ret$0;
          {
            tmp$ret$0 = (element.g1t_1.length + element.h1t_1.length | 0) + 3 | 0;
          }
          sum = tmp_1 + tmp$ret$0 | 0;
        }
        tmp$ret$1 = sum;
      }
      var size = tmp_0 + tmp$ret$1 | 0;
      var tmp$ret$2;
      {
        var tmp1_apply = StringBuilder_init_$Create$_0(size);
        {
        }
        {
          tmp1_apply.pf(this.d1t_1);
          var inductionVariable = 0;
          var last = this.e1t_1.g();
          if (inductionVariable < last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp1_container = this.e1t_1.l(index);
              var name = tmp1_container.h3();
              var value = tmp1_container.i3();
              tmp1_apply.pf('; ');
              tmp1_apply.pf(name);
              tmp1_apply.pf('=');
              {
                if (checkNeedEscape$accessor$vynnj(value)) {
                  tmp1_apply.pf(quote(value));
                } else {
                  tmp1_apply.pf(value);
                }
              }
            }
             while (inductionVariable < last);
        }
        tmp$ret$2 = tmp1_apply;
      }
      tmp = tmp$ret$2.toString();
    }
    return tmp;
  };
  HeaderValueWithParameters.$metadata$ = classMeta('HeaderValueWithParameters');
  function escapeIfNeededTo(_this__u8e3s4, out) {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    if (checkNeedEscape$accessor$vynnj(_this__u8e3s4)) {
      out.pf(quote(_this__u8e3s4));
    } else {
      out.pf(_this__u8e3s4);
    }
  }
  function checkNeedEscape(_this__u8e3s4) {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(_this__u8e3s4) === 0;
    }
    if (tmp$ret$0)
      return true;
    if (isQuoted(_this__u8e3s4))
      return false;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (get_HeaderFieldValueSeparators().l1(new Char(charSequenceGet(_this__u8e3s4, index))))
          return true;
      }
       while (inductionVariable < last);
    return false;
  }
  function quote(_this__u8e3s4) {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          quoteTo(_this__u8e3s4, tmp0_apply);
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function isQuoted(_this__u8e3s4) {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    if (_this__u8e3s4.length < 2) {
      return false;
    }
    if (!equals(new Char(first(_this__u8e3s4)), new Char(_Char___init__impl__6a9atx(34))) ? true : !equals(new Char(last(_this__u8e3s4)), new Char(_Char___init__impl__6a9atx(34)))) {
      return false;
    }
    var startIndex = 1;
    $l$loop: do {
      var tmp = _Char___init__impl__6a9atx(34);
      var tmp_0 = startIndex;
      var index = indexOf$default(_this__u8e3s4, tmp, tmp_0, false, 4, null);
      if (index === get_lastIndex(_this__u8e3s4)) {
        break $l$loop;
      }
      var slashesCount = 0;
      var slashIndex = index - 1 | 0;
      while (equals(new Char(charSequenceGet(_this__u8e3s4, slashIndex)), new Char(_Char___init__impl__6a9atx(92)))) {
        var tmp0 = slashesCount;
        slashesCount = tmp0 + 1 | 0;
        var tmp1 = slashIndex;
        slashIndex = tmp1 - 1 | 0;
      }
      if ((slashesCount % 2 | 0) === 0) {
        return false;
      }
      startIndex = index + 1 | 0;
    }
     while (startIndex < _this__u8e3s4.length);
    return true;
  }
  function quoteTo(_this__u8e3s4, out) {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    out.pf('"');
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var ch = charSequenceGet(_this__u8e3s4, i);
        var tmp1_subject = ch;
        if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(92)))) {
          out.pf('\\\\');
        } else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(10)))) {
          out.pf('\\n');
        } else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(13)))) {
          out.pf('\\r');
        } else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(9)))) {
          out.pf('\\t');
        } else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(34)))) {
          out.pf('\\"');
        } else {
          out.b5(ch);
        }
      }
       while (inductionVariable < last);
    out.pf('"');
  }
  function checkNeedEscape$accessor$vynnj(_this__u8e3s4) {
    init_properties_HeaderValueWithParameters_kt_2dfzmo();
    return checkNeedEscape(_this__u8e3s4);
  }
  var properties_initialized_HeaderValueWithParameters_kt_yu5xg;
  function init_properties_HeaderValueWithParameters_kt_2dfzmo() {
    if (properties_initialized_HeaderValueWithParameters_kt_yu5xg) {
    } else {
      properties_initialized_HeaderValueWithParameters_kt_yu5xg = true;
      HeaderFieldValueSeparators = setOf([new Char(_Char___init__impl__6a9atx(40)), new Char(_Char___init__impl__6a9atx(41)), new Char(_Char___init__impl__6a9atx(60)), new Char(_Char___init__impl__6a9atx(62)), new Char(_Char___init__impl__6a9atx(64)), new Char(_Char___init__impl__6a9atx(44)), new Char(_Char___init__impl__6a9atx(59)), new Char(_Char___init__impl__6a9atx(58)), new Char(_Char___init__impl__6a9atx(92)), new Char(_Char___init__impl__6a9atx(34)), new Char(_Char___init__impl__6a9atx(47)), new Char(_Char___init__impl__6a9atx(91)), new Char(_Char___init__impl__6a9atx(93)), new Char(_Char___init__impl__6a9atx(63)), new Char(_Char___init__impl__6a9atx(61)), new Char(_Char___init__impl__6a9atx(123)), new Char(_Char___init__impl__6a9atx(125)), new Char(_Char___init__impl__6a9atx(32)), new Char(_Char___init__impl__6a9atx(9)), new Char(_Char___init__impl__6a9atx(10)), new Char(_Char___init__impl__6a9atx(13))]);
    }
  }
  function HeadersBuilder_init_$Init$(size, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      size = 8;
    HeadersBuilder.call($this, size);
    return $this;
  }
  function HeadersBuilder_init_$Create$(size, $mask0, $marker) {
    return HeadersBuilder_init_$Init$(size, $mask0, $marker, Object.create(HeadersBuilder.prototype));
  }
  function HeadersBuilder(size) {
    StringValuesBuilder.call(this, true, size);
  }
  HeadersBuilder.prototype.o16 = function () {
    {
      var tmp0_require = !this.q1l();
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'HeadersBuilder can only build a single Headers instance';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    this.p1l(true);
    return new HeadersImpl(this.k2());
  };
  HeadersBuilder.prototype.n1l = function (name) {
    StringValuesBuilder.prototype.n1l.call(this, name);
    HttpHeaders_getInstance().y1y(name);
  };
  HeadersBuilder.prototype.u1l = function (value) {
    StringValuesBuilder.prototype.u1l.call(this, value);
    HttpHeaders_getInstance().z1y(value);
  };
  HeadersBuilder.$metadata$ = classMeta('HeadersBuilder', undefined, undefined, undefined, undefined, StringValuesBuilder.prototype);
  function Companion_1() {
    Companion_instance_1 = this;
    this.a1z_1 = EmptyHeaders_getInstance();
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_2() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function Headers() {
  }
  Headers.$metadata$ = interfaceMeta('Headers', [StringValues]);
  function HeadersImpl(values) {
    StringValuesImpl.call(this, true, values);
  }
  HeadersImpl.prototype.toString = function () {
    return 'Headers ' + this.s1l();
  };
  HeadersImpl.$metadata$ = classMeta('HeadersImpl', [Headers], undefined, undefined, undefined, StringValuesImpl.prototype);
  function EmptyHeaders() {
    EmptyHeaders_instance = this;
  }
  EmptyHeaders.prototype.z1l = function () {
    return true;
  };
  EmptyHeaders.prototype.r1l = function (name) {
    return null;
  };
  EmptyHeaders.prototype.c1m = function () {
    return emptySet();
  };
  EmptyHeaders.prototype.s1l = function () {
    return emptySet();
  };
  EmptyHeaders.prototype.toString = function () {
    return 'Headers ' + this.s1l();
  };
  EmptyHeaders.$metadata$ = objectMeta('EmptyHeaders', [Headers]);
  var EmptyHeaders_instance;
  function EmptyHeaders_getInstance() {
    if (EmptyHeaders_instance == null)
      new EmptyHeaders();
    return EmptyHeaders_instance;
  }
  function HeaderValueParam(name, value) {
    this.g1t_1 = name;
    this.h1t_1 = value;
  }
  HeaderValueParam.prototype.gg = function () {
    return this.g1t_1;
  };
  HeaderValueParam.prototype.t = function () {
    return this.h1t_1;
  };
  HeaderValueParam.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    if (other instanceof HeaderValueParam) {
      tmp_0 = equals_0(other.g1t_1, this.g1t_1, true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = equals_0(other.h1t_1, this.h1t_1, true);
    } else {
      tmp = false;
    }
    return tmp;
  };
  HeaderValueParam.prototype.hashCode = function () {
    var tmp$ret$1;
    {
      var tmp0_toLowerCase = this.g1t_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_toLowerCase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    var result = getStringHashCode(tmp$ret$1);
    var tmp = result;
    var tmp_0 = imul(31, result);
    var tmp$ret$3;
    {
      var tmp1_toLowerCase = this.h1t_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_toLowerCase;
      }
      tmp$ret$3 = tmp$ret$2.toLowerCase();
    }
    result = tmp + (tmp_0 + getStringHashCode(tmp$ret$3) | 0) | 0;
    return result;
  };
  HeaderValueParam.prototype.h3 = function () {
    return this.g1t_1;
  };
  HeaderValueParam.prototype.i3 = function () {
    return this.h1t_1;
  };
  HeaderValueParam.prototype.toString = function () {
    return 'HeaderValueParam(name=' + this.g1t_1 + ', value=' + this.h1t_1 + ')';
  };
  HeaderValueParam.$metadata$ = classMeta('HeaderValueParam');
  function HeaderValue(value, params) {
    this.k1t_1 = value;
    this.l1t_1 = params;
    var tmp = this;
    var tmp$ret$2;
    $l$block: {
      var tmp0_firstOrNull = this.l1t_1;
      var tmp0_iterator = tmp0_firstOrNull.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = element.g1t_1 === 'q';
        }
        if (tmp$ret$1) {
          tmp$ret$2 = element;
          break $l$block;
        }
      }
      tmp$ret$2 = null;
    }
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h1t_1;
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : toDoubleOrNull(tmp1_safe_receiver);
    var tmp_0;
    if (tmp2_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$4;
      {
        {
        }
        var tmp_1;
        var tmp$ret$3;
        {
          tmp$ret$3 = rangeTo(0.0, 1.0).d1(tmp2_safe_receiver);
        }
        if (tmp$ret$3) {
          tmp_1 = tmp2_safe_receiver;
        } else {
          tmp_1 = null;
        }
        tmp$ret$4 = tmp_1;
      }
      tmp_0 = tmp$ret$4;
    }
    var tmp3_elvis_lhs = tmp_0;
    tmp.m1t_1 = tmp3_elvis_lhs == null ? 1.0 : tmp3_elvis_lhs;
  }
  HeaderValue.prototype.toString = function () {
    return 'HeaderValue(value=' + this.k1t_1 + ', params=' + this.l1t_1 + ')';
  };
  HeaderValue.prototype.hashCode = function () {
    var result = getStringHashCode(this.k1t_1);
    result = imul(result, 31) + hashCode(this.l1t_1) | 0;
    return result;
  };
  HeaderValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HeaderValue))
      return false;
    var tmp0_other_with_cast = other instanceof HeaderValue ? other : THROW_CCE();
    if (!(this.k1t_1 === tmp0_other_with_cast.k1t_1))
      return false;
    if (!equals(this.l1t_1, tmp0_other_with_cast.l1t_1))
      return false;
    return true;
  };
  HeaderValue.$metadata$ = classMeta('HeaderValue');
  function parseHeaderValue(text) {
    return parseHeaderValue_0(text, false);
  }
  function parseHeaderValue_0(text, parametersOnly) {
    if (text == null) {
      return emptyList();
    }
    var position = 0;
    var tmp = LazyThreadSafetyMode_NONE_getInstance();
    var items = lazy(tmp, parseHeaderValue$lambda());
    while (position <= get_lastIndex(text)) {
      position = parseHeaderValueItem(text, position, items, parametersOnly);
    }
    return valueOrEmpty(items);
  }
  function parseHeaderValueItem(text, start, items, parametersOnly) {
    var position = start;
    var tmp = LazyThreadSafetyMode_NONE_getInstance();
    var parameters = lazy(tmp, parseHeaderValueItem$lambda());
    var valueEnd = parametersOnly ? position : null;
    while (position <= get_lastIndex(text)) {
      var tmp0_subject = charSequenceGet(text, position);
      if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(44)))) {
        var tmp_0 = items.t();
        var tmp1_elvis_lhs = valueEnd;
        tmp_0.a(new HeaderValue(subtrim(text, start, tmp1_elvis_lhs == null ? position : tmp1_elvis_lhs), valueOrEmpty(parameters)));
        return position + 1 | 0;
      } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(59)))) {
        if (valueEnd == null)
          valueEnd = position;
        position = parseHeaderValueParameter(text, position + 1 | 0, parameters);
      } else {
        var tmp_1;
        if (parametersOnly) {
          tmp_1 = parseHeaderValueParameter(text, position, parameters);
        } else {
          tmp_1 = position + 1 | 0;
        }
        position = tmp_1;
      }
    }
    var tmp_2 = items.t();
    var tmp2_elvis_lhs = valueEnd;
    tmp_2.a(new HeaderValue(subtrim(text, start, tmp2_elvis_lhs == null ? position : tmp2_elvis_lhs), valueOrEmpty(parameters)));
    return position;
  }
  function valueOrEmpty(_this__u8e3s4) {
    return _this__u8e3s4.c6() ? _this__u8e3s4.t() : emptyList();
  }
  function subtrim(_this__u8e3s4, start, end) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.substring(start, end);
      }
      var tmp0_trim = tmp$ret$1;
      tmp$ret$2 = toString(trim(isCharSequence(tmp0_trim) ? tmp0_trim : THROW_CCE()));
    }
    return tmp$ret$2;
  }
  function parseHeaderValueParameter(text, start, parameters) {
    var position = start;
    while (position <= get_lastIndex(text)) {
      var tmp0_subject = charSequenceGet(text, position);
      if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(61)))) {
        var tmp1_container = parseHeaderValueParameterValue(text, position + 1 | 0);
        var paramEnd = tmp1_container.h3();
        var paramValue = tmp1_container.i3();
        parseHeaderValueParameter$addParam(parameters, text, start, position, paramValue);
        return paramEnd;
      } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(59))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(44)))) {
        parseHeaderValueParameter$addParam(parameters, text, start, position, '');
        return position;
      } else {
        var tmp2 = position;
        position = tmp2 + 1 | 0;
      }
    }
    parseHeaderValueParameter$addParam(parameters, text, start, position, '');
    return position;
  }
  function parseHeaderValueParameterValue(value, start) {
    if (value.length === start) {
      return to(start, '');
    }
    var position = start;
    if (equals(new Char(charSequenceGet(value, start)), new Char(_Char___init__impl__6a9atx(34)))) {
      return parseHeaderValueParameterValueQuoted(value, position + 1 | 0);
    }
    while (position <= get_lastIndex(value)) {
      var tmp0_subject = charSequenceGet(value, position);
      if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(59))) ? true : equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(44))))
        return to(position, subtrim(value, start, position));
      else {
        var tmp1 = position;
        position = tmp1 + 1 | 0;
      }
    }
    return to(position, subtrim(value, start, position));
  }
  function parseHeaderValueParameterValueQuoted(value, start) {
    var position = start;
    var builder = StringBuilder_init_$Create$();
    loop: while (position <= get_lastIndex(value)) {
      var currentChar = charSequenceGet(value, position);
      if (equals(new Char(currentChar), new Char(_Char___init__impl__6a9atx(34))) ? nextIsSemicolonOrEnd(value, position) : false) {
        return to(position + 1 | 0, builder.toString());
      } else if (equals(new Char(currentChar), new Char(_Char___init__impl__6a9atx(92))) ? position < (get_lastIndex(value) - 2 | 0) : false) {
        builder.b5(charSequenceGet(value, position + 1 | 0));
        position = position + 2 | 0;
        continue loop;
      }
      builder.b5(currentChar);
      var tmp0 = position;
      position = tmp0 + 1 | 0;
    }
    var tmp = position;
    var tmp$ret$0;
    {
      var tmp0_plus = builder.toString();
      tmp$ret$0 = '"' + tmp0_plus;
    }
    return to(tmp, tmp$ret$0);
  }
  function nextIsSemicolonOrEnd(_this__u8e3s4, start) {
    var position = start + 1 | 0;
    loop: while (position < _this__u8e3s4.length ? equals(new Char(charSequenceGet(_this__u8e3s4, position)), new Char(_Char___init__impl__6a9atx(32))) : false) {
      position = position + 1 | 0;
    }
    return position === _this__u8e3s4.length ? true : equals(new Char(charSequenceGet(_this__u8e3s4, position)), new Char(_Char___init__impl__6a9atx(59)));
  }
  function parseHeaderValueParameter$addParam($parameters, text, start, end, value) {
    var name = subtrim(text, start, end);
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(name) === 0;
    }
    if (tmp$ret$0) {
      return Unit_getInstance();
    }
    $parameters.t().a(new HeaderValueParam(name, value));
  }
  function parseHeaderValue$lambda() {
    return function () {
      var tmp$ret$0;
      {
        tmp$ret$0 = ArrayList_init_$Create$_0();
      }
      return tmp$ret$0;
    };
  }
  function parseHeaderValueItem$lambda() {
    return function () {
      var tmp$ret$0;
      {
        tmp$ret$0 = ArrayList_init_$Create$_0();
      }
      return tmp$ret$0;
    };
  }
  function HttpHeaders() {
    HttpHeaders_instance = this;
    this.d1v_1 = 'Accept';
    this.e1v_1 = 'Accept-Charset';
    this.f1v_1 = 'Accept-Encoding';
    this.g1v_1 = 'Accept-Language';
    this.h1v_1 = 'Accept-Ranges';
    this.i1v_1 = 'Age';
    this.j1v_1 = 'Allow';
    this.k1v_1 = 'ALPN';
    this.l1v_1 = 'Authentication-Info';
    this.m1v_1 = 'Authorization';
    this.n1v_1 = 'Cache-Control';
    this.o1v_1 = 'Connection';
    this.p1v_1 = 'Content-Disposition';
    this.q1v_1 = 'Content-Encoding';
    this.r1v_1 = 'Content-Language';
    this.s1v_1 = 'Content-Length';
    this.t1v_1 = 'Content-Location';
    this.u1v_1 = 'Content-Range';
    this.v1v_1 = 'Content-Type';
    this.w1v_1 = 'Cookie';
    this.x1v_1 = 'DASL';
    this.y1v_1 = 'Date';
    this.z1v_1 = 'DAV';
    this.a1w_1 = 'Depth';
    this.b1w_1 = 'Destination';
    this.c1w_1 = 'ETag';
    this.d1w_1 = 'Expect';
    this.e1w_1 = 'Expires';
    this.f1w_1 = 'From';
    this.g1w_1 = 'Forwarded';
    this.h1w_1 = 'Host';
    this.i1w_1 = 'HTTP2-Settings';
    this.j1w_1 = 'If';
    this.k1w_1 = 'If-Match';
    this.l1w_1 = 'If-Modified-Since';
    this.m1w_1 = 'If-None-Match';
    this.n1w_1 = 'If-Range';
    this.o1w_1 = 'If-Schedule-Tag-Match';
    this.p1w_1 = 'If-Unmodified-Since';
    this.q1w_1 = 'Last-Modified';
    this.r1w_1 = 'Location';
    this.s1w_1 = 'Lock-Token';
    this.t1w_1 = 'Link';
    this.u1w_1 = 'Max-Forwards';
    this.v1w_1 = 'MIME-Version';
    this.w1w_1 = 'Ordering-Type';
    this.x1w_1 = 'Origin';
    this.y1w_1 = 'Overwrite';
    this.z1w_1 = 'Position';
    this.a1x_1 = 'Pragma';
    this.b1x_1 = 'Prefer';
    this.c1x_1 = 'Preference-Applied';
    this.d1x_1 = 'Proxy-Authenticate';
    this.e1x_1 = 'Proxy-Authentication-Info';
    this.f1x_1 = 'Proxy-Authorization';
    this.g1x_1 = 'Public-Key-Pins';
    this.h1x_1 = 'Public-Key-Pins-Report-Only';
    this.i1x_1 = 'Range';
    this.j1x_1 = 'Referer';
    this.k1x_1 = 'Retry-After';
    this.l1x_1 = 'Schedule-Reply';
    this.m1x_1 = 'Schedule-Tag';
    this.n1x_1 = 'Sec-WebSocket-Accept';
    this.o1x_1 = 'Sec-WebSocket-Extensions';
    this.p1x_1 = 'Sec-WebSocket-Key';
    this.q1x_1 = 'Sec-WebSocket-Protocol';
    this.r1x_1 = 'Sec-WebSocket-Version';
    this.s1x_1 = 'Server';
    this.t1x_1 = 'Set-Cookie';
    this.u1x_1 = 'SLUG';
    this.v1x_1 = 'Strict-Transport-Security';
    this.w1x_1 = 'TE';
    this.x1x_1 = 'Timeout';
    this.y1x_1 = 'Trailer';
    this.z1x_1 = 'Transfer-Encoding';
    this.a1y_1 = 'Upgrade';
    this.b1y_1 = 'User-Agent';
    this.c1y_1 = 'Vary';
    this.d1y_1 = 'Via';
    this.e1y_1 = 'Warning';
    this.f1y_1 = 'WWW-Authenticate';
    this.g1y_1 = 'Access-Control-Allow-Origin';
    this.h1y_1 = 'Access-Control-Allow-Methods';
    this.i1y_1 = 'Access-Control-Allow-Credentials';
    this.j1y_1 = 'Access-Control-Allow-Headers';
    this.k1y_1 = 'Access-Control-Request-Method';
    this.l1y_1 = 'Access-Control-Request-Headers';
    this.m1y_1 = 'Access-Control-Expose-Headers';
    this.n1y_1 = 'Access-Control-Max-Age';
    this.o1y_1 = 'X-Http-Method-Override';
    this.p1y_1 = 'X-Forwarded-Host';
    this.q1y_1 = 'X-Forwarded-Server';
    this.r1y_1 = 'X-Forwarded-Proto';
    this.s1y_1 = 'X-Forwarded-For';
    this.t1y_1 = 'X-Request-ID';
    this.u1y_1 = 'X-Correlation-ID';
    this.v1y_1 = 'X-Total-Count';
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_arrayOf = [this.s1v_1, this.v1v_1, this.z1x_1, this.a1y_1];
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_arrayOf;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.w1y_1 = tmp$ret$2;
    this.x1y_1 = asList(this.w1y_1);
  }
  HttpHeaders.prototype.b1z = function () {
    return this.x1y_1;
  };
  HttpHeaders.prototype.y1y = function (name) {
    {
      var index = 0;
      var indexedObject = name;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = charSequenceGet(indexedObject, inductionVariable);
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp0__anonymous__q1qw7t = tmp1;
          if (Char__compareTo_impl_ypi4mb(item, _Char___init__impl__6a9atx(32)) <= 0 ? true : isDelimiter(item)) {
            throw new IllegalHeaderNameException(name, tmp0__anonymous__q1qw7t);
          }
        }
      }
    }
  };
  HttpHeaders.prototype.z1y = function (value) {
    {
      var index = 0;
      var indexedObject = value;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = charSequenceGet(indexedObject, inductionVariable);
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        $l$block: {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp0__anonymous__q1qw7t = tmp1;
          if (equals(new Char(item), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(item), new Char(_Char___init__impl__6a9atx(9)))) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          }
          if (Char__compareTo_impl_ypi4mb(item, _Char___init__impl__6a9atx(32)) < 0) {
            throw new IllegalHeaderValueException(value, tmp0__anonymous__q1qw7t);
          }
        }
      }
    }
  };
  HttpHeaders.$metadata$ = objectMeta('HttpHeaders');
  var HttpHeaders_instance;
  function HttpHeaders_getInstance() {
    if (HttpHeaders_instance == null)
      new HttpHeaders();
    return HttpHeaders_instance;
  }
  function UnsafeHeaderException(header) {
    IllegalArgumentException_init_$Init$('Header(s) ' + header + ' are controlled by the engine and ' + 'cannot be set explicitly', this);
    captureStack(this, UnsafeHeaderException);
  }
  UnsafeHeaderException.$metadata$ = classMeta('UnsafeHeaderException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function isDelimiter(ch) {
    return contains$default('"(),/:;<=>?@[\\]{}', ch, false, 2, null);
  }
  function IllegalHeaderNameException(headerName, position) {
    IllegalArgumentException_init_$Init$("Header name '" + headerName + "' contains illegal character '" + new Char(charSequenceGet(headerName, position)) + "'" + (' (code ' + (Char__toInt_impl_vasixd(charSequenceGet(headerName, position)) & 255) + ')'), this);
    this.c1z_1 = headerName;
    this.d1z_1 = position;
    captureStack(this, IllegalHeaderNameException);
  }
  IllegalHeaderNameException.$metadata$ = classMeta('IllegalHeaderNameException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function IllegalHeaderValueException(headerValue, position) {
    IllegalArgumentException_init_$Init$("Header value '" + headerValue + "' contains illegal character '" + new Char(charSequenceGet(headerValue, position)) + "'" + (' (code ' + (Char__toInt_impl_vasixd(charSequenceGet(headerValue, position)) & 255) + ')'), this);
    this.e1z_1 = headerValue;
    this.f1z_1 = position;
    captureStack(this, IllegalHeaderValueException);
  }
  IllegalHeaderValueException.$metadata$ = classMeta('IllegalHeaderValueException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function HttpMessageBuilder() {
  }
  HttpMessageBuilder.$metadata$ = interfaceMeta('HttpMessageBuilder');
  function HttpMessage() {
  }
  HttpMessage.$metadata$ = interfaceMeta('HttpMessage');
  function contentType(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.g1z().n1k(HttpHeaders_getInstance().v1v_1);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = Companion_getInstance_0().j1t(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function charset_0(_this__u8e3s4) {
    var tmp0_safe_receiver = contentType_0(_this__u8e3s4);
    return tmp0_safe_receiver == null ? null : charset(tmp0_safe_receiver);
  }
  function contentType_0(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.g1z().n1k(HttpHeaders_getInstance().v1v_1);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = Companion_getInstance_0().j1t(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.h1z_1 = new HttpMethod('GET');
    this.i1z_1 = new HttpMethod('POST');
    this.j1z_1 = new HttpMethod('PUT');
    this.k1z_1 = new HttpMethod('PATCH');
    this.l1z_1 = new HttpMethod('DELETE');
    this.m1z_1 = new HttpMethod('HEAD');
    this.n1z_1 = new HttpMethod('OPTIONS');
    this.o1z_1 = listOf([this.h1z_1, this.i1z_1, this.j1z_1, this.k1z_1, this.l1z_1, this.m1z_1, this.n1z_1]);
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_3() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function HttpMethod(value) {
    Companion_getInstance_3();
    this.p1z_1 = value;
  }
  HttpMethod.prototype.toString = function () {
    return 'HttpMethod(value=' + this.p1z_1 + ')';
  };
  HttpMethod.prototype.hashCode = function () {
    return getStringHashCode(this.p1z_1);
  };
  HttpMethod.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpMethod))
      return false;
    var tmp0_other_with_cast = other instanceof HttpMethod ? other : THROW_CCE();
    if (!(this.p1z_1 === tmp0_other_with_cast.p1z_1))
      return false;
    return true;
  };
  HttpMethod.$metadata$ = classMeta('HttpMethod');
  function Companion_3() {
    Companion_instance_3 = this;
    this.q1z_1 = new HttpProtocolVersion('HTTP', 2, 0);
    this.r1z_1 = new HttpProtocolVersion('HTTP', 1, 1);
    this.s1z_1 = new HttpProtocolVersion('HTTP', 1, 0);
    this.t1z_1 = new HttpProtocolVersion('SPDY', 3, 0);
    this.u1z_1 = new HttpProtocolVersion('QUIC', 1, 0);
  }
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_4() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function HttpProtocolVersion(name, major, minor) {
    Companion_getInstance_4();
    this.v1z_1 = name;
    this.w1z_1 = major;
    this.x1z_1 = minor;
  }
  HttpProtocolVersion.prototype.toString = function () {
    return this.v1z_1 + '/' + this.w1z_1 + '.' + this.x1z_1;
  };
  HttpProtocolVersion.prototype.hashCode = function () {
    var result = getStringHashCode(this.v1z_1);
    result = imul(result, 31) + this.w1z_1 | 0;
    result = imul(result, 31) + this.x1z_1 | 0;
    return result;
  };
  HttpProtocolVersion.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpProtocolVersion))
      return false;
    var tmp0_other_with_cast = other instanceof HttpProtocolVersion ? other : THROW_CCE();
    if (!(this.v1z_1 === tmp0_other_with_cast.v1z_1))
      return false;
    if (!(this.w1z_1 === tmp0_other_with_cast.w1z_1))
      return false;
    if (!(this.x1z_1 === tmp0_other_with_cast.x1z_1))
      return false;
    return true;
  };
  HttpProtocolVersion.$metadata$ = classMeta('HttpProtocolVersion');
  function Companion_4() {
    Companion_instance_4 = this;
    this.y1z_1 = new HttpStatusCode(100, 'Continue');
    this.z1z_1 = new HttpStatusCode(101, 'Switching Protocols');
    this.a20_1 = new HttpStatusCode(102, 'Processing');
    this.b20_1 = new HttpStatusCode(200, 'OK');
    this.c20_1 = new HttpStatusCode(201, 'Created');
    this.d20_1 = new HttpStatusCode(202, 'Accepted');
    this.e20_1 = new HttpStatusCode(203, 'Non-Authoritative Information');
    this.f20_1 = new HttpStatusCode(204, 'No Content');
    this.g20_1 = new HttpStatusCode(205, 'Reset Content');
    this.h20_1 = new HttpStatusCode(206, 'Partial Content');
    this.i20_1 = new HttpStatusCode(207, 'Multi-Status');
    this.j20_1 = new HttpStatusCode(300, 'Multiple Choices');
    this.k20_1 = new HttpStatusCode(301, 'Moved Permanently');
    this.l20_1 = new HttpStatusCode(302, 'Found');
    this.m20_1 = new HttpStatusCode(303, 'See Other');
    this.n20_1 = new HttpStatusCode(304, 'Not Modified');
    this.o20_1 = new HttpStatusCode(305, 'Use Proxy');
    this.p20_1 = new HttpStatusCode(306, 'Switch Proxy');
    this.q20_1 = new HttpStatusCode(307, 'Temporary Redirect');
    this.r20_1 = new HttpStatusCode(308, 'Permanent Redirect');
    this.s20_1 = new HttpStatusCode(400, 'Bad Request');
    this.t20_1 = new HttpStatusCode(401, 'Unauthorized');
    this.u20_1 = new HttpStatusCode(402, 'Payment Required');
    this.v20_1 = new HttpStatusCode(403, 'Forbidden');
    this.w20_1 = new HttpStatusCode(404, 'Not Found');
    this.x20_1 = new HttpStatusCode(405, 'Method Not Allowed');
    this.y20_1 = new HttpStatusCode(406, 'Not Acceptable');
    this.z20_1 = new HttpStatusCode(407, 'Proxy Authentication Required');
    this.a21_1 = new HttpStatusCode(408, 'Request Timeout');
    this.b21_1 = new HttpStatusCode(409, 'Conflict');
    this.c21_1 = new HttpStatusCode(410, 'Gone');
    this.d21_1 = new HttpStatusCode(411, 'Length Required');
    this.e21_1 = new HttpStatusCode(412, 'Precondition Failed');
    this.f21_1 = new HttpStatusCode(413, 'Payload Too Large');
    this.g21_1 = new HttpStatusCode(414, 'Request-URI Too Long');
    this.h21_1 = new HttpStatusCode(415, 'Unsupported Media Type');
    this.i21_1 = new HttpStatusCode(416, 'Requested Range Not Satisfiable');
    this.j21_1 = new HttpStatusCode(417, 'Expectation Failed');
    this.k21_1 = new HttpStatusCode(422, 'Unprocessable Entity');
    this.l21_1 = new HttpStatusCode(423, 'Locked');
    this.m21_1 = new HttpStatusCode(424, 'Failed Dependency');
    this.n21_1 = new HttpStatusCode(426, 'Upgrade Required');
    this.o21_1 = new HttpStatusCode(429, 'Too Many Requests');
    this.p21_1 = new HttpStatusCode(431, 'Request Header Fields Too Large');
    this.q21_1 = new HttpStatusCode(500, 'Internal Server Error');
    this.r21_1 = new HttpStatusCode(501, 'Not Implemented');
    this.s21_1 = new HttpStatusCode(502, 'Bad Gateway');
    this.t21_1 = new HttpStatusCode(503, 'Service Unavailable');
    this.u21_1 = new HttpStatusCode(504, 'Gateway Timeout');
    this.v21_1 = new HttpStatusCode(505, 'HTTP Version Not Supported');
    this.w21_1 = new HttpStatusCode(506, 'Variant Also Negotiates');
    this.x21_1 = new HttpStatusCode(507, 'Insufficient Storage');
    this.y21_1 = allStatusCodes();
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = 1000;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$3;
      {
        var tmp$ret$2;
        $l$block: {
          var tmp0_firstOrNull = Companion_getInstance_5().y21_1;
          var tmp0_iterator = tmp0_firstOrNull.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            var tmp$ret$1;
            {
              tmp$ret$1 = element.a22_1 === tmp_3;
            }
            if (tmp$ret$1) {
              tmp$ret$2 = element;
              break $l$block;
            }
          }
          tmp$ret$2 = null;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp_2[tmp_3] = tmp$ret$3;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.z21_1 = tmp_2;
  }
  Companion_4.prototype.c22 = function () {
    return this.y21_1;
  };
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_5() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function HttpStatusCode(value, description) {
    Companion_getInstance_5();
    this.a22_1 = value;
    this.b22_1 = description;
  }
  HttpStatusCode.prototype.t = function () {
    return this.a22_1;
  };
  HttpStatusCode.prototype.toString = function () {
    return '' + this.a22_1 + ' ' + this.b22_1;
  };
  HttpStatusCode.prototype.equals = function (other) {
    var tmp;
    if (other instanceof HttpStatusCode) {
      tmp = other.a22_1 === this.a22_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  HttpStatusCode.prototype.hashCode = function () {
    return this.a22_1;
  };
  HttpStatusCode.$metadata$ = classMeta('HttpStatusCode');
  function allStatusCodes() {
    return listOf([Companion_getInstance_5().y1z_1, Companion_getInstance_5().z1z_1, Companion_getInstance_5().a20_1, Companion_getInstance_5().b20_1, Companion_getInstance_5().c20_1, Companion_getInstance_5().d20_1, Companion_getInstance_5().e20_1, Companion_getInstance_5().f20_1, Companion_getInstance_5().g20_1, Companion_getInstance_5().h20_1, Companion_getInstance_5().i20_1, Companion_getInstance_5().j20_1, Companion_getInstance_5().k20_1, Companion_getInstance_5().l20_1, Companion_getInstance_5().m20_1, Companion_getInstance_5().n20_1, Companion_getInstance_5().o20_1, Companion_getInstance_5().p20_1, Companion_getInstance_5().q20_1, Companion_getInstance_5().r20_1, Companion_getInstance_5().s20_1, Companion_getInstance_5().t20_1, Companion_getInstance_5().u20_1, Companion_getInstance_5().v20_1, Companion_getInstance_5().w20_1, Companion_getInstance_5().x20_1, Companion_getInstance_5().y20_1, Companion_getInstance_5().z20_1, Companion_getInstance_5().a21_1, Companion_getInstance_5().b21_1, Companion_getInstance_5().c21_1, Companion_getInstance_5().d21_1, Companion_getInstance_5().e21_1, Companion_getInstance_5().f21_1, Companion_getInstance_5().g21_1, Companion_getInstance_5().h21_1, Companion_getInstance_5().i21_1, Companion_getInstance_5().j21_1, Companion_getInstance_5().k21_1, Companion_getInstance_5().l21_1, Companion_getInstance_5().m21_1, Companion_getInstance_5().n21_1, Companion_getInstance_5().o21_1, Companion_getInstance_5().p21_1, Companion_getInstance_5().q21_1, Companion_getInstance_5().r21_1, Companion_getInstance_5().s21_1, Companion_getInstance_5().t21_1, Companion_getInstance_5().u21_1, Companion_getInstance_5().v21_1, Companion_getInstance_5().w21_1, Companion_getInstance_5().x21_1]);
  }
  function formUrlEncodeTo(_this__u8e3s4, out) {
    formUrlEncodeTo_1(_this__u8e3s4.s1l(), out);
  }
  function formUrlEncodeTo_0(_this__u8e3s4, out) {
    formUrlEncodeTo_1(_this__u8e3s4.s1l(), out);
  }
  function formUrlEncodeTo_1(_this__u8e3s4, out) {
    var tmp$ret$7;
    {
      var tmp$ret$6;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = _this__u8e3s4.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$5;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = element.s();
            }
            var key = tmp$ret$0;
            var tmp$ret$1;
            {
              tmp$ret$1 = element.t();
            }
            var value = tmp$ret$1;
            var tmp;
            if (value.m()) {
              tmp = listOf_0(to(key, null));
            } else {
              var tmp$ret$4;
              {
                var tmp$ret$3;
                {
                  var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(value, 10));
                  var tmp0_iterator_0 = value.d();
                  while (tmp0_iterator_0.e()) {
                    var item = tmp0_iterator_0.f();
                    var tmp$ret$2;
                    {
                      tmp$ret$2 = to(key, item);
                    }
                    tmp0_mapTo.a(tmp$ret$2);
                  }
                  tmp$ret$3 = tmp0_mapTo;
                }
                tmp$ret$4 = tmp$ret$3;
              }
              tmp = tmp$ret$4;
            }
            tmp$ret$5 = tmp;
          }
          var list = tmp$ret$5;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$6 = tmp0_flatMapTo;
      }
      tmp$ret$7 = tmp$ret$6;
    }
    formUrlEncodeTo_2(tmp$ret$7, out);
  }
  function formUrlEncodeTo_2(_this__u8e3s4, out) {
    joinTo$default(_this__u8e3s4, out, '&', null, null, 0, null, formUrlEncodeTo$lambda(), 60, null);
  }
  function formUrlEncodeTo$lambda() {
    return function (it) {
      var key = encodeURLParameter(it.f3_1, true);
      var tmp;
      if (it.g3_1 == null) {
        tmp = key;
      } else {
        var value = encodeURLParameterValue(toString_0(it.g3_1));
        tmp = key + '=' + value;
      }
      return tmp;
    };
  }
  function ParametersBuilder_init_$Init$(size, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      size = 8;
    ParametersBuilder.call($this, size);
    return $this;
  }
  function ParametersBuilder_init_$Create$(size, $mask0, $marker) {
    return ParametersBuilder_init_$Init$(size, $mask0, $marker, Object.create(ParametersBuilder.prototype));
  }
  function ParametersBuilder(size) {
    StringValuesBuilder.call(this, true, size);
  }
  ParametersBuilder.prototype.o16 = function () {
    {
      var tmp0_require = !this.q1l();
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'ParametersBuilder can only build a single Parameters instance';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    this.p1l(true);
    return new ParametersImpl(this.k2());
  };
  ParametersBuilder.$metadata$ = classMeta('ParametersBuilder', undefined, undefined, undefined, undefined, StringValuesBuilder.prototype);
  function Companion_5() {
    Companion_instance_5 = this;
    this.g22_1 = EmptyParameters_getInstance();
  }
  Companion_5.prototype.h22 = function (builder) {
    var tmp$ret$0;
    {
      var tmp0_apply = ParametersBuilder_init_$Create$(0, 1, null);
      {
      }
      builder(tmp0_apply);
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0.o16();
  };
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_6() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function Parameters() {
  }
  Parameters.$metadata$ = interfaceMeta('Parameters', [StringValues]);
  function ParametersImpl(values) {
    StringValuesImpl.call(this, true, values);
  }
  ParametersImpl.prototype.toString = function () {
    return 'Parameters ' + this.s1l();
  };
  ParametersImpl.$metadata$ = classMeta('ParametersImpl', [Parameters], undefined, undefined, undefined, StringValuesImpl.prototype);
  function EmptyParameters() {
    EmptyParameters_instance = this;
  }
  EmptyParameters.prototype.z1l = function () {
    return true;
  };
  EmptyParameters.prototype.r1l = function (name) {
    return null;
  };
  EmptyParameters.prototype.s1l = function () {
    return emptySet();
  };
  EmptyParameters.prototype.m = function () {
    return true;
  };
  EmptyParameters.prototype.toString = function () {
    return 'Parameters ' + this.s1l();
  };
  EmptyParameters.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Parameters) : false) {
      tmp = other.m();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyParameters.$metadata$ = objectMeta('EmptyParameters', [Parameters]);
  var EmptyParameters_instance;
  function EmptyParameters_getInstance() {
    if (EmptyParameters_instance == null)
      new EmptyParameters();
    return EmptyParameters_instance;
  }
  function parseQueryString(query, startIndex, limit) {
    var tmp;
    if (startIndex > get_lastIndex(query)) {
      tmp = Companion_getInstance_6().g22_1;
    } else {
      var tmp$ret$1;
      {
        var tmp0_build = Companion_getInstance_6();
        var tmp$ret$0;
        {
          var tmp0_apply = ParametersBuilder_init_$Create$(0, 1, null);
          {
          }
          {
            parse(tmp0_apply, query, startIndex, limit);
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp$ret$1 = tmp$ret$0.o16();
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function parseQueryString$default(query, startIndex, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      limit = 1000;
    return parseQueryString(query, startIndex, limit);
  }
  function parse(_this__u8e3s4, query, startIndex, limit) {
    var count = 0;
    var nameIndex = startIndex;
    var equalIndex = -1;
    var inductionVariable = startIndex;
    var last = get_lastIndex(query);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (count === limit) {
          return Unit_getInstance();
        }
        var tmp1_subject = charSequenceGet(query, index);
        if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(38)))) {
          appendParam(_this__u8e3s4, query, nameIndex, equalIndex, index);
          nameIndex = index + 1 | 0;
          equalIndex = -1;
          var tmp2 = count;
          count = tmp2 + 1 | 0;
        } else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(61)))) {
          if (equalIndex === -1) {
            equalIndex = index;
          }
        }
      }
       while (!(index === last));
    if (count === limit) {
      return Unit_getInstance();
    }
    appendParam(_this__u8e3s4, query, nameIndex, equalIndex, query.length);
  }
  function appendParam(_this__u8e3s4, query, nameIndex, equalIndex, endIndex) {
    if (equalIndex === -1) {
      var spaceNameIndex = trimStart(nameIndex, endIndex, query);
      var spaceEndIndex = trimEnd(spaceNameIndex, endIndex, query);
      if (spaceEndIndex > spaceNameIndex) {
        var name = decodeURLQueryComponent$default(query, spaceNameIndex, spaceEndIndex, false, null, 12, null);
        _this__u8e3s4.o1l(name, emptyList());
      }
    } else {
      var spaceNameIndex_0 = trimStart(nameIndex, equalIndex, query);
      var spaceEqualIndex = trimEnd(spaceNameIndex_0, equalIndex, query);
      if (spaceEqualIndex > spaceNameIndex_0) {
        var name_0 = decodeURLQueryComponent$default(query, spaceNameIndex_0, spaceEqualIndex, false, null, 12, null);
        var spaceValueIndex = trimStart(equalIndex + 1 | 0, endIndex, query);
        var spaceEndIndex_0 = trimEnd(spaceValueIndex, endIndex, query);
        var value = decodeURLQueryComponent$default(query, spaceValueIndex, spaceEndIndex_0, true, null, 8, null);
        _this__u8e3s4.v1l(name_0, value);
      }
    }
  }
  function trimStart(start, end, query) {
    var spaceIndex = start;
    while (spaceIndex < end ? isWhitespace(charSequenceGet(query, spaceIndex)) : false) {
      var tmp0 = spaceIndex;
      spaceIndex = tmp0 + 1 | 0;
    }
    return spaceIndex;
  }
  function trimEnd(start, end, text) {
    var spaceIndex = end;
    while (spaceIndex > start ? isWhitespace(charSequenceGet(text, spaceIndex - 1 | 0)) : false) {
      var tmp0 = spaceIndex;
      spaceIndex = tmp0 - 1 | 0;
    }
    return spaceIndex;
  }
  function URLBuilder_init_$Init$(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      protocol = Companion_getInstance_9().i22_1;
    if (!(($mask0 & 2) === 0))
      host = 'localhost';
    if (!(($mask0 & 4) === 0))
      port = 0;
    if (!(($mask0 & 8) === 0))
      user = null;
    if (!(($mask0 & 16) === 0))
      password = null;
    if (!(($mask0 & 32) === 0))
      encodedPath = '/';
    if (!(($mask0 & 64) === 0)) {
      parameters = ParametersBuilder_init_$Create$(0, 1, null);
    }
    if (!(($mask0 & 128) === 0))
      fragment = '';
    if (!(($mask0 & 256) === 0))
      trailingQuery = false;
    URLBuilder.call($this, protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery);
    return $this;
  }
  function URLBuilder_init_$Create$(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery, $mask0, $marker) {
    return URLBuilder_init_$Init$(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery, $mask0, $marker, Object.create(URLBuilder.prototype));
  }
  function appendTo($this, out) {
    out.b($this.q22_1.o22_1);
    var tmp0_subject = $this.q22_1.o22_1;
    if (tmp0_subject === 'file') {
      appendFile(out, $this.r22_1, $this.v22_1);
      return out;
    } else if (tmp0_subject === 'mailto') {
      appendMailto(out, get_userAndPassword($this), $this.v22_1);
      return out;
    }
    out.b('://');
    out.b(get_authority_0($this));
    appendUrlFullPath(out, $this.v22_1, $this.w22_1, $this.y22_1);
    var tmp$ret$0;
    {
      var tmp0_isNotEmpty = $this.x22_1;
      tmp$ret$0 = charSequenceLength(tmp0_isNotEmpty) > 0;
    }
    if (tmp$ret$0) {
      out.b5(_Char___init__impl__6a9atx(35));
      var tmp = $this.x22_1;
      out.b(encodeURLQueryComponent$default(tmp, false, false, null, 7, null));
    }
    return out;
  }
  function Companion_6() {
    Companion_instance_6 = this;
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_7() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function URLBuilder(protocol, host, port, user, password, encodedPath, parameters, fragment, trailingQuery) {
    Companion_getInstance_7();
    this.q22_1 = protocol;
    this.r22_1 = host;
    this.s22_1 = port;
    this.t22_1 = user;
    this.u22_1 = password;
    this.v22_1 = encodedPath;
    this.w22_1 = parameters;
    this.x22_1 = fragment;
    this.y22_1 = trailingQuery;
    var tmp0_safe_receiver = get_originHost(Companion_getInstance_7());
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = takeFrom(this, tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
    }
    var tmp$ret$2;
    {
      var tmp0_isEmpty = this.v22_1;
      tmp$ret$2 = charSequenceLength(tmp0_isEmpty) === 0;
    }
    if (tmp$ret$2) {
      this.v22_1 = '/';
    }
  }
  URLBuilder.prototype.z22 = function (_set____db54di) {
    this.q22_1 = _set____db54di;
  };
  URLBuilder.prototype.a23 = function () {
    return this.q22_1;
  };
  URLBuilder.prototype.b23 = function (_set____db54di) {
    this.r22_1 = _set____db54di;
  };
  URLBuilder.prototype.c23 = function () {
    return this.r22_1;
  };
  URLBuilder.prototype.d23 = function (_set____db54di) {
    this.s22_1 = _set____db54di;
  };
  URLBuilder.prototype.e23 = function () {
    return this.s22_1;
  };
  URLBuilder.prototype.f23 = function () {
    return this.t22_1;
  };
  URLBuilder.prototype.g23 = function () {
    return this.u22_1;
  };
  URLBuilder.prototype.h23 = function (_set____db54di) {
    this.v22_1 = _set____db54di;
  };
  URLBuilder.prototype.i23 = function () {
    return appendTo(this, StringBuilder_init_$Create$_0(256)).toString();
  };
  URLBuilder.prototype.o16 = function () {
    return new Url(this.q22_1, this.r22_1, this.s22_1, this.v22_1, this.w22_1.o16(), this.x22_1, this.t22_1, this.u22_1, this.y22_1);
  };
  URLBuilder.$metadata$ = classMeta('URLBuilder');
  function Companion_7() {
    Companion_instance_7 = this;
  }
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_8() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function Url(protocol, host, specifiedPort, encodedPath, parameters, fragment, user, password, trailingQuery) {
    Companion_getInstance_8();
    this.j23_1 = protocol;
    this.k23_1 = host;
    this.l23_1 = specifiedPort;
    this.m23_1 = encodedPath;
    this.n23_1 = parameters;
    this.o23_1 = fragment;
    this.p23_1 = user;
    this.q23_1 = password;
    this.r23_1 = trailingQuery;
    {
      var tmp;
      var containsArg = this.l23_1;
      if (1 <= containsArg ? containsArg <= 65536 : false) {
        tmp = true;
      } else {
        tmp = this.l23_1 === 0;
      }
      var tmp0_require = tmp;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'port must be between 1 and 65536, or 0 if not set';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  Url.prototype.a23 = function () {
    return this.j23_1;
  };
  Url.prototype.c23 = function () {
    return this.k23_1;
  };
  Url.prototype.s23 = function () {
    return this.l23_1;
  };
  Url.prototype.t23 = function () {
    return this.m23_1;
  };
  Url.prototype.f1t = function () {
    return this.n23_1;
  };
  Url.prototype.u23 = function () {
    return this.o23_1;
  };
  Url.prototype.f23 = function () {
    return this.p23_1;
  };
  Url.prototype.g23 = function () {
    return this.q23_1;
  };
  Url.prototype.v23 = function () {
    return this.r23_1;
  };
  Url.prototype.e23 = function () {
    var tmp$ret$1;
    {
      var tmp0_takeUnless = this.l23_1;
      {
      }
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_takeUnless === 0;
      }
      if (!tmp$ret$0) {
        tmp = tmp0_takeUnless;
      } else {
        tmp = null;
      }
      tmp$ret$1 = tmp;
    }
    var tmp0_elvis_lhs = tmp$ret$1;
    return tmp0_elvis_lhs == null ? this.j23_1.p22_1 : tmp0_elvis_lhs;
  };
  Url.prototype.toString = function () {
    var tmp$ret$3;
    {
      {
      }
      var tmp$ret$2;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        var tmp$ret$0;
        $l$block_0: {
          tmp0_apply.pf(this.j23_1.o22_1);
          var tmp0_subject = this.j23_1.o22_1;
          if (tmp0_subject === 'file') {
            appendFile(tmp0_apply, this.k23_1, this.m23_1);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_0;
          } else if (tmp0_subject === 'mailto') {
            var tmp1_elvis_lhs = this.p23_1;
            var tmp;
            if (tmp1_elvis_lhs == null) {
              throw IllegalStateException_init_$Create$("User can't be empty.");
            } else {
              tmp = tmp1_elvis_lhs;
            }
            var userValue = tmp;
            appendMailto(tmp0_apply, userValue, this.k23_1);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_0;
          }
          tmp0_apply.pf('://');
          tmp0_apply.pf(get_authority(this));
          tmp0_apply.pf(get_fullPath(this));
          var tmp$ret$1;
          {
            var tmp0_isNotEmpty = this.o23_1;
            tmp$ret$1 = charSequenceLength(tmp0_isNotEmpty) > 0;
          }
          if (tmp$ret$1) {
            tmp0_apply.b5(_Char___init__impl__6a9atx(35));
            tmp0_apply.pf(this.o23_1);
          }
        }
        tmp$ret$2 = tmp0_apply;
      }
      tmp$ret$3 = tmp$ret$2.toString();
    }
    return tmp$ret$3;
  };
  Url.prototype.hashCode = function () {
    var result = this.j23_1.hashCode();
    result = imul(result, 31) + getStringHashCode(this.k23_1) | 0;
    result = imul(result, 31) + this.l23_1 | 0;
    result = imul(result, 31) + getStringHashCode(this.m23_1) | 0;
    result = imul(result, 31) + hashCode(this.n23_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.o23_1) | 0;
    result = imul(result, 31) + (this.p23_1 == null ? 0 : getStringHashCode(this.p23_1)) | 0;
    result = imul(result, 31) + (this.q23_1 == null ? 0 : getStringHashCode(this.q23_1)) | 0;
    result = imul(result, 31) + (this.r23_1 | 0) | 0;
    return result;
  };
  Url.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Url))
      return false;
    var tmp0_other_with_cast = other instanceof Url ? other : THROW_CCE();
    if (!this.j23_1.equals(tmp0_other_with_cast.j23_1))
      return false;
    if (!(this.k23_1 === tmp0_other_with_cast.k23_1))
      return false;
    if (!(this.l23_1 === tmp0_other_with_cast.l23_1))
      return false;
    if (!(this.m23_1 === tmp0_other_with_cast.m23_1))
      return false;
    if (!equals(this.n23_1, tmp0_other_with_cast.n23_1))
      return false;
    if (!(this.o23_1 === tmp0_other_with_cast.o23_1))
      return false;
    if (!(this.p23_1 == tmp0_other_with_cast.p23_1))
      return false;
    if (!(this.q23_1 == tmp0_other_with_cast.q23_1))
      return false;
    if (!(this.r23_1 === tmp0_other_with_cast.r23_1))
      return false;
    return true;
  };
  Url.$metadata$ = classMeta('Url');
  function get_authority(_this__u8e3s4) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.pf(get_userAndPassword_0(_this__u8e3s4));
          if (_this__u8e3s4.l23_1 === 0) {
            tmp0_apply.pf(_this__u8e3s4.k23_1);
          } else {
            tmp0_apply.pf(get_hostWithPort(_this__u8e3s4));
          }
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function get_authority_0(_this__u8e3s4) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.pf(get_userAndPassword(_this__u8e3s4));
          tmp0_apply.pf(_this__u8e3s4.r22_1);
          if (!(_this__u8e3s4.s22_1 === 0) ? !(_this__u8e3s4.s22_1 === _this__u8e3s4.q22_1.p22_1) : false) {
            tmp0_apply.pf(':');
            tmp0_apply.pf(_this__u8e3s4.s22_1.toString());
          }
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function get_DEFAULT_PORT() {
    return DEFAULT_PORT;
  }
  var DEFAULT_PORT;
  function appendFile(_this__u8e3s4, host, encodedPath) {
    _this__u8e3s4.b('://');
    _this__u8e3s4.b(host);
    _this__u8e3s4.b(encodedPath);
  }
  function appendMailto(_this__u8e3s4, user, host) {
    _this__u8e3s4.b(':');
    _this__u8e3s4.b(encodeURLParameter$default(user, false, 1, null));
    _this__u8e3s4.b5(_Char___init__impl__6a9atx(64));
    _this__u8e3s4.b(host);
  }
  function get_userAndPassword(_this__u8e3s4) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          appendUserAndPassword(tmp0_apply, _this__u8e3s4.t22_1, _this__u8e3s4.u22_1);
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function get_userAndPassword_0(_this__u8e3s4) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          appendUserAndPassword(tmp0_apply, _this__u8e3s4.p23_1, _this__u8e3s4.q23_1);
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function appendUserAndPassword(_this__u8e3s4, user, password) {
    var tmp0_elvis_lhs = user;
    if (tmp0_elvis_lhs == null)
      return Unit_getInstance();
    else
      tmp0_elvis_lhs;
    _this__u8e3s4.pf(encodeURLParameter$default(user, false, 1, null));
    if (!(password == null)) {
      _this__u8e3s4.b5(_Char___init__impl__6a9atx(58));
      _this__u8e3s4.pf(encodeURLParameter$default(password, false, 1, null));
    }
    _this__u8e3s4.pf('@');
  }
  function takeFrom(_this__u8e3s4, urlString) {
    var tmp;
    try {
      tmp = takeFromUnsafe(_this__u8e3s4, urlString);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        throw new URLParserException(urlString, $p);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function takeFromUnsafe(_this__u8e3s4, urlString) {
    var tmp$ret$1;
    $l$block: {
      var inductionVariable = 0;
      var last = charSequenceLength(urlString) - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          {
            var tmp0__anonymous__q1qw7t = charSequenceGet(urlString, index);
            tmp$ret$0 = !isWhitespace(tmp0__anonymous__q1qw7t);
          }
          if (tmp$ret$0) {
            tmp$ret$1 = index;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = -1;
    }
    var startIndex = tmp$ret$1;
    var tmp$ret$3;
    $l$block_0: {
      var inductionVariable_0 = charSequenceLength(urlString) - 1 | 0;
      if (0 <= inductionVariable_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + -1 | 0;
          var tmp$ret$2;
          {
            var tmp1__anonymous__uwfjfc = charSequenceGet(urlString, index_0);
            tmp$ret$2 = !isWhitespace(tmp1__anonymous__uwfjfc);
          }
          if (tmp$ret$2) {
            tmp$ret$3 = index_0;
            break $l$block_0;
          }
        }
         while (0 <= inductionVariable_0);
      tmp$ret$3 = -1;
    }
    var endIndex = tmp$ret$3 + 1 | 0;
    var schemeLength = findScheme(urlString, startIndex, endIndex);
    if (schemeLength > 0) {
      var tmp$ret$5;
      {
        var tmp2_substring = startIndex;
        var tmp3_substring = startIndex + schemeLength | 0;
        var tmp$ret$4;
        {
          tmp$ret$4 = urlString;
        }
        tmp$ret$5 = tmp$ret$4.substring(tmp2_substring, tmp3_substring);
      }
      var scheme = tmp$ret$5;
      _this__u8e3s4.q22_1 = Companion_getInstance_9().w23(scheme);
      startIndex = startIndex + (schemeLength + 1 | 0) | 0;
    }
    var slashCount = count(urlString, startIndex, endIndex, _Char___init__impl__6a9atx(47));
    startIndex = startIndex + slashCount | 0;
    if (_this__u8e3s4.q22_1.o22_1 === 'file') {
      parseFile(_this__u8e3s4, urlString, startIndex, endIndex, slashCount);
      return _this__u8e3s4;
    }
    if (_this__u8e3s4.q22_1.o22_1 === 'mailto') {
      {
        var tmp4_require = slashCount === 0;
        {
        }
        {
          {
          }
          if (!tmp4_require) {
            var tmp$ret$6;
            {
              tmp$ret$6 = 'Failed requirement.';
            }
            var message = tmp$ret$6;
            throw IllegalArgumentException_init_$Create$(toString(message));
          }
        }
      }
      parseMailto(_this__u8e3s4, urlString, startIndex, endIndex);
      return _this__u8e3s4;
    }
    if (slashCount >= 2) {
      loop: while (true) {
        var tmp$ret$8;
        {
          var tmp = toCharArray('@/\\?#');
          var tmp_0 = startIndex;
          var tmp5_takeIf = indexOfAny$default(urlString, tmp, tmp_0, false, 4, null);
          {
          }
          var tmp_1;
          var tmp$ret$7;
          {
            tmp$ret$7 = tmp5_takeIf > 0;
          }
          if (tmp$ret$7) {
            tmp_1 = tmp5_takeIf;
          } else {
            tmp_1 = null;
          }
          tmp$ret$8 = tmp_1;
        }
        var tmp0_elvis_lhs = tmp$ret$8;
        var delimiter = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
        if (delimiter < endIndex ? equals(new Char(charSequenceGet(urlString, delimiter)), new Char(_Char___init__impl__6a9atx(64))) : false) {
          var passwordIndex = indexOfColonInHostPort(urlString, startIndex, delimiter);
          if (!(passwordIndex === -1)) {
            var tmp_2 = _this__u8e3s4;
            var tmp$ret$10;
            {
              var tmp6_substring = startIndex;
              var tmp$ret$9;
              {
                tmp$ret$9 = urlString;
              }
              tmp$ret$10 = tmp$ret$9.substring(tmp6_substring, passwordIndex);
            }
            var tmp_3 = tmp$ret$10;
            tmp_2.t22_1 = decodeURLPart$default(tmp_3, 0, 0, null, 7, null);
            var tmp_4 = _this__u8e3s4;
            var tmp$ret$12;
            {
              var tmp7_substring = passwordIndex + 1 | 0;
              var tmp$ret$11;
              {
                tmp$ret$11 = urlString;
              }
              tmp$ret$12 = tmp$ret$11.substring(tmp7_substring, delimiter);
            }
            var tmp_5 = tmp$ret$12;
            tmp_4.u22_1 = decodeURLPart$default(tmp_5, 0, 0, null, 7, null);
          } else {
            var tmp_6 = _this__u8e3s4;
            var tmp$ret$14;
            {
              var tmp8_substring = startIndex;
              var tmp$ret$13;
              {
                tmp$ret$13 = urlString;
              }
              tmp$ret$14 = tmp$ret$13.substring(tmp8_substring, delimiter);
            }
            var tmp_7 = tmp$ret$14;
            tmp_6.t22_1 = decodeURLPart$default(tmp_7, 0, 0, null, 7, null);
          }
          startIndex = delimiter + 1 | 0;
        } else {
          fillHost(_this__u8e3s4, urlString, startIndex, delimiter);
          startIndex = delimiter;
          break loop;
        }
      }
    }
    if (startIndex >= endIndex) {
      _this__u8e3s4.v22_1 = equals(new Char(charSequenceGet(urlString, endIndex - 1 | 0)), new Char(_Char___init__impl__6a9atx(47))) ? '/' : '';
      return _this__u8e3s4;
    }
    var tmp_8 = _this__u8e3s4;
    var tmp_9;
    if (slashCount === 0) {
      var tmp_10 = _this__u8e3s4.v22_1;
      var tmp_11 = _Char___init__impl__6a9atx(47);
      var lastSlashIndex = lastIndexOf$default(tmp_10, tmp_11, 0, false, 6, null);
      var tmp_12;
      if (!(lastSlashIndex === (_this__u8e3s4.v22_1.length - 1 | 0))) {
        var tmp_13;
        if (!(lastSlashIndex === -1)) {
          var tmp$ret$16;
          {
            var tmp9_substring = _this__u8e3s4.v22_1;
            var tmp10_substring = lastSlashIndex + 1 | 0;
            var tmp$ret$15;
            {
              tmp$ret$15 = tmp9_substring;
            }
            tmp$ret$16 = tmp$ret$15.substring(0, tmp10_substring);
          }
          tmp_13 = tmp$ret$16;
        } else {
          tmp_13 = '/';
        }
        tmp_12 = tmp_13;
      } else {
        tmp_12 = _this__u8e3s4.v22_1;
      }
      tmp_9 = tmp_12;
    } else {
      tmp_9 = '';
    }
    tmp_8.v22_1 = tmp_9;
    var tmp$ret$18;
    {
      var tmp_14 = toCharArray('?#');
      var tmp_15 = startIndex;
      var tmp11_takeIf = indexOfAny$default(urlString, tmp_14, tmp_15, false, 4, null);
      {
      }
      var tmp_16;
      var tmp$ret$17;
      {
        tmp$ret$17 = tmp11_takeIf > 0;
      }
      if (tmp$ret$17) {
        tmp_16 = tmp11_takeIf;
      } else {
        tmp_16 = null;
      }
      tmp$ret$18 = tmp_16;
    }
    var tmp1_elvis_lhs = tmp$ret$18;
    var pathEnd = tmp1_elvis_lhs == null ? endIndex : tmp1_elvis_lhs;
    var tmp$ret$20;
    {
      var tmp12_substring = startIndex;
      var tmp$ret$19;
      {
        tmp$ret$19 = urlString;
      }
      tmp$ret$20 = tmp$ret$19.substring(tmp12_substring, pathEnd);
    }
    var rawPath = tmp$ret$20;
    var tmp2_this = _this__u8e3s4;
    tmp2_this.v22_1 = tmp2_this.v22_1 + encodeURLPath(rawPath);
    startIndex = pathEnd;
    if (startIndex < endIndex ? equals(new Char(charSequenceGet(urlString, startIndex)), new Char(_Char___init__impl__6a9atx(63))) : false) {
      startIndex = parseQuery(_this__u8e3s4, urlString, startIndex, endIndex);
    }
    parseFragment(_this__u8e3s4, urlString, startIndex, endIndex);
    return _this__u8e3s4;
  }
  function URLParserException(urlString, cause) {
    IllegalStateException_init_$Init$('Fail to parse url: ' + urlString, cause, this);
    captureStack(this, URLParserException);
  }
  URLParserException.$metadata$ = classMeta('URLParserException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function findScheme(urlString, startIndex, endIndex) {
    var current = startIndex;
    var incorrectSchemePosition = -1;
    var firstChar = charSequenceGet(urlString, current);
    if (!(_Char___init__impl__6a9atx(97) <= firstChar ? firstChar <= _Char___init__impl__6a9atx(122) : false) ? !(_Char___init__impl__6a9atx(65) <= firstChar ? firstChar <= _Char___init__impl__6a9atx(90) : false) : false) {
      incorrectSchemePosition = current;
    }
    while (current < endIndex) {
      var char = charSequenceGet(urlString, current);
      if (equals(new Char(char), new Char(_Char___init__impl__6a9atx(58)))) {
        if (!(incorrectSchemePosition === -1)) {
          throw IllegalArgumentException_init_$Create$('Illegal character in scheme at position ' + incorrectSchemePosition);
        }
        return current - startIndex | 0;
      }
      if ((equals(new Char(char), new Char(_Char___init__impl__6a9atx(47))) ? true : equals(new Char(char), new Char(_Char___init__impl__6a9atx(63)))) ? true : equals(new Char(char), new Char(_Char___init__impl__6a9atx(35))))
        return -1;
      if ((((((incorrectSchemePosition === -1 ? !(_Char___init__impl__6a9atx(97) <= char ? char <= _Char___init__impl__6a9atx(122) : false) : false) ? !(_Char___init__impl__6a9atx(65) <= char ? char <= _Char___init__impl__6a9atx(90) : false) : false) ? !(_Char___init__impl__6a9atx(48) <= char ? char <= _Char___init__impl__6a9atx(57) : false) : false) ? !equals(new Char(char), new Char(_Char___init__impl__6a9atx(46))) : false) ? !equals(new Char(char), new Char(_Char___init__impl__6a9atx(43))) : false) ? !equals(new Char(char), new Char(_Char___init__impl__6a9atx(45))) : false) {
        incorrectSchemePosition = current;
      }
      current = current + 1 | 0;
    }
    return -1;
  }
  function count(urlString, startIndex, endIndex, char) {
    var result = 0;
    $l$loop: while ((startIndex + result | 0) < endIndex) {
      if (!equals(new Char(charSequenceGet(urlString, startIndex + result | 0)), new Char(char)))
        break $l$loop;
      var tmp0 = result;
      result = tmp0 + 1 | 0;
    }
    return result;
  }
  function parseFile(_this__u8e3s4, urlString, startIndex, endIndex, slashCount) {
    var tmp0_subject = slashCount;
    switch (tmp0_subject) {
      case 2:
        var tmp = _Char___init__impl__6a9atx(47);
        var nextSlash = indexOf$default(urlString, tmp, startIndex, false, 4, null);
        if (nextSlash === -1 ? true : nextSlash === endIndex) {
          var tmp_0 = _this__u8e3s4;
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = urlString;
            }
            tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
          }
          tmp_0.r22_1 = tmp$ret$1;
          return Unit_getInstance();
        }

        var tmp_1 = _this__u8e3s4;
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            tmp$ret$2 = urlString;
          }
          tmp$ret$3 = tmp$ret$2.substring(startIndex, nextSlash);
        }

        tmp_1.r22_1 = tmp$ret$3;
        var tmp_2 = _this__u8e3s4;
        var tmp$ret$5;
        {
          var tmp$ret$4;
          {
            tmp$ret$4 = urlString;
          }
          tmp$ret$5 = tmp$ret$4.substring(nextSlash, endIndex);
        }

        tmp_2.v22_1 = tmp$ret$5;
        break;
      case 3:
        _this__u8e3s4.r22_1 = '';
        var tmp_3 = _this__u8e3s4;
        var tmp$ret$7;
        {
          var tmp$ret$6;
          {
            tmp$ret$6 = urlString;
          }
          tmp$ret$7 = tmp$ret$6.substring(startIndex, endIndex);
        }

        tmp_3.v22_1 = '/' + tmp$ret$7;
        break;
      default:
        throw IllegalArgumentException_init_$Create$('Invalid file url: ' + urlString);
    }
  }
  function parseMailto(_this__u8e3s4, urlString, startIndex, endIndex) {
    var delimiter = indexOf$default_0(urlString, '@', startIndex, false, 4, null);
    if (delimiter === -1) {
      throw IllegalArgumentException_init_$Create$('Invalid mailto url: ' + urlString + ", it should contain '@'.");
    }
    var tmp = _this__u8e3s4;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = urlString;
      }
      tmp$ret$1 = tmp$ret$0.substring(startIndex, delimiter);
    }
    var tmp_0 = tmp$ret$1;
    tmp.t22_1 = decodeURLPart$default(tmp_0, 0, 0, null, 7, null);
    var tmp_1 = _this__u8e3s4;
    var tmp$ret$3;
    {
      var tmp0_substring = delimiter + 1 | 0;
      var tmp$ret$2;
      {
        tmp$ret$2 = urlString;
      }
      tmp$ret$3 = tmp$ret$2.substring(tmp0_substring, endIndex);
    }
    tmp_1.r22_1 = tmp$ret$3;
  }
  function indexOfColonInHostPort(_this__u8e3s4, startIndex, endIndex) {
    var skip = false;
    var inductionVariable = startIndex;
    if (inductionVariable < endIndex)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_subject = charSequenceGet(_this__u8e3s4, index);
        if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(91))))
          skip = true;
        else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(93))))
          skip = false;
        else if (equals(new Char(tmp1_subject), new Char(_Char___init__impl__6a9atx(58))))
          if (!skip)
            return index;
      }
       while (inductionVariable < endIndex);
    return -1;
  }
  function fillHost(_this__u8e3s4, urlString, startIndex, endIndex) {
    var tmp$ret$1;
    {
      var tmp0_takeIf = indexOfColonInHostPort(urlString, startIndex, endIndex);
      {
      }
      var tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_takeIf > 0;
      }
      if (tmp$ret$0) {
        tmp = tmp0_takeIf;
      } else {
        tmp = null;
      }
      tmp$ret$1 = tmp;
    }
    var tmp0_elvis_lhs = tmp$ret$1;
    var colonIndex = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
    var tmp_0 = _this__u8e3s4;
    var tmp$ret$3;
    {
      var tmp$ret$2;
      {
        tmp$ret$2 = urlString;
      }
      tmp$ret$3 = tmp$ret$2.substring(startIndex, colonIndex);
    }
    tmp_0.r22_1 = tmp$ret$3;
    if ((colonIndex + 1 | 0) < endIndex) {
      var tmp_1 = _this__u8e3s4;
      var tmp$ret$5;
      {
        var tmp1_substring = colonIndex + 1 | 0;
        var tmp$ret$4;
        {
          tmp$ret$4 = urlString;
        }
        tmp$ret$5 = tmp$ret$4.substring(tmp1_substring, endIndex);
      }
      tmp_1.s22_1 = toInt(tmp$ret$5);
    } else {
      _this__u8e3s4.s22_1 = get_DEFAULT_PORT();
    }
  }
  function parseQuery(_this__u8e3s4, urlString, startIndex, endIndex) {
    if ((startIndex + 1 | 0) === endIndex) {
      _this__u8e3s4.y22_1 = true;
      return endIndex;
    }
    var tmp$ret$1;
    {
      var tmp = _Char___init__impl__6a9atx(35);
      var tmp_0 = startIndex + 1 | 0;
      var tmp0_takeIf = indexOf$default(urlString, tmp, tmp_0, false, 4, null);
      {
      }
      var tmp_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_takeIf > 0;
      }
      if (tmp$ret$0) {
        tmp_1 = tmp0_takeIf;
      } else {
        tmp_1 = null;
      }
      tmp$ret$1 = tmp_1;
    }
    var tmp0_elvis_lhs = tmp$ret$1;
    var fragmentStart = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
    var tmp$ret$3;
    {
      var tmp1_substring = startIndex + 1 | 0;
      var tmp$ret$2;
      {
        tmp$ret$2 = urlString;
      }
      tmp$ret$3 = tmp$ret$2.substring(tmp1_substring, fragmentStart);
    }
    var tmp_2 = tmp$ret$3;
    var rawParameters = parseQueryString$default(tmp_2, 0, 0, 6, null);
    rawParameters.x1l(parseQuery$lambda(_this__u8e3s4));
    return fragmentStart;
  }
  function parseFragment(_this__u8e3s4, urlString, startIndex, endIndex) {
    if (startIndex < endIndex ? equals(new Char(charSequenceGet(urlString, startIndex)), new Char(_Char___init__impl__6a9atx(35))) : false) {
      var tmp = _this__u8e3s4;
      var tmp$ret$1;
      {
        var tmp0_substring = startIndex + 1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = urlString;
        }
        tmp$ret$1 = tmp$ret$0.substring(tmp0_substring, endIndex);
      }
      tmp.x22_1 = tmp$ret$1;
    }
  }
  function parseQuery$lambda($this_parseQuery) {
    return function (key, values) {
      $this_parseQuery.w22_1.o1l(key, values);
      return Unit_getInstance();
    };
  }
  function Companion_8() {
    Companion_instance_8 = this;
    this.i22_1 = new URLProtocol('http', 80);
    this.j22_1 = new URLProtocol('https', 443);
    this.k22_1 = new URLProtocol('ws', 80);
    this.l22_1 = new URLProtocol('wss', 443);
    this.m22_1 = new URLProtocol('socks', 1080);
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_associateBy = listOf([this.i22_1, this.j22_1, this.k22_1, this.l22_1, this.m22_1]);
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp0_associateBy, 10)), 16);
      var tmp$ret$1;
      {
        var tmp0_associateByTo = LinkedHashMap_init_$Create$(capacity);
        var tmp0_iterator = tmp0_associateBy.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$0;
          {
            tmp$ret$0 = element.o22_1;
          }
          tmp0_associateByTo.c(tmp$ret$0, element);
        }
        tmp$ret$1 = tmp0_associateByTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.n22_1 = tmp$ret$2;
  }
  Companion_8.prototype.x23 = function () {
    return this.n22_1;
  };
  Companion_8.prototype.w23 = function (name) {
    var tmp$ret$1;
    {
      var tmp0_let = toLowerCasePreservingASCIIRules(name);
      {
      }
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs = Companion_getInstance_9().n22_1.i2(tmp0_let);
        tmp$ret$0 = tmp0_elvis_lhs == null ? new URLProtocol(tmp0_let, get_DEFAULT_PORT()) : tmp0_elvis_lhs;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_9() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function URLProtocol(name, defaultPort) {
    Companion_getInstance_9();
    this.o22_1 = name;
    this.p22_1 = defaultPort;
    {
      var tmp$ret$1;
      $l$block: {
        var tmp0_all = this.o22_1;
        var indexedObject = tmp0_all;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          {
            tmp$ret$0 = isLowerCase(element);
          }
          if (!tmp$ret$0) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
        tmp$ret$1 = true;
      }
      var tmp1_require = tmp$ret$1;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$2;
        {
          tmp$ret$2 = 'All characters should be lower case';
        }
        var message = tmp$ret$2;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  URLProtocol.prototype.gg = function () {
    return this.o22_1;
  };
  URLProtocol.prototype.y23 = function () {
    return this.p22_1;
  };
  URLProtocol.prototype.toString = function () {
    return 'URLProtocol(name=' + this.o22_1 + ', defaultPort=' + this.p22_1 + ')';
  };
  URLProtocol.prototype.hashCode = function () {
    var result = getStringHashCode(this.o22_1);
    result = imul(result, 31) + this.p22_1 | 0;
    return result;
  };
  URLProtocol.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof URLProtocol))
      return false;
    var tmp0_other_with_cast = other instanceof URLProtocol ? other : THROW_CCE();
    if (!(this.o22_1 === tmp0_other_with_cast.o22_1))
      return false;
    if (!(this.p22_1 === tmp0_other_with_cast.p22_1))
      return false;
    return true;
  };
  URLProtocol.$metadata$ = classMeta('URLProtocol');
  function isSecure(_this__u8e3s4) {
    return _this__u8e3s4.o22_1 === 'https' ? true : _this__u8e3s4.o22_1 === 'wss';
  }
  function takeFrom_0(_this__u8e3s4, url) {
    _this__u8e3s4.q22_1 = url.q22_1;
    _this__u8e3s4.r22_1 = url.r22_1;
    _this__u8e3s4.s22_1 = url.s22_1;
    _this__u8e3s4.v22_1 = url.v22_1;
    _this__u8e3s4.t22_1 = url.t22_1;
    _this__u8e3s4.u22_1 = url.u22_1;
    appendAll(_this__u8e3s4.w22_1, url.w22_1);
    _this__u8e3s4.x22_1 = url.x22_1;
    _this__u8e3s4.y22_1 = url.y22_1;
    return _this__u8e3s4;
  }
  function appendUrlFullPath(_this__u8e3s4, encodedPath, queryParameters, trailingQuery) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = !isBlank(encodedPath);
    }
    if (tmp$ret$0) {
      tmp = !startsWith$default(encodedPath, '/', false, 2, null);
    } else {
      tmp = false;
    }
    if (tmp) {
      _this__u8e3s4.b5(_Char___init__impl__6a9atx(47));
    }
    _this__u8e3s4.b(encodedPath);
    if (!queryParameters.m() ? true : trailingQuery) {
      _this__u8e3s4.b('?');
    }
    formUrlEncodeTo(queryParameters, _this__u8e3s4);
  }
  function get_fullPath(_this__u8e3s4) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          appendUrlFullPath_0(tmp0_apply, _this__u8e3s4.m23_1, _this__u8e3s4.n23_1, _this__u8e3s4.r23_1);
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  }
  function get_hostWithPort(_this__u8e3s4) {
    return _this__u8e3s4.k23_1 + ':' + _this__u8e3s4.e23();
  }
  function appendUrlFullPath_0(_this__u8e3s4, encodedPath, queryParameters, trailingQuery) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = !isBlank(encodedPath);
    }
    if (tmp$ret$0) {
      tmp = !startsWith$default(encodedPath, '/', false, 2, null);
    } else {
      tmp = false;
    }
    if (tmp) {
      _this__u8e3s4.b5(_Char___init__impl__6a9atx(47));
    }
    _this__u8e3s4.b(encodedPath);
    if (!queryParameters.m() ? true : trailingQuery) {
      _this__u8e3s4.b('?');
    }
    formUrlEncodeTo_0(queryParameters, _this__u8e3s4);
  }
  function NoContent() {
    OutgoingContent.call(this);
  }
  NoContent.$metadata$ = classMeta('NoContent', undefined, undefined, undefined, undefined, OutgoingContent.prototype);
  function ReadChannelContent() {
    OutgoingContent.call(this);
  }
  ReadChannelContent.$metadata$ = classMeta('ReadChannelContent', undefined, undefined, undefined, undefined, OutgoingContent.prototype);
  function WriteChannelContent() {
  }
  WriteChannelContent.$metadata$ = classMeta('WriteChannelContent', undefined, undefined, undefined, undefined, OutgoingContent.prototype);
  function ByteArrayContent() {
    OutgoingContent.call(this);
  }
  ByteArrayContent.$metadata$ = classMeta('ByteArrayContent', undefined, undefined, undefined, undefined, OutgoingContent.prototype);
  function OutgoingContent() {
    this.z23_1 = null;
  }
  OutgoingContent.prototype.a24 = function () {
    return null;
  };
  OutgoingContent.prototype.b24 = function () {
    return null;
  };
  OutgoingContent.prototype.g1z = function () {
    return Companion_getInstance_2().a1z_1;
  };
  OutgoingContent.$metadata$ = classMeta('OutgoingContent');
  function TextContent_init_$Init$(text, contentType, status, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      status = null;
    TextContent.call($this, text, contentType, status);
    return $this;
  }
  function TextContent_init_$Create$(text, contentType, status, $mask0, $marker) {
    return TextContent_init_$Init$(text, contentType, status, $mask0, $marker, Object.create(TextContent.prototype));
  }
  function TextContent(text, contentType, status) {
    ByteArrayContent.call(this);
    this.j24_1 = text;
    this.k24_1 = contentType;
    this.l24_1 = status;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_toByteArray = this.j24_1;
      var tmp0_elvis_lhs = charset(this.k24_1);
      var tmp1_toByteArray = tmp0_elvis_lhs == null ? Charsets_getInstance().s1c_1 : tmp0_elvis_lhs;
      tmp$ret$0 = encodeToByteArray(tmp1_toByteArray.j1f(), tmp0_toByteArray, 0, tmp0_toByteArray.length);
    }
    tmp.m24_1 = tmp$ret$0;
  }
  TextContent.prototype.a24 = function () {
    return this.k24_1;
  };
  TextContent.prototype.b24 = function () {
    return toLong(this.m24_1.length);
  };
  TextContent.prototype.h24 = function () {
    return this.m24_1;
  };
  TextContent.prototype.toString = function () {
    return 'TextContent[' + this.k24_1 + '] "' + take(this.j24_1, 30) + '"';
  };
  TextContent.$metadata$ = classMeta('TextContent', undefined, undefined, undefined, undefined, ByteArrayContent.prototype);
  function get_originHost(_this__u8e3s4) {
    var tmp;
    if (PlatformUtils_getInstance().d1m_1) {
      tmp = window.location.origin;
    } else {
      tmp = null;
    }
    return tmp;
  }
  //region block: post-declaration
  EmptyHeaders.prototype.n1k = get;
  EmptyHeaders.prototype.x1l = forEach;
  EmptyParameters.prototype.x1l = forEach;
  //endregion
  //region block: init
  DEFAULT_PORT = 0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = TextContent_init_$Create$;
  _.$_$.b = HeadersBuilder_init_$Create$;
  _.$_$.c = URLBuilder_init_$Create$;
  _.$_$.d = Application_getInstance;
  _.$_$.e = Companion_getInstance_0;
  _.$_$.f = Text_getInstance;
  _.$_$.g = Companion_getInstance_2;
  _.$_$.h = HttpHeaders_getInstance;
  _.$_$.i = Companion_getInstance_3;
  _.$_$.j = Companion_getInstance_4;
  _.$_$.k = Companion_getInstance_5;
  _.$_$.l = Companion_getInstance_9;
  _.$_$.m = ByteArrayContent;
  _.$_$.n = NoContent;
  _.$_$.o = ReadChannelContent;
  _.$_$.p = WriteChannelContent;
  _.$_$.q = OutgoingContent;
  _.$_$.r = ContentTypeMatcher;
  _.$_$.s = get_DEFAULT_PORT;
  _.$_$.t = HttpMessageBuilder;
  _.$_$.u = HttpMessage;
  _.$_$.v = HttpStatusCode;
  _.$_$.w = UnsafeHeaderException;
  _.$_$.x = get_authority_0;
  _.$_$.y = get_authority;
  _.$_$.z = charset_0;
  _.$_$.a1 = charset;
  _.$_$.b1 = contentType;
  _.$_$.c1 = contentType_0;
  _.$_$.d1 = isSecure;
  _.$_$.e1 = takeFrom_0;
  _.$_$.f1 = takeFrom;
  _.$_$.g1 = withCharset;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(230), __nccwpck_require__(219)));

//# sourceMappingURL=kotlin_io_ktor_ktor_http.js.map

/***/ }),

/***/ 838:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_io_ktor_ktor_io) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var mapCapacity = kotlin_kotlin.$_$.v5;
  var coerceAtLeast = kotlin_kotlin.$_$.g9;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.a1;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var Enum = kotlin_kotlin.$_$.ya;
  var classMeta = kotlin_kotlin.$_$.y7;
  var toString = kotlin_kotlin.$_$.c9;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var DisposableHandle = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.b1;
  var get_lastIndex = kotlin_kotlin.$_$.q5;
  var compareTo = kotlin_kotlin.$_$.z7;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var Charsets_getInstance = kotlin_io_ktor_ktor_io.$_$.n;
  var encodeToByteArray = kotlin_io_ktor_ktor_io.$_$.p;
  var BytePacketBuilder = kotlin_io_ktor_ktor_io.$_$.w;
  var writeShort = kotlin_io_ktor_ktor_io.$_$.c1;
  var writeText$default = kotlin_io_ktor_ktor_io.$_$.k;
  var readBytes$default = kotlin_io_ktor_ktor_io.$_$.h;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a1;
  //endregion
  //region block: pre-declaration
  Codes.prototype = Object.create(Enum.prototype);
  Codes.prototype.constructor = Codes;
  FrameType.prototype = Object.create(Enum.prototype);
  FrameType.prototype.constructor = FrameType;
  Binary.prototype = Object.create(Frame.prototype);
  Binary.prototype.constructor = Binary;
  Text.prototype = Object.create(Frame.prototype);
  Text.prototype.constructor = Text;
  Close.prototype = Object.create(Frame.prototype);
  Close.prototype.constructor = Close;
  //endregion
  var Codes_NORMAL_instance;
  var Codes_GOING_AWAY_instance;
  var Codes_PROTOCOL_ERROR_instance;
  var Codes_CANNOT_ACCEPT_instance;
  var Codes_CLOSED_ABNORMALLY_instance;
  var Codes_NOT_CONSISTENT_instance;
  var Codes_VIOLATED_POLICY_instance;
  var Codes_TOO_BIG_instance;
  var Codes_NO_EXTENSION_instance;
  var Codes_INTERNAL_ERROR_instance;
  var Codes_SERVICE_RESTART_instance;
  var Codes_TRY_AGAIN_LATER_instance;
  function Companion() {
    Companion_instance = this;
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp0_associateBy = values();
      var capacity = coerceAtLeast(mapCapacity(tmp0_associateBy.length), 16);
      var tmp$ret$1;
      {
        var tmp0_associateByTo = LinkedHashMap_init_$Create$(capacity);
        var indexedObject = tmp0_associateBy;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          {
            tmp$ret$0 = element.p24_1;
          }
          tmp0_associateByTo.c(tmp$ret$0, element);
        }
        tmp$ret$1 = tmp0_associateByTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    tmp.q24_1 = tmp$ret$2;
    this.r24_1 = Codes_INTERNAL_ERROR_getInstance();
  }
  Companion.prototype.s24 = function (code) {
    return this.q24_1.i2(code);
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    Codes_initEntries();
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function values() {
    return [Codes_NORMAL_getInstance(), Codes_GOING_AWAY_getInstance(), Codes_PROTOCOL_ERROR_getInstance(), Codes_CANNOT_ACCEPT_getInstance(), Codes_CLOSED_ABNORMALLY_getInstance(), Codes_NOT_CONSISTENT_getInstance(), Codes_VIOLATED_POLICY_getInstance(), Codes_TOO_BIG_getInstance(), Codes_NO_EXTENSION_getInstance(), Codes_INTERNAL_ERROR_getInstance(), Codes_SERVICE_RESTART_getInstance(), Codes_TRY_AGAIN_LATER_getInstance()];
  }
  var Codes_entriesInitialized;
  function Codes_initEntries() {
    if (Codes_entriesInitialized)
      return Unit_getInstance();
    Codes_entriesInitialized = true;
    Codes_NORMAL_instance = new Codes('NORMAL', 0, 1000);
    Codes_GOING_AWAY_instance = new Codes('GOING_AWAY', 1, 1001);
    Codes_PROTOCOL_ERROR_instance = new Codes('PROTOCOL_ERROR', 2, 1002);
    Codes_CANNOT_ACCEPT_instance = new Codes('CANNOT_ACCEPT', 3, 1003);
    Codes_CLOSED_ABNORMALLY_instance = new Codes('CLOSED_ABNORMALLY', 4, 1006);
    Codes_NOT_CONSISTENT_instance = new Codes('NOT_CONSISTENT', 5, 1007);
    Codes_VIOLATED_POLICY_instance = new Codes('VIOLATED_POLICY', 6, 1008);
    Codes_TOO_BIG_instance = new Codes('TOO_BIG', 7, 1009);
    Codes_NO_EXTENSION_instance = new Codes('NO_EXTENSION', 8, 1010);
    Codes_INTERNAL_ERROR_instance = new Codes('INTERNAL_ERROR', 9, 1011);
    Codes_SERVICE_RESTART_instance = new Codes('SERVICE_RESTART', 10, 1012);
    Codes_TRY_AGAIN_LATER_instance = new Codes('TRY_AGAIN_LATER', 11, 1013);
    Companion_getInstance();
  }
  function Codes(name, ordinal, code) {
    Enum.call(this, name, ordinal);
    this.p24_1 = code;
  }
  Codes.prototype.t24 = function () {
    return this.p24_1;
  };
  Codes.$metadata$ = classMeta('Codes', undefined, undefined, undefined, undefined, Enum.prototype);
  function Codes_NORMAL_getInstance() {
    Codes_initEntries();
    return Codes_NORMAL_instance;
  }
  function Codes_GOING_AWAY_getInstance() {
    Codes_initEntries();
    return Codes_GOING_AWAY_instance;
  }
  function Codes_PROTOCOL_ERROR_getInstance() {
    Codes_initEntries();
    return Codes_PROTOCOL_ERROR_instance;
  }
  function Codes_CANNOT_ACCEPT_getInstance() {
    Codes_initEntries();
    return Codes_CANNOT_ACCEPT_instance;
  }
  function Codes_CLOSED_ABNORMALLY_getInstance() {
    Codes_initEntries();
    return Codes_CLOSED_ABNORMALLY_instance;
  }
  function Codes_NOT_CONSISTENT_getInstance() {
    Codes_initEntries();
    return Codes_NOT_CONSISTENT_instance;
  }
  function Codes_VIOLATED_POLICY_getInstance() {
    Codes_initEntries();
    return Codes_VIOLATED_POLICY_instance;
  }
  function Codes_TOO_BIG_getInstance() {
    Codes_initEntries();
    return Codes_TOO_BIG_instance;
  }
  function Codes_NO_EXTENSION_getInstance() {
    Codes_initEntries();
    return Codes_NO_EXTENSION_instance;
  }
  function Codes_INTERNAL_ERROR_getInstance() {
    Codes_initEntries();
    return Codes_INTERNAL_ERROR_instance;
  }
  function Codes_SERVICE_RESTART_getInstance() {
    Codes_initEntries();
    return Codes_SERVICE_RESTART_instance;
  }
  function Codes_TRY_AGAIN_LATER_getInstance() {
    Codes_initEntries();
    return Codes_TRY_AGAIN_LATER_instance;
  }
  function CloseReason(code, message) {
    this.u24_1 = code;
    this.v24_1 = message;
  }
  CloseReason.prototype.t24 = function () {
    return this.u24_1;
  };
  CloseReason.prototype.j1 = function () {
    return this.v24_1;
  };
  CloseReason.prototype.w24 = function () {
    return Companion_getInstance().s24(this.u24_1);
  };
  CloseReason.prototype.toString = function () {
    var tmp0_elvis_lhs = this.w24();
    return 'CloseReason(reason=' + toString(tmp0_elvis_lhs == null ? this.u24_1 : tmp0_elvis_lhs) + ', message=' + this.v24_1 + ')';
  };
  CloseReason.prototype.hashCode = function () {
    var result = this.u24_1;
    result = imul(result, 31) + getStringHashCode(this.v24_1) | 0;
    return result;
  };
  CloseReason.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CloseReason))
      return false;
    var tmp0_other_with_cast = other instanceof CloseReason ? other : THROW_CCE();
    if (!(this.u24_1 === tmp0_other_with_cast.u24_1))
      return false;
    if (!(this.v24_1 === tmp0_other_with_cast.v24_1))
      return false;
    return true;
  };
  CloseReason.$metadata$ = classMeta('CloseReason');
  function NonDisposableHandle() {
    NonDisposableHandle_instance = this;
  }
  NonDisposableHandle.prototype.fm = function () {
  };
  NonDisposableHandle.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  NonDisposableHandle.$metadata$ = objectMeta('NonDisposableHandle', [DisposableHandle]);
  var NonDisposableHandle_instance;
  function NonDisposableHandle_getInstance() {
    if (NonDisposableHandle_instance == null)
      new NonDisposableHandle();
    return NonDisposableHandle_instance;
  }
  var FrameType_TEXT_instance;
  var FrameType_BINARY_instance;
  var FrameType_CLOSE_instance;
  var FrameType_PING_instance;
  var FrameType_PONG_instance;
  function Companion_0() {
    Companion_instance_0 = this;
    var tmp = this;
    var tmp$ret$1;
    $l$block_0: {
      var tmp0_maxByOrNull = values_0();
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_maxByOrNull.length === 0;
      }
      if (tmp$ret$0) {
        tmp$ret$1 = null;
        break $l$block_0;
      }
      var maxElem = tmp0_maxByOrNull[0];
      var lastIndex = get_lastIndex(tmp0_maxByOrNull);
      if (lastIndex === 0) {
        tmp$ret$1 = maxElem;
        break $l$block_0;
      }
      var tmp$ret$2;
      {
        var tmp1__anonymous__uwfjfc = maxElem;
        tmp$ret$2 = tmp1__anonymous__uwfjfc.a25_1;
      }
      var maxValue = tmp$ret$2;
      var inductionVariable = 1;
      if (inductionVariable <= lastIndex)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var e = tmp0_maxByOrNull[i];
          var tmp$ret$3;
          {
            tmp$ret$3 = e.a25_1;
          }
          var v = tmp$ret$3;
          if (compareTo(maxValue, v) < 0) {
            maxElem = e;
            maxValue = v;
          }
        }
         while (!(i === lastIndex));
      tmp$ret$1 = maxElem;
    }
    tmp.b25_1 = ensureNotNull(tmp$ret$1).a25_1;
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = this.b25_1 + 1 | 0;
    var tmp$ret$4;
    {
      tmp$ret$4 = fillArrayVal(Array(tmp_2), null);
    }
    var tmp_3 = tmp$ret$4;
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$7;
      {
        var tmp$ret$6;
        $l$block_2: {
          var tmp0_singleOrNull = values_0();
          var single = null;
          var found = false;
          var indexedObject = tmp0_singleOrNull;
          var inductionVariable_0 = 0;
          var last = indexedObject.length;
          while (inductionVariable_0 < last) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$5;
            {
              tmp$ret$5 = element.a25_1 === tmp_4;
            }
            if (tmp$ret$5) {
              if (found) {
                tmp$ret$6 = null;
                break $l$block_2;
              }
              single = element;
              found = true;
            }
          }
          if (!found) {
            tmp$ret$6 = null;
            break $l$block_2;
          }
          tmp$ret$6 = single;
        }
        tmp$ret$7 = tmp$ret$6;
      }
      tmp_3[tmp_4] = tmp$ret$7;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.c25_1 = tmp_3;
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_0() {
    FrameType_initEntries();
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function values_0() {
    return [FrameType_TEXT_getInstance(), FrameType_BINARY_getInstance(), FrameType_CLOSE_getInstance(), FrameType_PING_getInstance(), FrameType_PONG_getInstance()];
  }
  var FrameType_entriesInitialized;
  function FrameType_initEntries() {
    if (FrameType_entriesInitialized)
      return Unit_getInstance();
    FrameType_entriesInitialized = true;
    FrameType_TEXT_instance = new FrameType('TEXT', 0, false, 1);
    FrameType_BINARY_instance = new FrameType('BINARY', 1, false, 2);
    FrameType_CLOSE_instance = new FrameType('CLOSE', 2, true, 8);
    FrameType_PING_instance = new FrameType('PING', 3, true, 9);
    FrameType_PONG_instance = new FrameType('PONG', 4, true, 10);
    Companion_getInstance_0();
  }
  function FrameType(name, ordinal, controlFrame, opcode) {
    Enum.call(this, name, ordinal);
    this.z24_1 = controlFrame;
    this.a25_1 = opcode;
  }
  FrameType.prototype.d25 = function () {
    return this.a25_1;
  };
  FrameType.$metadata$ = classMeta('FrameType', undefined, undefined, undefined, undefined, Enum.prototype);
  function FrameType_TEXT_getInstance() {
    FrameType_initEntries();
    return FrameType_TEXT_instance;
  }
  function FrameType_BINARY_getInstance() {
    FrameType_initEntries();
    return FrameType_BINARY_instance;
  }
  function FrameType_CLOSE_getInstance() {
    FrameType_initEntries();
    return FrameType_CLOSE_instance;
  }
  function FrameType_PING_getInstance() {
    FrameType_initEntries();
    return FrameType_PING_instance;
  }
  function FrameType_PONG_getInstance() {
    FrameType_initEntries();
    return FrameType_PONG_instance;
  }
  function DefaultWebSocketSession() {
  }
  DefaultWebSocketSession.$metadata$ = interfaceMeta('DefaultWebSocketSession', [WebSocketSession]);
  function Binary_init_$Init$(fin, data, $this) {
    Binary.call($this, fin, data, false, false, false);
    return $this;
  }
  function Binary_init_$Create$(fin, data) {
    return Binary_init_$Init$(fin, data, Object.create(Binary.prototype));
  }
  function Text_init_$Init$(fin, data, $this) {
    Text.call($this, fin, data, false, false, false);
    return $this;
  }
  function Text_init_$Init$_0(text, $this) {
    var tmp$ret$0;
    {
      var tmp0_toByteArray = Charsets_getInstance().s1c_1;
      tmp$ret$0 = encodeToByteArray(tmp0_toByteArray.j1f(), text, 0, text.length);
    }
    Text_init_$Init$(true, tmp$ret$0, $this);
    return $this;
  }
  function Text_init_$Create$(text) {
    return Text_init_$Init$_0(text, Object.create(Text.prototype));
  }
  function Close_init_$Init$(reason, $this) {
    var tmp$ret$0;
    $l$block: {
      {
      }
      var builder = BytePacketBuilder(0);
      try {
        {
          writeShort(builder, reason.u24_1);
          writeText$default(builder, reason.v24_1, 0, 0, null, 14, null);
        }
        tmp$ret$0 = builder.o16();
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          builder.q12();
          throw $p;
        } else {
          throw $p;
        }
      }
    }
    Close_init_$Init$_0(tmp$ret$0, $this);
    return $this;
  }
  function Close_init_$Create$(reason) {
    return Close_init_$Init$(reason, Object.create(Close.prototype));
  }
  function Close_init_$Init$_0(packet, $this) {
    Close.call($this, readBytes$default(packet, 0, 1, null));
    return $this;
  }
  function Binary(fin, data, rsv1, rsv2, rsv3) {
    Frame.call(this, fin, FrameType_BINARY_getInstance(), data, NonDisposableHandle_getInstance(), rsv1, rsv2, rsv3);
  }
  Binary.$metadata$ = classMeta('Binary', undefined, undefined, undefined, undefined, Frame.prototype);
  function Text(fin, data, rsv1, rsv2, rsv3) {
    Frame.call(this, fin, FrameType_TEXT_getInstance(), data, NonDisposableHandle_getInstance(), rsv1, rsv2, rsv3);
  }
  Text.$metadata$ = classMeta('Text', undefined, undefined, undefined, undefined, Frame.prototype);
  function Close(data) {
    Frame.call(this, true, FrameType_CLOSE_getInstance(), data, NonDisposableHandle_getInstance(), false, false, false);
  }
  Close.$metadata$ = classMeta('Close', undefined, undefined, undefined, undefined, Frame.prototype);
  function Companion_1() {
    Companion_instance_1 = this;
    this.e25_1 = new Int8Array(0);
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function Frame(fin, frameType, data, disposableHandle, rsv1, rsv2, rsv3) {
    Companion_getInstance_1();
    this.f25_1 = fin;
    this.g25_1 = frameType;
    this.h25_1 = data;
    this.i25_1 = disposableHandle;
    this.j25_1 = rsv1;
    this.k25_1 = rsv2;
    this.l25_1 = rsv3;
  }
  Frame.prototype.toString = function () {
    return 'Frame ' + this.g25_1 + ' (fin=' + this.f25_1 + ', buffer len = ' + this.h25_1.length + ')';
  };
  Frame.$metadata$ = classMeta('Frame');
  function WebSocketSession() {
  }
  WebSocketSession.$metadata$ = interfaceMeta('WebSocketSession', [CoroutineScope]);
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Codes_CLOSED_ABNORMALLY_getInstance;
  _.$_$.b = Codes_INTERNAL_ERROR_getInstance;
  _.$_$.c = Binary_init_$Create$;
  _.$_$.d = Close_init_$Create$;
  _.$_$.e = Text_init_$Create$;
  _.$_$.f = Companion_getInstance;
  _.$_$.g = CloseReason;
  _.$_$.h = DefaultWebSocketSession;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(925), __nccwpck_require__(230)));

//# sourceMappingURL=kotlin_io_ktor_ktor_http_cio.js.map

/***/ }),

/***/ 230:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_org_jetbrains_kotlinx_atomicfu) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var CoroutineImpl = kotlin_kotlin.$_$.j7;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.t6;
  var classMeta = kotlin_kotlin.$_$.y7;
  var toLong = kotlin_kotlin.$_$.a9;
  var Long = kotlin_kotlin.$_$.db;
  var toString = kotlin_kotlin.$_$.c9;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var CancellationException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.l;
  var Companion_getInstance = kotlin_kotlin.$_$.n3;
  var CancellationException = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.v;
  var CancellationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.k;
  var captureStack = kotlin_kotlin.$_$.t7;
  var Job = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d1;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.d3;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a1;
  var invokeOnCompletion$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e;
  var cancel$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d;
  var Key_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.n;
  var launch$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var isInterface = kotlin_kotlin.$_$.p8;
  var Key_getInstance_0 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.r;
  var Dispatchers_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.p;
  var equals = kotlin_kotlin.$_$.a8;
  var SuspendFunction1 = kotlin_kotlin.$_$.l7;
  var toByte = kotlin_kotlin.$_$.z8;
  var toShort = kotlin_kotlin.$_$.b9;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.f1;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.i3;
  var charSequenceLength = kotlin_kotlin.$_$.w7;
  var numberToLong = kotlin_kotlin.$_$.x8;
  var numberToChar = kotlin_kotlin.$_$.v8;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var coerceAtLeast = kotlin_kotlin.$_$.g9;
  var coerceAtMost = kotlin_kotlin.$_$.i9;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.k2;
  var Appendable = kotlin_kotlin.$_$.q9;
  var Exception = kotlin_kotlin.$_$.ab;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.k1;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.z2;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.a3;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.c2;
  var atomic$ref$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.c;
  var atomic$int$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.d;
  var KMutableProperty1 = kotlin_kotlin.$_$.o9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.d8;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.s3;
  var charSequenceGet = kotlin_kotlin.$_$.v7;
  var isLowSurrogate = kotlin_kotlin.$_$.y9;
  var isHighSurrogate = kotlin_kotlin.$_$.x9;
  var Char = kotlin_kotlin.$_$.va;
  var Job$default = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f;
  var coerceAtMost_0 = kotlin_kotlin.$_$.h9;
  var hashCode = kotlin_kotlin.$_$.f8;
  var lazy = kotlin_kotlin.$_$.xb;
  var KProperty1 = kotlin_kotlin.$_$.p9;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.v1;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.d2;
  var replace$default = kotlin_kotlin.$_$.o;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var charSequenceSubSequence = kotlin_kotlin.$_$.x7;
  var extendThrowable = kotlin_kotlin.$_$.b8;
  var isObject = kotlin_kotlin.$_$.r8;
  var ReadWriteProperty = kotlin_kotlin.$_$.f9;
  var ReadOnlyProperty = kotlin_kotlin.$_$.e9;
  var Enum = kotlin_kotlin.$_$.ya;
  var IndexOutOfBoundsException_init_$Create$_0 = kotlin_kotlin.$_$.u1;
  var Exception_init_$Init$_0 = kotlin_kotlin.$_$.l1;
  var isCharSequence = kotlin_kotlin.$_$.l8;
  var trim = kotlin_kotlin.$_$.ta;
  var decodeToString = kotlin_kotlin.$_$.t9;
  var setOf = kotlin_kotlin.$_$.e6;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  //endregion
  //region block: pre-declaration
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.prototype.constructor = $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0;
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.prototype.constructor = $awaitAtLeastNBytesAvailableForReadCOROUTINE$1;
  $writeFullyCOROUTINE$9.prototype = Object.create(CoroutineImpl.prototype);
  $writeFullyCOROUTINE$9.prototype.constructor = $writeFullyCOROUTINE$9;
  $writeFullyCOROUTINE$10.prototype = Object.create(CoroutineImpl.prototype);
  $writeFullyCOROUTINE$10.prototype.constructor = $writeFullyCOROUTINE$10;
  $readRemainingCOROUTINE$26.prototype = Object.create(CoroutineImpl.prototype);
  $readRemainingCOROUTINE$26.prototype.constructor = $readRemainingCOROUTINE$26;
  $readRemainingSuspendCOROUTINE$27.prototype = Object.create(CoroutineImpl.prototype);
  $readRemainingSuspendCOROUTINE$27.prototype.constructor = $readRemainingSuspendCOROUTINE$27;
  $readAvailableCOROUTINE$30.prototype = Object.create(CoroutineImpl.prototype);
  $readAvailableCOROUTINE$30.prototype.constructor = $readAvailableCOROUTINE$30;
  $readAvailableSuspendCOROUTINE$31.prototype = Object.create(CoroutineImpl.prototype);
  $readAvailableSuspendCOROUTINE$31.prototype.constructor = $readAvailableSuspendCOROUTINE$31;
  $awaitInternalAtLeast1COROUTINE$40.prototype = Object.create(CoroutineImpl.prototype);
  $awaitInternalAtLeast1COROUTINE$40.prototype.constructor = $awaitInternalAtLeast1COROUTINE$40;
  $awaitSuspendCOROUTINE$41.prototype = Object.create(CoroutineImpl.prototype);
  $awaitSuspendCOROUTINE$41.prototype.constructor = $awaitSuspendCOROUTINE$41;
  ClosedWriteChannelException.prototype = Object.create(CancellationException.prototype);
  ClosedWriteChannelException.prototype.constructor = ClosedWriteChannelException;
  launchChannel$slambda.prototype = Object.create(CoroutineImpl.prototype);
  launchChannel$slambda.prototype.constructor = launchChannel$slambda;
  _no_name_provided__qut3iv.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv.prototype.constructor = _no_name_provided__qut3iv;
  _no_name_provided__qut3iv_0.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_0.prototype.constructor = _no_name_provided__qut3iv_0;
  _no_name_provided__qut3iv_1.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_1.prototype.constructor = _no_name_provided__qut3iv_1;
  _no_name_provided__qut3iv_2.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_2.prototype.constructor = _no_name_provided__qut3iv_2;
  _no_name_provided__qut3iv_3.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_3.prototype.constructor = _no_name_provided__qut3iv_3;
  _no_name_provided__qut3iv_4.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_4.prototype.constructor = _no_name_provided__qut3iv_4;
  _no_name_provided__qut3iv_5.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_5.prototype.constructor = _no_name_provided__qut3iv_5;
  InsufficientSpaceException.prototype = Object.create(Exception.prototype);
  InsufficientSpaceException.prototype.constructor = InsufficientSpaceException;
  function close() {
    this.fm();
  }
  DefaultBufferPool.prototype = Object.create(DefaultPool.prototype);
  DefaultBufferPool.prototype.constructor = DefaultBufferPool;
  _no_name_provided__qut3iv_6.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_6.prototype.constructor = _no_name_provided__qut3iv_6;
  _no_name_provided__qut3iv_7.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_7.prototype.constructor = _no_name_provided__qut3iv_7;
  _no_name_provided__qut3iv_8.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_8.prototype.constructor = _no_name_provided__qut3iv_8;
  _no_name_provided__qut3iv_9.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_9.prototype.constructor = _no_name_provided__qut3iv_9;
  _no_name_provided__qut3iv_10.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_10.prototype.constructor = _no_name_provided__qut3iv_10;
  _no_name_provided__qut3iv_11.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_11.prototype.constructor = _no_name_provided__qut3iv_11;
  _no_name_provided__qut3iv_12.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_12.prototype.constructor = _no_name_provided__qut3iv_12;
  EmptyBufferPoolImpl.prototype = Object.create(NoPoolImpl.prototype);
  EmptyBufferPoolImpl.prototype.constructor = EmptyBufferPoolImpl;
  BufferLimitExceededException.prototype = Object.create(Exception.prototype);
  BufferLimitExceededException.prototype.constructor = BufferLimitExceededException;
  BytePacketBuilderBase.prototype = Object.create(AbstractOutput.prototype);
  BytePacketBuilderBase.prototype.constructor = BytePacketBuilderBase;
  BytePacketBuilderPlatformBase.prototype = Object.create(BytePacketBuilderBase.prototype);
  BytePacketBuilderPlatformBase.prototype.constructor = BytePacketBuilderPlatformBase;
  _no_name_provided__qut3iv_13.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_13.prototype.constructor = _no_name_provided__qut3iv_13;
  BytePacketBuilder.prototype = Object.create(BytePacketBuilderPlatformBase.prototype);
  BytePacketBuilder.prototype.constructor = BytePacketBuilder;
  ByteReadPacketBase.prototype = Object.create(AbstractInput.prototype);
  ByteReadPacketBase.prototype.constructor = ByteReadPacketBase;
  ByteReadPacketPlatformBase.prototype = Object.create(ByteReadPacketBase.prototype);
  ByteReadPacketPlatformBase.prototype.constructor = ByteReadPacketPlatformBase;
  ByteReadPacket.prototype = Object.create(ByteReadPacketPlatformBase.prototype);
  ByteReadPacket.prototype.constructor = ByteReadPacket;
  _no_name_provided__qut3iv_14.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_14.prototype.constructor = _no_name_provided__qut3iv_14;
  ChunkBuffer$Companion$NoPool$1.prototype = Object.create(NoPoolImpl.prototype);
  ChunkBuffer$Companion$NoPool$1.prototype.constructor = ChunkBuffer$Companion$NoPool$1;
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.prototype = Object.create(NoPoolImpl.prototype);
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.prototype.constructor = ChunkBuffer$Companion$NoPoolManuallyManaged$1;
  _no_name_provided__qut3iv_15.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_15.prototype.constructor = _no_name_provided__qut3iv_15;
  _no_name_provided__qut3iv_16.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_16.prototype.constructor = _no_name_provided__qut3iv_16;
  ChunkBuffer.prototype = Object.create(Buffer.prototype);
  ChunkBuffer.prototype.constructor = ChunkBuffer;
  _no_name_provided__qut3iv_17.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_17.prototype.constructor = _no_name_provided__qut3iv_17;
  MalformedUTF8InputException.prototype = Object.create(Exception.prototype);
  MalformedUTF8InputException.prototype.constructor = MalformedUTF8InputException;
  _no_name_provided__qut3iv_18.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_18.prototype.constructor = _no_name_provided__qut3iv_18;
  _no_name_provided__qut3iv_19.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_19.prototype.constructor = _no_name_provided__qut3iv_19;
  _no_name_provided__qut3iv_20.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_20.prototype.constructor = _no_name_provided__qut3iv_20;
  _no_name_provided__qut3iv_21.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_21.prototype.constructor = _no_name_provided__qut3iv_21;
  $sleepCOROUTINE$54.prototype = Object.create(CoroutineImpl.prototype);
  $sleepCOROUTINE$54.prototype.constructor = $sleepCOROUTINE$54;
  $trySuspendCOROUTINE$55.prototype = Object.create(CoroutineImpl.prototype);
  $trySuspendCOROUTINE$55.prototype.constructor = $trySuspendCOROUTINE$55;
  $copyToSequentialImplCOROUTINE$56.prototype = Object.create(CoroutineImpl.prototype);
  $copyToSequentialImplCOROUTINE$56.prototype.constructor = $copyToSequentialImplCOROUTINE$56;
  $copyToTailCOROUTINE$57.prototype = Object.create(CoroutineImpl.prototype);
  $copyToTailCOROUTINE$57.prototype.constructor = $copyToTailCOROUTINE$57;
  ByteChannelJS.prototype = Object.create(ByteChannelSequentialBase.prototype);
  ByteChannelJS.prototype.constructor = ByteChannelJS;
  CharsetImpl.prototype = Object.create(Charset.prototype);
  CharsetImpl.prototype.constructor = CharsetImpl;
  CharsetEncoderImpl.prototype = Object.create(CharsetEncoder.prototype);
  CharsetEncoderImpl.prototype.constructor = CharsetEncoderImpl;
  CharsetDecoderImpl.prototype = Object.create(CharsetDecoder.prototype);
  CharsetDecoderImpl.prototype.constructor = CharsetDecoderImpl;
  MalformedInputException.prototype = Object.create(Error.prototype);
  MalformedInputException.prototype.constructor = MalformedInputException;
  ByteOrder.prototype = Object.create(Enum.prototype);
  ByteOrder.prototype.constructor = ByteOrder;
  _no_name_provided__qut3iv_22.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_22.prototype.constructor = _no_name_provided__qut3iv_22;
  _no_name_provided__qut3iv_23.prototype = Object.create(RequireFailureCapture.prototype);
  _no_name_provided__qut3iv_23.prototype.constructor = _no_name_provided__qut3iv_23;
  IoBuffer$Companion$Pool$1.prototype = Object.create(DefaultPool.prototype);
  IoBuffer$Companion$Pool$1.prototype.constructor = IoBuffer$Companion$Pool$1;
  IoBuffer$Companion$NoPool$1.prototype = Object.create(NoPoolImpl.prototype);
  IoBuffer$Companion$NoPool$1.prototype.constructor = IoBuffer$Companion$NoPool$1;
  IoBuffer.prototype = Object.create(ChunkBuffer.prototype);
  IoBuffer.prototype.constructor = IoBuffer;
  IOException.prototype = Object.create(Exception.prototype);
  IOException.prototype.constructor = IOException;
  EOFException.prototype = Object.create(IOException.prototype);
  EOFException.prototype.constructor = EOFException;
  //endregion
  function ByteReadChannel(content) {
    return ByteReadChannel_0(content, 0, content.length);
  }
  function ByteChannel() {
  }
  ByteChannel.$metadata$ = interfaceMeta('ByteChannel', [ByteReadChannel_1, ByteWriteChannel]);
  function ByteChannelSequentialBase_init_$Init$(initial, autoFlush, pool, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      pool = Companion_getInstance_5().i11_1;
    ByteChannelSequentialBase.call($this, initial, autoFlush, pool);
    return $this;
  }
  function _get_flushSize__xd4y0k($this) {
    return $this.s11_1.g();
  }
  function _set__totalBytesRead__om08bt($this, value) {
    $this.n11_1.b12_1 = value;
  }
  function _get__totalBytesRead__ypqfud($this) {
    return $this.n11_1.b12_1;
  }
  function _set__totalBytesWritten__29anve($this, value) {
    $this.n11_1.c12_1 = value;
  }
  function _get__totalBytesWritten__yty2ze($this) {
    return $this.n11_1.c12_1;
  }
  function _set_closedCause__rpgi88($this, value) {
    $this.n11_1.d12_1 = value;
  }
  function flushImpl($this) {
    if ($this.o11_1.cq()) {
      return false;
    }
    flushWrittenBytes($this);
    $this.q11_1.h12();
    return true;
  }
  function flushWrittenBytes($this) {
    var tmp$ret$0;
    {
      var tmp0_synchronized = $this.r11_1;
      var buffer = ensureNotNull($this.o11_1.m12());
      tmp$ret$0 = $this.s11_1.n12(buffer);
    }
  }
  function ensureNotClosed($this) {
    if ($this.p12()) {
      var tmp0_elvis_lhs = $this.o12();
      throw tmp0_elvis_lhs == null ? new ClosedWriteChannelException('Channel is already closed') : tmp0_elvis_lhs;
    }
  }
  function ensureNotFailed($this) {
    var tmp0_safe_receiver = $this.o12();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  }
  function ensureNotFailed_0($this, closeable) {
    var tmp0_safe_receiver = $this.o12();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        closeable.q12();
        throw tmp0_safe_receiver;
      }
    }
  }
  function readRemainingSuspend($this, builder, limit, $cont) {
    var tmp = new $readRemainingSuspendCOROUTINE$27($this, builder, limit, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function readAvailableSuspend($this, dst, $cont) {
    var tmp = new $readAvailableSuspendCOROUTINE$31($this, dst, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0(_this__u8e3s4, count, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.x13_1 = _this__u8e3s4;
    this.y13_1 = count;
  }
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!(this.x13_1.z13() < this.y13_1 ? !this.x13_1.p12() : false)) {
              this.vg_1 = 5;
              continue $sm;
            }

            if (!flushImpl(this.x13_1)) {
              this.vg_1 = 2;
              suspendResult = this.x13_1.q11_1.a14(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.vg_1 = 3;
              continue $sm;
            }

            break;
          case 2:
            this.vg_1 = 3;
            continue $sm;
          case 3:
            this.vg_1 = 1;
            continue $sm;
          case 4:
            throw this.yg_1;
          case 5:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0.$metadata$ = classMeta('$awaitAtLeastNBytesAvailableForWriteCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $awaitAtLeastNBytesAvailableForReadCOROUTINE$1(_this__u8e3s4, count, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.j14_1 = _this__u8e3s4;
    this.k14_1 = count;
  }
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!(this.j14_1.l14() < this.k14_1 ? !this.j14_1.p12() : false)) {
              this.vg_1 = 4;
              continue $sm;
            }

            this.vg_1 = 2;
            suspendResult = this.j14_1.q11_1.a14(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.vg_1 = 1;
            continue $sm;
          case 3:
            throw this.yg_1;
          case 4:
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $awaitAtLeastNBytesAvailableForReadCOROUTINE$1.$metadata$ = classMeta('$awaitAtLeastNBytesAvailableForReadCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $writeFullyCOROUTINE$9(_this__u8e3s4, src, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.u14_1 = _this__u8e3s4;
    this.v14_1 = src;
  }
  $writeFullyCOROUTINE$9.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.u14_1.w14(1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var count = this.v14_1.a15() - this.v14_1.b15() | 0;
            writeFully$default_0(this.u14_1.o11_1, this.v14_1, 0, 2, null);
            this.u14_1.c15(count);
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $writeFullyCOROUTINE$9.$metadata$ = classMeta('$writeFullyCOROUTINE$9', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $writeFullyCOROUTINE$10(_this__u8e3s4, src, offset, length, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.l15_1 = _this__u8e3s4;
    this.m15_1 = src;
    this.n15_1 = offset;
    this.o15_1 = length;
  }
  $writeFullyCOROUTINE$10.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 4;
            this.p15_1 = this.n15_1;
            this.q15_1 = this.n15_1 + this.o15_1 | 0;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!(this.p15_1 < this.q15_1)) {
              this.vg_1 = 3;
              continue $sm;
            }

            this.vg_1 = 2;
            suspendResult = this.l15_1.w14(1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp0_min = this.l15_1.z13();
            var tmp1_min = this.q15_1 - this.p15_1 | 0;
            var bytesCount = Math.min(tmp0_min, tmp1_min);
            writeFully_2(this.l15_1.o11_1, this.m15_1, this.p15_1, bytesCount);
            this.p15_1 = this.p15_1 + bytesCount | 0;
            this.l15_1.c15(bytesCount);
            this.vg_1 = 1;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 4) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $writeFullyCOROUTINE$10.$metadata$ = classMeta('$writeFullyCOROUTINE$10', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $readRemainingCOROUTINE$26(_this__u8e3s4, limit, headerSizeHint, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.z15_1 = _this__u8e3s4;
    this.a16_1 = limit;
    this.b16_1 = headerSizeHint;
  }
  $readRemainingCOROUTINE$26.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            ensureNotFailed(this.z15_1);
            this.c16_1 = BytePacketBuilder_0(this.b16_1);
            var tmp_0 = this;
            var tmp_1 = this;
            tmp_1.d16_1 = this.z15_1.p11_1.l16();
            tmp_0.e16_1 = this.a16_1.g1(this.d16_1) <= 0 ? this.a16_1 : this.d16_1;
            this.c16_1.m16(this.z15_1.p11_1, this.e16_1);
            var tmp_2 = this;
            var tmp_3 = this;
            tmp_3.f16_1 = this.c16_1.g();
            tmp_2.g16_1 = this.a16_1.g5(toLong(this.f16_1));
            if (this.g16_1.equals(new Long(0, 0)) ? true : this.z15_1.p16()) {
              var tmp_4 = this;
              this.z15_1.n16(this.g16_1.c7());
              ensureNotFailed_0(this.z15_1, this.c16_1);
              tmp_4.h16_1 = this.c16_1.o16();
              this.vg_1 = 2;
              continue $sm;
            } else {
              this.vg_1 = 1;
              suspendResult = readRemainingSuspend(this.z15_1, this.c16_1, this.a16_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            this.h16_1 = suspendResult;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            return this.h16_1;
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $readRemainingCOROUTINE$26.$metadata$ = classMeta('$readRemainingCOROUTINE$26', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $readRemainingSuspendCOROUTINE$27(_this__u8e3s4, builder, limit, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.z12_1 = _this__u8e3s4;
    this.a13_1 = builder;
    this.b13_1 = limit;
  }
  $readRemainingSuspendCOROUTINE$27.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 5;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!(toLong(this.a13_1.g()).g1(this.b13_1) < 0)) {
              this.vg_1 = 4;
              continue $sm;
            }

            var tmp_0 = this;
            var tmp_1 = this;
            var tmp0_minus = this.a13_1.g();
            tmp_1.c13_1 = this.b13_1.g5(toLong(tmp0_minus));
            var tmp_2 = this;
            tmp_2.d13_1 = this.z12_1.p11_1.l16();
            tmp_0.e13_1 = this.c13_1.g1(this.d13_1) <= 0 ? this.c13_1 : this.d13_1;
            this.a13_1.m16(this.z12_1.p11_1, this.e13_1);
            this.z12_1.n16(this.e13_1.c7());
            ensureNotFailed_0(this.z12_1, this.a13_1);
            if (this.z12_1.p16() ? true : this.a13_1.g() === this.b13_1.c7()) {
              this.vg_1 = 4;
              continue $sm;
            } else {
              this.vg_1 = 2;
              continue $sm;
            }

            break;
          case 2:
            this.vg_1 = 3;
            suspendResult = this.z12_1.q16(1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            ;
            this.vg_1 = 1;
            continue $sm;
          case 4:
            ensureNotFailed_0(this.z12_1, this.a13_1);
            return this.a13_1.o16();
          case 5:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 5) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $readRemainingSuspendCOROUTINE$27.$metadata$ = classMeta('$readRemainingSuspendCOROUTINE$27', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $readAvailableCOROUTINE$30(_this__u8e3s4, dst, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.z16_1 = _this__u8e3s4;
    this.a17_1 = dst;
  }
  $readAvailableCOROUTINE$30.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            if (!(this.z16_1.o12() == null)) {
              var tmp_0 = this;
              throw ensureNotNull(this.z16_1.o12());
            } else {
              if (this.z16_1.p11_1.e17()) {
                var tmp_1 = this;
                var tmp0_minOf = toLong(this.a17_1.c17() - this.a17_1.a15() | 0);
                var tmp1_minOf = this.z16_1.p11_1.l16();
                var size = (tmp0_minOf.g1(tmp1_minOf) <= 0 ? tmp0_minOf : tmp1_minOf).c7();
                readFully_2(this.z16_1.p11_1, this.a17_1, size);
                this.z16_1.n16(size);
                tmp_1.b17_1 = size;
                this.vg_1 = 2;
                continue $sm;
              } else {
                if (this.z16_1.p12()) {
                  this.b17_1 = this.z16_1.d17();
                  this.vg_1 = 2;
                  continue $sm;
                } else {
                  if (!(this.a17_1.c17() > this.a17_1.a15())) {
                    this.b17_1 = 0;
                    this.vg_1 = 2;
                    continue $sm;
                  } else {
                    this.vg_1 = 1;
                    suspendResult = readAvailableSuspend(this.z16_1, this.a17_1, this);
                    if (suspendResult === get_COROUTINE_SUSPENDED()) {
                      return suspendResult;
                    }
                    continue $sm;
                  }
                }
              }
            }

            break;
          case 1:
            this.b17_1 = suspendResult;
            this.vg_1 = 2;
            continue $sm;
          case 2:
            return this.b17_1;
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $readAvailableCOROUTINE$30.$metadata$ = classMeta('$readAvailableCOROUTINE$30', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $readAvailableSuspendCOROUTINE$31(_this__u8e3s4, dst, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.n13_1 = _this__u8e3s4;
    this.o13_1 = dst;
  }
  $readAvailableSuspendCOROUTINE$31.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.vg_1 = 1;
            suspendResult = this.n13_1.q16(1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            ;
            this.vg_1 = 2;
            suspendResult = this.n13_1.f17(this.o13_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $readAvailableSuspendCOROUTINE$31.$metadata$ = classMeta('$readAvailableSuspendCOROUTINE$31', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $awaitInternalAtLeast1COROUTINE$40(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.o17_1 = _this__u8e3s4;
  }
  $awaitInternalAtLeast1COROUTINE$40.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp_0 = this;
            tmp_0.q17_1 = this.o17_1.p11_1;
            if (!this.q17_1.r17()) {
              var tmp_1 = this;
              tmp_1.p17_1 = true;
              this.vg_1 = 3;
              continue $sm;
            } else {
              this.vg_1 = 1;
              suspendResult = this.o17_1.q16(1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            this.p17_1 = suspendResult;
            this.vg_1 = 3;
            continue $sm;
          case 2:
            throw this.yg_1;
          case 3:
            return this.p17_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $awaitInternalAtLeast1COROUTINE$40.$metadata$ = classMeta('$awaitInternalAtLeast1COROUTINE$40', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $awaitSuspendCOROUTINE$41(_this__u8e3s4, atLeast, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.a18_1 = _this__u8e3s4;
    this.b18_1 = atLeast;
  }
  $awaitSuspendCOROUTINE$41.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            var tmp_0 = this;
            tmp_0.c18_1 = this.b18_1 >= 0;
            if (!this.c18_1) {
              var message = 'Failed requirement.';
              throw IllegalArgumentException_init_$Create$(toString(message));
            }

            this.vg_1 = 1;
            suspendResult = this.a18_1.d18(this.b18_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.a18_1.e18();
            var tmp0_safe_receiver = this.a18_1.o12();
            if (tmp0_safe_receiver == null)
              null;
            else {
              throw tmp0_safe_receiver;
            }

            ;
            return !this.a18_1.p16() ? this.a18_1.l14() >= this.b18_1 : false;
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $awaitSuspendCOROUTINE$41.$metadata$ = classMeta('$awaitSuspendCOROUTINE$41', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function ByteChannelSequentialBase(initial, autoFlush, pool) {
    this.m11_1 = autoFlush;
    this.n11_1 = new ByteChannelSequentialBaseSharedState();
    this.o11_1 = new BytePacketBuilder(0, pool);
    this.p11_1 = ByteReadPacket_init_$Create$(initial, pool);
    this.q11_1 = new AwaitingSlot();
    this.r11_1 = new Object();
    var tmp = this;
    tmp.s11_1 = BytePacketBuilder$default(0, 1, null);
  }
  ByteChannelSequentialBase.prototype.f18 = function () {
    return this.m11_1;
  };
  ByteChannelSequentialBase.prototype.g18 = function (value) {
    this.n11_1.y11_1 = value;
  };
  ByteChannelSequentialBase.prototype.p12 = function () {
    return this.n11_1.y11_1;
  };
  ByteChannelSequentialBase.prototype.h18 = function () {
    return this.p11_1;
  };
  ByteChannelSequentialBase.prototype.l14 = function () {
    return _get_flushSize__xd4y0k(this) + this.p11_1.l16().c7() | 0;
  };
  ByteChannelSequentialBase.prototype.z13 = function () {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.l14() + this.o11_1.g() | 0;
      }
      var tmp0_maxOf = 4088 - tmp$ret$0 | 0;
      tmp$ret$1 = Math.max(0, tmp0_maxOf);
    }
    return tmp$ret$1;
  };
  ByteChannelSequentialBase.prototype.p16 = function () {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (this.p12()) {
      var tmp$ret$0;
      {
        var tmp0__get_isEmpty__8d2q20 = this.p11_1;
        tmp$ret$0 = tmp0__get_isEmpty__8d2q20.r17();
      }
      tmp_1 = tmp$ret$0;
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = _get_flushSize__xd4y0k(this) === 0;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.o11_1.cq();
    } else {
      tmp = false;
    }
    return tmp;
  };
  ByteChannelSequentialBase.prototype.o12 = function () {
    return this.n11_1.d12_1;
  };
  ByteChannelSequentialBase.prototype.w14 = function (count, $cont) {
    var tmp = new $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0(this, count, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.d18 = function (count, $cont) {
    var tmp = new $awaitAtLeastNBytesAvailableForReadCOROUTINE$1(this, count, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.cd = function () {
    flushImpl(this);
  };
  ByteChannelSequentialBase.prototype.e18 = function () {
    var tmp$ret$1;
    {
      var tmp0_synchronized = this.r11_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = unsafeAppend(this.p11_1, this.s11_1);
      }
      tmp$ret$1 = tmp$ret$0;
    }
  };
  ByteChannelSequentialBase.prototype.i18 = function (src, $cont) {
    var tmp = new $writeFullyCOROUTINE$9(this, src, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.j18 = function (src, offset, length, $cont) {
    var tmp = new $writeFullyCOROUTINE$10(this, src, offset, length, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.n16 = function (count) {
    var tmp0_this = this;
    var tmp$ret$0;
    {
      var tmp0_plus = _get__totalBytesRead__ypqfud(tmp0_this);
      tmp$ret$0 = tmp0_plus.f5(toLong(count));
    }
    _set__totalBytesRead__om08bt(tmp0_this, tmp$ret$0);
    this.q11_1.h12();
  };
  ByteChannelSequentialBase.prototype.k18 = function (limit, headerSizeHint, $cont) {
    var tmp = new $readRemainingCOROUTINE$26(this, limit, headerSizeHint, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.d17 = function () {
    var tmp0_safe_receiver = this.o12();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
    return -1;
  };
  ByteChannelSequentialBase.prototype.f17 = function (dst, $cont) {
    var tmp = new $readAvailableCOROUTINE$30(this, dst, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.l18 = function ($cont) {
    var tmp = new $awaitInternalAtLeast1COROUTINE$40(this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.q16 = function (atLeast, $cont) {
    var tmp = new $awaitSuspendCOROUTINE$41(this, atLeast, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  ByteChannelSequentialBase.prototype.dn = function (cause) {
    if (!(this.o12() == null) ? true : this.p12()) {
      return false;
    }
    var tmp0_elvis_lhs = cause;
    return this.lw(tmp0_elvis_lhs == null ? CancellationException_init_$Create$('Channel cancelled') : tmp0_elvis_lhs);
  };
  ByteChannelSequentialBase.prototype.lw = function (cause) {
    if (this.p12() ? true : !(this.o12() == null))
      return false;
    _set_closedCause__rpgi88(this, cause);
    this.g18(true);
    if (!(cause == null)) {
      this.p11_1.q12();
      this.o11_1.q12();
      this.s11_1.q12();
    } else {
      this.cd();
    }
    this.q11_1.m18(cause);
    return true;
  };
  ByteChannelSequentialBase.prototype.n18 = function (dst, limit) {
    var size = this.p11_1.l16();
    var tmp;
    if (size.g1(limit) <= 0) {
      dst.o11_1.o18(this.p11_1);
      dst.c15(size.c7());
      this.n16(size.c7());
      tmp = size;
    } else {
      tmp = new Long(0, 0);
    }
    return tmp;
  };
  ByteChannelSequentialBase.prototype.c15 = function (count) {
    var tmp0_this = this;
    var tmp$ret$0;
    {
      var tmp0_plus = _get__totalBytesWritten__yty2ze(tmp0_this);
      tmp$ret$0 = tmp0_plus.f5(toLong(count));
    }
    _set__totalBytesWritten__29anve(tmp0_this, tmp$ret$0);
    if (this.p12()) {
      this.o11_1.q12();
      ensureNotClosed(this);
    }
    if (this.f18() ? true : this.z13() === 0) {
      this.cd();
    }
  };
  ByteChannelSequentialBase.$metadata$ = classMeta('ByteChannelSequentialBase', [ByteChannel, ByteReadChannel_1, ByteWriteChannel, SuspendableReadSession, HasReadSession, HasWriteSession]);
  function readRemaining(_this__u8e3s4, $cont) {
    Companion_getInstance();
    return _this__u8e3s4.k18(new Long(-1, 2147483647), 0, $cont);
  }
  function cancel(_this__u8e3s4) {
    return _this__u8e3s4.dn(null);
  }
  function readRemaining_0(_this__u8e3s4, limit, $cont) {
    return _this__u8e3s4.k18(limit, 0, $cont);
  }
  function ClosedWriteChannelException(message) {
    CancellationException_init_$Init$(message, this);
    captureStack(this, ClosedWriteChannelException);
  }
  ClosedWriteChannelException.$metadata$ = classMeta('ClosedWriteChannelException', undefined, undefined, undefined, undefined, CancellationException.prototype);
  function close_0(_this__u8e3s4) {
    return _this__u8e3s4.lw(null);
  }
  function writeFully(_this__u8e3s4, src, $cont) {
    return _this__u8e3s4.j18(src, 0, src.length, $cont);
  }
  function WriterJob() {
  }
  WriterJob.$metadata$ = interfaceMeta('WriterJob', [Job]);
  function writer(_this__u8e3s4, coroutineContext, autoFlush, block) {
    return launchChannel(_this__u8e3s4, coroutineContext, ByteChannel_0(autoFlush), true, block);
  }
  function writer$default(_this__u8e3s4, coroutineContext, autoFlush, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      coroutineContext = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      autoFlush = false;
    return writer(_this__u8e3s4, coroutineContext, autoFlush, block);
  }
  function WriterScope() {
  }
  WriterScope.$metadata$ = interfaceMeta('WriterScope', [CoroutineScope]);
  function ChannelJob(delegate, channel) {
    this.p18_1 = delegate;
    this.q18_1 = channel;
  }
  ChannelJob.prototype.cv = function () {
    return this.q18_1;
  };
  ChannelJob.prototype.ik = function (child) {
    return this.p18_1.ik(child);
  };
  ChannelJob.prototype.sj = function () {
    return this.p18_1.sj();
  };
  ChannelJob.prototype.wj = function (onCancelling, invokeImmediately, handler) {
    return this.p18_1.wj(onCancelling, invokeImmediately, handler);
  };
  ChannelJob.prototype.w3 = function (key) {
    return this.p18_1.w3(key);
  };
  ChannelJob.prototype.c4 = function (initial, operation) {
    return this.p18_1.c4(initial, operation);
  };
  ChannelJob.prototype.ak = function (cause) {
    this.p18_1.ak(cause);
  };
  ChannelJob.prototype.vj = function (handler) {
    return this.p18_1.vj(handler);
  };
  ChannelJob.prototype.b4 = function (key) {
    return this.p18_1.b4(key);
  };
  ChannelJob.prototype.d4 = function (context) {
    return this.p18_1.d4(context);
  };
  ChannelJob.prototype.rj = function () {
    return this.p18_1.rj();
  };
  ChannelJob.prototype.ti = function () {
    return this.p18_1.ti();
  };
  ChannelJob.prototype.s = function () {
    return this.p18_1.s();
  };
  ChannelJob.prototype.toString = function () {
    return 'ChannelJob[' + this.p18_1 + ']';
  };
  ChannelJob.$metadata$ = classMeta('ChannelJob', [ReaderJob, WriterJob, Job]);
  function launchChannel(_this__u8e3s4, context, channel, attachJob, block) {
    var dispatcher = _this__u8e3s4.si().w3(Key_getInstance());
    var job = launch$default(_this__u8e3s4, context, null, launchChannel$slambda_0(attachJob, channel, block, dispatcher, null), 2, null);
    job.vj(launchChannel$lambda(channel));
    return new ChannelJob(job, channel);
  }
  function ReaderJob() {
  }
  ReaderJob.$metadata$ = interfaceMeta('ReaderJob', [Job]);
  function ChannelScope(delegate, channel) {
    this.r18_1 = channel;
    this.s18_1 = delegate;
  }
  ChannelScope.prototype.cv = function () {
    return this.r18_1;
  };
  ChannelScope.prototype.si = function () {
    return this.s18_1.si();
  };
  ChannelScope.$metadata$ = classMeta('ChannelScope', [ReaderScope, WriterScope, CoroutineScope]);
  function ReaderScope() {
  }
  ReaderScope.$metadata$ = interfaceMeta('ReaderScope', [CoroutineScope]);
  function launchChannel$slambda($attachJob, $channel, $block, $dispatcher, resultContinuation) {
    this.b19_1 = $attachJob;
    this.c19_1 = $channel;
    this.d19_1 = $block;
    this.e19_1 = $dispatcher;
    CoroutineImpl.call(this, resultContinuation);
  }
  launchChannel$slambda.prototype.h19 = function ($this$launch, $cont) {
    var tmp = this.i19($this$launch, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  launchChannel$slambda.prototype.gh = function (p1, $cont) {
    return this.h19((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  launchChannel$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            if (this.b19_1) {
              this.c19_1.h11(ensureNotNull(this.f19_1.si().w3(Key_getInstance_0())));
            }

            var tmp_0 = this;
            var tmp_1 = new ChannelScope(this.f19_1, this.c19_1);
            tmp_0.g19_1 = isInterface(tmp_1, CoroutineScope) ? tmp_1 : THROW_CCE();
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.d19_1(this.g19_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.wg_1 = 3;
            this.vg_1 = 4;
            continue $sm;
          case 2:
            this.wg_1 = 3;
            var tmp_2 = this.yg_1;
            if (tmp_2 instanceof Error) {
              var cause = this.yg_1;
              if (!equals(this.e19_1, Dispatchers_getInstance().au_1) ? !(this.e19_1 == null) : false) {
                throw cause;
              }
              this.c19_1.dn(cause);
              this.vg_1 = 4;
              continue $sm;
            } else {
              throw this.yg_1;
            }

            break;
          case 3:
            throw this.yg_1;
          case 4:
            this.wg_1 = 3;
            return Unit_getInstance();
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  launchChannel$slambda.prototype.i19 = function ($this$launch, completion) {
    var i = new launchChannel$slambda(this.b19_1, this.c19_1, this.d19_1, this.e19_1, completion);
    i.f19_1 = $this$launch;
    return i;
  };
  launchChannel$slambda.$metadata$ = classMeta('launchChannel$slambda', undefined, undefined, undefined, [1], CoroutineImpl.prototype);
  function launchChannel$slambda_0($attachJob, $channel, $block, $dispatcher, resultContinuation) {
    var i = new launchChannel$slambda($attachJob, $channel, $block, $dispatcher, resultContinuation);
    var l = function ($this$launch, $cont) {
      return i.h19($this$launch, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function launchChannel$lambda($channel) {
    return function (cause) {
      $channel.lw(cause);
      return Unit_getInstance();
    };
  }
  function ReadSession() {
  }
  ReadSession.$metadata$ = interfaceMeta('ReadSession');
  function SuspendableReadSession() {
  }
  SuspendableReadSession.$metadata$ = interfaceMeta('SuspendableReadSession', [ReadSession]);
  function HasReadSession() {
  }
  HasReadSession.$metadata$ = interfaceMeta('HasReadSession');
  function HasWriteSession() {
  }
  HasWriteSession.$metadata$ = interfaceMeta('HasWriteSession');
  function get_highByte(_this__u8e3s4) {
    return toByte(_this__u8e3s4 >>> 8 | 0);
  }
  function get_lowByte(_this__u8e3s4) {
    return toByte(_this__u8e3s4 & 255);
  }
  function get_highShort(_this__u8e3s4) {
    return toShort(_this__u8e3s4 >>> 16 | 0);
  }
  function get_lowShort(_this__u8e3s4) {
    return toShort(_this__u8e3s4 & 65535);
  }
  function get(_this__u8e3s4, index) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.j19_1.getInt8(index);
    }
    return tmp$ret$0;
  }
  function set(_this__u8e3s4, index, value) {
    return _this__u8e3s4.j19_1.setInt8(index, value);
  }
  function Allocator() {
  }
  Allocator.$metadata$ = interfaceMeta('Allocator');
  function storeByteArray(_this__u8e3s4, offset, source, sourceOffset, count) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_let = of(Companion_getInstance_7(), source, sourceOffset, count);
        {
        }
        tmp$ret$0 = tmp0_let.m19(_this__u8e3s4, 0, count, offset);
      }
      tmp$ret$1 = tmp$ret$0;
    }
  }
  function encodeToImpl(_this__u8e3s4, destination, input, fromIndex, toIndex) {
    var start = fromIndex;
    if (start >= toIndex)
      return 0;
    var bytesWritten = 0;
    {
      var tail = prepareWriteHead(destination, 1, null);
      try {
        var size;
        $l$loop: while (true) {
          var tmp$ret$3;
          {
            var tmp0__anonymous__q1qw7t = tail;
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
            }
            var before = tmp$ret$0;
            var rc = encodeImpl(_this__u8e3s4, input, start, toIndex, tmp0__anonymous__q1qw7t);
            {
              var tmp0_check = rc >= 0;
              {
              }
              {
                {
                }
                if (!tmp0_check) {
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = 'Check failed.';
                  }
                  var message = tmp$ret$1;
                  throw IllegalStateException_init_$Create$(toString(message));
                }
              }
            }
            start = start + rc | 0;
            var tmp = bytesWritten;
            var tmp$ret$2;
            {
              tmp$ret$2 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
            }
            bytesWritten = tmp + (before - tmp$ret$2 | 0) | 0;
            tmp$ret$3 = start >= toIndex ? 0 : rc === 0 ? 8 : 1;
          }
          size = tmp$ret$3;
          if (size <= 0)
            break $l$loop;
          tail = prepareWriteHead(destination, size, tail);
        }
      }finally {
        afterHeadWrite(destination, tail);
      }
    }
    bytesWritten = bytesWritten + encodeCompleteImpl(_this__u8e3s4, destination) | 0;
    return bytesWritten;
  }
  function encodeCompleteImpl(_this__u8e3s4, dst) {
    var size = 1;
    var bytesWritten = 0;
    {
      var tail = prepareWriteHead(dst, 1, null);
      try {
        $l$loop: while (true) {
          var tmp$ret$2;
          {
            var tmp0__anonymous__q1qw7t = tail;
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
            }
            var before = tmp$ret$0;
            if (encodeComplete(_this__u8e3s4, tmp0__anonymous__q1qw7t)) {
              size = 0;
            } else {
              var tmp0 = size;
              size = tmp0 + 1 | 0;
            }
            var tmp = bytesWritten;
            var tmp$ret$1;
            {
              tmp$ret$1 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
            }
            bytesWritten = tmp + (before - tmp$ret$1 | 0) | 0;
            tmp$ret$2 = size > 0;
          }
          if (!tmp$ret$2)
            break $l$loop;
          tail = prepareWriteHead(dst, 1, tail);
        }
      }finally {
        afterHeadWrite(dst, tail);
      }
    }
    return bytesWritten;
  }
  function decode(_this__u8e3s4, input, max) {
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        var tmp0_minOf = toLong(max);
        var tmp1_minOf = sizeEstimate(input);
        tmp$ret$0 = tmp0_minOf.g1(tmp1_minOf) <= 0 ? tmp0_minOf : tmp1_minOf;
      }
      var tmp2_buildString = tmp$ret$0.c7();
      {
      }
      var tmp$ret$1;
      {
        var tmp0_apply = StringBuilder_init_$Create$(tmp2_buildString);
        {
        }
        {
          decode_0(_this__u8e3s4, input, tmp0_apply, max);
        }
        tmp$ret$1 = tmp0_apply;
      }
      tmp$ret$2 = tmp$ret$1.toString();
    }
    return tmp$ret$2;
  }
  function decode$default(_this__u8e3s4, input, max, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      max = IntCompanionObject_getInstance().w_1;
    return decode(_this__u8e3s4, input, max);
  }
  function encodeToByteArrayImpl1(_this__u8e3s4, input, fromIndex, toIndex) {
    var start = fromIndex;
    if (start >= toIndex)
      return get_EmptyByteArray();
    var single = Companion_getInstance_5().i11_1.n19();
    try {
      var rc = encodeImpl(_this__u8e3s4, input, start, toIndex, single);
      start = start + rc | 0;
      if (start === toIndex) {
        var tmp$ret$0;
        {
          tmp$ret$0 = single.a15() - single.b15() | 0;
        }
        var result = new Int8Array(tmp$ret$0);
        readFully$default(single, result, 0, 0, 6, null);
        return result;
      }
      var tmp$ret$1;
      $l$block: {
        {
        }
        var builder = BytePacketBuilder_0(0);
        try {
          {
            builder.w19(single.v19());
            encodeToImpl(_this__u8e3s4, builder, input, start, toIndex);
          }
          tmp$ret$1 = builder.o16();
          break $l$block;
        } catch ($p) {
          if ($p instanceof Error) {
            builder.q12();
            throw $p;
          } else {
            throw $p;
          }
        }
      }
      var tmp = tmp$ret$1;
      return readBytes$default(tmp, 0, 1, null);
    }finally {
      single.x19(Companion_getInstance_5().i11_1);
    }
  }
  function sizeEstimate(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ByteReadPacket) {
      tmp = _this__u8e3s4.l16();
    } else {
      if (tmp0_subject instanceof AbstractInput) {
        var tmp$ret$0;
        {
          var tmp0_maxOf = _this__u8e3s4.l16();
          tmp$ret$0 = tmp0_maxOf.g1(new Long(16, 0)) >= 0 ? tmp0_maxOf : new Long(16, 0);
        }
        tmp = tmp$ret$0;
      } else {
        tmp = new Long(16, 0);
      }
    }
    return tmp;
  }
  function encode(_this__u8e3s4, input, fromIndex, toIndex) {
    var tmp$ret$0;
    $l$block: {
      {
      }
      var builder = BytePacketBuilder_0(0);
      try {
        {
          encodeToImpl(_this__u8e3s4, builder, input, fromIndex, toIndex);
        }
        tmp$ret$0 = builder.o16();
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          builder.q12();
          throw $p;
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$0;
  }
  function encode$default(_this__u8e3s4, input, fromIndex, toIndex, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = charSequenceLength(input);
    return encode(_this__u8e3s4, input, fromIndex, toIndex);
  }
  function _set__head__b4pap2($this, newHead) {
    $this.j16_1.y19_1 = newHead;
    $this.j16_1.z19_1 = newHead.d1a();
    $this.j16_1.a1a_1 = newHead.b15();
    $this.j16_1.b1a_1 = newHead.a15();
  }
  function _get__head__kwf5se($this) {
    return $this.j16_1.y19_1;
  }
  function _set_tailRemaining__ggd7r5($this, newValue) {
    {
      var tmp0_require = newValue.g1(new Long(0, 0)) >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv(newValue);
        m.f1a();
      }
    }
    $this.j16_1.c1a_1 = newValue;
  }
  function _get_tailRemaining__vo4q9h($this) {
    return $this.j16_1.c1a_1;
  }
  function doPrefetch($this, min) {
    var tail = findTail(_get__head__kwf5se($this));
    var tmp$ret$0;
    {
      tmp$ret$0 = $this.g1a() - $this.h1a() | 0;
    }
    var available = numberToLong(tmp$ret$0).f5(_get_tailRemaining__vo4q9h($this));
    do {
      var next = $this.i1a();
      if (next == null) {
        $this.k16_1 = true;
        return false;
      }
      var tmp$ret$1;
      {
        tmp$ret$1 = next.a15() - next.b15() | 0;
      }
      var chunkSize = tmp$ret$1;
      if (tail === Companion_getInstance_5().k1a()) {
        _set__head__b4pap2($this, next);
        tail = next;
      } else {
        tail.j1a(next);
        var tmp0_this = $this;
        var tmp$ret$2;
        {
          var tmp0_plus = _get_tailRemaining__vo4q9h(tmp0_this);
          tmp$ret$2 = tmp0_plus.f5(toLong(chunkSize));
        }
        _set_tailRemaining__ggd7r5(tmp0_this, tmp$ret$2);
      }
      var tmp$ret$3;
      {
        var tmp1_plus = available;
        tmp$ret$3 = tmp1_plus.f5(toLong(chunkSize));
      }
      available = tmp$ret$3;
    }
     while (available.g1(min) < 0);
    return true;
  }
  function readASCII($this, out, min, max) {
    if (max === 0 ? min === 0 : false)
      return 0;
    else if ($this.r17())
      if (min === 0)
        return 0;
      else {
        atLeastMinCharactersRequire($this, min);
      }
     else if (max < min) {
      minShouldBeLess($this, min, max);
    }
    var copied = 0;
    var utf8 = false;
    var tmp$ret$0;
    $l$block: {
      var release = true;
      var tmp0_elvis_lhs = prepareReadFirstHead($this, 1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      try {
        $l$loop_0: do {
          var tmp$ret$7;
          {
            var tmp0__anonymous__q1qw7t = current;
            var tmp$ret$4;
            $l$block_0: {
              var tmp$ret$6;
              {
                {
                }
                var tmp$ret$5;
                {
                  var tmp0__anonymous__q1qw7t_0 = tmp0__anonymous__q1qw7t.x14_1;
                  var tmp1__anonymous__uwfjfc = tmp0__anonymous__q1qw7t.b15();
                  var tmp2__anonymous__z9zvc9 = tmp0__anonymous__q1qw7t.a15();
                  var inductionVariable = tmp1__anonymous__uwfjfc;
                  if (inductionVariable < tmp2__anonymous__z9zvc9)
                    do {
                      var index = inductionVariable;
                      inductionVariable = inductionVariable + 1 | 0;
                      var tmp$ret$2;
                      {
                        var tmp$ret$1;
                        {
                          tmp$ret$1 = tmp0__anonymous__q1qw7t_0.j19_1.getInt8(index);
                        }
                        tmp$ret$2 = tmp$ret$1;
                      }
                      var codepoint = tmp$ret$2 & 255;
                      var tmp_0;
                      if ((codepoint & 128) === 128) {
                        tmp_0 = true;
                      } else {
                        var tmp$ret$3;
                        {
                          var tmp3__anonymous__ufb84q = numberToChar(codepoint);
                          var tmp_1;
                          if (copied === max) {
                            tmp_1 = false;
                          } else {
                            out.b5(tmp3__anonymous__ufb84q);
                            var tmp0 = copied;
                            copied = tmp0 + 1 | 0;
                            tmp_1 = true;
                          }
                          tmp$ret$3 = tmp_1;
                        }
                        tmp_0 = !tmp$ret$3;
                      }
                      if (tmp_0) {
                        tmp0__anonymous__q1qw7t.l1a(index - tmp1__anonymous__uwfjfc | 0);
                        tmp$ret$4 = false;
                        break $l$block_0;
                      }
                    }
                     while (inductionVariable < tmp2__anonymous__z9zvc9);
                  tmp$ret$5 = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
                }
                var rc = tmp$ret$5;
                tmp0__anonymous__q1qw7t.l1a(rc);
                tmp$ret$6 = rc;
              }
              tmp$ret$4 = true;
            }
            var rc_0 = tmp$ret$4;
            var tmp_2;
            if (rc_0) {
              tmp_2 = true;
            } else if (copied === max) {
              tmp_2 = false;
            } else {
              utf8 = true;
              tmp_2 = false;
            }
            tmp$ret$7 = tmp_2;
          }
          if (!tmp$ret$7) {
            break $l$loop_0;
          }
          release = false;
          var tmp1_elvis_lhs = prepareReadNextHead($this, current);
          var tmp_3;
          if (tmp1_elvis_lhs == null) {
            break $l$loop_0;
          } else {
            tmp_3 = tmp1_elvis_lhs;
          }
          var next = tmp_3;
          current = next;
          release = true;
        }
         while (true);
      }finally {
        if (release) {
          completeReadHead($this, current);
        }
      }
    }
    if (utf8) {
      return copied + readUtf8($this, out, min - copied | 0, max - copied | 0) | 0;
    }
    if (copied < min) {
      prematureEndOfStreamChars($this, min, copied);
    }
    return copied;
  }
  function atLeastMinCharactersRequire($this, min) {
    throw new EOFException('at least ' + min + ' characters required but no bytes available');
  }
  function minShouldBeLess($this, min, max) {
    throw IllegalArgumentException_init_$Create$('min should be less or equal to max but min = ' + min + ', max = ' + max);
  }
  function prematureEndOfStreamChars($this, min, copied) {
    throw new MalformedUTF8InputException('Premature end of stream: expected at least ' + min + ' chars but had only ' + copied);
  }
  function readUtf8($this, out, min, max) {
    var copied = 0;
    var tmp$ret$0;
    $l$block: {
      var release = true;
      var tmp0_elvis_lhs = prepareReadFirstHead($this, 1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      var size = 1;
      try {
        $l$loop_0: do {
          var tmp$ret$1;
          {
            var tmp0__get_readRemaining__u3cy9h = current;
            tmp$ret$1 = tmp0__get_readRemaining__u3cy9h.a15() - tmp0__get_readRemaining__u3cy9h.b15() | 0;
          }
          var before = tmp$ret$1;
          var after;
          if (before >= size) {
            try {
              var tmp$ret$11;
              {
                var tmp3__anonymous__ufb84q = current;
                var tmp$ret$5;
                $l$block_3: {
                  var byteCount = 0;
                  var value = 0;
                  var lastByteCount = 0;
                  var tmp$ret$10;
                  {
                    {
                    }
                    var tmp$ret$9;
                    {
                      var tmp0__anonymous__q1qw7t = tmp3__anonymous__ufb84q.x14_1;
                      var tmp1__anonymous__uwfjfc = tmp3__anonymous__ufb84q.b15();
                      var tmp2__anonymous__z9zvc9 = tmp3__anonymous__ufb84q.a15();
                      var inductionVariable = tmp1__anonymous__uwfjfc;
                      if (inductionVariable < tmp2__anonymous__z9zvc9)
                        do {
                          var index = inductionVariable;
                          inductionVariable = inductionVariable + 1 | 0;
                          var tmp$ret$3;
                          {
                            var tmp$ret$2;
                            {
                              tmp$ret$2 = tmp0__anonymous__q1qw7t.j19_1.getInt8(index);
                            }
                            tmp$ret$3 = tmp$ret$2;
                          }
                          var v = tmp$ret$3 & 255;
                          if ((v & 128) === 0) {
                            if (!(byteCount === 0)) {
                              malformedByteCount(byteCount);
                            }
                            var tmp$ret$4;
                            {
                              var tmp3__anonymous__ufb84q_0 = numberToChar(v);
                              var tmp_0;
                              if (copied === max) {
                                tmp_0 = false;
                              } else {
                                out.b5(tmp3__anonymous__ufb84q_0);
                                var tmp0 = copied;
                                copied = tmp0 + 1 | 0;
                                tmp_0 = true;
                              }
                              tmp$ret$4 = tmp_0;
                            }
                            if (!tmp$ret$4) {
                              tmp3__anonymous__ufb84q.l1a(index - tmp1__anonymous__uwfjfc | 0);
                              tmp$ret$5 = -1;
                              break $l$block_3;
                            }
                          } else if (byteCount === 0) {
                            var mask = 128;
                            value = v;
                            var inductionVariable_0 = 1;
                            if (inductionVariable_0 <= 6)
                              $l$loop: do {
                                var i = inductionVariable_0;
                                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                                if (!((value & mask) === 0)) {
                                  value = value & ~mask;
                                  mask = mask >> 1;
                                  var tmp2 = byteCount;
                                  byteCount = tmp2 + 1 | 0;
                                } else {
                                  break $l$loop;
                                }
                              }
                               while (inductionVariable_0 <= 6);
                            lastByteCount = byteCount;
                            var tmp3 = byteCount;
                            byteCount = tmp3 - 1 | 0;
                            if (lastByteCount > (tmp2__anonymous__z9zvc9 - index | 0)) {
                              tmp3__anonymous__ufb84q.l1a(index - tmp1__anonymous__uwfjfc | 0);
                              tmp$ret$5 = lastByteCount;
                              break $l$block_3;
                            }
                          } else {
                            value = value << 6 | v & 127;
                            var tmp4 = byteCount;
                            byteCount = tmp4 - 1 | 0;
                            if (byteCount === 0) {
                              if (isBmpCodePoint(value)) {
                                var tmp$ret$6;
                                {
                                  var tmp4__anonymous__pkmkx7 = numberToChar(value);
                                  var tmp_1;
                                  if (copied === max) {
                                    tmp_1 = false;
                                  } else {
                                    out.b5(tmp4__anonymous__pkmkx7);
                                    var tmp0_0 = copied;
                                    copied = tmp0_0 + 1 | 0;
                                    tmp_1 = true;
                                  }
                                  tmp$ret$6 = tmp_1;
                                }
                                if (!tmp$ret$6) {
                                  tmp3__anonymous__ufb84q.l1a(((index - tmp1__anonymous__uwfjfc | 0) - lastByteCount | 0) + 1 | 0);
                                  tmp$ret$5 = -1;
                                  break $l$block_3;
                                }
                              } else if (!isValidCodePoint(value)) {
                                malformedCodePoint(value);
                              } else {
                                var tmp_2;
                                var tmp$ret$7;
                                {
                                  var tmp5__anonymous__kpxxpo = numberToChar(highSurrogate(value));
                                  var tmp_3;
                                  if (copied === max) {
                                    tmp_3 = false;
                                  } else {
                                    out.b5(tmp5__anonymous__kpxxpo);
                                    var tmp0_1 = copied;
                                    copied = tmp0_1 + 1 | 0;
                                    tmp_3 = true;
                                  }
                                  tmp$ret$7 = tmp_3;
                                }
                                if (!tmp$ret$7) {
                                  tmp_2 = true;
                                } else {
                                  var tmp$ret$8;
                                  {
                                    var tmp6__anonymous__fv9ai5 = numberToChar(lowSurrogate(value));
                                    var tmp_4;
                                    if (copied === max) {
                                      tmp_4 = false;
                                    } else {
                                      out.b5(tmp6__anonymous__fv9ai5);
                                      var tmp0_2 = copied;
                                      copied = tmp0_2 + 1 | 0;
                                      tmp_4 = true;
                                    }
                                    tmp$ret$8 = tmp_4;
                                  }
                                  tmp_2 = !tmp$ret$8;
                                }
                                if (tmp_2) {
                                  tmp3__anonymous__ufb84q.l1a(((index - tmp1__anonymous__uwfjfc | 0) - lastByteCount | 0) + 1 | 0);
                                  tmp$ret$5 = -1;
                                  break $l$block_3;
                                }
                              }
                              value = 0;
                            }
                          }
                        }
                         while (inductionVariable < tmp2__anonymous__z9zvc9);
                      tmp$ret$9 = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
                    }
                    var rc = tmp$ret$9;
                    tmp3__anonymous__ufb84q.l1a(rc);
                    tmp$ret$10 = rc;
                  }
                  tmp$ret$5 = 0;
                }
                var size_0 = tmp$ret$5;
                tmp$ret$11 = size_0 === 0 ? 1 : size_0 > 0 ? size_0 : 0;
              }
              size = tmp$ret$11;
            }finally {
              var tmp$ret$12;
              {
                var tmp1__get_readRemaining__qliyus = current;
                tmp$ret$12 = tmp1__get_readRemaining__qliyus.a15() - tmp1__get_readRemaining__qliyus.b15() | 0;
              }
              after = tmp$ret$12;
            }
          } else {
            after = before;
          }
          release = false;
          var tmp_5;
          if (after === 0) {
            tmp_5 = prepareReadNextHead($this, current);
          } else {
            var tmp_6;
            if (after < size) {
              tmp_6 = true;
            } else {
              var tmp$ret$13;
              {
                var tmp2__get_endGap__m31424 = current;
                tmp$ret$13 = tmp2__get_endGap__m31424.z14_1 - tmp2__get_endGap__m31424.c17() | 0;
              }
              var tmp_7 = tmp$ret$13;
              Companion_getInstance_2();
              tmp_6 = tmp_7 < 8;
            }
            if (tmp_6) {
              completeReadHead($this, current);
              tmp_5 = prepareReadFirstHead($this, size);
            } else {
              tmp_5 = current;
            }
          }
          var next = tmp_5;
          if (next == null) {
            break $l$loop_0;
          }
          current = next;
          release = true;
        }
         while (size > 0);
      }finally {
        if (release) {
          completeReadHead($this, current);
        }
      }
    }
    if (copied < min) {
      prematureEndOfStreamChars($this, min, copied);
    }
    return copied;
  }
  function discardAsMuchAsPossible($this, n, skipped) {
    var $this_0 = $this;
    var n_0 = n;
    var skipped_0 = skipped;
    while (true) {
      var $this_1 = $this_0;
      var n_1 = n_0;
      var skipped_1 = skipped_0;
      if (n_1.equals(new Long(0, 0)))
        return skipped_1;
      var tmp0_elvis_lhs = $this_1.m1a(1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return skipped_1;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = current.a15() - current.b15() | 0;
        }
        var tmp0_minOf = toLong(tmp$ret$0);
        tmp$ret$1 = tmp0_minOf.g1(n_1) <= 0 ? tmp0_minOf : n_1;
      }
      var size = tmp$ret$1.c7();
      current.l1a(size);
      var tmp1_this = $this_1;
      tmp1_this.n1a(tmp1_this.h1a() + size | 0);
      afterRead($this_1, current);
      var tmp0 = $this_1;
      var tmp$ret$2;
      {
        tmp$ret$2 = n_1.g5(toLong(size));
      }
      var tmp1 = tmp$ret$2;
      var tmp$ret$3;
      {
        tmp$ret$3 = skipped_1.f5(toLong(size));
      }
      var tmp2 = tmp$ret$3;
      $this_0 = tmp0;
      n_0 = tmp1;
      skipped_0 = tmp2;
      continue;
    }
  }
  function discardAsMuchAsPossible_0($this, n, skipped) {
    var currentCount = n;
    var currentSkipped = skipped;
    while (true) {
      if (currentCount === 0) {
        return currentSkipped;
      }
      var tmp0_elvis_lhs = $this.m1a(1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return currentSkipped;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = current.a15() - current.b15() | 0;
        }
        var tmp0_minOf = tmp$ret$0;
        var tmp1_minOf = currentCount;
        tmp$ret$1 = Math.min(tmp0_minOf, tmp1_minOf);
      }
      var size = tmp$ret$1;
      current.l1a(size);
      var tmp1_this = $this;
      tmp1_this.n1a(tmp1_this.h1a() + size | 0);
      afterRead($this, current);
      currentCount = currentCount - size | 0;
      currentSkipped = currentSkipped + size | 0;
    }
  }
  function fixGapAfterReadFallback($this, current) {
    if ($this.k16_1 ? current.p1a() == null : false) {
      $this.n1a(current.b15());
      $this.o1a(current.a15());
      _set_tailRemaining__ggd7r5($this, new Long(0, 0));
      return Unit_getInstance();
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = current.a15() - current.b15() | 0;
    }
    var size = tmp$ret$0;
    var tmp$ret$2;
    {
      Companion_getInstance_2();
      var tmp$ret$1;
      {
        tmp$ret$1 = current.z14_1 - current.c17() | 0;
      }
      var tmp0_minOf = 8 - tmp$ret$1 | 0;
      tmp$ret$2 = Math.min(size, tmp0_minOf);
    }
    var overrun = tmp$ret$2;
    if (size > overrun) {
      fixGapAfterReadFallbackUnreserved($this, current, size, overrun);
    } else {
      var new_0 = $this.i16_1.n19();
      Companion_getInstance_2();
      new_0.q1a(8);
      new_0.j1a(current.r1a());
      writeBufferAppend(new_0, current, size);
      _set__head__b4pap2($this, new_0);
    }
    current.x19($this.i16_1);
  }
  function fixGapAfterReadFallbackUnreserved($this, current, size, overrun) {
    var chunk1 = $this.i16_1.n19();
    var chunk2 = $this.i16_1.n19();
    Companion_getInstance_2();
    chunk1.q1a(8);
    Companion_getInstance_2();
    chunk2.q1a(8);
    chunk1.j1a(chunk2);
    chunk2.j1a(current.r1a());
    writeBufferAppend(chunk1, current, size - overrun | 0);
    writeBufferAppend(chunk2, current, overrun);
    _set__head__b4pap2($this, chunk1);
    _set_tailRemaining__ggd7r5($this, remainingAll(chunk2));
  }
  function ensureNext($this, current, empty) {
    var $this_0 = $this;
    var current_0 = current;
    var empty_0 = empty;
    $l$loop_0: while (true) {
      var $this_1 = $this_0;
      var current_1 = current_0;
      var empty_1 = empty_0;
      if (current_1 === empty_1) {
        return doFill($this_1);
      }
      var next = current_1.r1a();
      current_1.x19($this_1.i16_1);
      var tmp;
      if (next == null) {
        _set__head__b4pap2($this_1, empty_1);
        _set_tailRemaining__ggd7r5($this_1, new Long(0, 0));
        var tmp0 = $this_1;
        var tmp1 = empty_1;
        var tmp2 = empty_1;
        $this_0 = tmp0;
        current_0 = tmp1;
        empty_0 = tmp2;
        continue $l$loop_0;
      } else {
        var tmp$ret$0;
        {
          tmp$ret$0 = next.a15() > next.b15();
        }
        if (tmp$ret$0) {
          _set__head__b4pap2($this_1, next);
          var tmp0_this = $this_1;
          var tmp$ret$2;
          {
            var tmp0_minus = _get_tailRemaining__vo4q9h(tmp0_this);
            var tmp$ret$1;
            {
              tmp$ret$1 = next.a15() - next.b15() | 0;
            }
            var tmp1_minus = tmp$ret$1;
            tmp$ret$2 = tmp0_minus.g5(toLong(tmp1_minus));
          }
          _set_tailRemaining__ggd7r5(tmp0_this, tmp$ret$2);
          tmp = next;
        } else {
          var tmp3 = $this_1;
          var tmp4 = next;
          var tmp5 = empty_1;
          $this_0 = tmp3;
          current_0 = tmp4;
          empty_0 = tmp5;
          continue $l$loop_0;
        }
      }
      return tmp;
    }
  }
  function doFill($this) {
    if ($this.k16_1)
      return null;
    var chunk = $this.i1a();
    if (chunk == null) {
      $this.k16_1 = true;
      return null;
    }
    appendView($this, chunk);
    return chunk;
  }
  function appendView($this, chunk) {
    var tail = findTail(_get__head__kwf5se($this));
    if (tail === Companion_getInstance_5().k1a()) {
      _set__head__b4pap2($this, chunk);
      {
        var tmp0_require = _get_tailRemaining__vo4q9h($this).equals(new Long(0, 0));
        {
        }
        if (!tmp0_require) {
          var m = new _no_name_provided__qut3iv_1();
          m.f1a();
        }
      }
      var tmp0_safe_receiver = chunk.p1a();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : remainingAll(tmp0_safe_receiver);
      _set_tailRemaining__ggd7r5($this, tmp1_elvis_lhs == null ? new Long(0, 0) : tmp1_elvis_lhs);
    } else {
      tail.j1a(chunk);
      var tmp2_this = $this;
      _set_tailRemaining__ggd7r5(tmp2_this, _get_tailRemaining__vo4q9h(tmp2_this).f5(remainingAll(chunk)));
    }
  }
  function prepareReadLoop($this, minSize, head) {
    var $this_0 = $this;
    var minSize_0 = minSize;
    var head_0 = head;
    $l$loop: while (true) {
      var $this_1 = $this_0;
      var minSize_1 = minSize_0;
      var head_1 = head_0;
      var tmp$ret$0;
      {
        tmp$ret$0 = $this_1.g1a() - $this_1.h1a() | 0;
      }
      var headSize = tmp$ret$0;
      if (headSize >= minSize_1)
        return head_1;
      var tmp0_elvis_lhs = head_1.p1a();
      var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? doFill($this_1) : tmp0_elvis_lhs;
      var tmp;
      if (tmp1_elvis_lhs == null) {
        return null;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var next = tmp;
      if (headSize === 0) {
        if (!(head_1 === Companion_getInstance_5().k1a())) {
          $this_1.t1a(head_1);
        }
        var tmp0 = $this_1;
        var tmp1 = minSize_1;
        var tmp2 = next;
        $this_0 = tmp0;
        minSize_0 = tmp1;
        head_0 = tmp2;
        continue $l$loop;
      } else {
        var desiredExtraBytes = minSize_1 - headSize | 0;
        var copied = writeBufferAppend(head_1, next, desiredExtraBytes);
        $this_1.o1a(head_1.a15());
        var tmp2_this = $this_1;
        var tmp$ret$1;
        {
          var tmp0_minus = _get_tailRemaining__vo4q9h(tmp2_this);
          tmp$ret$1 = tmp0_minus.g5(toLong(copied));
        }
        _set_tailRemaining__ggd7r5(tmp2_this, tmp$ret$1);
        var tmp$ret$2;
        {
          tmp$ret$2 = next.a15() > next.b15();
        }
        if (!tmp$ret$2) {
          head_1.j1a(null);
          head_1.j1a(next.r1a());
          next.x19($this_1.i16_1);
        } else {
          next.s1a(copied);
        }
      }
      var tmp$ret$3;
      {
        tmp$ret$3 = head_1.a15() - head_1.b15() | 0;
      }
      if (tmp$ret$3 >= minSize_1)
        return head_1;
      Companion_getInstance_2();
      if (minSize_1 > 8) {
        minSizeIsTooBig($this_1, minSize_1);
      }
      var tmp3 = $this_1;
      var tmp4 = minSize_1;
      var tmp5 = head_1;
      $this_0 = tmp3;
      minSize_0 = tmp4;
      head_0 = tmp5;
      continue $l$loop;
    }
  }
  function minSizeIsTooBig($this, minSize) {
    Companion_getInstance_2();
    throw IllegalStateException_init_$Create$('minSize of ' + minSize + ' is too big (should be less than ' + 8 + ')');
  }
  function afterRead($this, head) {
    var tmp$ret$0;
    {
      tmp$ret$0 = head.a15() - head.b15() | 0;
    }
    if (tmp$ret$0 === 0) {
      $this.t1a(head);
    }
  }
  function Companion() {
    Companion_instance = this;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function _no_name_provided__qut3iv($newValue) {
    this.e1a_1 = $newValue;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "tailRemaining shouldn't be negative: " + toString(this.e1a_1);
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_0($n) {
    this.u1a_1 = $n;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_0.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = 'Negative discard is not allowed: ' + this.u1a_1;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_1() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_1.prototype.f1a = function () {
    throw IllegalStateException_init_$Create$('It should be no tail remaining bytes if current tail is EmptyBuffer');
  };
  _no_name_provided__qut3iv_1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function AbstractInput(head, remaining, pool) {
    Companion_getInstance_1();
    this.i16_1 = pool;
    this.j16_1 = new AbstractInputSharedState(head, remaining);
    this.k16_1 = false;
  }
  AbstractInput.prototype.v1a = function () {
    return this.i16_1;
  };
  AbstractInput.prototype.f11 = function () {
    var tmp$ret$0;
    {
      var tmp0_also = _get__head__kwf5se(this);
      {
      }
      {
        tmp0_also.y1a(this.h1a());
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  AbstractInput.prototype.z1a = function () {
    return this.j16_1.z19_1;
  };
  AbstractInput.prototype.n1a = function (value) {
    this.j16_1.a1a_1 = value;
  };
  AbstractInput.prototype.h1a = function () {
    return this.j16_1.a1a_1;
  };
  AbstractInput.prototype.o1a = function (value) {
    this.j16_1.b1a_1 = value;
  };
  AbstractInput.prototype.g1a = function () {
    return this.j16_1.b1a_1;
  };
  AbstractInput.prototype.a1b = function () {
    return this.g1a() - this.h1a() | 0;
  };
  AbstractInput.prototype.b1b = function (min) {
    if (min.g1(new Long(0, 0)) <= 0)
      return true;
    var tmp$ret$0;
    {
      tmp$ret$0 = this.g1a() - this.h1a() | 0;
    }
    var headRemaining = tmp$ret$0;
    if (toLong(headRemaining).g1(min) >= 0 ? true : numberToLong(headRemaining).f5(_get_tailRemaining__vo4q9h(this)).g1(min) >= 0)
      return true;
    return doPrefetch(this, min);
  };
  AbstractInput.prototype.c1b = function (destination, destinationOffset, offset, min, max) {
    this.b1b(min.f5(offset));
    var current = this.f11();
    var copied = new Long(0, 0);
    var skip = offset;
    var writePosition = destinationOffset;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = toLong(destination.j19_1.byteLength);
      }
      var tmp0_minOf = tmp$ret$0.g5(destinationOffset);
      tmp$ret$1 = max.g1(tmp0_minOf) <= 0 ? max : tmp0_minOf;
    }
    var maxCopySize = tmp$ret$1;
    $l$loop: while (copied.g1(min) < 0 ? copied.g1(maxCopySize) < 0 : false) {
      var tmp$ret$2;
      {
        var tmp1__get_readRemaining__qliyus = current;
        tmp$ret$2 = tmp1__get_readRemaining__qliyus.a15() - tmp1__get_readRemaining__qliyus.b15() | 0;
      }
      var chunkSize = tmp$ret$2;
      if (toLong(chunkSize).g1(skip) > 0) {
        var tmp$ret$3;
        {
          var tmp2_minOf = numberToLong(chunkSize).g5(skip);
          var tmp3_minOf = maxCopySize.g5(copied);
          tmp$ret$3 = tmp2_minOf.g1(tmp3_minOf) <= 0 ? tmp2_minOf : tmp3_minOf;
        }
        var size = tmp$ret$3;
        current.d1a().d1b(destination, numberToLong(current.b15()).f5(skip), size, writePosition);
        skip = new Long(0, 0);
        copied = copied.f5(size);
        writePosition = writePosition.f5(size);
      } else {
        var tmp$ret$4;
        {
          var tmp4_minus = skip;
          tmp$ret$4 = tmp4_minus.g5(toLong(chunkSize));
        }
        skip = tmp$ret$4;
      }
      var tmp0_elvis_lhs = current.p1a();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        break $l$loop;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      current = tmp;
    }
    return copied;
  };
  AbstractInput.prototype.l16 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.g1a() - this.h1a() | 0;
    }
    return toLong(tmp$ret$0).f5(_get_tailRemaining__vo4q9h(this));
  };
  AbstractInput.prototype.e17 = function () {
    return !(this.h1a() === this.g1a()) ? true : !_get_tailRemaining__vo4q9h(this).equals(new Long(0, 0));
  };
  AbstractInput.prototype.r17 = function () {
    var tmp;
    var tmp_0;
    var tmp$ret$0;
    {
      tmp$ret$0 = this.g1a() - this.h1a() | 0;
    }
    if (tmp$ret$0 === 0) {
      tmp_0 = _get_tailRemaining__vo4q9h(this).equals(new Long(0, 0));
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.k16_1 ? true : doFill(this) == null;
    } else {
      tmp = false;
    }
    return tmp;
  };
  AbstractInput.prototype.q12 = function () {
    var head = this.f11();
    var empty = Companion_getInstance_5().k1a();
    if (!(head === empty)) {
      _set__head__b4pap2(this, empty);
      _set_tailRemaining__ggd7r5(this, new Long(0, 0));
      releaseAll(head, this.i16_1);
    }
  };
  AbstractInput.prototype.e1b = function () {
    this.q12();
    if (!this.k16_1) {
      this.k16_1 = true;
    }
    this.x1a();
  };
  AbstractInput.prototype.m12 = function () {
    var head = this.f11();
    var empty = Companion_getInstance_5().k1a();
    if (head === empty)
      return null;
    _set__head__b4pap2(this, empty);
    _set_tailRemaining__ggd7r5(this, new Long(0, 0));
    return head;
  };
  AbstractInput.prototype.f1b = function () {
    var head = this.f11();
    var next = head.p1a();
    var empty = Companion_getInstance_5().k1a();
    if (head === empty)
      return null;
    if (next == null) {
      _set__head__b4pap2(this, empty);
      _set_tailRemaining__ggd7r5(this, new Long(0, 0));
    } else {
      _set__head__b4pap2(this, next);
      var tmp0_this = this;
      var tmp$ret$1;
      {
        var tmp0_minus = _get_tailRemaining__vo4q9h(tmp0_this);
        var tmp$ret$0;
        {
          tmp$ret$0 = next.a15() - next.b15() | 0;
        }
        var tmp1_minus = tmp$ret$0;
        tmp$ret$1 = tmp0_minus.g5(toLong(tmp1_minus));
      }
      _set_tailRemaining__ggd7r5(tmp0_this, tmp$ret$1);
    }
    head.j1a(null);
    return head;
  };
  AbstractInput.prototype.g1b = function (chain) {
    if (chain === Companion_getInstance_5().k1a())
      return Unit_getInstance();
    var size = remainingAll(chain);
    if (_get__head__kwf5se(this) === Companion_getInstance_5().k1a()) {
      _set__head__b4pap2(this, chain);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = this.g1a() - this.h1a() | 0;
        }
        var tmp0_minus = tmp$ret$0;
        tmp$ret$1 = size.g5(toLong(tmp0_minus));
      }
      _set_tailRemaining__ggd7r5(this, tmp$ret$1);
    } else {
      findTail(_get__head__kwf5se(this)).j1a(chain);
      var tmp0_this = this;
      _set_tailRemaining__ggd7r5(tmp0_this, _get_tailRemaining__vo4q9h(tmp0_this).f5(size));
    }
  };
  AbstractInput.prototype.h1b = function (chain) {
    var tail = findTail(this.f11());
    var tmp$ret$0;
    {
      tmp$ret$0 = chain.a15() - chain.b15() | 0;
    }
    var size = tmp$ret$0;
    var tmp;
    if (size === 0) {
      tmp = true;
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = tail.c17() - tail.a15() | 0;
      }
      tmp = tmp$ret$1 < size;
    }
    if (tmp)
      return false;
    writeBufferAppend(tail, chain, size);
    if (this.f11() === tail) {
      this.o1a(tail.a15());
    } else {
      var tmp0_this = this;
      var tmp$ret$2;
      {
        var tmp0_plus = _get_tailRemaining__vo4q9h(tmp0_this);
        tmp$ret$2 = tmp0_plus.f5(toLong(size));
      }
      _set_tailRemaining__ggd7r5(tmp0_this, tmp$ret$2);
    }
    return true;
  };
  AbstractInput.prototype.i1b = function (n) {
    {
      var tmp0_require = n >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_0(n);
        m.f1a();
      }
    }
    return discardAsMuchAsPossible_0(this, n, 0);
  };
  AbstractInput.prototype.l1a = function (n) {
    if (!(this.i1b(n) === n))
      throw new EOFException('Unable to discard ' + n + ' bytes due to end of packet');
  };
  AbstractInput.prototype.j1b = function (n) {
    if (n.g1(new Long(0, 0)) <= 0)
      return new Long(0, 0);
    return discardAsMuchAsPossible(this, n, new Long(0, 0));
  };
  AbstractInput.prototype.k1b = function (min, max) {
    if (min === 0 ? max === 0 ? true : this.r17() : false)
      return '';
    var remaining = this.l16();
    if (remaining.g1(new Long(0, 0)) > 0 ? toLong(max).g1(remaining) >= 0 : false) {
      var tmp = remaining.c7();
      return readTextExactBytes$default(this, tmp, null, 2, null);
    }
    var tmp$ret$1;
    {
      var tmp0_buildString = coerceAtMost(coerceAtLeast(min, 16), max);
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$(tmp0_buildString);
        {
        }
        {
          readASCII(this, tmp0_apply, min, max);
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  };
  AbstractInput.prototype.l1b = function (min, max, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      min = 0;
    if (!(($mask0 & 2) === 0))
      max = IntCompanionObject_getInstance().w_1;
    return this.k1b(min, max);
  };
  AbstractInput.prototype.m1b = function (minSize) {
    return prepareReadLoop(this, minSize, this.f11());
  };
  AbstractInput.prototype.n1b = function (current) {
    return this.o1b(current);
  };
  AbstractInput.prototype.o1b = function (current) {
    return ensureNext(this, current, Companion_getInstance_5().k1a());
  };
  AbstractInput.prototype.p1b = function (current) {
    var tmp0_elvis_lhs = current.p1a();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return fixGapAfterReadFallback(this, current);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var next = tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = current.a15() - current.b15() | 0;
    }
    var remaining = tmp$ret$0;
    var tmp$ret$2;
    {
      Companion_getInstance_2();
      var tmp$ret$1;
      {
        tmp$ret$1 = current.z14_1 - current.c17() | 0;
      }
      var tmp0_minOf = 8 - tmp$ret$1 | 0;
      tmp$ret$2 = Math.min(remaining, tmp0_minOf);
    }
    var overrunSize = tmp$ret$2;
    if (next.q1b() < overrunSize) {
      return fixGapAfterReadFallback(this, current);
    }
    restoreStartGap(next, overrunSize);
    if (remaining > overrunSize) {
      current.r1b();
      this.o1a(current.a15());
      var tmp1_this = this;
      var tmp$ret$3;
      {
        var tmp1_plus = _get_tailRemaining__vo4q9h(tmp1_this);
        tmp$ret$3 = tmp1_plus.f5(toLong(overrunSize));
      }
      _set_tailRemaining__ggd7r5(tmp1_this, tmp$ret$3);
    } else {
      _set__head__b4pap2(this, next);
      var tmp2_this = this;
      var tmp$ret$5;
      {
        var tmp2_minus = _get_tailRemaining__vo4q9h(tmp2_this);
        var tmp$ret$4;
        {
          tmp$ret$4 = next.a15() - next.b15() | 0;
        }
        var tmp3_minus = tmp$ret$4 - overrunSize | 0;
        tmp$ret$5 = tmp2_minus.g5(toLong(tmp3_minus));
      }
      _set_tailRemaining__ggd7r5(tmp2_this, tmp$ret$5);
      current.r1a();
      current.x19(this.i16_1);
    }
  };
  AbstractInput.prototype.i1a = function () {
    var buffer = this.i16_1.n19();
    try {
      Companion_getInstance_2();
      buffer.q1a(8);
      var tmp = buffer.d1a();
      var tmp_0 = buffer.a15();
      var tmp$ret$0;
      {
        tmp$ret$0 = buffer.c17() - buffer.a15() | 0;
      }
      var copied = this.w1a(tmp, tmp_0, tmp$ret$0);
      if (copied === 0) {
        this.k16_1 = true;
        var tmp$ret$1;
        {
          tmp$ret$1 = buffer.a15() > buffer.b15();
        }
        if (!tmp$ret$1) {
          buffer.x19(this.i16_1);
          return null;
        }
      }
      buffer.s1b(copied);
      return buffer;
    } catch ($p) {
      if ($p instanceof Error) {
        buffer.x19(this.i16_1);
        throw $p;
      } else {
        throw $p;
      }
    }
  };
  AbstractInput.prototype.t1b = function () {
    if (!this.k16_1) {
      this.k16_1 = true;
    }
  };
  AbstractInput.prototype.m1a = function (minSize) {
    var head = this.f11();
    if ((this.g1a() - this.h1a() | 0) >= minSize)
      return head;
    return prepareReadLoop(this, minSize, head);
  };
  AbstractInput.prototype.t1a = function (head) {
    var tmp0_elvis_lhs = head.r1a();
    var next = tmp0_elvis_lhs == null ? Companion_getInstance_5().k1a() : tmp0_elvis_lhs;
    _set__head__b4pap2(this, next);
    var tmp1_this = this;
    var tmp$ret$1;
    {
      var tmp0_minus = _get_tailRemaining__vo4q9h(tmp1_this);
      var tmp$ret$0;
      {
        tmp$ret$0 = next.a15() - next.b15() | 0;
      }
      var tmp1_minus = tmp$ret$0;
      tmp$ret$1 = tmp0_minus.g5(toLong(tmp1_minus));
    }
    _set_tailRemaining__ggd7r5(tmp1_this, tmp$ret$1);
    head.x19(this.i16_1);
    return next;
  };
  AbstractInput.$metadata$ = classMeta('AbstractInput', [Input]);
  function AbstractOutput_init_$Init$(pool, $this) {
    AbstractOutput.call($this, 0, pool);
    return $this;
  }
  function _set__head__b4pap2_0($this, value) {
    $this.k12_1.u1b_1 = value;
  }
  function _get__head__kwf5se_0($this) {
    return $this.k12_1.u1b_1;
  }
  function _set__tail__bb8fzq($this, value) {
    $this.k12_1.v1b_1 = value;
  }
  function _get__tail__kpw0hq($this) {
    return $this.k12_1.v1b_1;
  }
  function _set_tailEndExclusive__8xopq4($this, value) {
    $this.k12_1.y1b_1 = value;
  }
  function _set_tailInitialPosition__matoco($this, value) {
    $this.k12_1.z1b_1 = value;
  }
  function _get_tailInitialPosition__zfk4q4($this) {
    return $this.k12_1.z1b_1;
  }
  function _set_chainedSize__unajg($this, value) {
    $this.k12_1.a1c_1 = value;
  }
  function _get_chainedSize__tfqvsg($this) {
    return $this.k12_1.a1c_1;
  }
  function flushChain($this) {
    var tmp0_elvis_lhs = $this.m12();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var oldTail = tmp;
    try {
      {
        {
        }
        var current = oldTail;
        $l$loop: do {
          {
            var tmp0__anonymous__q1qw7t = current;
            var tmp_0 = tmp0__anonymous__q1qw7t.d1a();
            var tmp_1 = tmp0__anonymous__q1qw7t.b15();
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0__anonymous__q1qw7t.a15() - tmp0__anonymous__q1qw7t.b15() | 0;
            }
            $this.b1c(tmp_0, tmp_1, tmp$ret$0);
          }
          var tmp0_elvis_lhs_0 = current.p1a();
          var tmp_2;
          if (tmp0_elvis_lhs_0 == null) {
            break $l$loop;
          } else {
            tmp_2 = tmp0_elvis_lhs_0;
          }
          current = tmp_2;
        }
         while (true);
      }
    }finally {
      releaseAll(oldTail, $this.j12_1);
    }
  }
  function appendNewChunk($this) {
    var new_0 = $this.j12_1.n19();
    Companion_getInstance_2();
    new_0.q1a(8);
    $this.w19(new_0);
    return new_0;
  }
  function appendChainImpl($this, head, newTail, chainedSizeDelta) {
    var _tail = _get__tail__kpw0hq($this);
    if (_tail == null) {
      _set__head__b4pap2_0($this, head);
      _set_chainedSize__unajg($this, 0);
    } else {
      _tail.j1a(head);
      var tailPosition = $this.c1c();
      _tail.d1c(tailPosition);
      var tmp0_this = $this;
      _set_chainedSize__unajg(tmp0_this, _get_chainedSize__tfqvsg(tmp0_this) + (tailPosition - _get_tailInitialPosition__zfk4q4($this) | 0) | 0);
    }
    _set__tail__bb8fzq($this, newTail);
    var tmp1_this = $this;
    _set_chainedSize__unajg(tmp1_this, _get_chainedSize__tfqvsg(tmp1_this) + chainedSizeDelta | 0);
    $this.e1c(newTail.d1a());
    $this.f1c(newTail.a15());
    _set_tailInitialPosition__matoco($this, newTail.b15());
    _set_tailEndExclusive__8xopq4($this, newTail.c17());
  }
  function writeByteFallback($this, v) {
    appendNewChunk($this).g1c(v);
    var tmp0_this = $this;
    var tmp1 = tmp0_this.c1c();
    tmp0_this.f1c(tmp1 + 1 | 0);
  }
  function appendCharFallback($this, c) {
    var tmp$ret$12;
    $l$block: {
      var buffer = $this.h1c(3);
      try {
        var tmp$ret$10;
        {
          var tmp$ret$9;
          {
            var tmp16_putUtf8Char = buffer.x14_1;
            var tmp17_putUtf8Char = buffer.a15();
            var tmp18_putUtf8Char = Char__toInt_impl_vasixd(c);
            var tmp;
            if (0 <= tmp18_putUtf8Char ? tmp18_putUtf8Char <= 127 : false) {
              {
                var tmp0_storeAt = toByte(tmp18_putUtf8Char);
                tmp16_putUtf8Char.j19_1.setInt8(tmp17_putUtf8Char, tmp0_storeAt);
              }
              tmp = 1;
            } else if (128 <= tmp18_putUtf8Char ? tmp18_putUtf8Char <= 2047 : false) {
              var tmp$ret$0;
              {
                var tmp1_set = toByte(192 | tmp18_putUtf8Char >> 6 & 31);
                tmp$ret$0 = tmp16_putUtf8Char.j19_1.setInt8(tmp17_putUtf8Char, tmp1_set);
              }
              var tmp$ret$1;
              {
                var tmp2_set = tmp17_putUtf8Char + 1 | 0;
                var tmp3_set = toByte(128 | tmp18_putUtf8Char & 63);
                tmp$ret$1 = tmp16_putUtf8Char.j19_1.setInt8(tmp2_set, tmp3_set);
              }
              tmp = 2;
            } else if (2048 <= tmp18_putUtf8Char ? tmp18_putUtf8Char <= 65535 : false) {
              var tmp$ret$2;
              {
                var tmp4_set = toByte(224 | tmp18_putUtf8Char >> 12 & 15);
                tmp$ret$2 = tmp16_putUtf8Char.j19_1.setInt8(tmp17_putUtf8Char, tmp4_set);
              }
              var tmp$ret$3;
              {
                var tmp5_set = tmp17_putUtf8Char + 1 | 0;
                var tmp6_set = toByte(128 | tmp18_putUtf8Char >> 6 & 63);
                tmp$ret$3 = tmp16_putUtf8Char.j19_1.setInt8(tmp5_set, tmp6_set);
              }
              var tmp$ret$4;
              {
                var tmp7_set = tmp17_putUtf8Char + 2 | 0;
                var tmp8_set = toByte(128 | tmp18_putUtf8Char & 63);
                tmp$ret$4 = tmp16_putUtf8Char.j19_1.setInt8(tmp7_set, tmp8_set);
              }
              tmp = 3;
            } else if (65536 <= tmp18_putUtf8Char ? tmp18_putUtf8Char <= 1114111 : false) {
              var tmp$ret$5;
              {
                var tmp9_set = toByte(240 | tmp18_putUtf8Char >> 18 & 7);
                tmp$ret$5 = tmp16_putUtf8Char.j19_1.setInt8(tmp17_putUtf8Char, tmp9_set);
              }
              var tmp$ret$6;
              {
                var tmp10_set = tmp17_putUtf8Char + 1 | 0;
                var tmp11_set = toByte(128 | tmp18_putUtf8Char >> 12 & 63);
                tmp$ret$6 = tmp16_putUtf8Char.j19_1.setInt8(tmp10_set, tmp11_set);
              }
              var tmp$ret$7;
              {
                var tmp12_set = tmp17_putUtf8Char + 2 | 0;
                var tmp13_set = toByte(128 | tmp18_putUtf8Char >> 6 & 63);
                tmp$ret$7 = tmp16_putUtf8Char.j19_1.setInt8(tmp12_set, tmp13_set);
              }
              var tmp$ret$8;
              {
                var tmp14_set = tmp17_putUtf8Char + 3 | 0;
                var tmp15_set = toByte(128 | tmp18_putUtf8Char & 63);
                tmp$ret$8 = tmp16_putUtf8Char.j19_1.setInt8(tmp14_set, tmp15_set);
              }
              tmp = 4;
            } else {
              malformedCodePoint(tmp18_putUtf8Char);
            }
            tmp$ret$9 = tmp;
          }
          var size = tmp$ret$9;
          buffer.s1b(size);
          tmp$ret$10 = size;
        }
        var result = tmp$ret$10;
        {
          var tmp0_check = result >= 0;
          {
          }
          if (!tmp0_check) {
            var tmp$ret$11;
            {
              tmp$ret$11 = "The returned value shouldn't be negative";
            }
            var message = tmp$ret$11;
            throw IllegalStateException_init_$Create$(toString(message));
          }
        }
        tmp$ret$12 = result;
        break $l$block;
      }finally {
        $this.i1c();
      }
    }
  }
  function writePacketMerging($this, tail, foreignStolen, pool) {
    tail.d1c($this.c1c());
    var tmp$ret$0;
    {
      tmp$ret$0 = tail.a15() - tail.b15() | 0;
    }
    var lastSize = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = foreignStolen.a15() - foreignStolen.b15() | 0;
    }
    var nextSize = tmp$ret$1;
    var maxCopySize = get_PACKET_MAX_COPY_SIZE();
    var tmp;
    var tmp_0;
    if (nextSize < maxCopySize) {
      var tmp$ret$2;
      {
        tmp$ret$2 = tail.z14_1 - tail.c17() | 0;
      }
      var tmp_1 = tmp$ret$2;
      var tmp$ret$3;
      {
        tmp$ret$3 = tail.c17() - tail.a15() | 0;
      }
      tmp_0 = nextSize <= (tmp_1 + tmp$ret$3 | 0);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = nextSize;
    } else {
      tmp = -1;
    }
    var appendSize = tmp;
    var tmp_2;
    if ((lastSize < maxCopySize ? lastSize <= foreignStolen.q1b() : false) ? isExclusivelyOwned(foreignStolen) : false) {
      tmp_2 = lastSize;
    } else {
      tmp_2 = -1;
    }
    var prependSize = tmp_2;
    if (appendSize === -1 ? prependSize === -1 : false) {
      $this.j1c(foreignStolen);
    } else if (prependSize === -1 ? true : appendSize <= prependSize) {
      var tmp$ret$4;
      {
        tmp$ret$4 = tail.c17() - tail.a15() | 0;
      }
      var tmp_3 = tmp$ret$4;
      var tmp$ret$5;
      {
        tmp$ret$5 = tail.z14_1 - tail.c17() | 0;
      }
      writeBufferAppend(tail, foreignStolen, tmp_3 + tmp$ret$5 | 0);
      $this.i1c();
      var tmp0_safe_receiver = foreignStolen.r1a();
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$6;
        {
          {
          }
          tmp$ret$6 = $this.j1c(tmp0_safe_receiver);
        }
      }
      foreignStolen.x19(pool);
    } else if (appendSize === -1 ? true : prependSize < appendSize) {
      writePacketSlowPrepend($this, foreignStolen, tail);
    } else {
      throw IllegalStateException_init_$Create$('prep = ' + prependSize + ', app = ' + appendSize);
    }
  }
  function writePacketSlowPrepend($this, foreignStolen, tail) {
    writeBufferPrepend(foreignStolen, tail);
    var tmp0_elvis_lhs = _get__head__kwf5se_0($this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$("head should't be null since it is already handled in the fast-path");
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var _head = tmp;
    if (_head === tail) {
      _set__head__b4pap2_0($this, foreignStolen);
    } else {
      var pre = _head;
      $l$loop: while (true) {
        var next = ensureNotNull(pre.p1a());
        if (next === tail)
          break $l$loop;
        pre = next;
      }
      pre.j1a(foreignStolen);
    }
    tail.x19($this.j12_1);
    _set__tail__bb8fzq($this, findTail(foreignStolen));
  }
  function AbstractOutput(headerSizeHint, pool) {
    this.i12_1 = headerSizeHint;
    this.j12_1 = pool;
    this.k12_1 = new AbstractOutputSharedState();
    this.l12_1 = ByteOrder_BIG_ENDIAN_getInstance();
  }
  AbstractOutput.prototype.v1a = function () {
    return this.j12_1;
  };
  AbstractOutput.prototype.f11 = function () {
    var tmp0_elvis_lhs = _get__head__kwf5se_0(this);
    return tmp0_elvis_lhs == null ? Companion_getInstance_5().k1a() : tmp0_elvis_lhs;
  };
  AbstractOutput.prototype.e1c = function (value) {
    this.k12_1.w1b_1 = value;
  };
  AbstractOutput.prototype.l1c = function () {
    return this.k12_1.w1b_1;
  };
  AbstractOutput.prototype.f1c = function (value) {
    this.k12_1.x1b_1 = value;
  };
  AbstractOutput.prototype.c1c = function () {
    return this.k12_1.x1b_1;
  };
  AbstractOutput.prototype.m1c = function () {
    return this.k12_1.y1b_1;
  };
  AbstractOutput.prototype.n1c = function () {
    return this.m1c() - this.c1c() | 0;
  };
  AbstractOutput.prototype.o1c = function () {
    return _get_chainedSize__tfqvsg(this) + (this.c1c() - _get_tailInitialPosition__zfk4q4(this) | 0) | 0;
  };
  AbstractOutput.prototype.cd = function () {
    flushChain(this);
  };
  AbstractOutput.prototype.m12 = function () {
    var tmp0_elvis_lhs = _get__head__kwf5se_0(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var head = tmp;
    var tmp1_safe_receiver = _get__tail__kpw0hq(this);
    if (tmp1_safe_receiver == null)
      null;
    else
      tmp1_safe_receiver.d1c(this.c1c());
    _set__head__b4pap2_0(this, null);
    _set__tail__bb8fzq(this, null);
    this.f1c(0);
    _set_tailEndExclusive__8xopq4(this, 0);
    _set_tailInitialPosition__matoco(this, 0);
    _set_chainedSize__unajg(this, 0);
    this.e1c(Companion_getInstance_7().p1c_1);
    return head;
  };
  AbstractOutput.prototype.q1c = function () {
    var head = this.f11();
    if (!(head === Companion_getInstance_5().k1a())) {
      {
        var tmp0_check = head.p1a() == null;
        {
        }
        {
          {
          }
          if (!tmp0_check) {
            var tmp$ret$0;
            {
              tmp$ret$0 = 'Check failed.';
            }
            var message = tmp$ret$0;
            throw IllegalStateException_init_$Create$(toString(message));
          }
        }
      }
      head.r1c();
      head.s1a(this.i12_1);
      Companion_getInstance_2();
      head.q1a(8);
      this.f1c(head.a15());
      _set_tailInitialPosition__matoco(this, this.c1c());
      _set_tailEndExclusive__8xopq4(this, head.c17());
    }
  };
  AbstractOutput.prototype.w19 = function (buffer) {
    {
      var tmp0_check = buffer.p1a() == null;
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'It should be a single buffer chunk.';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    appendChainImpl(this, buffer, buffer, 0);
  };
  AbstractOutput.prototype.j1c = function (head) {
    var tail = findTail(head);
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_minus = remainingAll(head);
        var tmp$ret$0;
        {
          tmp$ret$0 = tail.a15() - tail.b15() | 0;
        }
        var tmp1_minus = tmp$ret$0;
        tmp$ret$1 = tmp0_minus.g5(toLong(tmp1_minus));
      }
      var tmp2_toIntOrFail = tmp$ret$1;
      if (tmp2_toIntOrFail.g1(toLong(IntCompanionObject_getInstance().w_1)) >= 0) {
        failLongToIntConversion(tmp2_toIntOrFail, 'total size increase');
      }
      tmp$ret$2 = tmp2_toIntOrFail.c7();
    }
    var chainedSizeDelta = tmp$ret$2;
    appendChainImpl(this, head, tail, chainedSizeDelta);
  };
  AbstractOutput.prototype.g1c = function (v) {
    var index = this.c1c();
    if (index < this.m1c()) {
      this.f1c(index + 1 | 0);
      var tmp$ret$0;
      {
        var tmp0_set = this.l1c();
        tmp$ret$0 = tmp0_set.j19_1.setInt8(index, v);
      }
      return Unit_getInstance();
    }
    return writeByteFallback(this, v);
  };
  AbstractOutput.prototype.e1b = function () {
    try {
      this.cd();
    }finally {
      this.k1c();
    }
  };
  AbstractOutput.prototype.b5 = function (c) {
    var tailPosition = this.c1c();
    if ((this.m1c() - tailPosition | 0) >= 3) {
      var tmp$ret$9;
      {
        var tmp16_putUtf8Char = this.l1c();
        var tmp17_putUtf8Char = Char__toInt_impl_vasixd(c);
        var tmp;
        if (0 <= tmp17_putUtf8Char ? tmp17_putUtf8Char <= 127 : false) {
          {
            var tmp0_storeAt = toByte(tmp17_putUtf8Char);
            tmp16_putUtf8Char.j19_1.setInt8(tailPosition, tmp0_storeAt);
          }
          tmp = 1;
        } else if (128 <= tmp17_putUtf8Char ? tmp17_putUtf8Char <= 2047 : false) {
          var tmp$ret$0;
          {
            var tmp1_set = toByte(192 | tmp17_putUtf8Char >> 6 & 31);
            tmp$ret$0 = tmp16_putUtf8Char.j19_1.setInt8(tailPosition, tmp1_set);
          }
          var tmp$ret$1;
          {
            var tmp2_set = tailPosition + 1 | 0;
            var tmp3_set = toByte(128 | tmp17_putUtf8Char & 63);
            tmp$ret$1 = tmp16_putUtf8Char.j19_1.setInt8(tmp2_set, tmp3_set);
          }
          tmp = 2;
        } else if (2048 <= tmp17_putUtf8Char ? tmp17_putUtf8Char <= 65535 : false) {
          var tmp$ret$2;
          {
            var tmp4_set = toByte(224 | tmp17_putUtf8Char >> 12 & 15);
            tmp$ret$2 = tmp16_putUtf8Char.j19_1.setInt8(tailPosition, tmp4_set);
          }
          var tmp$ret$3;
          {
            var tmp5_set = tailPosition + 1 | 0;
            var tmp6_set = toByte(128 | tmp17_putUtf8Char >> 6 & 63);
            tmp$ret$3 = tmp16_putUtf8Char.j19_1.setInt8(tmp5_set, tmp6_set);
          }
          var tmp$ret$4;
          {
            var tmp7_set = tailPosition + 2 | 0;
            var tmp8_set = toByte(128 | tmp17_putUtf8Char & 63);
            tmp$ret$4 = tmp16_putUtf8Char.j19_1.setInt8(tmp7_set, tmp8_set);
          }
          tmp = 3;
        } else if (65536 <= tmp17_putUtf8Char ? tmp17_putUtf8Char <= 1114111 : false) {
          var tmp$ret$5;
          {
            var tmp9_set = toByte(240 | tmp17_putUtf8Char >> 18 & 7);
            tmp$ret$5 = tmp16_putUtf8Char.j19_1.setInt8(tailPosition, tmp9_set);
          }
          var tmp$ret$6;
          {
            var tmp10_set = tailPosition + 1 | 0;
            var tmp11_set = toByte(128 | tmp17_putUtf8Char >> 12 & 63);
            tmp$ret$6 = tmp16_putUtf8Char.j19_1.setInt8(tmp10_set, tmp11_set);
          }
          var tmp$ret$7;
          {
            var tmp12_set = tailPosition + 2 | 0;
            var tmp13_set = toByte(128 | tmp17_putUtf8Char >> 6 & 63);
            tmp$ret$7 = tmp16_putUtf8Char.j19_1.setInt8(tmp12_set, tmp13_set);
          }
          var tmp$ret$8;
          {
            var tmp14_set = tailPosition + 3 | 0;
            var tmp15_set = toByte(128 | tmp17_putUtf8Char & 63);
            tmp$ret$8 = tmp16_putUtf8Char.j19_1.setInt8(tmp14_set, tmp15_set);
          }
          tmp = 4;
        } else {
          malformedCodePoint(tmp17_putUtf8Char);
        }
        tmp$ret$9 = tmp;
      }
      var size = tmp$ret$9;
      this.f1c(tailPosition + size | 0);
      return this;
    }
    appendCharFallback(this, c);
    return this;
  };
  AbstractOutput.prototype.b = function (csq) {
    if (csq == null) {
      this.lf('null', 0, 4);
    } else {
      this.lf(csq, 0, charSequenceLength(csq));
    }
    return this;
  };
  AbstractOutput.prototype.lf = function (csq, start, end) {
    if (csq == null) {
      return this.lf('null', start, end);
    }
    writeText(this, csq, start, end, Charsets_getInstance().s1c_1);
    return this;
  };
  AbstractOutput.prototype.o18 = function (p) {
    var foreignStolen = p.m12();
    if (foreignStolen == null) {
      p.q12();
      return Unit_getInstance();
    }
    var _tail = _get__tail__kpw0hq(this);
    if (_tail == null) {
      this.j1c(foreignStolen);
      return Unit_getInstance();
    }
    writePacketMerging(this, _tail, foreignStolen, p.v1a());
  };
  AbstractOutput.prototype.n12 = function (chunkBuffer) {
    var _tail = _get__tail__kpw0hq(this);
    if (_tail == null) {
      this.j1c(chunkBuffer);
      return Unit_getInstance();
    }
    writePacketMerging(this, _tail, chunkBuffer, this.j12_1);
  };
  AbstractOutput.prototype.m16 = function (p, n) {
    var remaining = n;
    $l$loop: while (remaining.g1(new Long(0, 0)) > 0) {
      var tmp$ret$0;
      {
        tmp$ret$0 = p.g1a() - p.h1a() | 0;
      }
      var headRemaining = toLong(tmp$ret$0);
      if (headRemaining.g1(remaining) <= 0) {
        remaining = remaining.g5(headRemaining);
        var tmp0_elvis_lhs = p.f1b();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          throw new EOFException('Unexpected end of packet');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        this.w19(tmp);
      } else {
        {
          {
          }
          var tmp0_elvis_lhs_0 = p.m1a(1);
          var tmp_0;
          if (tmp0_elvis_lhs_0 == null) {
            prematureEndOfStream(1);
          } else {
            tmp_0 = tmp0_elvis_lhs_0;
          }
          var buffer = tmp_0;
          var positionBefore = buffer.b15();
          try {
            {
              writeFully_3(this, buffer, remaining.c7());
            }
          }finally {
            var positionAfter = buffer.b15();
            if (positionAfter < positionBefore) {
              throw IllegalStateException_init_$Create$("Buffer's position shouldn't be rewinded");
            }
            if (positionAfter === buffer.a15()) {
              p.o1b(buffer);
            } else {
              p.n1a(positionAfter);
            }
          }
        }
        break $l$loop;
      }
    }
  };
  AbstractOutput.prototype.q12 = function () {
    this.e1b();
  };
  AbstractOutput.prototype.h1c = function (n) {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.m1c() - this.c1c() | 0;
    }
    if (tmp$ret$0 >= n) {
      var tmp0_safe_receiver = _get__tail__kpw0hq(this);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$1;
        {
          {
          }
          tmp0_safe_receiver.d1c(this.c1c());
          return tmp0_safe_receiver;
        }
      }
    }
    return appendNewChunk(this);
  };
  AbstractOutput.prototype.i1c = function () {
    var tmp0_safe_receiver = _get__tail__kpw0hq(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = this.f1c(tmp0_safe_receiver.a15());
      }
    }
  };
  AbstractOutput.prototype.u1c = function (size, block) {
    var buffer = this.h1c(size);
    try {
      var result = block(buffer);
      {
        var tmp0_check = result >= 0;
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = "The returned value shouldn't be negative";
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString(message));
        }
      }
      return result;
    }finally {
      this.i1c();
    }
  };
  AbstractOutput.$metadata$ = classMeta('AbstractOutput', [Appendable, Output]);
  function _set_readPosition__n6qkdk($this, value) {
    $this.y14_1.w1c_1 = value;
  }
  function _set_writePosition__sxej31($this, value) {
    $this.y14_1.x1c_1 = value;
  }
  function _set_startGap__236j43($this, value) {
    $this.y14_1.y1c_1 = value;
  }
  function _set_limit__hazgmi($this, value) {
    $this.y14_1.v1c_1 = value;
  }
  function Companion_0() {
    Companion_instance_0 = this;
    this.a1d_1 = 8;
  }
  Companion_0.prototype.b1d = function () {
    return this.a1d_1;
  };
  Companion_0.prototype.k1a = function () {
    return Companion_getInstance_10().e1d_1;
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_2() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function _no_name_provided__qut3iv_2($startGap) {
    this.i1d_1 = $startGap;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_2.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "startGap shouldn't be negative: " + this.i1d_1;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_2.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_3($endGap) {
    this.j1d_1 = $endGap;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_3.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "endGap shouldn't be negative: " + this.j1d_1;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_3.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_4($newReadPosition) {
    this.k1d_1 = $newReadPosition;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_4.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "newReadPosition shouldn't be negative: " + this.k1d_1;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_4.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_5($newReadPosition, this$0) {
    this.l1d_1 = $newReadPosition;
    this.m1d_1 = this$0;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_5.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "newReadPosition shouldn't be ahead of the read position: " + this.l1d_1 + ' > ' + this.m1d_1.b15();
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_5.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function Buffer(memory) {
    Companion_getInstance_2();
    this.x14_1 = memory;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0__get_size32__ezg0pb = this.x14_1;
      tmp$ret$0 = tmp0__get_size32__ezg0pb.j19_1.byteLength;
    }
    tmp.y14_1 = new BufferSharedState(tmp$ret$0);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0__get_size32__ezg0pb_0 = this.x14_1;
      tmp$ret$1 = tmp0__get_size32__ezg0pb_0.j19_1.byteLength;
    }
    tmp_0.z14_1 = tmp$ret$1;
  }
  Buffer.prototype.d1a = function () {
    return this.x14_1;
  };
  Buffer.prototype.b15 = function () {
    return this.y14_1.w1c_1;
  };
  Buffer.prototype.a15 = function () {
    return this.y14_1.x1c_1;
  };
  Buffer.prototype.q1b = function () {
    return this.y14_1.y1c_1;
  };
  Buffer.prototype.c17 = function () {
    return this.y14_1.v1c_1;
  };
  Buffer.prototype.n1d = function () {
    return this.z14_1 - this.c17() | 0;
  };
  Buffer.prototype.o1d = function () {
    return this.z14_1;
  };
  Buffer.prototype.p1d = function () {
    return this.a15() - this.b15() | 0;
  };
  Buffer.prototype.q1d = function () {
    return this.c17() - this.a15() | 0;
  };
  Buffer.prototype.r1d = function (value) {
    this.y14_1.z1c_1 = value;
  };
  Buffer.prototype.l1a = function (count) {
    if (count === 0)
      return Unit_getInstance();
    var newReadPosition = this.b15() + count | 0;
    if (count < 0 ? true : newReadPosition > this.a15()) {
      var tmp$ret$1;
      {
        tmp$ret$1 = this.a15() - this.b15() | 0;
      }
      discardFailed(count, tmp$ret$1);
    }
    _set_readPosition__n6qkdk(this, newReadPosition);
  };
  Buffer.prototype.j1b = function (count) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.a15() - this.b15() | 0;
      }
      var tmp0_minOf = toLong(tmp$ret$0);
      tmp$ret$1 = count.g1(tmp0_minOf) <= 0 ? count : tmp0_minOf;
    }
    var size = tmp$ret$1.c7();
    this.l1a(size);
    return toLong(size);
  };
  Buffer.prototype.s1b = function (count) {
    var newWritePosition = this.a15() + count | 0;
    if (count < 0 ? true : newWritePosition > this.c17()) {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.c17() - this.a15() | 0;
      }
      commitWrittenFailed(count, tmp$ret$0);
    }
    _set_writePosition__sxej31(this, newWritePosition);
  };
  Buffer.prototype.d1c = function (position) {
    var limit = this.c17();
    if (position < this.a15()) {
      var tmp = position - this.a15() | 0;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.c17() - this.a15() | 0;
      }
      commitWrittenFailed(tmp, tmp$ret$0);
    }
    if (position >= limit) {
      if (position === limit) {
        _set_writePosition__sxej31(this, position);
        return false;
      }
      var tmp_0 = position - this.a15() | 0;
      var tmp$ret$1;
      {
        tmp$ret$1 = this.c17() - this.a15() | 0;
      }
      commitWrittenFailed(tmp_0, tmp$ret$1);
    }
    _set_writePosition__sxej31(this, position);
    return true;
  };
  Buffer.prototype.y1a = function (position) {
    if (position < 0 ? true : position > this.a15()) {
      var tmp = position - this.b15() | 0;
      var tmp$ret$0;
      {
        tmp$ret$0 = this.a15() - this.b15() | 0;
      }
      discardFailed(tmp, tmp$ret$0);
    }
    if (!(this.b15() === position)) {
      _set_readPosition__n6qkdk(this, position);
    }
  };
  Buffer.prototype.s1d = function (count) {
    var newReadPosition = this.b15() - count | 0;
    if (newReadPosition < this.q1b()) {
      rewindFailed(count, this.b15() - this.q1b() | 0);
    }
    _set_readPosition__n6qkdk(this, newReadPosition);
  };
  Buffer.prototype.s1a = function (startGap) {
    {
      var tmp0_require = startGap >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_2(startGap);
        m.f1a();
      }
    }
    if (this.b15() >= startGap) {
      _set_startGap__236j43(this, startGap);
      return Unit_getInstance();
    }
    if (this.b15() === this.a15()) {
      if (startGap > this.c17()) {
        startGapReservationFailedDueToLimit(this, startGap);
      }
      _set_writePosition__sxej31(this, startGap);
      _set_readPosition__n6qkdk(this, startGap);
      _set_startGap__236j43(this, startGap);
      return Unit_getInstance();
    }
    startGapReservationFailed(this, startGap);
  };
  Buffer.prototype.q1a = function (endGap) {
    {
      var tmp0_require = endGap >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_3(endGap);
        m.f1a();
      }
    }
    var newLimit = this.z14_1 - endGap | 0;
    if (newLimit >= this.a15()) {
      _set_limit__hazgmi(this, newLimit);
      return Unit_getInstance();
    }
    if (newLimit < 0) {
      endGapReservationFailedDueToCapacity(this, endGap);
    }
    if (newLimit < this.q1b()) {
      endGapReservationFailedDueToStartGap(this, endGap);
    }
    if (this.b15() === this.a15()) {
      _set_limit__hazgmi(this, newLimit);
      _set_readPosition__n6qkdk(this, newLimit);
      _set_writePosition__sxej31(this, newLimit);
      return Unit_getInstance();
    }
    endGapReservationFailedDueToContent(this, endGap);
  };
  Buffer.prototype.t1d = function () {
    _set_startGap__236j43(this, 0);
    _set_readPosition__n6qkdk(this, 0);
    var capacity = this.z14_1;
    _set_writePosition__sxej31(this, capacity);
  };
  Buffer.prototype.r1c = function () {
    this.u1d(this.z14_1 - this.q1b() | 0);
  };
  Buffer.prototype.u1d = function (limit) {
    var startGap = this.q1b();
    _set_readPosition__n6qkdk(this, startGap);
    _set_writePosition__sxej31(this, startGap);
    _set_limit__hazgmi(this, limit);
  };
  Buffer.prototype.v1d = function () {
    this.w1d(0);
    this.r1b();
  };
  Buffer.prototype.r1b = function () {
    _set_limit__hazgmi(this, this.z14_1);
  };
  Buffer.prototype.w1d = function (newReadPosition) {
    {
      var tmp0_require = newReadPosition >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_4(newReadPosition);
        m.f1a();
      }
    }
    {
      var tmp1_require = newReadPosition <= this.b15();
      {
      }
      if (!tmp1_require) {
        var m_0 = new _no_name_provided__qut3iv_5(newReadPosition, this);
        m_0.f1a();
      }
    }
    _set_readPosition__n6qkdk(this, newReadPosition);
    if (this.q1b() > newReadPosition) {
      _set_startGap__236j43(this, newReadPosition);
    }
  };
  Buffer.prototype.x1d = function (copy) {
    _set_limit__hazgmi(copy, this.c17());
    _set_startGap__236j43(copy, this.q1b());
    _set_readPosition__n6qkdk(copy, this.b15());
    _set_writePosition__sxej31(copy, this.a15());
  };
  Buffer.prototype.y1d = function () {
    var readPosition = this.b15();
    if (readPosition === this.a15()) {
      throw new EOFException('No readable bytes available.');
    }
    _set_readPosition__n6qkdk(this, readPosition + 1 | 0);
    var tmp$ret$1;
    {
      var tmp0_get = this.x14_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_get.j19_1.getInt8(readPosition);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  Buffer.prototype.g1c = function (value) {
    var writePosition = this.a15();
    if (writePosition === this.c17()) {
      throw new InsufficientSpaceException('No free space in the buffer to write a byte');
    }
    var tmp$ret$0;
    {
      var tmp0_set = this.x14_1;
      tmp$ret$0 = tmp0_set.j19_1.setInt8(writePosition, value);
    }
    _set_writePosition__sxej31(this, writePosition + 1 | 0);
  };
  Buffer.prototype.z1d = function () {
    this.v1d();
    this.r1c();
  };
  Buffer.prototype.toString = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.a15() - this.b15() | 0;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = this.c17() - this.a15() | 0;
    }
    var tmp_0 = tmp$ret$1;
    var tmp_1 = this.q1b();
    var tmp$ret$2;
    {
      tmp$ret$2 = this.z14_1 - this.c17() | 0;
    }
    return 'Buffer(' + tmp + ' used, ' + tmp_0 + ' free, ' + (tmp_1 + tmp$ret$2 | 0) + ' reserved of ' + this.z14_1 + ')';
  };
  Buffer.$metadata$ = classMeta('Buffer');
  function read(_this__u8e3s4, block) {
    {
    }
    var rc = block(_this__u8e3s4.x14_1, _this__u8e3s4.b15(), _this__u8e3s4.a15());
    _this__u8e3s4.l1a(rc);
    return rc;
  }
  function canRead(_this__u8e3s4) {
    return _this__u8e3s4.a15() > _this__u8e3s4.b15();
  }
  function write(_this__u8e3s4, block) {
    {
    }
    var rc = block(_this__u8e3s4.x14_1, _this__u8e3s4.a15(), _this__u8e3s4.c17());
    _this__u8e3s4.s1b(rc);
    return rc;
  }
  function InsufficientSpaceException_init_$Init$(name, size, availableSpace, $this) {
    InsufficientSpaceException.call($this, 'Not enough free space to write ' + name + ' of ' + size + ' bytes, available ' + availableSpace + ' bytes.');
    return $this;
  }
  function InsufficientSpaceException_init_$Create$(name, size, availableSpace) {
    var tmp = InsufficientSpaceException_init_$Init$(name, size, availableSpace, Object.create(InsufficientSpaceException.prototype));
    captureStack(tmp, InsufficientSpaceException_init_$Create$);
    return tmp;
  }
  function InsufficientSpaceException(message) {
    Exception_init_$Init$(message, this);
    captureStack(this, InsufficientSpaceException);
  }
  InsufficientSpaceException.$metadata$ = classMeta('InsufficientSpaceException', undefined, undefined, undefined, undefined, Exception.prototype);
  function discardFailed(count, readRemaining) {
    throw new EOFException('Unable to discard ' + count + ' bytes: only ' + readRemaining + ' available for reading');
  }
  function commitWrittenFailed(count, writeRemaining) {
    throw new EOFException('Unable to discard ' + count + ' bytes: only ' + writeRemaining + ' available for writing');
  }
  function rewindFailed(count, rewindRemaining) {
    throw IllegalArgumentException_init_$Create$('Unable to rewind ' + count + ' bytes: only ' + rewindRemaining + ' could be rewinded');
  }
  function startGapReservationFailedDueToLimit(_this__u8e3s4, startGap) {
    if (startGap > _this__u8e3s4.z14_1) {
      throw IllegalArgumentException_init_$Create$('Start gap ' + startGap + ' is bigger than the capacity ' + _this__u8e3s4.z14_1);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.z14_1 - _this__u8e3s4.c17() | 0;
    }
    throw IllegalStateException_init_$Create$('Unable to reserve ' + startGap + ' start gap: there are already ' + tmp$ret$0 + ' bytes reserved in the end');
  }
  function startGapReservationFailed(_this__u8e3s4, startGap) {
    var tmp = 'Unable to reserve ' + startGap + ' start gap: ';
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.a15() - _this__u8e3s4.b15() | 0;
    }
    throw IllegalStateException_init_$Create$(tmp + ('there are already ' + tmp$ret$0 + ' content bytes starting at offset ' + _this__u8e3s4.b15()));
  }
  function endGapReservationFailedDueToCapacity(_this__u8e3s4, endGap) {
    throw IllegalArgumentException_init_$Create$('End gap ' + endGap + ' is too big: capacity is ' + _this__u8e3s4.z14_1);
  }
  function endGapReservationFailedDueToStartGap(_this__u8e3s4, endGap) {
    throw IllegalArgumentException_init_$Create$('End gap ' + endGap + ' is too big: there are already ' + _this__u8e3s4.q1b() + ' bytes reserved in the beginning');
  }
  function endGapReservationFailedDueToContent(_this__u8e3s4, endGap) {
    var tmp = 'Unable to reserve end gap ' + endGap + ':';
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.a15() - _this__u8e3s4.b15() | 0;
    }
    throw IllegalArgumentException_init_$Create$(tmp + (' there are already ' + tmp$ret$0 + ' content bytes at offset ' + _this__u8e3s4.b15()));
  }
  function restoreStartGap(_this__u8e3s4, size) {
    _this__u8e3s4.w1d(_this__u8e3s4.b15() - size | 0);
  }
  function writeBufferAppend(_this__u8e3s4, other, maxSize) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = other.a15() - other.b15() | 0;
      }
      var tmp0_minOf = tmp$ret$0;
      tmp$ret$1 = Math.min(tmp0_minOf, maxSize);
    }
    var size = tmp$ret$1;
    var tmp$ret$2;
    {
      tmp$ret$2 = _this__u8e3s4.c17() - _this__u8e3s4.a15() | 0;
    }
    if (tmp$ret$2 <= size) {
      writeBufferAppendUnreserve(_this__u8e3s4, size);
    }
    var tmp$ret$6;
    {
      {
      }
      var tmp$ret$5;
      {
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.x14_1;
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
        var tmp3__anonymous__ufb84q = _this__u8e3s4.c17();
        var tmp$ret$4;
        {
          {
          }
          var tmp$ret$3;
          {
            var tmp0__anonymous__q1qw7t = other.x14_1;
            var tmp1__anonymous__uwfjfc_0 = other.b15();
            var tmp2__anonymous__z9zvc9_0 = other.a15();
            tmp0__anonymous__q1qw7t.m19(tmp1__anonymous__uwfjfc, tmp1__anonymous__uwfjfc_0, size, tmp2__anonymous__z9zvc9);
            tmp$ret$3 = size;
          }
          var rc = tmp$ret$3;
          other.l1a(rc);
          tmp$ret$4 = rc;
        }
        tmp$ret$5 = tmp$ret$4;
      }
      var rc_0 = tmp$ret$5;
      _this__u8e3s4.s1b(rc_0);
      tmp$ret$6 = rc_0;
    }
    return tmp$ret$6;
  }
  function writeBufferPrepend(_this__u8e3s4, other) {
    var tmp$ret$0;
    {
      tmp$ret$0 = other.a15() - other.b15() | 0;
    }
    var size = tmp$ret$0;
    var readPosition = _this__u8e3s4.b15();
    if (readPosition < size) {
      throw IllegalArgumentException_init_$Create$('Not enough space in the beginning to prepend bytes');
    }
    var newReadPosition = readPosition - size | 0;
    other.x14_1.m19(_this__u8e3s4.x14_1, other.b15(), size, newReadPosition);
    other.l1a(size);
    _this__u8e3s4.w1d(newReadPosition);
    return size;
  }
  function writeBufferAppendUnreserve(_this__u8e3s4, writeSize) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.c17() - _this__u8e3s4.a15() | 0;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = _this__u8e3s4.z14_1 - _this__u8e3s4.c17() | 0;
    }
    if ((tmp + tmp$ret$1 | 0) < writeSize) {
      throw IllegalArgumentException_init_$Create$("Can't append buffer: not enough free space at the end");
    }
    var newWritePosition = _this__u8e3s4.a15() + writeSize | 0;
    var overrunSize = newWritePosition - _this__u8e3s4.c17() | 0;
    if (overrunSize > 0) {
      _this__u8e3s4.r1b();
    }
  }
  function appendChars(_this__u8e3s4, csq, start, end) {
    var charactersWritten;
    var tmp$ret$9;
    {
      {
      }
      var tmp$ret$8;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
        var result = encodeUTF8(tmp0__anonymous__q1qw7t, csq, start, end, tmp1__anonymous__uwfjfc, tmp2__anonymous__z9zvc9);
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                var tmp0__get_highShort__24misv = _EncodeResult___get_value__impl__h0r466(result);
                tmp$ret$0 = toShort(tmp0__get_highShort__24misv >>> 16 | 0);
              }
              var tmp1_toUShort = tmp$ret$0;
              tmp$ret$1 = _UShort___init__impl__jigrne(tmp1_toUShort);
            }
            tmp$ret$2 = tmp$ret$1;
          }
          var tmp2_toInt = tmp$ret$2;
          tmp$ret$3 = _UShort___get_data__impl__g0245(tmp2_toInt) & 65535;
        }
        charactersWritten = tmp$ret$3;
        var tmp$ret$7;
        {
          var tmp$ret$6;
          {
            var tmp$ret$5;
            {
              var tmp$ret$4;
              {
                var tmp3__get_lowShort__uxfbbu = _EncodeResult___get_value__impl__h0r466(result);
                tmp$ret$4 = toShort(tmp3__get_lowShort__uxfbbu & 65535);
              }
              var tmp4_toUShort = tmp$ret$4;
              tmp$ret$5 = _UShort___init__impl__jigrne(tmp4_toUShort);
            }
            tmp$ret$6 = tmp$ret$5;
          }
          var tmp5_toInt = tmp$ret$6;
          tmp$ret$7 = _UShort___get_data__impl__g0245(tmp5_toInt) & 65535;
        }
        tmp$ret$8 = tmp$ret$7;
      }
      var rc = tmp$ret$8;
      _this__u8e3s4.s1b(rc);
      tmp$ret$9 = rc;
    }
    return start + charactersWritten | 0;
  }
  function append(_this__u8e3s4, c) {
    var tmp$ret$11;
    {
      {
      }
      var tmp$ret$10;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
        var tmp$ret$9;
        {
          var tmp16_putUtf8Char = Char__toInt_impl_vasixd(c);
          var tmp;
          if (0 <= tmp16_putUtf8Char ? tmp16_putUtf8Char <= 127 : false) {
            {
              var tmp0_storeAt = toByte(tmp16_putUtf8Char);
              tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp1__anonymous__uwfjfc, tmp0_storeAt);
            }
            tmp = 1;
          } else if (128 <= tmp16_putUtf8Char ? tmp16_putUtf8Char <= 2047 : false) {
            var tmp$ret$0;
            {
              var tmp1_set = toByte(192 | tmp16_putUtf8Char >> 6 & 31);
              tmp$ret$0 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp1__anonymous__uwfjfc, tmp1_set);
            }
            var tmp$ret$1;
            {
              var tmp2_set = tmp1__anonymous__uwfjfc + 1 | 0;
              var tmp3_set = toByte(128 | tmp16_putUtf8Char & 63);
              tmp$ret$1 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp2_set, tmp3_set);
            }
            tmp = 2;
          } else if (2048 <= tmp16_putUtf8Char ? tmp16_putUtf8Char <= 65535 : false) {
            var tmp$ret$2;
            {
              var tmp4_set = toByte(224 | tmp16_putUtf8Char >> 12 & 15);
              tmp$ret$2 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp1__anonymous__uwfjfc, tmp4_set);
            }
            var tmp$ret$3;
            {
              var tmp5_set = tmp1__anonymous__uwfjfc + 1 | 0;
              var tmp6_set = toByte(128 | tmp16_putUtf8Char >> 6 & 63);
              tmp$ret$3 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp5_set, tmp6_set);
            }
            var tmp$ret$4;
            {
              var tmp7_set = tmp1__anonymous__uwfjfc + 2 | 0;
              var tmp8_set = toByte(128 | tmp16_putUtf8Char & 63);
              tmp$ret$4 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp7_set, tmp8_set);
            }
            tmp = 3;
          } else if (65536 <= tmp16_putUtf8Char ? tmp16_putUtf8Char <= 1114111 : false) {
            var tmp$ret$5;
            {
              var tmp9_set = toByte(240 | tmp16_putUtf8Char >> 18 & 7);
              tmp$ret$5 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp1__anonymous__uwfjfc, tmp9_set);
            }
            var tmp$ret$6;
            {
              var tmp10_set = tmp1__anonymous__uwfjfc + 1 | 0;
              var tmp11_set = toByte(128 | tmp16_putUtf8Char >> 12 & 63);
              tmp$ret$6 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp10_set, tmp11_set);
            }
            var tmp$ret$7;
            {
              var tmp12_set = tmp1__anonymous__uwfjfc + 2 | 0;
              var tmp13_set = toByte(128 | tmp16_putUtf8Char >> 6 & 63);
              tmp$ret$7 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp12_set, tmp13_set);
            }
            var tmp$ret$8;
            {
              var tmp14_set = tmp1__anonymous__uwfjfc + 3 | 0;
              var tmp15_set = toByte(128 | tmp16_putUtf8Char & 63);
              tmp$ret$8 = tmp0__anonymous__q1qw7t.j19_1.setInt8(tmp14_set, tmp15_set);
            }
            tmp = 4;
          } else {
            malformedCodePoint(tmp16_putUtf8Char);
          }
          tmp$ret$9 = tmp;
        }
        var size = tmp$ret$9;
        var tmp_0;
        if (size > (tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0)) {
          appendFailed(1);
        } else {
          tmp_0 = size;
        }
        tmp$ret$10 = tmp_0;
      }
      var rc = tmp$ret$10;
      _this__u8e3s4.s1b(rc);
      tmp$ret$11 = rc;
    }
    return _this__u8e3s4;
  }
  function appendFailed(length) {
    throw new BufferLimitExceededException('Not enough free space available to write ' + length + ' character(s).');
  }
  function get_DefaultChunkedBufferPool() {
    init_properties_BufferFactory_kt_l6j3be();
    return DefaultChunkedBufferPool;
  }
  var DefaultChunkedBufferPool;
  function DefaultBufferPool_init_$Init$(bufferSize, capacity, allocator, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      bufferSize = 4096;
    if (!(($mask0 & 2) === 0))
      capacity = 1000;
    if (!(($mask0 & 4) === 0))
      allocator = DefaultAllocator_getInstance();
    DefaultBufferPool.call($this, bufferSize, capacity, allocator);
    return $this;
  }
  function DefaultBufferPool_init_$Create$(bufferSize, capacity, allocator, $mask0, $marker) {
    return DefaultBufferPool_init_$Init$(bufferSize, capacity, allocator, $mask0, $marker, Object.create(DefaultBufferPool.prototype));
  }
  function DefaultBufferPool(bufferSize, capacity, allocator) {
    DefaultPool.call(this, capacity);
    this.d1e_1 = bufferSize;
    this.e1e_1 = allocator;
  }
  DefaultBufferPool.prototype.f1e = function () {
    return new IoBuffer(this.e1e_1.k19(this.d1e_1), null, this);
  };
  DefaultBufferPool.prototype.g1e = function (instance) {
    this.e1e_1.l19(instance.d1a());
    DefaultPool.prototype.k1e.call(this, instance);
    instance.l1e();
  };
  DefaultBufferPool.prototype.k1e = function (instance) {
    return this.g1e(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  DefaultBufferPool.prototype.m1e = function (instance) {
    DefaultPool.prototype.n1e.call(this, instance);
    if (instance === Companion_getInstance_10().e1d_1) {
      {
        throw IllegalStateException_init_$Create$("IoBuffer.Empty couldn't be recycled");
      }
    }
    {
      var tmp0_check = !(instance === Companion_getInstance_10().e1d_1);
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = "Empty instance couldn't be recycled";
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    {
      var tmp1_check = !(instance === Companion_getInstance_2().k1a());
      {
      }
      if (!tmp1_check) {
        var tmp$ret$1;
        {
          tmp$ret$1 = "Empty instance couldn't be recycled";
        }
        var message_0 = tmp$ret$1;
        throw IllegalStateException_init_$Create$(toString(message_0));
      }
    }
    {
      var tmp2_check = !(instance === Companion_getInstance_5().k1a());
      {
      }
      if (!tmp2_check) {
        var tmp$ret$2;
        {
          tmp$ret$2 = "Empty instance couldn't be recycled";
        }
        var message_1 = tmp$ret$2;
        throw IllegalStateException_init_$Create$(toString(message_1));
      }
    }
    {
      var tmp3_check = instance.o1e() === 0;
      {
      }
      if (!tmp3_check) {
        var tmp$ret$3;
        {
          tmp$ret$3 = 'Unable to clear buffer: it is still in use.';
        }
        var message_2 = tmp$ret$3;
        throw IllegalStateException_init_$Create$(toString(message_2));
      }
    }
    {
      var tmp4_check = instance.p1a() == null;
      {
      }
      if (!tmp4_check) {
        var tmp$ret$4;
        {
          tmp$ret$4 = "Recycled instance shouldn't be a part of a chain.";
        }
        var message_3 = tmp$ret$4;
        throw IllegalStateException_init_$Create$(toString(message_3));
      }
    }
    {
      var tmp5_check = instance.p1e() == null;
      {
      }
      if (!tmp5_check) {
        var tmp$ret$5;
        {
          tmp$ret$5 = "Recycled instance shouldn't be a view or another buffer.";
        }
        var message_4 = tmp$ret$5;
        throw IllegalStateException_init_$Create$(toString(message_4));
      }
    }
  };
  DefaultBufferPool.prototype.n1e = function (instance) {
    return this.m1e(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  DefaultBufferPool.prototype.q1e = function (instance) {
    var tmp$ret$0;
    {
      var tmp0_apply = DefaultPool.prototype.r1e.call(this, instance);
      {
      }
      {
        tmp0_apply.s1e();
        tmp0_apply.z1d();
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  DefaultBufferPool.prototype.r1e = function (instance) {
    return this.q1e(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  DefaultBufferPool.$metadata$ = classMeta('DefaultBufferPool', undefined, undefined, undefined, undefined, DefaultPool.prototype);
  function get_DEFAULT_BUFFER_SIZE() {
    return DEFAULT_BUFFER_SIZE;
  }
  var DEFAULT_BUFFER_SIZE;
  var properties_initialized_BufferFactory_kt_q9tgbq;
  function init_properties_BufferFactory_kt_l6j3be() {
    if (properties_initialized_BufferFactory_kt_q9tgbq) {
    } else {
      properties_initialized_BufferFactory_kt_q9tgbq = true;
      DefaultChunkedBufferPool = DefaultBufferPool_init_$Create$(0, 0, null, 7, null);
    }
  }
  function readFully(_this__u8e3s4, dst, length) {
    {
      var tmp0_require = length >= 0;
      {
      }
      {
        {
        }
        if (!tmp0_require) {
          var tmp$ret$1;
          {
            tmp$ret$1 = 'Failed requirement.';
          }
          var message = tmp$ret$1;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
      }
    }
    {
      var tmp$ret$2;
      {
        tmp$ret$2 = dst.c17() - dst.a15() | 0;
      }
      var tmp1_require = length <= tmp$ret$2;
      {
      }
      {
        {
        }
        if (!tmp1_require) {
          var tmp$ret$3;
          {
            tmp$ret$3 = 'Failed requirement.';
          }
          var message_0 = tmp$ret$3;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      }
    }
    var tmp$ret$6;
    {
      {
      }
      var value;
      var tmp$ret$5;
      {
        {
        }
        var tmp$ret$4;
        {
          var tmp2__anonymous__z9zvc9 = _this__u8e3s4.x14_1;
          var tmp3__anonymous__ufb84q = _this__u8e3s4.b15();
          var tmp4__anonymous__pkmkx7 = _this__u8e3s4.a15();
          {
            var tmp0_require_0 = (tmp4__anonymous__pkmkx7 - tmp3__anonymous__ufb84q | 0) >= length;
            {
            }
            if (!tmp0_require_0) {
              var m = new _no_name_provided__qut3iv_6(length);
              m.f1a();
            }
          }
          tmp2__anonymous__z9zvc9.m19(dst.x14_1, tmp3__anonymous__ufb84q, length, dst.a15());
          value = dst.s1b(length);
          tmp$ret$4 = length;
        }
        var rc = tmp$ret$4;
        _this__u8e3s4.l1a(rc);
        tmp$ret$5 = rc;
      }
      tmp$ret$6 = value;
    }
    return length;
  }
  function writeFully_0(_this__u8e3s4, source, offset, length) {
    {
      {
      }
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
          var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
          var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
          var writeRemaining = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
          if (writeRemaining < length) {
            throw InsufficientSpaceException_init_$Create$('byte array', length, writeRemaining);
          }
          {
            {
              var tmp$ret$1;
              {
                {
                }
                var tmp$ret$0;
                {
                  var tmp0_let = of(Companion_getInstance_7(), source, offset, length);
                  {
                  }
                  tmp$ret$0 = tmp0_let.m19(tmp0__anonymous__q1qw7t, 0, length, tmp1__anonymous__uwfjfc);
                }
                tmp$ret$1 = tmp$ret$0;
              }
            }
          }
          tmp$ret$2 = length;
        }
        var rc = tmp$ret$2;
        _this__u8e3s4.s1b(rc);
        tmp$ret$3 = rc;
      }
    }
  }
  function readShort(_this__u8e3s4) {
    var tmp$ret$4;
    {
      {
      }
      var value;
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
          var tmp1__anonymous__uwfjfc = _this__u8e3s4.b15();
          var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
          {
            var tmp0_require = (tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0) >= 2;
            {
            }
            if (!tmp0_require) {
              var m = new _no_name_provided__qut3iv_7();
              m.f1a();
            }
          }
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              tmp$ret$0 = tmp0__anonymous__q1qw7t.j19_1.getInt16(tmp1__anonymous__uwfjfc, false);
            }
            tmp$ret$1 = tmp$ret$0;
          }
          value = tmp$ret$1;
          tmp$ret$2 = 2;
        }
        var rc = tmp$ret$2;
        _this__u8e3s4.l1a(rc);
        tmp$ret$3 = rc;
      }
      tmp$ret$4 = value;
    }
    return tmp$ret$4;
  }
  function readFully_0(_this__u8e3s4, destination, offset, length) {
    var tmp$ret$2;
    {
      {
      }
      var value;
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
          var tmp1__anonymous__uwfjfc = _this__u8e3s4.b15();
          var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
          {
            var tmp0_require = (tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0) >= length;
            {
            }
            if (!tmp0_require) {
              var m = new _no_name_provided__qut3iv_8(length);
              m.f1a();
            }
          }
          value = copyTo_2(tmp0__anonymous__q1qw7t, destination, tmp1__anonymous__uwfjfc, length, offset);
          tmp$ret$0 = length;
        }
        var rc = tmp$ret$0;
        _this__u8e3s4.l1a(rc);
        tmp$ret$1 = rc;
      }
      tmp$ret$2 = value;
    }
  }
  function readFully$default(_this__u8e3s4, destination, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = destination.length - offset | 0;
    return readFully_0(_this__u8e3s4, destination, offset, length);
  }
  function writeShort(_this__u8e3s4, value) {
    {
    }
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
        var writeRemaining = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
        if (writeRemaining < 2) {
          throw InsufficientSpaceException_init_$Create$('short integer', 2, writeRemaining);
        }
        {
          {
            tmp0__anonymous__q1qw7t.j19_1.setInt16(tmp1__anonymous__uwfjfc, value, false);
          }
        }
        tmp$ret$0 = 2;
      }
      var rc = tmp$ret$0;
      _this__u8e3s4.s1b(rc);
      tmp$ret$1 = rc;
    }
    return Unit_getInstance();
  }
  function writeFully_1(_this__u8e3s4, src, length) {
    {
      var tmp0_require = length >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_9(length);
        m.f1a();
      }
    }
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = src.a15() - src.b15() | 0;
      }
      var tmp1_require = length <= tmp$ret$0;
      {
      }
      if (!tmp1_require) {
        var m_0 = new _no_name_provided__qut3iv_10(length, src);
        m_0.f1a();
      }
    }
    {
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4.c17() - _this__u8e3s4.a15() | 0;
      }
      var tmp2_require = length <= tmp$ret$1;
      {
      }
      if (!tmp2_require) {
        var m_1 = new _no_name_provided__qut3iv_11(length, _this__u8e3s4);
        m_1.f1a();
      }
    }
    {
      {
      }
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = _this__u8e3s4.x14_1;
          var tmp4__anonymous__pkmkx7 = _this__u8e3s4.a15();
          var tmp5__anonymous__kpxxpo = _this__u8e3s4.c17();
          var writeRemaining = tmp5__anonymous__kpxxpo - tmp4__anonymous__pkmkx7 | 0;
          if (writeRemaining < length) {
            throw InsufficientSpaceException_init_$Create$('buffer readable content', length, writeRemaining);
          }
          {
            src.x14_1.m19(tmp3__anonymous__ufb84q, src.b15(), length, tmp4__anonymous__pkmkx7);
            src.l1a(length);
          }
          tmp$ret$2 = length;
        }
        var rc = tmp$ret$2;
        _this__u8e3s4.s1b(rc);
        tmp$ret$3 = rc;
      }
    }
  }
  function readExact(_this__u8e3s4, size, name, block) {
    {
    }
    var value;
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.b15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
        {
          var tmp0_require = (tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0) >= size;
          {
          }
          if (!tmp0_require) {
            var m = new _no_name_provided__qut3iv_12(name, size);
            m.f1a();
          }
        }
        value = block(tmp0__anonymous__q1qw7t, tmp1__anonymous__uwfjfc);
        tmp$ret$0 = size;
      }
      var rc = tmp$ret$0;
      _this__u8e3s4.l1a(rc);
      tmp$ret$1 = rc;
    }
    return value;
  }
  function writeExact(_this__u8e3s4, size, name, block) {
    {
    }
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
        var writeRemaining = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
        if (writeRemaining < size) {
          throw InsufficientSpaceException_init_$Create$(name, size, writeRemaining);
        }
        block(tmp0__anonymous__q1qw7t, tmp1__anonymous__uwfjfc);
        tmp$ret$0 = size;
      }
      var rc = tmp$ret$0;
      _this__u8e3s4.s1b(rc);
      tmp$ret$1 = rc;
    }
  }
  function _no_name_provided__qut3iv_6($length) {
    this.u1e_1 = $length;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_6.prototype.f1a = function () {
    throw new EOFException('Not enough bytes to read a buffer content of size ' + this.u1e_1 + '.');
  };
  _no_name_provided__qut3iv_6.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_7() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_7.prototype.f1a = function () {
    throw new EOFException('Not enough bytes to read a short integer of size 2.');
  };
  _no_name_provided__qut3iv_7.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_8($length) {
    this.v1e_1 = $length;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_8.prototype.f1a = function () {
    throw new EOFException('Not enough bytes to read a byte array of size ' + this.v1e_1 + '.');
  };
  _no_name_provided__qut3iv_8.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_9($length) {
    this.w1e_1 = $length;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_9.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "length shouldn't be negative: " + this.w1e_1;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_9.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_10($length, $src) {
    this.x1e_1 = $length;
    this.y1e_1 = $src;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_10.prototype.f1a = function () {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.y1e_1.a15() - this.y1e_1.b15() | 0;
      }
      tmp$ret$1 = "length shouldn't be greater than the source read remaining: " + this.x1e_1 + ' > ' + tmp$ret$0;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$1);
  };
  _no_name_provided__qut3iv_10.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_11($length, $this_writeFully) {
    this.z1e_1 = $length;
    this.a1f_1 = $this_writeFully;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_11.prototype.f1a = function () {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.a1f_1.c17() - this.a1f_1.a15() | 0;
      }
      tmp$ret$1 = "length shouldn't be greater than the destination write remaining space: " + this.z1e_1 + ' > ' + tmp$ret$0;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$1);
  };
  _no_name_provided__qut3iv_11.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_12($name, $size) {
    this.b1f_1 = $name;
    this.c1f_1 = $size;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_12.prototype.f1a = function () {
    throw new EOFException('Not enough bytes to read a ' + this.b1f_1 + ' of size ' + this.c1f_1 + '.');
  };
  _no_name_provided__qut3iv_12.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function peekTo(_this__u8e3s4, destination, destinationOffset, offset, min, max) {
    var tmp$ret$4;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = toLong(destination.j19_1.byteLength);
      }
      var tmp0_minOf = tmp$ret$0.g5(destinationOffset);
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4.a15() - _this__u8e3s4.b15() | 0;
      }
      var tmp1_minOf = toLong(tmp$ret$1);
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          tmp$ret$2 = max.g1(tmp1_minOf) <= 0 ? max : tmp1_minOf;
        }
        var tmp0_minOf_0 = tmp$ret$2;
        tmp$ret$3 = tmp0_minOf.g1(tmp0_minOf_0) <= 0 ? tmp0_minOf : tmp0_minOf_0;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var size = tmp$ret$4;
    _this__u8e3s4.x14_1.d1b(destination, numberToLong(_this__u8e3s4.b15()).f5(offset), size, destinationOffset);
    return size;
  }
  function EmptyBufferPoolImpl() {
    EmptyBufferPoolImpl_instance = this;
    NoPoolImpl.call(this);
  }
  EmptyBufferPoolImpl.prototype.n19 = function () {
    return Companion_getInstance_10().e1d_1;
  };
  EmptyBufferPoolImpl.$metadata$ = objectMeta('EmptyBufferPoolImpl', undefined, undefined, undefined, undefined, NoPoolImpl.prototype);
  var EmptyBufferPoolImpl_instance;
  function EmptyBufferPoolImpl_getInstance() {
    if (EmptyBufferPoolImpl_instance == null)
      new EmptyBufferPoolImpl();
    return EmptyBufferPoolImpl_instance;
  }
  function BufferLimitExceededException(message) {
    Exception_init_$Init$(message, this);
    captureStack(this, BufferLimitExceededException);
  }
  BufferLimitExceededException.$metadata$ = classMeta('BufferLimitExceededException', undefined, undefined, undefined, undefined, Exception.prototype);
  function forEachChunk(_this__u8e3s4, block) {
    {
    }
    var current = _this__u8e3s4;
    $l$loop: do {
      block(current);
      var tmp0_elvis_lhs = current.p1a();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        break $l$loop;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      current = tmp;
    }
     while (true);
  }
  function releaseAll(_this__u8e3s4, pool) {
    var current = _this__u8e3s4;
    while (!(current == null)) {
      var next = current.r1a();
      current.x19(pool);
      current = next;
    }
  }
  function findTail(_this__u8e3s4) {
    var $this = _this__u8e3s4;
    while (true) {
      var $this_0 = $this;
      var tmp0_elvis_lhs = $this_0.p1a();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return $this_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      var tmp0 = next;
      $this = tmp0;
      continue;
    }
  }
  function remainingAll(_this__u8e3s4) {
    return remainingAll_0(_this__u8e3s4, new Long(0, 0));
  }
  function remainingAll_0(_this__u8e3s4, n) {
    var $this = _this__u8e3s4;
    var n_0 = n;
    while (true) {
      var $this_0 = $this;
      var n_1 = n_0;
      var tmp$ret$0;
      {
        tmp$ret$0 = $this_0.a15() - $this_0.b15() | 0;
      }
      var rem = toLong(tmp$ret$0).f5(n_1);
      var tmp0_elvis_lhs = $this_0.p1a();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return rem;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      var tmp0 = next;
      var tmp1 = rem;
      $this = tmp0;
      n_0 = tmp1;
      continue;
    }
  }
  function coerceAtMostMaxIntOrFail(_this__u8e3s4, message) {
    if (_this__u8e3s4.g1(toLong(IntCompanionObject_getInstance().w_1)) > 0)
      throw IllegalArgumentException_init_$Create$(message);
    return _this__u8e3s4.c7();
  }
  function buildPacket(headerSizeHint, block) {
    {
    }
    var builder = BytePacketBuilder_0(headerSizeHint);
    try {
      block(builder);
      return builder.o16();
    } catch ($p) {
      if ($p instanceof Error) {
        builder.q12();
        throw $p;
      } else {
        throw $p;
      }
    }
  }
  function BytePacketBuilderPlatformBase(pool) {
    BytePacketBuilderBase.call(this, pool);
  }
  BytePacketBuilderPlatformBase.$metadata$ = classMeta('BytePacketBuilderPlatformBase', undefined, undefined, undefined, undefined, BytePacketBuilderBase.prototype);
  function BytePacketBuilderBase(pool) {
    AbstractOutput_init_$Init$(pool, this);
  }
  BytePacketBuilderBase.$metadata$ = classMeta('BytePacketBuilderBase', undefined, undefined, undefined, undefined, AbstractOutput.prototype);
  function _no_name_provided__qut3iv_13(this$0) {
    this.d1f_1 = this$0;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_13.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "shouldn't be negative: headerSizeHint = " + this.d1f_1.x11_1;
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_13.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function BytePacketBuilder(headerSizeHint, pool) {
    BytePacketBuilderPlatformBase.call(this, pool);
    this.x11_1 = headerSizeHint;
    {
      var tmp0_require = this.x11_1 >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_13(this);
        m.f1a();
      }
    }
  }
  BytePacketBuilder.prototype.g = function () {
    return this.o1c();
  };
  BytePacketBuilder.prototype.cq = function () {
    return this.o1c() === 0;
  };
  BytePacketBuilder.prototype.k1c = function () {
  };
  BytePacketBuilder.prototype.b1c = function (source, offset, length) {
  };
  BytePacketBuilder.prototype.b5 = function (c) {
    var tmp = BytePacketBuilderPlatformBase.prototype.b5.call(this, c);
    return tmp instanceof BytePacketBuilder ? tmp : THROW_CCE();
  };
  BytePacketBuilder.prototype.b = function (csq) {
    var tmp = BytePacketBuilderPlatformBase.prototype.b.call(this, csq);
    return tmp instanceof BytePacketBuilder ? tmp : THROW_CCE();
  };
  BytePacketBuilder.prototype.lf = function (csq, start, end) {
    var tmp = BytePacketBuilderPlatformBase.prototype.lf.call(this, csq, start, end);
    return tmp instanceof BytePacketBuilder ? tmp : THROW_CCE();
  };
  BytePacketBuilder.prototype.o16 = function () {
    var size = this.g();
    var head = this.m12();
    var tmp0_subject = head;
    return tmp0_subject == null ? Companion_getInstance_3().e1f_1 : new ByteReadPacket(head, toLong(size), this.v1a());
  };
  BytePacketBuilder.prototype.toString = function () {
    return 'BytePacketBuilder(' + this.g() + ' bytes written)';
  };
  BytePacketBuilder.$metadata$ = classMeta('BytePacketBuilder', undefined, undefined, undefined, undefined, BytePacketBuilderPlatformBase.prototype);
  function ByteReadPacket_init_$Init$(head, pool, $this) {
    ByteReadPacket.call($this, head, remainingAll(head), pool);
    return $this;
  }
  function ByteReadPacket_init_$Create$(head, pool) {
    return ByteReadPacket_init_$Init$(head, pool, Object.create(ByteReadPacket.prototype));
  }
  function Companion_1() {
    Companion_instance_1 = this;
    this.e1f_1 = new ByteReadPacket(Companion_getInstance_5().k1a(), new Long(0, 0), Companion_getInstance_5().j11_1);
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_3() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function ByteReadPacket(head, remaining, pool) {
    Companion_getInstance_3();
    ByteReadPacketPlatformBase.call(this, head, remaining, pool);
    this.t1b();
  }
  ByteReadPacket.prototype.i1a = function () {
    return null;
  };
  ByteReadPacket.prototype.w1a = function (destination, offset, length) {
    return 0;
  };
  ByteReadPacket.prototype.x1a = function () {
  };
  ByteReadPacket.prototype.toString = function () {
    return 'ByteReadPacket(' + toString(this.l16()) + ' bytes remaining)';
  };
  ByteReadPacket.$metadata$ = classMeta('ByteReadPacket', [Input], undefined, undefined, undefined, ByteReadPacketPlatformBase.prototype);
  function ByteReadPacketPlatformBase(head, remaining, pool) {
    ByteReadPacketBase.call(this, head, remaining, pool);
  }
  ByteReadPacketPlatformBase.$metadata$ = classMeta('ByteReadPacketPlatformBase', undefined, undefined, undefined, undefined, ByteReadPacketBase.prototype);
  function takeWhile(_this__u8e3s4, block) {
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    try {
      $l$loop_0: do {
        if (!block(current)) {
          break $l$loop_0;
        }
        release = false;
        var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          break $l$loop_0;
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }
        var next = tmp_0;
        current = next;
        release = true;
      }
       while (true);
    }finally {
      if (release) {
        completeReadHead(_this__u8e3s4, current);
      }
    }
  }
  function takeWhileSize(_this__u8e3s4, initialSize, block) {
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, initialSize);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    var size = initialSize;
    try {
      $l$loop: do {
        var tmp$ret$0;
        {
          var tmp0__get_readRemaining__u3cy9h = current;
          tmp$ret$0 = tmp0__get_readRemaining__u3cy9h.a15() - tmp0__get_readRemaining__u3cy9h.b15() | 0;
        }
        var before = tmp$ret$0;
        var after;
        if (before >= size) {
          try {
            size = block(current);
          }finally {
            var tmp$ret$1;
            {
              var tmp1__get_readRemaining__qliyus = current;
              tmp$ret$1 = tmp1__get_readRemaining__qliyus.a15() - tmp1__get_readRemaining__qliyus.b15() | 0;
            }
            after = tmp$ret$1;
          }
        } else {
          after = before;
        }
        release = false;
        var tmp_0;
        if (after === 0) {
          tmp_0 = prepareReadNextHead(_this__u8e3s4, current);
        } else {
          var tmp_1;
          if (after < size) {
            tmp_1 = true;
          } else {
            var tmp$ret$2;
            {
              var tmp2__get_endGap__m31424 = current;
              tmp$ret$2 = tmp2__get_endGap__m31424.z14_1 - tmp2__get_endGap__m31424.c17() | 0;
            }
            var tmp_2 = tmp$ret$2;
            Companion_getInstance_2();
            tmp_1 = tmp_2 < 8;
          }
          if (tmp_1) {
            completeReadHead(_this__u8e3s4, current);
            tmp_0 = prepareReadFirstHead(_this__u8e3s4, size);
          } else {
            tmp_0 = current;
          }
        }
        var next = tmp_0;
        if (next == null) {
          break $l$loop;
        }
        current = next;
        release = true;
      }
       while (size > 0);
    }finally {
      if (release) {
        completeReadHead(_this__u8e3s4, current);
      }
    }
  }
  function discardExact(_this__u8e3s4, n) {
    discardExact_0(_this__u8e3s4, toLong(n));
  }
  function discardExact_0(_this__u8e3s4, n) {
    var discarded = _this__u8e3s4.j1b(n);
    if (!discarded.equals(n)) {
      throw IllegalStateException_init_$Create$('Only ' + toString(discarded) + ' bytes were discarded of ' + toString(n) + ' requested');
    }
  }
  function readFully_1(_this__u8e3s4, dst, offset, length) {
    {
      var tmp$ret$4;
      {
        var remaining = length;
        var dstOffset = offset;
        var tmp$ret$0;
        $l$block: {
          var release = true;
          var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
          var tmp;
          if (tmp0_elvis_lhs == null) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else {
            tmp = tmp0_elvis_lhs;
          }
          var current = tmp;
          try {
            $l$loop_0: do {
              var tmp$ret$3;
              {
                var tmp0__anonymous__q1qw7t = current;
                var tmp$ret$2;
                {
                  var tmp0_minOf = remaining;
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = tmp0__anonymous__q1qw7t.a15() - tmp0__anonymous__q1qw7t.b15() | 0;
                  }
                  var tmp1_minOf = tmp$ret$1;
                  tmp$ret$2 = Math.min(tmp0_minOf, tmp1_minOf);
                }
                var count = tmp$ret$2;
                {
                  var tmp1__anonymous__uwfjfc = dstOffset;
                  readFully_0(tmp0__anonymous__q1qw7t, dst, tmp1__anonymous__uwfjfc, count);
                }
                remaining = remaining - count | 0;
                dstOffset = dstOffset + count | 0;
                tmp$ret$3 = remaining > 0;
              }
              if (!tmp$ret$3) {
                break $l$loop_0;
              }
              release = false;
              var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
              var tmp_0;
              if (tmp1_elvis_lhs == null) {
                break $l$loop_0;
              } else {
                tmp_0 = tmp1_elvis_lhs;
              }
              var next = tmp_0;
              current = next;
              release = true;
            }
             while (true);
          }finally {
            if (release) {
              completeReadHead(_this__u8e3s4, current);
            }
          }
        }
        tmp$ret$4 = remaining;
      }
      var tmp2_requireNoRemaining = tmp$ret$4;
      if (tmp2_requireNoRemaining > 0) {
        prematureEndOfStream(tmp2_requireNoRemaining);
      }
    }
  }
  function readFully_2(_this__u8e3s4, dst, length) {
    {
      var tmp$ret$5;
      {
        var remaining = length;
        var dstOffset = 0;
        var tmp$ret$1;
        $l$block: {
          var release = true;
          var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
          var tmp;
          if (tmp0_elvis_lhs == null) {
            tmp$ret$1 = Unit_getInstance();
            break $l$block;
          } else {
            tmp = tmp0_elvis_lhs;
          }
          var current = tmp;
          try {
            $l$loop_0: do {
              var tmp$ret$4;
              {
                var tmp0__anonymous__q1qw7t = current;
                var tmp$ret$3;
                {
                  var tmp0_minOf = remaining;
                  var tmp$ret$2;
                  {
                    tmp$ret$2 = tmp0__anonymous__q1qw7t.a15() - tmp0__anonymous__q1qw7t.b15() | 0;
                  }
                  var tmp1_minOf = tmp$ret$2;
                  tmp$ret$3 = Math.min(tmp0_minOf, tmp1_minOf);
                }
                var count = tmp$ret$3;
                {
                  var tmp1__anonymous__uwfjfc = dstOffset;
                  readFully(tmp0__anonymous__q1qw7t, dst, count);
                }
                remaining = remaining - count | 0;
                dstOffset = dstOffset + count | 0;
                tmp$ret$4 = remaining > 0;
              }
              if (!tmp$ret$4) {
                break $l$loop_0;
              }
              release = false;
              var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
              var tmp_0;
              if (tmp1_elvis_lhs == null) {
                break $l$loop_0;
              } else {
                tmp_0 = tmp1_elvis_lhs;
              }
              var next = tmp_0;
              current = next;
              release = true;
            }
             while (true);
          }finally {
            if (release) {
              completeReadHead(_this__u8e3s4, current);
            }
          }
        }
        tmp$ret$5 = remaining;
      }
      var tmp2_requireNoRemaining = tmp$ret$5;
      if (tmp2_requireNoRemaining > 0) {
        prematureEndOfStream(tmp2_requireNoRemaining);
      }
    }
  }
  function requireNoRemaining(_this__u8e3s4) {
    if (_this__u8e3s4 > 0) {
      prematureEndOfStream(_this__u8e3s4);
    }
  }
  function readFullyBytesTemplate(_this__u8e3s4, initialDstOffset, length, readBlock) {
    var remaining = length;
    var dstOffset = initialDstOffset;
    var tmp$ret$0;
    $l$block: {
      var release = true;
      var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      try {
        $l$loop_0: do {
          var tmp$ret$3;
          {
            var tmp0__anonymous__q1qw7t = current;
            var tmp$ret$2;
            {
              var tmp0_minOf = remaining;
              var tmp$ret$1;
              {
                tmp$ret$1 = tmp0__anonymous__q1qw7t.a15() - tmp0__anonymous__q1qw7t.b15() | 0;
              }
              var tmp1_minOf = tmp$ret$1;
              tmp$ret$2 = Math.min(tmp0_minOf, tmp1_minOf);
            }
            var count = tmp$ret$2;
            readBlock(tmp0__anonymous__q1qw7t, dstOffset, count);
            remaining = remaining - count | 0;
            dstOffset = dstOffset + count | 0;
            tmp$ret$3 = remaining > 0;
          }
          if (!tmp$ret$3) {
            break $l$loop_0;
          }
          release = false;
          var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
          var tmp_0;
          if (tmp1_elvis_lhs == null) {
            break $l$loop_0;
          } else {
            tmp_0 = tmp1_elvis_lhs;
          }
          var next = tmp_0;
          current = next;
          release = true;
        }
         while (true);
      }finally {
        if (release) {
          completeReadHead(_this__u8e3s4, current);
        }
      }
    }
    return remaining;
  }
  function peekTo_0(_this__u8e3s4, destination, offset, min, max) {
    checkPeekTo(destination, offset, min, max);
    var tmp = toLong(destination.a15());
    var tmp_0 = toLong(offset);
    var tmp_1 = toLong(min);
    var tmp$ret$0;
    {
      tmp$ret$0 = destination.c17() - destination.a15() | 0;
    }
    var copied = _this__u8e3s4.c1b(destination.x14_1, tmp, tmp_0, tmp_1, toLong(coerceAtMost(max, tmp$ret$0))).c7();
    destination.s1b(copied);
    return copied;
  }
  function peekTo$default(_this__u8e3s4, destination, offset, min, max, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      min = 1;
    if (!(($mask0 & 8) === 0))
      max = IntCompanionObject_getInstance().w_1;
    return peekTo_0(_this__u8e3s4, destination, offset, min, max);
  }
  function readShort_0(_this__u8e3s4) {
    var tmp$ret$3;
    $l$block: {
      var tmp;
      if (_this__u8e3s4 instanceof AbstractInput) {
        var tmp$ret$0;
        {
          var tmp0__get_headRemaining__hii8x7 = _this__u8e3s4;
          tmp$ret$0 = tmp0__get_headRemaining__hii8x7.g1a() - tmp0__get_headRemaining__hii8x7.h1a() | 0;
        }
        tmp = tmp$ret$0 > 2;
      } else {
        tmp = false;
      }
      if (tmp) {
        var index = _this__u8e3s4.h1a();
        _this__u8e3s4.n1a(index + 2 | 0);
        var tmp$ret$2;
        {
          var tmp1__anonymous__uwfjfc = _this__u8e3s4.z1a();
          var tmp$ret$1;
          {
            tmp$ret$1 = tmp1__anonymous__uwfjfc.j19_1.getInt16(index, false);
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = tmp$ret$2;
        break $l$block;
      }
      var tmp$ret$4;
      {
        tmp$ret$4 = readShortFallback(_this__u8e3s4);
      }
      tmp$ret$3 = tmp$ret$4;
    }
    return tmp$ret$3;
  }
  function readPrimitive(_this__u8e3s4, size, main, fallback) {
    var tmp;
    if (_this__u8e3s4 instanceof AbstractInput) {
      var tmp$ret$0;
      {
        var tmp0__get_headRemaining__hii8x7 = _this__u8e3s4;
        tmp$ret$0 = tmp0__get_headRemaining__hii8x7.g1a() - tmp0__get_headRemaining__hii8x7.h1a() | 0;
      }
      tmp = tmp$ret$0 > size;
    } else {
      tmp = false;
    }
    if (tmp) {
      var index = _this__u8e3s4.h1a();
      _this__u8e3s4.n1a(index + size | 0);
      return main(_this__u8e3s4.z1a(), index);
    }
    return fallback();
  }
  function readShortFallback(_this__u8e3s4) {
    var tmp$ret$1;
    {
      var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 2);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        prematureEndOfStream(2);
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var head = tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = readShort(head);
      }
      var value = tmp$ret$0;
      completeReadHead(_this__u8e3s4, head);
      tmp$ret$1 = value;
    }
    return tmp$ret$1;
  }
  function readPrimitiveFallback(_this__u8e3s4, size, read) {
    var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, size);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      prematureEndOfStream(size);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var head = tmp;
    var value = read(head);
    completeReadHead(_this__u8e3s4, head);
    return value;
  }
  function writeFully_2(_this__u8e3s4, src, offset, length) {
    {
      var currentOffset = offset;
      var remaining = length;
      {
        var tail = prepareWriteHead(_this__u8e3s4, 1, null);
        try {
          $l$loop: while (true) {
            var tmp$ret$2;
            {
              var tmp0__anonymous__q1qw7t = tail;
              var tmp$ret$1;
              {
                var tmp0_minOf = remaining;
                var tmp$ret$0;
                {
                  tmp$ret$0 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
                }
                var tmp1_minOf = tmp$ret$0;
                tmp$ret$1 = Math.min(tmp0_minOf, tmp1_minOf);
              }
              var size = tmp$ret$1;
              {
                var tmp1__anonymous__uwfjfc = currentOffset;
                writeFully_0(tmp0__anonymous__q1qw7t, src, tmp1__anonymous__uwfjfc, size);
              }
              currentOffset = currentOffset + size | 0;
              remaining = remaining - size | 0;
              tmp$ret$2 = remaining > 0;
            }
            if (!tmp$ret$2)
              break $l$loop;
            tail = prepareWriteHead(_this__u8e3s4, 1, tail);
          }
        }finally {
          afterHeadWrite(_this__u8e3s4, tail);
        }
      }
    }
  }
  function writeFully$default(_this__u8e3s4, src, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = src.length - offset | 0;
    return writeFully_2(_this__u8e3s4, src, offset, length);
  }
  function writeFully_3(_this__u8e3s4, src, length) {
    {
      var currentOffset = 0;
      var remaining = length;
      {
        var tail = prepareWriteHead(_this__u8e3s4, 1, null);
        try {
          $l$loop: while (true) {
            var tmp$ret$3;
            {
              var tmp0__anonymous__q1qw7t = tail;
              var tmp$ret$2;
              {
                var tmp0_minOf = remaining;
                var tmp$ret$1;
                {
                  tmp$ret$1 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
                }
                var tmp1_minOf = tmp$ret$1;
                tmp$ret$2 = Math.min(tmp0_minOf, tmp1_minOf);
              }
              var size = tmp$ret$2;
              {
                var tmp1__anonymous__uwfjfc = currentOffset;
                writeFully_1(tmp0__anonymous__q1qw7t, src, size);
              }
              currentOffset = currentOffset + size | 0;
              remaining = remaining - size | 0;
              tmp$ret$3 = remaining > 0;
            }
            if (!tmp$ret$3)
              break $l$loop;
            tail = prepareWriteHead(_this__u8e3s4, 1, tail);
          }
        }finally {
          afterHeadWrite(_this__u8e3s4, tail);
        }
      }
    }
  }
  function writeFully$default_0(_this__u8e3s4, src, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      {
        tmp$ret$0 = src.a15() - src.b15() | 0;
        tmp$ret$0_0 = Unit_getInstance();
      }
      length = tmp$ret$0;
    }
    return writeFully_3(_this__u8e3s4, src, length);
  }
  function writeFullyBytesTemplate(_this__u8e3s4, offset, length, block) {
    var currentOffset = offset;
    var remaining = length;
    {
      var tail = prepareWriteHead(_this__u8e3s4, 1, null);
      try {
        $l$loop: while (true) {
          var tmp$ret$2;
          {
            var tmp0__anonymous__q1qw7t = tail;
            var tmp$ret$1;
            {
              var tmp0_minOf = remaining;
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0__anonymous__q1qw7t.c17() - tmp0__anonymous__q1qw7t.a15() | 0;
              }
              var tmp1_minOf = tmp$ret$0;
              tmp$ret$1 = Math.min(tmp0_minOf, tmp1_minOf);
            }
            var size = tmp$ret$1;
            block(tmp0__anonymous__q1qw7t, currentOffset, size);
            currentOffset = currentOffset + size | 0;
            remaining = remaining - size | 0;
            tmp$ret$2 = remaining > 0;
          }
          if (!tmp$ret$2)
            break $l$loop;
          tail = prepareWriteHead(_this__u8e3s4, 1, tail);
        }
      }finally {
        afterHeadWrite(_this__u8e3s4, tail);
      }
    }
  }
  function writeWhile(_this__u8e3s4, block) {
    var tail = prepareWriteHead(_this__u8e3s4, 1, null);
    try {
      $l$loop: while (true) {
        if (!block(tail))
          break $l$loop;
        tail = prepareWriteHead(_this__u8e3s4, 1, tail);
      }
    }finally {
      afterHeadWrite(_this__u8e3s4, tail);
    }
  }
  function writeWhileSize(_this__u8e3s4, initialSize, block) {
    var tail = prepareWriteHead(_this__u8e3s4, initialSize, null);
    try {
      var size;
      $l$loop: while (true) {
        size = block(tail);
        if (size <= 0)
          break $l$loop;
        tail = prepareWriteHead(_this__u8e3s4, size, tail);
      }
    }finally {
      afterHeadWrite(_this__u8e3s4, tail);
    }
  }
  function writeShort_0(_this__u8e3s4, value) {
    var tmp$ret$0;
    $l$block: {
      if (_this__u8e3s4 instanceof AbstractOutput) {
        var index = _this__u8e3s4.c1c();
        if ((_this__u8e3s4.m1c() - index | 0) > 2) {
          _this__u8e3s4.f1c(index + 2 | 0);
          {
            var tmp0__anonymous__q1qw7t = _this__u8e3s4.l1c();
            {
              tmp0__anonymous__q1qw7t.j19_1.setInt16(index, value, false);
            }
          }
          tmp$ret$0 = true;
          break $l$block;
        }
      }
      tmp$ret$0 = false;
    }
    if (!tmp$ret$0) {
      writeShortFallback(_this__u8e3s4, value);
    }
  }
  function writePrimitiveTemplate(_this__u8e3s4, componentSize, block) {
    if (_this__u8e3s4 instanceof AbstractOutput) {
      var index = _this__u8e3s4.c1c();
      if ((_this__u8e3s4.m1c() - index | 0) > componentSize) {
        _this__u8e3s4.f1c(index + componentSize | 0);
        block(_this__u8e3s4.l1c(), index);
        return true;
      }
    }
    return false;
  }
  function writeShortFallback(_this__u8e3s4, value) {
    var tmp$ret$0;
    $l$block: {
      if (_this__u8e3s4 instanceof AbstractOutput) {
        var tail = _this__u8e3s4.h1c(2);
        {
          writeShort(tail, value);
        }
        _this__u8e3s4.i1c();
        tmp$ret$0 = true;
        break $l$block;
      }
      tmp$ret$0 = false;
    }
    if (!tmp$ret$0) {
      var tmp$ret$1;
      {
        tmp$ret$1 = toByte(value >>> 8 | 0);
      }
      _this__u8e3s4.g1c(tmp$ret$1);
      var tmp$ret$2;
      {
        tmp$ret$2 = toByte(value & 255);
      }
      _this__u8e3s4.g1c(tmp$ret$2);
    }
  }
  function writePrimitiveFallbackTemplate(_this__u8e3s4, componentSize, writeOperation) {
    if (_this__u8e3s4 instanceof AbstractOutput) {
      var tail = _this__u8e3s4.h1c(componentSize);
      writeOperation(tail);
      _this__u8e3s4.i1c();
      return true;
    }
    return false;
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_4() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function ByteReadPacketBase(head, remaining, pool) {
    Companion_getInstance_4();
    AbstractInput.call(this, head, remaining, pool);
  }
  ByteReadPacketBase.$metadata$ = classMeta('ByteReadPacketBase', undefined, undefined, undefined, undefined, AbstractInput.prototype);
  function get_isEmpty(_this__u8e3s4) {
    return _this__u8e3s4.r17();
  }
  function read_0(_this__u8e3s4, n, block) {
    {
    }
    var tmp0_elvis_lhs = _this__u8e3s4.m1a(n);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      prematureEndOfStream(n);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var buffer = tmp;
    var positionBefore = buffer.b15();
    try {
      block(buffer);
    }finally {
      var positionAfter = buffer.b15();
      if (positionAfter < positionBefore) {
        throw IllegalStateException_init_$Create$("Buffer's position shouldn't be rewinded");
      }
      if (positionAfter === buffer.a15()) {
        _this__u8e3s4.o1b(buffer);
      } else {
        _this__u8e3s4.n1a(positionAfter);
      }
    }
  }
  function prematureEndOfStream(size) {
    throw new EOFException('Premature end of stream: expected ' + size + ' bytes');
  }
  function writeText(_this__u8e3s4, text, fromIndex, toIndex, charset) {
    if (charset === Charsets_getInstance().s1c_1) {
      return writeTextUtf8(_this__u8e3s4, text, fromIndex, toIndex);
    }
    encodeToImpl(charset.j1f(), _this__u8e3s4, text, fromIndex, toIndex);
  }
  function writeText$default(_this__u8e3s4, text, fromIndex, toIndex, charset, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      fromIndex = 0;
    if (!(($mask0 & 4) === 0))
      toIndex = charSequenceLength(text);
    if (!(($mask0 & 8) === 0))
      charset = Charsets_getInstance().s1c_1;
    return writeText(_this__u8e3s4, text, fromIndex, toIndex, charset);
  }
  function readTextExactBytes(_this__u8e3s4, bytesCount, charset) {
    return decodeExactBytes(charset.k1f(), _this__u8e3s4, bytesCount);
  }
  function readTextExactBytes$default(_this__u8e3s4, bytesCount, charset, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      charset = Charsets_getInstance().s1c_1;
    return readTextExactBytes(_this__u8e3s4, bytesCount, charset);
  }
  function writeTextUtf8(_this__u8e3s4, text, fromIndex, toIndex) {
    var index = fromIndex;
    {
      var tail = prepareWriteHead(_this__u8e3s4, 1, null);
      try {
        var size;
        $l$loop: while (true) {
          var tmp$ret$11;
          {
            var tmp0__anonymous__q1qw7t = tail;
            var memory = tmp0__anonymous__q1qw7t.x14_1;
            var dstOffset = tmp0__anonymous__q1qw7t.a15();
            var dstLimit = tmp0__anonymous__q1qw7t.c17();
            var tmp0_container = encodeUTF8(memory, text, index, toIndex, dstOffset, dstLimit);
            var tmp$ret$3;
            {
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  var tmp$ret$0;
                  {
                    var tmp0__get_highShort__24misv = _EncodeResult___get_value__impl__h0r466(tmp0_container);
                    tmp$ret$0 = toShort(tmp0__get_highShort__24misv >>> 16 | 0);
                  }
                  var tmp1_toUShort = tmp$ret$0;
                  tmp$ret$1 = _UShort___init__impl__jigrne(tmp1_toUShort);
                }
                tmp$ret$2 = tmp$ret$1;
              }
              tmp$ret$3 = tmp$ret$2;
            }
            var characters = tmp$ret$3;
            var tmp$ret$7;
            {
              var tmp$ret$6;
              {
                var tmp$ret$5;
                {
                  var tmp$ret$4;
                  {
                    var tmp2__get_lowShort__mhgsmx = _EncodeResult___get_value__impl__h0r466(tmp0_container);
                    tmp$ret$4 = toShort(tmp2__get_lowShort__mhgsmx & 65535);
                  }
                  var tmp3_toUShort = tmp$ret$4;
                  tmp$ret$5 = _UShort___init__impl__jigrne(tmp3_toUShort);
                }
                tmp$ret$6 = tmp$ret$5;
              }
              tmp$ret$7 = tmp$ret$6;
            }
            var bytes = tmp$ret$7;
            var tmp = index;
            var tmp$ret$8;
            {
              tmp$ret$8 = _UShort___get_data__impl__g0245(characters) & 65535;
            }
            index = tmp + tmp$ret$8 | 0;
            var tmp$ret$9;
            {
              tmp$ret$9 = _UShort___get_data__impl__g0245(bytes) & 65535;
            }
            tmp0__anonymous__q1qw7t.s1b(tmp$ret$9);
            var tmp_0;
            var tmp_1;
            var tmp$ret$10;
            {
              tmp$ret$10 = _UShort___get_data__impl__g0245(characters) & 65535;
            }
            if (tmp$ret$10 === 0) {
              tmp_1 = index < toIndex;
            } else {
              tmp_1 = false;
            }
            if (tmp_1) {
              tmp_0 = 8;
            } else {
              if (index < toIndex) {
                tmp_0 = 1;
              } else {
                tmp_0 = 0;
              }
            }
            tmp$ret$11 = tmp_0;
          }
          size = tmp$ret$11;
          if (size <= 0)
            break $l$loop;
          tail = prepareWriteHead(_this__u8e3s4, size, tail);
        }
      }finally {
        afterHeadWrite(_this__u8e3s4, tail);
      }
    }
  }
  function readBytes(_this__u8e3s4, n) {
    var tmp;
    if (!(n === 0)) {
      var tmp$ret$1;
      {
        var tmp0_also = new Int8Array(n);
        {
        }
        {
          readFully_1(_this__u8e3s4, tmp0_also, 0, n);
        }
        tmp$ret$1 = tmp0_also;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = get_EmptyByteArray();
    }
    return tmp;
  }
  function readBytes$default(_this__u8e3s4, n, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      {
        var tmp0_coerceAtMostMaxIntOrFail = _this__u8e3s4.l16();
        if (tmp0_coerceAtMostMaxIntOrFail.g1(toLong(IntCompanionObject_getInstance().w_1)) > 0)
          throw IllegalArgumentException_init_$Create$('Unable to convert to a ByteArray: packet is too big');
        tmp$ret$0 = tmp0_coerceAtMostMaxIntOrFail.c7();
        tmp$ret$0_0 = Unit_getInstance();
      }
      n = tmp$ret$0;
    }
    return readBytes(_this__u8e3s4, n);
  }
  function toByteArray(_this__u8e3s4, charset) {
    return encodeToByteArray(charset.j1f(), _this__u8e3s4, 0, _this__u8e3s4.length);
  }
  function readText(_this__u8e3s4, charset, max) {
    return decode(charset.k1f(), _this__u8e3s4, max);
  }
  function readText$default(_this__u8e3s4, charset, max, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      charset = Charsets_getInstance().s1c_1;
    if (!(($mask0 & 2) === 0))
      max = IntCompanionObject_getInstance().w_1;
    return readText(_this__u8e3s4, charset, max);
  }
  function _no_name_provided__qut3iv_14() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_14.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = 'Only ChunkBuffer.Empty instance could be recycled.';
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_14.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function ChunkBuffer$Companion$Pool$1() {
  }
  ChunkBuffer$Companion$Pool$1.prototype.n19 = function () {
    return get_DefaultChunkedBufferPool().n19();
  };
  ChunkBuffer$Companion$Pool$1.prototype.l1f = function (instance) {
    if (!(instance instanceof IoBuffer)) {
      throw IllegalArgumentException_init_$Create$('Only IoBuffer instances can be recycled.');
    }
    get_DefaultChunkedBufferPool().t1e(instance);
  };
  ChunkBuffer$Companion$Pool$1.prototype.t1e = function (instance) {
    return this.l1f(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  ChunkBuffer$Companion$Pool$1.prototype.fm = function () {
    get_DefaultChunkedBufferPool().fm();
  };
  ChunkBuffer$Companion$Pool$1.$metadata$ = classMeta(undefined, [ObjectPool]);
  function ChunkBuffer$Companion$EmptyPool$1() {
  }
  ChunkBuffer$Companion$EmptyPool$1.prototype.n19 = function () {
    return Companion_getInstance_5().k1a();
  };
  ChunkBuffer$Companion$EmptyPool$1.prototype.l1f = function (instance) {
    {
      var tmp0_require = instance === Companion_getInstance_5().k1a();
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_14();
        m.f1a();
      }
    }
  };
  ChunkBuffer$Companion$EmptyPool$1.prototype.t1e = function (instance) {
    return this.l1f(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  ChunkBuffer$Companion$EmptyPool$1.prototype.fm = function () {
  };
  ChunkBuffer$Companion$EmptyPool$1.$metadata$ = classMeta(undefined, [ObjectPool]);
  function ChunkBuffer$Companion$NoPool$1() {
    NoPoolImpl.call(this);
  }
  ChunkBuffer$Companion$NoPool$1.prototype.n19 = function () {
    var tmp = DefaultAllocator_getInstance().k19(get_DEFAULT_BUFFER_SIZE());
    return new IoBuffer(tmp, null, isInterface(this, ObjectPool) ? this : THROW_CCE());
  };
  ChunkBuffer$Companion$NoPool$1.prototype.l1f = function (instance) {
    if (!(instance instanceof IoBuffer)) {
      throw IllegalArgumentException_init_$Create$('Only IoBuffer instances can be recycled.');
    }
    DefaultAllocator_getInstance().l19(instance.d1a());
  };
  ChunkBuffer$Companion$NoPool$1.prototype.t1e = function (instance) {
    return this.l1f(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  ChunkBuffer$Companion$NoPool$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, NoPoolImpl.prototype);
  function ChunkBuffer$Companion$NoPoolManuallyManaged$1() {
    NoPoolImpl.call(this);
  }
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.prototype.n19 = function () {
    throw UnsupportedOperationException_init_$Create$("This pool doesn't support borrow");
  };
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.prototype.l1f = function (instance) {
  };
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.prototype.t1e = function (instance) {
    return this.l1f(instance instanceof ChunkBuffer ? instance : THROW_CCE());
  };
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, NoPoolImpl.prototype);
  function _set_origin__gfzohd($this, _set____db54di) {
    return $this.u19_1.m4($this, origin$factory(), _set____db54di);
  }
  function appendNext($this, chunk) {
    if (!$this.s19_1.atomicfu$compareAndSet(null, chunk)) {
      throw IllegalStateException_init_$Create$('This chunk has already a next chunk.');
    }
  }
  function Companion_3() {
    Companion_instance_3 = this;
    var tmp = this;
    tmp.i11_1 = new ChunkBuffer$Companion$Pool$1();
    var tmp_0 = this;
    tmp_0.j11_1 = new ChunkBuffer$Companion$EmptyPool$1();
    var tmp_1 = this;
    tmp_1.k11_1 = new ChunkBuffer$Companion$NoPool$1();
    var tmp_2 = this;
    tmp_2.l11_1 = new ChunkBuffer$Companion$NoPoolManuallyManaged$1();
  }
  Companion_3.prototype.k1a = function () {
    return Companion_getInstance_10().e1d_1;
  };
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_5() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function _no_name_provided__qut3iv_15() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_15.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "A chunk couldn't be a view of itself.";
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_15.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_16() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_16.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = 'Unable to reset buffer with origin';
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_16.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function ChunkBuffer(memory, origin, parentPool) {
    Companion_getInstance_5();
    Buffer.call(this, memory);
    this.r19_1 = parentPool;
    {
      var tmp0_require = !(origin === this);
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_15();
        m.f1a();
      }
    }
    this.s19_1 = atomic$ref$1(null);
    this.t19_1 = atomic$int$1(1);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(origin);
    }
    tmp.u19_1 = tmp$ret$0;
  }
  ChunkBuffer.prototype.m1f = function () {
    return this.r19_1;
  };
  ChunkBuffer.prototype.p1e = function () {
    return this.u19_1.l4(this, origin$factory_0());
  };
  ChunkBuffer.prototype.j1a = function (newValue) {
    if (newValue == null) {
      this.r1a();
    } else {
      appendNext(this, newValue);
    }
  };
  ChunkBuffer.prototype.p1a = function () {
    return this.s19_1.fi_1;
  };
  ChunkBuffer.prototype.o1e = function () {
    return this.t19_1.gi_1;
  };
  ChunkBuffer.prototype.r1a = function () {
    return this.s19_1.atomicfu$getAndSet(null);
  };
  ChunkBuffer.prototype.v19 = function () {
    var tmp$ret$2;
    {
      var tmp0_elvis_lhs = this.p1e();
      var tmp0_let = tmp0_elvis_lhs == null ? this : tmp0_elvis_lhs;
      {
      }
      var tmp$ret$1;
      {
        tmp0_let.n1f();
        var tmp$ret$0;
        {
          var tmp0_also = new ChunkBuffer(this.d1a(), tmp0_let, this.r19_1);
          {
          }
          {
            this.x1d(tmp0_also);
          }
          tmp$ret$0 = tmp0_also;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  ChunkBuffer.prototype.x19 = function (pool) {
    if (this.o1f()) {
      var origin = this.p1e();
      if (!(origin == null)) {
        this.l1e();
        origin.x19(pool);
      } else {
        var tmp0_elvis_lhs = this.r19_1;
        var poolToUse = tmp0_elvis_lhs == null ? pool : tmp0_elvis_lhs;
        poolToUse.t1e(this);
      }
    }
  };
  ChunkBuffer.prototype.l1e = function () {
    if (!this.t19_1.atomicfu$compareAndSet(0, -1)) {
      throw IllegalStateException_init_$Create$('Unable to unlink: buffer is in use.');
    }
    this.r1a();
    _set_origin__gfzohd(this, null);
  };
  ChunkBuffer.prototype.n1f = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_update = this.t19_1;
      while (true) {
        var cur = tmp0_update.gi_1;
        var tmp$ret$0;
        {
          if (cur <= 0)
            throw IllegalStateException_init_$Create$('Unable to acquire chunk: it is already released.');
          tmp$ret$0 = cur + 1 | 0;
        }
        var upd = tmp$ret$0;
        if (tmp0_update.atomicfu$compareAndSet(cur, upd)) {
          tmp$ret$1 = Unit_getInstance();
          break $l$block;
        }
      }
    }
  };
  ChunkBuffer.prototype.s1e = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_update = this.t19_1;
      while (true) {
        var cur = tmp0_update.gi_1;
        var tmp$ret$0;
        {
          if (cur < 0) {
            throw IllegalStateException_init_$Create$("This instance is already disposed and couldn't be borrowed.");
          }
          if (cur > 0) {
            throw IllegalStateException_init_$Create$('This instance is already in use but somehow appeared in the pool.');
          }
          tmp$ret$0 = 1;
        }
        var upd = tmp$ret$0;
        if (tmp0_update.atomicfu$compareAndSet(cur, upd)) {
          tmp$ret$1 = Unit_getInstance();
          break $l$block;
        }
      }
    }
  };
  ChunkBuffer.prototype.o1f = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_updateAndGet = this.t19_1;
      while (true) {
        var cur = tmp0_updateAndGet.gi_1;
        var tmp$ret$0;
        {
          if (cur <= 0)
            throw IllegalStateException_init_$Create$('Unable to release: it is already released.');
          tmp$ret$0 = cur - 1 | 0;
        }
        var upd = tmp$ret$0;
        if (tmp0_updateAndGet.atomicfu$compareAndSet(cur, upd)) {
          tmp$ret$1 = upd;
          break $l$block;
        }
      }
    }
    return tmp$ret$1 === 0;
  };
  ChunkBuffer.prototype.z1d = function () {
    {
      var tmp0_require = this.p1e() == null;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_16();
        m.f1a();
      }
    }
    Buffer.prototype.z1d.call(this);
    this.r1d(null);
    this.s19_1.fi_1 = null;
  };
  ChunkBuffer.$metadata$ = classMeta('ChunkBuffer', undefined, undefined, undefined, undefined, Buffer.prototype);
  function isExclusivelyOwned(_this__u8e3s4) {
    return _this__u8e3s4.o1e() === 1;
  }
  function origin$factory() {
    return getPropertyCallableRef('origin', 1, KMutableProperty1, function (receiver) {
      return receiver.p1e();
    }, function (receiver, value) {
      return _set_origin__gfzohd(receiver, value);
    });
  }
  function origin$factory_0() {
    return getPropertyCallableRef('origin', 1, KMutableProperty1, function (receiver) {
      return receiver.p1e();
    }, function (receiver, value) {
      return _set_origin__gfzohd(receiver, value);
    });
  }
  function toIntOrFail(_this__u8e3s4, name) {
    if (_this__u8e3s4.g1(toLong(IntCompanionObject_getInstance().w_1)) >= 0) {
      failLongToIntConversion(_this__u8e3s4, name);
    }
    return _this__u8e3s4.c7();
  }
  function failLongToIntConversion(value, name) {
    throw IllegalArgumentException_init_$Create$('Long value ' + toString(value) + ' of ' + name + " doesn't fit into 32-bit integer");
  }
  function require_0(condition, message) {
    {
    }
    if (!condition) {
      var m = new _no_name_provided__qut3iv_17(message);
      m.f1a();
    }
  }
  function RequireFailureCapture() {
  }
  RequireFailureCapture.$metadata$ = classMeta('RequireFailureCapture');
  function _no_name_provided__qut3iv_17($message) {
    this.p1f_1 = $message;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_17.prototype.f1a = function () {
    throw IllegalArgumentException_init_$Create$(this.p1f_1());
  };
  _no_name_provided__qut3iv_17.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _EncodeResult___init__impl__vkc0cy(value) {
    return value;
  }
  function _EncodeResult___get_value__impl__h0r466($this) {
    return $this;
  }
  function _EncodeResult___init__impl__vkc0cy_0(characters, bytes) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___get_data__impl__g0245(characters) & 65535;
    }
    var tmp = tmp$ret$0 << 16;
    var tmp$ret$1;
    {
      tmp$ret$1 = _UShort___get_data__impl__g0245(bytes) & 65535;
    }
    var tmp_0 = _EncodeResult___init__impl__vkc0cy(tmp | tmp$ret$1);
    return tmp_0;
  }
  function _EncodeResult___get_characters__impl__rrxzcv($this) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0__get_highShort__24misv = _EncodeResult___get_value__impl__h0r466($this);
        tmp$ret$0 = toShort(tmp0__get_highShort__24misv >>> 16 | 0);
      }
      var tmp1_toUShort = tmp$ret$0;
      tmp$ret$1 = _UShort___init__impl__jigrne(tmp1_toUShort);
    }
    return tmp$ret$1;
  }
  function _EncodeResult___get_bytes__impl__bt0kq0($this) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        var tmp0__get_lowShort__5ljr93 = _EncodeResult___get_value__impl__h0r466($this);
        tmp$ret$0 = toShort(tmp0__get_lowShort__5ljr93 & 65535);
      }
      var tmp1_toUShort = tmp$ret$0;
      tmp$ret$1 = _UShort___init__impl__jigrne(tmp1_toUShort);
    }
    return tmp$ret$1;
  }
  function EncodeResult__component1_impl_36tlhi($this) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0__get_highShort__24misv = _EncodeResult___get_value__impl__h0r466($this);
          tmp$ret$0 = toShort(tmp0__get_highShort__24misv >>> 16 | 0);
        }
        var tmp1_toUShort = tmp$ret$0;
        tmp$ret$1 = _UShort___init__impl__jigrne(tmp1_toUShort);
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function EncodeResult__component2_impl_3nv7vp($this) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0__get_lowShort__5ljr93 = _EncodeResult___get_value__impl__h0r466($this);
          tmp$ret$0 = toShort(tmp0__get_lowShort__5ljr93 & 65535);
        }
        var tmp1_toUShort = tmp$ret$0;
        tmp$ret$1 = _UShort___init__impl__jigrne(tmp1_toUShort);
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function encodeUTF8(_this__u8e3s4, text, from, to, dstOffset, dstLimit) {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        Companion_getInstance_0();
        var tmp0_toInt = _UShort___init__impl__jigrne(-1);
        tmp$ret$0 = _UShort___get_data__impl__g0245(tmp0_toInt) & 65535;
      }
      var tmp1_minOf = from + tmp$ret$0 | 0;
      tmp$ret$1 = Math.min(to, tmp1_minOf);
    }
    var lastCharIndex = tmp$ret$1;
    var tmp$ret$2;
    {
      Companion_getInstance_0();
      var tmp2_toInt = _UShort___init__impl__jigrne(-1);
      tmp$ret$2 = _UShort___get_data__impl__g0245(tmp2_toInt) & 65535;
    }
    var resultLimit = coerceAtMost(dstLimit, tmp$ret$2);
    var resultPosition = dstOffset;
    var index = from;
    $l$loop: do {
      if (resultPosition >= resultLimit ? true : index >= lastCharIndex) {
        var tmp$ret$3;
        {
          var tmp3_toUShort = index - from | 0;
          tmp$ret$3 = _UShort___init__impl__jigrne(toShort(tmp3_toUShort));
        }
        var tmp = tmp$ret$3;
        var tmp$ret$4;
        {
          var tmp4_toUShort = resultPosition - dstOffset | 0;
          tmp$ret$4 = _UShort___init__impl__jigrne(toShort(tmp4_toUShort));
        }
        return _EncodeResult___init__impl__vkc0cy_0(tmp, tmp$ret$4);
      }
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      var character = Char__toInt_impl_vasixd(charSequenceGet(text, tmp0)) & 65535;
      if ((character & 65408) === 0) {
        {
          var tmp1 = resultPosition;
          resultPosition = tmp1 + 1 | 0;
          var tmp5_storeAt = tmp1;
          var tmp6_storeAt = toByte(character);
          _this__u8e3s4.j19_1.setInt8(tmp5_storeAt, tmp6_storeAt);
        }
      } else {
        break $l$loop;
      }
    }
     while (true);
    var tmp2 = index;
    index = tmp2 - 1 | 0;
    return encodeUTF8Stage1(_this__u8e3s4, text, index, lastCharIndex, from, resultPosition, resultLimit, dstOffset);
  }
  function putUtf8Char(_this__u8e3s4, offset, v) {
    var tmp;
    if (0 <= v ? v <= 127 : false) {
      {
        var tmp0_storeAt = toByte(v);
        _this__u8e3s4.j19_1.setInt8(offset, tmp0_storeAt);
      }
      tmp = 1;
    } else if (128 <= v ? v <= 2047 : false) {
      var tmp$ret$0;
      {
        var tmp1_set = toByte(192 | v >> 6 & 31);
        tmp$ret$0 = _this__u8e3s4.j19_1.setInt8(offset, tmp1_set);
      }
      var tmp$ret$1;
      {
        var tmp2_set = offset + 1 | 0;
        var tmp3_set = toByte(128 | v & 63);
        tmp$ret$1 = _this__u8e3s4.j19_1.setInt8(tmp2_set, tmp3_set);
      }
      tmp = 2;
    } else if (2048 <= v ? v <= 65535 : false) {
      var tmp$ret$2;
      {
        var tmp4_set = toByte(224 | v >> 12 & 15);
        tmp$ret$2 = _this__u8e3s4.j19_1.setInt8(offset, tmp4_set);
      }
      var tmp$ret$3;
      {
        var tmp5_set = offset + 1 | 0;
        var tmp6_set = toByte(128 | v >> 6 & 63);
        tmp$ret$3 = _this__u8e3s4.j19_1.setInt8(tmp5_set, tmp6_set);
      }
      var tmp$ret$4;
      {
        var tmp7_set = offset + 2 | 0;
        var tmp8_set = toByte(128 | v & 63);
        tmp$ret$4 = _this__u8e3s4.j19_1.setInt8(tmp7_set, tmp8_set);
      }
      tmp = 3;
    } else if (65536 <= v ? v <= 1114111 : false) {
      var tmp$ret$5;
      {
        var tmp9_set = toByte(240 | v >> 18 & 7);
        tmp$ret$5 = _this__u8e3s4.j19_1.setInt8(offset, tmp9_set);
      }
      var tmp$ret$6;
      {
        var tmp10_set = offset + 1 | 0;
        var tmp11_set = toByte(128 | v >> 12 & 63);
        tmp$ret$6 = _this__u8e3s4.j19_1.setInt8(tmp10_set, tmp11_set);
      }
      var tmp$ret$7;
      {
        var tmp12_set = offset + 2 | 0;
        var tmp13_set = toByte(128 | v >> 6 & 63);
        tmp$ret$7 = _this__u8e3s4.j19_1.setInt8(tmp12_set, tmp13_set);
      }
      var tmp$ret$8;
      {
        var tmp14_set = offset + 3 | 0;
        var tmp15_set = toByte(128 | v & 63);
        tmp$ret$8 = _this__u8e3s4.j19_1.setInt8(tmp14_set, tmp15_set);
      }
      tmp = 4;
    } else {
      malformedCodePoint(v);
    }
    return tmp;
  }
  function encodeUTF8Stage1(_this__u8e3s4, text, index1, lastCharIndex, from, resultPosition1, resultLimit, dstOffset) {
    var index = index1;
    var resultPosition = resultPosition1;
    var stage1Limit = resultLimit - 3 | 0;
    $l$loop: do {
      var freeSpace = stage1Limit - resultPosition | 0;
      if (freeSpace <= 0 ? true : index >= lastCharIndex) {
        break $l$loop;
      }
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      var character = charSequenceGet(text, tmp0);
      var tmp;
      if (isHighSurrogate(character)) {
        var tmp_0;
        if (index === lastCharIndex ? true : !isLowSurrogate(charSequenceGet(text, index))) {
          tmp_0 = 63;
        } else {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          tmp_0 = codePoint(character, charSequenceGet(text, tmp1));
        }
        tmp = tmp_0;
      } else {
        tmp = Char__toInt_impl_vasixd(character);
      }
      var codepoint = tmp;
      var tmp$ret$9;
      {
        var tmp0_putUtf8Char = resultPosition;
        var tmp_1;
        if (0 <= codepoint ? codepoint <= 127 : false) {
          {
            var tmp0_storeAt = toByte(codepoint);
            _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp0_storeAt);
          }
          tmp_1 = 1;
        } else if (128 <= codepoint ? codepoint <= 2047 : false) {
          var tmp$ret$0;
          {
            var tmp1_set = toByte(192 | codepoint >> 6 & 31);
            tmp$ret$0 = _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp1_set);
          }
          var tmp$ret$1;
          {
            var tmp2_set = tmp0_putUtf8Char + 1 | 0;
            var tmp3_set = toByte(128 | codepoint & 63);
            tmp$ret$1 = _this__u8e3s4.j19_1.setInt8(tmp2_set, tmp3_set);
          }
          tmp_1 = 2;
        } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
          var tmp$ret$2;
          {
            var tmp4_set = toByte(224 | codepoint >> 12 & 15);
            tmp$ret$2 = _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp4_set);
          }
          var tmp$ret$3;
          {
            var tmp5_set = tmp0_putUtf8Char + 1 | 0;
            var tmp6_set = toByte(128 | codepoint >> 6 & 63);
            tmp$ret$3 = _this__u8e3s4.j19_1.setInt8(tmp5_set, tmp6_set);
          }
          var tmp$ret$4;
          {
            var tmp7_set = tmp0_putUtf8Char + 2 | 0;
            var tmp8_set = toByte(128 | codepoint & 63);
            tmp$ret$4 = _this__u8e3s4.j19_1.setInt8(tmp7_set, tmp8_set);
          }
          tmp_1 = 3;
        } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
          var tmp$ret$5;
          {
            var tmp9_set = toByte(240 | codepoint >> 18 & 7);
            tmp$ret$5 = _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp9_set);
          }
          var tmp$ret$6;
          {
            var tmp10_set = tmp0_putUtf8Char + 1 | 0;
            var tmp11_set = toByte(128 | codepoint >> 12 & 63);
            tmp$ret$6 = _this__u8e3s4.j19_1.setInt8(tmp10_set, tmp11_set);
          }
          var tmp$ret$7;
          {
            var tmp12_set = tmp0_putUtf8Char + 2 | 0;
            var tmp13_set = toByte(128 | codepoint >> 6 & 63);
            tmp$ret$7 = _this__u8e3s4.j19_1.setInt8(tmp12_set, tmp13_set);
          }
          var tmp$ret$8;
          {
            var tmp14_set = tmp0_putUtf8Char + 3 | 0;
            var tmp15_set = toByte(128 | codepoint & 63);
            tmp$ret$8 = _this__u8e3s4.j19_1.setInt8(tmp14_set, tmp15_set);
          }
          tmp_1 = 4;
        } else {
          malformedCodePoint(codepoint);
        }
        tmp$ret$9 = tmp_1;
      }
      var size = tmp$ret$9;
      resultPosition = resultPosition + size | 0;
    }
     while (true);
    if (resultPosition === stage1Limit) {
      return encodeUTF8Stage2(_this__u8e3s4, text, index, lastCharIndex, from, resultPosition, resultLimit, dstOffset);
    }
    var tmp$ret$10;
    {
      var tmp1_toUShort = index - from | 0;
      tmp$ret$10 = _UShort___init__impl__jigrne(toShort(tmp1_toUShort));
    }
    var tmp_2 = tmp$ret$10;
    var tmp$ret$11;
    {
      var tmp2_toUShort = resultPosition - dstOffset | 0;
      tmp$ret$11 = _UShort___init__impl__jigrne(toShort(tmp2_toUShort));
    }
    return _EncodeResult___init__impl__vkc0cy_0(tmp_2, tmp$ret$11);
  }
  function malformedCodePoint(value) {
    throw IllegalArgumentException_init_$Create$('Malformed code-point ' + value + ' found');
  }
  function codePoint(high, low) {
    var highValue = Char__toInt_impl_vasixd(high) - 55232 | 0;
    var lowValue = Char__toInt_impl_vasixd(low) - 56320 | 0;
    return highValue << 10 | lowValue;
  }
  function encodeUTF8Stage2(_this__u8e3s4, text, index1, lastCharIndex, from, resultPosition1, resultLimit, dstOffset) {
    var index = index1;
    var resultPosition = resultPosition1;
    $l$loop_0: do {
      var freeSpace = resultLimit - resultPosition | 0;
      if (freeSpace <= 0 ? true : index >= lastCharIndex) {
        break $l$loop_0;
      }
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      var character = charSequenceGet(text, tmp0);
      var tmp;
      if (!isHighSurrogate(character)) {
        tmp = Char__toInt_impl_vasixd(character);
      } else {
        var tmp_0;
        if (index === lastCharIndex ? true : !isLowSurrogate(charSequenceGet(text, index))) {
          tmp_0 = 63;
        } else {
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          tmp_0 = codePoint(character, charSequenceGet(text, tmp1));
        }
        tmp = tmp_0;
      }
      var codepoint = tmp;
      var tmp$ret$0;
      {
        var tmp_1;
        if (1 <= codepoint ? codepoint <= 127 : false) {
          tmp_1 = 1;
        } else if (128 <= codepoint ? codepoint <= 2047 : false) {
          tmp_1 = 2;
        } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
          tmp_1 = 3;
        } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
          tmp_1 = 4;
        } else {
          malformedCodePoint(codepoint);
        }
        tmp$ret$0 = tmp_1;
      }
      if (tmp$ret$0 > freeSpace) {
        var tmp2 = index;
        index = tmp2 - 1 | 0;
        break $l$loop_0;
      }
      var tmp$ret$10;
      {
        var tmp0_putUtf8Char = resultPosition;
        var tmp_2;
        if (0 <= codepoint ? codepoint <= 127 : false) {
          {
            var tmp0_storeAt = toByte(codepoint);
            _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp0_storeAt);
          }
          tmp_2 = 1;
        } else if (128 <= codepoint ? codepoint <= 2047 : false) {
          var tmp$ret$1;
          {
            var tmp1_set = toByte(192 | codepoint >> 6 & 31);
            tmp$ret$1 = _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp1_set);
          }
          var tmp$ret$2;
          {
            var tmp2_set = tmp0_putUtf8Char + 1 | 0;
            var tmp3_set = toByte(128 | codepoint & 63);
            tmp$ret$2 = _this__u8e3s4.j19_1.setInt8(tmp2_set, tmp3_set);
          }
          tmp_2 = 2;
        } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
          var tmp$ret$3;
          {
            var tmp4_set = toByte(224 | codepoint >> 12 & 15);
            tmp$ret$3 = _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp4_set);
          }
          var tmp$ret$4;
          {
            var tmp5_set = tmp0_putUtf8Char + 1 | 0;
            var tmp6_set = toByte(128 | codepoint >> 6 & 63);
            tmp$ret$4 = _this__u8e3s4.j19_1.setInt8(tmp5_set, tmp6_set);
          }
          var tmp$ret$5;
          {
            var tmp7_set = tmp0_putUtf8Char + 2 | 0;
            var tmp8_set = toByte(128 | codepoint & 63);
            tmp$ret$5 = _this__u8e3s4.j19_1.setInt8(tmp7_set, tmp8_set);
          }
          tmp_2 = 3;
        } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
          var tmp$ret$6;
          {
            var tmp9_set = toByte(240 | codepoint >> 18 & 7);
            tmp$ret$6 = _this__u8e3s4.j19_1.setInt8(tmp0_putUtf8Char, tmp9_set);
          }
          var tmp$ret$7;
          {
            var tmp10_set = tmp0_putUtf8Char + 1 | 0;
            var tmp11_set = toByte(128 | codepoint >> 12 & 63);
            tmp$ret$7 = _this__u8e3s4.j19_1.setInt8(tmp10_set, tmp11_set);
          }
          var tmp$ret$8;
          {
            var tmp12_set = tmp0_putUtf8Char + 2 | 0;
            var tmp13_set = toByte(128 | codepoint >> 6 & 63);
            tmp$ret$8 = _this__u8e3s4.j19_1.setInt8(tmp12_set, tmp13_set);
          }
          var tmp$ret$9;
          {
            var tmp14_set = tmp0_putUtf8Char + 3 | 0;
            var tmp15_set = toByte(128 | codepoint & 63);
            tmp$ret$9 = _this__u8e3s4.j19_1.setInt8(tmp14_set, tmp15_set);
          }
          tmp_2 = 4;
        } else {
          malformedCodePoint(codepoint);
        }
        tmp$ret$10 = tmp_2;
      }
      var size = tmp$ret$10;
      resultPosition = resultPosition + size | 0;
    }
     while (true);
    var tmp$ret$11;
    {
      var tmp1_toUShort = index - from | 0;
      tmp$ret$11 = _UShort___init__impl__jigrne(toShort(tmp1_toUShort));
    }
    var tmp_3 = tmp$ret$11;
    var tmp$ret$12;
    {
      var tmp2_toUShort = resultPosition - dstOffset | 0;
      tmp$ret$12 = _UShort___init__impl__jigrne(toShort(tmp2_toUShort));
    }
    return _EncodeResult___init__impl__vkc0cy_0(tmp_3, tmp$ret$12);
  }
  function charactersSize(v) {
    var tmp;
    if (1 <= v ? v <= 127 : false) {
      tmp = 1;
    } else if (128 <= v ? v <= 2047 : false) {
      tmp = 2;
    } else if (2048 <= v ? v <= 65535 : false) {
      tmp = 3;
    } else if (65536 <= v ? v <= 1114111 : false) {
      tmp = 4;
    } else {
      malformedCodePoint(v);
    }
    return tmp;
  }
  function decodeASCII(_this__u8e3s4, consumer) {
    var tmp$ret$3;
    {
      {
      }
      var tmp$ret$2;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.b15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
        var inductionVariable = tmp1__anonymous__uwfjfc;
        if (inductionVariable < tmp2__anonymous__z9zvc9)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0__anonymous__q1qw7t.j19_1.getInt8(index);
              }
              tmp$ret$1 = tmp$ret$0;
            }
            var codepoint = tmp$ret$1 & 255;
            if ((codepoint & 128) === 128 ? true : !consumer(new Char(numberToChar(codepoint)))) {
              _this__u8e3s4.l1a(index - tmp1__anonymous__uwfjfc | 0);
              return false;
            }
          }
           while (inductionVariable < tmp2__anonymous__z9zvc9);
        tmp$ret$2 = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
      }
      var rc = tmp$ret$2;
      _this__u8e3s4.l1a(rc);
      tmp$ret$3 = rc;
    }
    return true;
  }
  function MalformedUTF8InputException(message) {
    Exception_init_$Init$(message, this);
    captureStack(this, MalformedUTF8InputException);
  }
  MalformedUTF8InputException.$metadata$ = classMeta('MalformedUTF8InputException', undefined, undefined, undefined, undefined, Exception.prototype);
  function decodeUTF8(_this__u8e3s4, consumer) {
    var byteCount = 0;
    var value = 0;
    var lastByteCount = 0;
    var tmp$ret$3;
    {
      {
      }
      var tmp$ret$2;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.b15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
        var inductionVariable = tmp1__anonymous__uwfjfc;
        if (inductionVariable < tmp2__anonymous__z9zvc9)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0__anonymous__q1qw7t.j19_1.getInt8(index);
              }
              tmp$ret$1 = tmp$ret$0;
            }
            var v = tmp$ret$1 & 255;
            if ((v & 128) === 0) {
              if (!(byteCount === 0)) {
                malformedByteCount(byteCount);
              }
              if (!consumer(new Char(numberToChar(v)))) {
                _this__u8e3s4.l1a(index - tmp1__anonymous__uwfjfc | 0);
                return -1;
              }
            } else if (byteCount === 0) {
              var mask = 128;
              value = v;
              var inductionVariable_0 = 1;
              if (inductionVariable_0 <= 6)
                $l$loop: do {
                  var i = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  if (!((value & mask) === 0)) {
                    value = value & ~mask;
                    mask = mask >> 1;
                    var tmp2 = byteCount;
                    byteCount = tmp2 + 1 | 0;
                  } else {
                    break $l$loop;
                  }
                }
                 while (inductionVariable_0 <= 6);
              lastByteCount = byteCount;
              var tmp3 = byteCount;
              byteCount = tmp3 - 1 | 0;
              if (lastByteCount > (tmp2__anonymous__z9zvc9 - index | 0)) {
                _this__u8e3s4.l1a(index - tmp1__anonymous__uwfjfc | 0);
                return lastByteCount;
              }
            } else {
              value = value << 6 | v & 127;
              var tmp4 = byteCount;
              byteCount = tmp4 - 1 | 0;
              if (byteCount === 0) {
                if (isBmpCodePoint(value)) {
                  if (!consumer(new Char(numberToChar(value)))) {
                    _this__u8e3s4.l1a(((index - tmp1__anonymous__uwfjfc | 0) - lastByteCount | 0) + 1 | 0);
                    return -1;
                  }
                } else if (!isValidCodePoint(value)) {
                  malformedCodePoint(value);
                } else {
                  if (!consumer(new Char(numberToChar(highSurrogate(value)))) ? true : !consumer(new Char(numberToChar(lowSurrogate(value))))) {
                    _this__u8e3s4.l1a(((index - tmp1__anonymous__uwfjfc | 0) - lastByteCount | 0) + 1 | 0);
                    return -1;
                  }
                }
                value = 0;
              }
            }
          }
           while (inductionVariable < tmp2__anonymous__z9zvc9);
        tmp$ret$2 = tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0;
      }
      var rc = tmp$ret$2;
      _this__u8e3s4.l1a(rc);
      tmp$ret$3 = rc;
    }
    return 0;
  }
  function malformedByteCount(byteCount) {
    throw new MalformedUTF8InputException('Expected ' + byteCount + ' more character bytes');
  }
  function isBmpCodePoint(cp) {
    return (cp >>> 16 | 0) === 0;
  }
  function isValidCodePoint(codePoint) {
    return codePoint <= 1114111;
  }
  function highSurrogate(cp) {
    return (cp >>> 10 | 0) + 55232 | 0;
  }
  function lowSurrogate(cp) {
    return (cp & 1023) + 56320 | 0;
  }
  function get_EmptyByteArray() {
    init_properties_Unsafe_kt_ayh6vg();
    return EmptyByteArray;
  }
  var EmptyByteArray;
  function prepareWriteHead(_this__u8e3s4, capacity, current) {
    init_properties_Unsafe_kt_ayh6vg();
    if (_this__u8e3s4 instanceof AbstractOutput) {
      if (!(current == null)) {
        _this__u8e3s4.i1c();
      }
      return _this__u8e3s4.h1c(capacity);
    }
    return prepareWriteHeadFallback(_this__u8e3s4, current);
  }
  function afterHeadWrite(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    if (_this__u8e3s4 instanceof AbstractOutput) {
      return _this__u8e3s4.i1c();
    }
    afterWriteHeadFallback(_this__u8e3s4, current);
  }
  function prepareReadFirstHead(_this__u8e3s4, minSize) {
    init_properties_Unsafe_kt_ayh6vg();
    if (_this__u8e3s4 instanceof AbstractInput) {
      return _this__u8e3s4.m1b(minSize);
    }
    if (_this__u8e3s4 instanceof ChunkBuffer) {
      var tmp;
      var tmp$ret$0;
      {
        var tmp0_canRead = _this__u8e3s4;
        tmp$ret$0 = tmp0_canRead.a15() > tmp0_canRead.b15();
      }
      if (tmp$ret$0) {
        tmp = _this__u8e3s4;
      } else {
        tmp = null;
      }
      return tmp;
    }
    return prepareReadHeadFallback(_this__u8e3s4, minSize);
  }
  function completeReadHead(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    if (current === _this__u8e3s4) {
      return Unit_getInstance();
    }
    if (_this__u8e3s4 instanceof AbstractInput) {
      var tmp$ret$0;
      {
        tmp$ret$0 = current.a15() > current.b15();
      }
      if (!tmp$ret$0) {
        _this__u8e3s4.o1b(current);
      } else {
        var tmp$ret$1;
        {
          tmp$ret$1 = current.z14_1 - current.c17() | 0;
        }
        var tmp = tmp$ret$1;
        Companion_getInstance_2();
        if (tmp < 8) {
          _this__u8e3s4.p1b(current);
        } else {
          _this__u8e3s4.n1a(current.b15());
        }
      }
      return Unit_getInstance();
    }
    completeReadHeadFallback(_this__u8e3s4, current);
  }
  function prepareWriteHeadFallback(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    if (!(current == null)) {
      writeFully$default_0(_this__u8e3s4, current, 0, 2, null);
      current.r1c();
      return current;
    }
    return Companion_getInstance_5().i11_1.n19();
  }
  function afterWriteHeadFallback(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    writeFully$default_0(_this__u8e3s4, current, 0, 2, null);
    current.x19(Companion_getInstance_5().i11_1);
  }
  function prepareReadHeadFallback(_this__u8e3s4, minSize) {
    init_properties_Unsafe_kt_ayh6vg();
    if (_this__u8e3s4.r17())
      return null;
    var buffer = Companion_getInstance_5().i11_1.n19();
    var tmp = buffer.d1a();
    var tmp_0 = toLong(buffer.a15());
    var tmp_1 = new Long(0, 0);
    var tmp_2 = toLong(minSize);
    var tmp$ret$0;
    {
      tmp$ret$0 = buffer.c17() - buffer.a15() | 0;
    }
    var copied = _this__u8e3s4.c1b(tmp, tmp_0, tmp_1, tmp_2, toLong(tmp$ret$0)).c7();
    buffer.s1b(copied);
    if (copied < minSize) {
      prematureEndOfStream(minSize);
    }
    return buffer;
  }
  function completeReadHeadFallback(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    var tmp = current.o1d();
    var tmp$ret$0;
    {
      tmp$ret$0 = current.c17() - current.a15() | 0;
    }
    var tmp_0 = tmp - tmp$ret$0 | 0;
    var tmp$ret$1;
    {
      tmp$ret$1 = current.a15() - current.b15() | 0;
    }
    var discardAmount = tmp_0 - tmp$ret$1 | 0;
    discardExact(_this__u8e3s4, discardAmount);
    current.x19(Companion_getInstance_5().i11_1);
  }
  function prepareReadNextHead(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    if (current === _this__u8e3s4) {
      var tmp;
      var tmp$ret$0;
      {
        var tmp0_canRead = _this__u8e3s4;
        tmp$ret$0 = tmp0_canRead.a15() > tmp0_canRead.b15();
      }
      if (tmp$ret$0) {
        tmp = _this__u8e3s4;
      } else {
        tmp = null;
      }
      return tmp;
    }
    if (_this__u8e3s4 instanceof AbstractInput) {
      return _this__u8e3s4.n1b(current);
    }
    return prepareNextReadHeadFallback(_this__u8e3s4, current);
  }
  function prepareNextReadHeadFallback(_this__u8e3s4, current) {
    init_properties_Unsafe_kt_ayh6vg();
    var tmp = current.o1d();
    var tmp$ret$0;
    {
      tmp$ret$0 = current.c17() - current.a15() | 0;
    }
    var tmp_0 = tmp - tmp$ret$0 | 0;
    var tmp$ret$1;
    {
      tmp$ret$1 = current.a15() - current.b15() | 0;
    }
    var discardAmount = tmp_0 - tmp$ret$1 | 0;
    discardExact(_this__u8e3s4, discardAmount);
    current.r1c();
    var tmp_1;
    if (_this__u8e3s4.r17()) {
      tmp_1 = true;
    } else {
      tmp_1 = peekTo$default(_this__u8e3s4, current, 0, 0, 0, 14, null) <= 0;
    }
    if (tmp_1) {
      current.x19(Companion_getInstance_5().i11_1);
      return null;
    }
    return current;
  }
  function unsafeAppend(_this__u8e3s4, builder) {
    init_properties_Unsafe_kt_ayh6vg();
    var builderSize = builder.g();
    var tmp0_elvis_lhs = builder.m12();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return 0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var builderHead = tmp;
    if ((builderSize <= get_PACKET_MAX_COPY_SIZE() ? builderHead.p1a() == null : false) ? _this__u8e3s4.h1b(builderHead) : false) {
      builder.q1c();
      return builderSize;
    }
    _this__u8e3s4.g1b(builderHead);
    return builderSize;
  }
  var properties_initialized_Unsafe_kt_o5mw48;
  function init_properties_Unsafe_kt_ayh6vg() {
    if (properties_initialized_Unsafe_kt_o5mw48) {
    } else {
      properties_initialized_Unsafe_kt_o5mw48 = true;
      EmptyByteArray = new Int8Array(0);
    }
  }
  function checkPeekTo(destination, offset, min, max) {
    {
      var tmp0_require = offset >= 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_18(offset);
        m.f1a();
      }
    }
    {
      var tmp1_require = min >= 0;
      {
      }
      if (!tmp1_require) {
        var m_0 = new _no_name_provided__qut3iv_19(min);
        m_0.f1a();
      }
    }
    {
      var tmp2_require = max >= min;
      {
      }
      if (!tmp2_require) {
        var m_1 = new _no_name_provided__qut3iv_20(max, min);
        m_1.f1a();
      }
    }
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = destination.c17() - destination.a15() | 0;
      }
      var tmp3_require = min <= tmp$ret$0;
      {
      }
      if (!tmp3_require) {
        var m_2 = new _no_name_provided__qut3iv_21(min, destination);
        m_2.f1a();
      }
    }
  }
  function _no_name_provided__qut3iv_18($offset) {
    this.q1f_1 = $offset;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_18.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "offset shouldn't be negative: " + this.q1f_1 + '.';
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_18.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_19($min) {
    this.r1f_1 = $min;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_19.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "min shouldn't be negative: " + this.r1f_1 + '.';
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_19.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_20($max, $min) {
    this.s1f_1 = $max;
    this.t1f_1 = $min;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_20.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "max should't be less than min: max = " + this.s1f_1 + ', min = ' + this.t1f_1 + '.';
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_20.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_21($min, $destination) {
    this.u1f_1 = $min;
    this.v1f_1 = $destination;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_21.prototype.f1a = function () {
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = this.v1f_1.c17() - this.v1f_1.a15() | 0;
      }
      tmp$ret$1 = 'Not enough free space in the destination buffer ' + ('to write the specified minimum number of bytes: min = ' + this.u1f_1 + ', free = ' + tmp$ret$0 + '.');
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$1);
  };
  _no_name_provided__qut3iv_21.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function trySuspend($this, $cont) {
    var tmp = new $trySuspendCOROUTINE$55($this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $sleepCOROUTINE$54(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.p1g_1 = _this__u8e3s4;
  }
  $sleepCOROUTINE$54.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.vg_1 = 1;
            suspendResult = trySuspend(this.p1g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            if (suspendResult) {
              return Unit_getInstance();
            } else {
              this.vg_1 = 2;
              continue $sm;
            }

            break;
          case 2:
            this.p1g_1.h12();
            return Unit_getInstance();
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $sleepCOROUTINE$54.$metadata$ = classMeta('$sleepCOROUTINE$54', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $trySuspendCOROUTINE$55(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.e1g_1 = _this__u8e3s4;
  }
  $trySuspendCOROUTINE$55.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 3;
            this.f1g_1 = false;
            var tmp_0 = this;
            tmp_0.g1g_1 = Job$default(null, 1, null);
            if (this.e1g_1.g12_1.atomicfu$compareAndSet(null, this.g1g_1)) {
              this.f1g_1 = true;
              this.vg_1 = 1;
              suspendResult = this.g1g_1.cp(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.vg_1 = 2;
              continue $sm;
            }

            break;
          case 1:
            this.vg_1 = 2;
            continue $sm;
          case 2:
            return this.f1g_1;
          case 3:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 3) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $trySuspendCOROUTINE$55.$metadata$ = classMeta('$trySuspendCOROUTINE$55', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function AwaitingSlot() {
    this.g12_1 = atomic$ref$1(null);
    makeShared(this);
  }
  AwaitingSlot.prototype.a14 = function ($cont) {
    var tmp = new $sleepCOROUTINE$54(this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  AwaitingSlot.prototype.h12 = function () {
    var tmp0_safe_receiver = this.g12_1.atomicfu$getAndSet(null);
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver.bp();
  };
  AwaitingSlot.prototype.m18 = function (cause) {
    var tmp0_elvis_lhs = this.g12_1.atomicfu$getAndSet(null);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var continuation = tmp;
    if (!(cause == null)) {
      continuation.oo(cause);
    } else {
      continuation.bp();
    }
  };
  AwaitingSlot.$metadata$ = classMeta('AwaitingSlot');
  function copyToSequentialImpl(_this__u8e3s4, dst, limit, $cont) {
    var tmp = new $copyToSequentialImplCOROUTINE$56(_this__u8e3s4, dst, limit, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function copyToTail(_this__u8e3s4, dst, limit, $cont) {
    var tmp = new $copyToTailCOROUTINE$57(_this__u8e3s4, dst, limit, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $copyToSequentialImplCOROUTINE$56(_this__u8e3s4, dst, limit, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.y1g_1 = _this__u8e3s4;
    this.z1g_1 = dst;
    this.a1h_1 = limit;
  }
  $copyToSequentialImplCOROUTINE$56.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 10;
            var tmp_0 = this;
            tmp_0.b1h_1 = !(this.y1g_1 === this.z1g_1);
            if (!this.b1h_1) {
              var message = 'Failed requirement.';
              throw IllegalArgumentException_init_$Create$(toString(message));
            }

            if (!(this.y1g_1.o12() == null)) {
              this.z1g_1.lw(this.y1g_1.o12());
              return new Long(0, 0);
            }

            this.c1h_1 = this.a1h_1;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            if (!(this.c1h_1.g1(new Long(0, 0)) > 0)) {
              this.vg_1 = 9;
              continue $sm;
            }

            this.vg_1 = 2;
            suspendResult = this.y1g_1.l18(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.d1h_1 = suspendResult;
            if (!this.d1h_1) {
              this.vg_1 = 9;
              continue $sm;
            } else {
              this.vg_1 = 3;
              continue $sm;
            }

            break;
          case 3:
            this.e1h_1 = this.y1g_1.n18(this.z1g_1, this.c1h_1);
            if (this.e1h_1.equals(new Long(0, 0))) {
              this.vg_1 = 6;
              suspendResult = copyToTail(this.y1g_1, this.z1g_1, this.c1h_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              if (this.z1g_1.z13() === 0) {
                this.vg_1 = 4;
                suspendResult = this.z1g_1.w14(1, this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.vg_1 = 5;
                continue $sm;
              }
            }

            break;
          case 4:
            this.vg_1 = 5;
            continue $sm;
          case 5:
            this.f1h_1 = this.e1h_1;
            this.vg_1 = 8;
            continue $sm;
          case 6:
            var tail = suspendResult;
            if (tail.equals(new Long(0, 0))) {
              this.vg_1 = 9;
              continue $sm;
            } else {
              this.vg_1 = 7;
              continue $sm;
            }

            break;
          case 7:
            this.f1h_1 = tail;
            this.vg_1 = 8;
            continue $sm;
          case 8:
            var copied = this.f1h_1;
            this.c1h_1 = this.c1h_1.g5(copied);
            this.vg_1 = 1;
            continue $sm;
          case 9:
            return this.a1h_1.g5(this.c1h_1);
          case 10:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 10) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $copyToSequentialImplCOROUTINE$56.$metadata$ = classMeta('$copyToSequentialImplCOROUTINE$56', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function $copyToTailCOROUTINE$57(_this__u8e3s4, dst, limit, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.o1h_1 = _this__u8e3s4;
    this.p1h_1 = dst;
    this.q1h_1 = limit;
  }
  $copyToTailCOROUTINE$57.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 9;
            this.r1h_1 = Companion_getInstance_5().i11_1.n19();
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.vg_1 = 2;
            continue $sm;
          case 2:
            this.wg_1 = 8;
            this.r1h_1.u1d(coerceAtMost_0(this.q1h_1, toLong(this.r1h_1.o1d())).c7());
            this.vg_1 = 3;
            suspendResult = this.o1h_1.f17(this.r1h_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.t1h_1 = suspendResult;
            if (this.t1h_1 === -1) {
              this.r1h_1.x19(Companion_getInstance_5().i11_1);
              this.s1h_1 = new Long(0, 0);
              this.wg_1 = 9;
              this.vg_1 = 6;
              continue $sm;
            } else {
              this.vg_1 = 4;
              continue $sm;
            }

            break;
          case 4:
            this.vg_1 = 5;
            suspendResult = this.p1h_1.i18(this.r1h_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.s1h_1 = toLong(this.t1h_1);
            this.wg_1 = 9;
            this.vg_1 = 6;
            var tmp_0 = this;
            continue $sm;
          case 6:
            var tmp_1 = this.s1h_1;
            this.r1h_1.x19(Companion_getInstance_5().i11_1);
            return tmp_1;
          case 7:
            this.r1h_1.x19(Companion_getInstance_5().i11_1);
            return Unit_getInstance();
          case 8:
            this.wg_1 = 9;
            var t = this.yg_1;
            this.r1h_1.x19(Companion_getInstance_5().i11_1);
            throw t;
          case 9:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 9) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $copyToTailCOROUTINE$57.$metadata$ = classMeta('$copyToTailCOROUTINE$57', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function ObjectPool() {
  }
  ObjectPool.$metadata$ = interfaceMeta('ObjectPool', [Closeable]);
  function NoPoolImpl() {
  }
  NoPoolImpl.prototype.t1e = function (instance) {
  };
  NoPoolImpl.prototype.fm = function () {
  };
  NoPoolImpl.$metadata$ = classMeta('NoPoolImpl', [ObjectPool]);
  function copyTo(_this__u8e3s4, dst, limit, $cont) {
    var tmp = _this__u8e3s4 instanceof ByteChannelSequentialBase ? _this__u8e3s4 : THROW_CCE();
    return copyToSequentialImpl(tmp, dst instanceof ByteChannelSequentialBase ? dst : THROW_CCE(), limit, $cont);
  }
  function ByteChannelJS$attachJob$lambda(this$0) {
    return function (cause) {
      this$0.b1i_1 = null;
      var tmp;
      if (!(cause == null)) {
        this$0.dn(cause);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ByteChannelJS(initial, autoFlush) {
    ByteChannelSequentialBase_init_$Init$(initial, autoFlush, null, 4, null, this);
    this.b1i_1 = null;
  }
  ByteChannelJS.prototype.h11 = function (job) {
    var tmp0_safe_receiver = this.b1i_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.bk(null, 1, null);
    }
    this.b1i_1 = job;
    job.xj(true, false, ByteChannelJS$attachJob$lambda(this), 2, null);
  };
  ByteChannelJS.prototype.toString = function () {
    return 'ByteChannel[' + this.b1i_1 + ', ' + hashCode(this) + ']';
  };
  ByteChannelJS.$metadata$ = classMeta('ByteChannelJS', undefined, undefined, undefined, undefined, ByteChannelSequentialBase.prototype);
  function ByteChannel_0(autoFlush) {
    return new ByteChannelJS(Companion_getInstance_10().e1d_1, autoFlush);
  }
  function ByteReadChannel_0(content, offset, length) {
    var tmp$ret$0;
    {
      tmp$ret$0 = content.length === 0;
    }
    if (tmp$ret$0)
      return Companion_getInstance_6().k1a();
    var head = Companion_getInstance_10().f1d_1.n19();
    var tail = head;
    var start = offset;
    var end = start + length | 0;
    $l$loop: while (true) {
      tail.q1a(8);
      var tmp$ret$2;
      {
        var tmp1_minOf = end - start | 0;
        var tmp$ret$1;
        {
          var tmp0__get_writeRemaining__z8qq3e = tail;
          tmp$ret$1 = tmp0__get_writeRemaining__z8qq3e.c17() - tmp0__get_writeRemaining__z8qq3e.a15() | 0;
        }
        var tmp2_minOf = tmp$ret$1;
        tmp$ret$2 = Math.min(tmp1_minOf, tmp2_minOf);
      }
      var size = tmp$ret$2;
      writeFully_0(tail instanceof Buffer ? tail : THROW_CCE(), content, start, size);
      start = start + size | 0;
      if (start === end)
        break $l$loop;
      var current = tail;
      tail = Companion_getInstance_10().f1d_1.n19();
      current.j1a(tail);
    }
    var tmp$ret$3;
    {
      var tmp3_apply = new ByteChannelJS(head, false);
      {
      }
      {
        close_0(tmp3_apply);
      }
      tmp$ret$3 = tmp3_apply;
    }
    return tmp$ret$3;
  }
  function ByteChannelSequentialBaseSharedState() {
    this.y11_1 = false;
    this.z11_1 = ByteOrder_BIG_ENDIAN_getInstance();
    this.a12_1 = ByteOrder_BIG_ENDIAN_getInstance();
    this.b12_1 = new Long(0, 0);
    this.c12_1 = new Long(0, 0);
    this.d12_1 = null;
    this.e12_1 = 0;
    this.f12_1 = Companion_getInstance_5().k1a();
  }
  ByteChannelSequentialBaseSharedState.$metadata$ = classMeta('ByteChannelSequentialBaseSharedState');
  function ByteReadChannel$Companion$Empty$delegate$lambda() {
    return function () {
      var tmp$ret$0;
      {
        var tmp0_apply = new ByteChannelJS(Companion_getInstance_10().e1d_1, false);
        {
        }
        {
          tmp0_apply.lw(null);
        }
        tmp$ret$0 = tmp0_apply;
      }
      return tmp$ret$0;
    };
  }
  function Companion_4() {
    Companion_instance_4 = this;
    var tmp = this;
    tmp.c1i_1 = lazy(ByteReadChannel$Companion$Empty$delegate$lambda());
  }
  Companion_4.prototype.k1a = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = Empty$factory();
      tmp$ret$0 = this.c1i_1.t();
    }
    return tmp$ret$0;
  };
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_6() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function ByteReadChannel_1() {
    Companion_getInstance_6();
  }
  ByteReadChannel_1.$metadata$ = interfaceMeta('ByteReadChannel');
  function Empty$factory() {
    return getPropertyCallableRef('Empty', 1, KProperty1, function (receiver) {
      return receiver.k1a();
    }, null);
  }
  function ByteWriteChannel() {
  }
  ByteWriteChannel.$metadata$ = interfaceMeta('ByteWriteChannel');
  function makeShared(_this__u8e3s4) {
  }
  function preventFreeze(_this__u8e3s4) {
  }
  function DefaultAllocator() {
    DefaultAllocator_instance = this;
  }
  DefaultAllocator.prototype.k19 = function (size) {
    return new Memory(new DataView(new ArrayBuffer(size)));
  };
  DefaultAllocator.prototype.l19 = function (instance) {
  };
  DefaultAllocator.$metadata$ = objectMeta('DefaultAllocator', [Allocator]);
  var DefaultAllocator_instance;
  function DefaultAllocator_getInstance() {
    if (DefaultAllocator_instance == null)
      new DefaultAllocator();
    return DefaultAllocator_instance;
  }
  function useMemory(_this__u8e3s4, offset, length, block) {
    {
    }
    var tmp$ret$0;
    {
      var tmp0_let = of(Companion_getInstance_7(), _this__u8e3s4, offset, length);
      {
      }
      tmp$ret$0 = block(tmp0_let);
    }
    return tmp$ret$0;
  }
  function of(_this__u8e3s4, array, offset, length) {
    var tmp$ret$0;
    {
      tmp$ret$0 = array;
    }
    var typedArray = tmp$ret$0;
    return of_0(Companion_getInstance_7(), typedArray, offset, length);
  }
  function of_0(_this__u8e3s4, view, offset, length) {
    return of_1(Companion_getInstance_7(), view.buffer, view.byteOffset + offset | 0, length);
  }
  function of_1(_this__u8e3s4, buffer, offset, length) {
    return new Memory(new DataView(buffer, offset, length));
  }
  function of$default(_this__u8e3s4, buffer, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = buffer.byteLength - offset | 0;
    return of_1(_this__u8e3s4, buffer, offset, length);
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.p1c_1 = new Memory(new DataView(new ArrayBuffer(0)));
  }
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_7() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function Memory(view) {
    Companion_getInstance_7();
    this.j19_1 = view;
  }
  Memory.prototype.d1i = function () {
    return this.j19_1;
  };
  Memory.prototype.g = function () {
    return toLong(this.j19_1.byteLength);
  };
  Memory.prototype.e1i = function () {
    return this.j19_1.byteLength;
  };
  Memory.prototype.f1i = function (index) {
    return this.j19_1.getInt8(index);
  };
  Memory.prototype.g1i = function (index, value) {
    this.j19_1.setInt8(index, value);
  };
  Memory.prototype.h1i = function (offset, length) {
    {
      var tmp0_require = offset >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = "offset shouldn't be negative: " + offset;
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    {
      var tmp1_require = length >= 0;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = "length shouldn't be negative: " + length;
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    var tmp = toLong(offset + length | 0);
    var tmp$ret$2;
    {
      tmp$ret$2 = toLong(this.j19_1.byteLength);
    }
    if (tmp.g1(tmp$ret$2) > 0) {
      var tmp$ret$3;
      {
        tmp$ret$3 = toLong(this.j19_1.byteLength);
      }
      throw IndexOutOfBoundsException_init_$Create$('offset + length > size: ' + offset + ' + ' + length + ' > ' + toString(tmp$ret$3));
    }
    return new Memory(new DataView(this.j19_1.buffer, this.j19_1.byteOffset + offset | 0, length));
  };
  Memory.prototype.m19 = function (destination, offset, length, destinationOffset) {
    var src = new Int8Array(this.j19_1.buffer, this.j19_1.byteOffset + offset | 0, length);
    var dst = new Int8Array(destination.j19_1.buffer, destination.j19_1.byteOffset + destinationOffset | 0, length);
    dst.set(src);
  };
  Memory.prototype.d1b = function (destination, offset, length, destinationOffset) {
    var tmp$ret$0;
    {
      if (offset.g1(toLong(IntCompanionObject_getInstance().w_1)) >= 0) {
        failLongToIntConversion(offset, 'offset');
      }
      tmp$ret$0 = offset.c7();
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      if (length.g1(toLong(IntCompanionObject_getInstance().w_1)) >= 0) {
        failLongToIntConversion(length, 'length');
      }
      tmp$ret$1 = length.c7();
    }
    var tmp_0 = tmp$ret$1;
    var tmp$ret$2;
    {
      if (destinationOffset.g1(toLong(IntCompanionObject_getInstance().w_1)) >= 0) {
        failLongToIntConversion(destinationOffset, 'destinationOffset');
      }
      tmp$ret$2 = destinationOffset.c7();
    }
    this.m19(destination, tmp, tmp_0, tmp$ret$2);
  };
  Memory.$metadata$ = classMeta('Memory');
  function copyTo_0(_this__u8e3s4, destination, offset, length, destinationOffset) {
    copyTo_1(_this__u8e3s4.buffer, destination, offset + _this__u8e3s4.byteOffset | 0, length, destinationOffset);
  }
  function copyTo_1(_this__u8e3s4, destination, offset, length, destinationOffset) {
    var from = new Int8Array(_this__u8e3s4, offset, length);
    var to = new Int8Array(destination.j19_1.buffer, destination.j19_1.byteOffset + destinationOffset | 0, length);
    to.set(from, 0);
  }
  function copyTo_2(_this__u8e3s4, destination, offset, length, destinationOffset) {
    var tmp$ret$0;
    {
      tmp$ret$0 = destination;
    }
    var to = tmp$ret$0;
    var from = new Int8Array(_this__u8e3s4.j19_1.buffer, _this__u8e3s4.j19_1.byteOffset + offset | 0, length);
    to.set(from, destinationOffset);
  }
  function loadShortAt(_this__u8e3s4, offset) {
    return _this__u8e3s4.j19_1.getInt16(offset, false);
  }
  function storeShortAt(_this__u8e3s4, offset, value) {
    _this__u8e3s4.j19_1.setInt16(offset, value, false);
  }
  function Companion_6() {
    Companion_instance_6 = this;
  }
  Companion_6.prototype.i1i = function (name) {
    switch (name) {
      case 'UTF-8':
      case 'utf-8':
      case 'UTF8':
      case 'utf8':
        return Charsets_getInstance().s1c_1;
    }
    var tmp;
    var tmp_0;
    switch (name) {
      case 'ISO-8859-1':
      case 'iso-8859-1':
        tmp_0 = true;
        break;
      default:
        var tmp$ret$3;
        {
          var tmp_1 = _Char___init__impl__6a9atx(95);
          var tmp_2 = _Char___init__impl__6a9atx(45);
          var tmp0_let = replace$default(name, tmp_1, tmp_2, false, 4, null);
          {
          }
          var tmp$ret$2;
          {
            var tmp_3;
            if (tmp0_let === 'iso-8859-1') {
              tmp_3 = true;
            } else {
              var tmp$ret$1;
              {
                var tmp$ret$0;
                {
                  tmp$ret$0 = tmp0_let;
                }
                tmp$ret$1 = tmp$ret$0.toLowerCase();
              }
              tmp_3 = tmp$ret$1 === 'iso-8859-1';
            }
            tmp$ret$2 = tmp_3;
          }
          tmp$ret$3 = tmp$ret$2;
        }

        tmp_0 = tmp$ret$3;
        break;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = name === 'latin1';
    }
    if (tmp) {
      return Charsets_getInstance().t1c_1;
    }
    throw IllegalArgumentException_init_$Create$('Charset ' + name + ' is not supported');
  };
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_8() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function Charset(_name) {
    Companion_getInstance_8();
    this.i1f_1 = _name;
  }
  Charset.$metadata$ = classMeta('Charset');
  function Charsets() {
    Charsets_instance = this;
    this.s1c_1 = new CharsetImpl('UTF-8');
    this.t1c_1 = new CharsetImpl('ISO-8859-1');
  }
  Charsets.prototype.j1i = function () {
    return this.s1c_1;
  };
  Charsets.$metadata$ = objectMeta('Charsets');
  var Charsets_instance;
  function Charsets_getInstance() {
    if (Charsets_instance == null)
      new Charsets();
    return Charsets_instance;
  }
  function CharsetEncoder(_charset) {
    this.k1i_1 = _charset;
  }
  CharsetEncoder.$metadata$ = classMeta('CharsetEncoder');
  function decodeExactBytes(_this__u8e3s4, input, inputLength) {
    if (inputLength === 0)
      return '';
    var tmp;
    if (input instanceof AbstractInput) {
      var tmp$ret$0;
      {
        var tmp0__get_headRemaining__hii8x7 = input;
        tmp$ret$0 = tmp0__get_headRemaining__hii8x7.g1a() - tmp0__get_headRemaining__hii8x7.h1a() | 0;
      }
      tmp = tmp$ret$0 >= inputLength;
    } else {
      tmp = false;
    }
    if (tmp) {
      var decoder = Decoder_0(get_charset(_this__u8e3s4).i1f_1, true);
      var head = input.f11();
      var view = input.z1a().j19_1;
      var tmp$ret$2;
      $l$block: {
        try {
          var tmp$ret$1;
          {
            var subView = (head.b15() === 0 ? inputLength === view.byteLength : false) ? view : new DataView(view.buffer, view.byteOffset + head.b15() | 0, inputLength);
            tmp$ret$1 = decoder.l1i(subView);
          }
          tmp$ret$2 = tmp$ret$1;
          break $l$block;
        } catch ($p) {
          if ($p instanceof Error) {
            var tmp0_elvis_lhs = $p.message;
            throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs == null ? 'no cause provided' : tmp0_elvis_lhs));
          } else {
            throw $p;
          }
        }
      }
      var text = tmp$ret$2;
      input.l1a(inputLength);
      return text;
    }
    return decodeExactBytesSlow(_this__u8e3s4, input, inputLength);
  }
  function CharsetDecoder(_charset) {
    this.m1i_1 = _charset;
  }
  CharsetDecoder.$metadata$ = classMeta('CharsetDecoder');
  function CharsetImpl(name) {
    Charset.call(this, name);
    this.o1i_1 = name;
  }
  CharsetImpl.prototype.j1f = function () {
    return new CharsetEncoderImpl(this);
  };
  CharsetImpl.prototype.k1f = function () {
    return new CharsetDecoderImpl(this);
  };
  CharsetImpl.prototype.toString = function () {
    return 'CharsetImpl(name=' + this.o1i_1 + ')';
  };
  CharsetImpl.prototype.hashCode = function () {
    return getStringHashCode(this.o1i_1);
  };
  CharsetImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetImpl))
      return false;
    var tmp0_other_with_cast = other instanceof CharsetImpl ? other : THROW_CCE();
    if (!(this.o1i_1 === tmp0_other_with_cast.o1i_1))
      return false;
    return true;
  };
  CharsetImpl.$metadata$ = classMeta('CharsetImpl', undefined, undefined, undefined, undefined, Charset.prototype);
  function get_charset(_this__u8e3s4) {
    return _this__u8e3s4.m1i_1;
  }
  function decodeExactBytesSlow(_this__u8e3s4, input, inputLength) {
    var decoder = Decoder_0(get_name(get_charset(_this__u8e3s4)), true);
    var inputRemaining = inputLength;
    var sb = StringBuilder_init_$Create$(inputLength);
    var tmp$ret$18;
    $l$block_4: {
      try {
        var tmp$ret$17;
        {
          var tmp$ret$0;
          $l$block: {
            var release = true;
            var tmp0_elvis_lhs = prepareReadFirstHead(input, 6);
            var tmp;
            if (tmp0_elvis_lhs == null) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            } else {
              tmp = tmp0_elvis_lhs;
            }
            var current = tmp;
            var size = 6;
            try {
              $l$loop: do {
                var tmp$ret$1;
                {
                  var tmp0__get_readRemaining__u3cy9h = current;
                  tmp$ret$1 = tmp0__get_readRemaining__u3cy9h.a15() - tmp0__get_readRemaining__u3cy9h.b15() | 0;
                }
                var before = tmp$ret$1;
                var after;
                if (before >= size) {
                  try {
                    var tmp$ret$8;
                    {
                      var tmp0__anonymous__q1qw7t = current;
                      var tmp$ret$2;
                      {
                        tmp$ret$2 = tmp0__anonymous__q1qw7t.a15() - tmp0__anonymous__q1qw7t.b15() | 0;
                      }
                      var chunkSize = tmp$ret$2;
                      var tmp$ret$3;
                      {
                        var tmp0_minOf = inputRemaining;
                        tmp$ret$3 = Math.min(chunkSize, tmp0_minOf);
                      }
                      var size_0 = tmp$ret$3;
                      var tmp_0;
                      if (tmp0__anonymous__q1qw7t.b15() === 0 ? tmp0__anonymous__q1qw7t.x14_1.j19_1.byteLength === size_0 : false) {
                        var tmp$ret$4;
                        $l$block_0: {
                          var tmp1_decodeStream = tmp0__anonymous__q1qw7t.x14_1.j19_1;
                          var tmp$ret$5;
                          {
                            try {
                              tmp$ret$4 = decoder.p1i(tmp1_decodeStream, decodeOptions(true));
                              break $l$block_0;
                            } catch ($p) {
                              if ($p instanceof Error) {
                                var tmp0_elvis_lhs_0 = $p.message;
                                throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs_0 == null ? 'no cause provided' : tmp0_elvis_lhs_0));
                              } else {
                                throw $p;
                              }
                            }
                          }
                        }
                        tmp_0 = tmp$ret$4;
                      } else {
                        var tmp$ret$6;
                        $l$block_1: {
                          var tmp2_decodeStream = new Int8Array(tmp0__anonymous__q1qw7t.x14_1.j19_1.buffer, tmp0__anonymous__q1qw7t.x14_1.j19_1.byteOffset + tmp0__anonymous__q1qw7t.b15() | 0, size_0);
                          var tmp$ret$7;
                          {
                            try {
                              tmp$ret$6 = decoder.p1i(tmp2_decodeStream, decodeOptions(true));
                              break $l$block_1;
                            } catch ($p) {
                              if ($p instanceof Error) {
                                var tmp0_elvis_lhs_1 = $p.message;
                                throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs_1 == null ? 'no cause provided' : tmp0_elvis_lhs_1));
                              } else {
                                throw $p;
                              }
                            }
                          }
                        }
                        tmp_0 = tmp$ret$6;
                      }
                      var text = tmp_0;
                      sb.pf(text);
                      tmp0__anonymous__q1qw7t.l1a(size_0);
                      inputRemaining = inputRemaining - size_0 | 0;
                      tmp$ret$8 = inputRemaining > 0 ? 6 : 0;
                    }
                    size = tmp$ret$8;
                  }finally {
                    var tmp$ret$9;
                    {
                      var tmp1__get_readRemaining__qliyus = current;
                      tmp$ret$9 = tmp1__get_readRemaining__qliyus.a15() - tmp1__get_readRemaining__qliyus.b15() | 0;
                    }
                    after = tmp$ret$9;
                  }
                } else {
                  after = before;
                }
                release = false;
                var tmp_1;
                if (after === 0) {
                  tmp_1 = prepareReadNextHead(input, current);
                } else {
                  var tmp_2;
                  if (after < size) {
                    tmp_2 = true;
                  } else {
                    var tmp$ret$10;
                    {
                      var tmp2__get_endGap__m31424 = current;
                      tmp$ret$10 = tmp2__get_endGap__m31424.z14_1 - tmp2__get_endGap__m31424.c17() | 0;
                    }
                    var tmp_3 = tmp$ret$10;
                    Companion_getInstance_2();
                    tmp_2 = tmp_3 < 8;
                  }
                  if (tmp_2) {
                    completeReadHead(input, current);
                    tmp_1 = prepareReadFirstHead(input, size);
                  } else {
                    tmp_1 = current;
                  }
                }
                var next = tmp_1;
                if (next == null) {
                  break $l$loop;
                }
                current = next;
                release = true;
              }
               while (size > 0);
            }finally {
              if (release) {
                completeReadHead(input, current);
              }
            }
          }
          if (inputRemaining > 0) {
            var tmp$ret$11;
            $l$block_2: {
              var release_0 = true;
              var tmp0_elvis_lhs_2 = prepareReadFirstHead(input, 1);
              var tmp_4;
              if (tmp0_elvis_lhs_2 == null) {
                tmp$ret$11 = Unit_getInstance();
                break $l$block_2;
              } else {
                tmp_4 = tmp0_elvis_lhs_2;
              }
              var current_0 = tmp_4;
              try {
                $l$loop_1: do {
                  var tmp$ret$16;
                  {
                    var tmp1__anonymous__uwfjfc = current_0;
                    var tmp$ret$12;
                    {
                      tmp$ret$12 = tmp1__anonymous__uwfjfc.a15() - tmp1__anonymous__uwfjfc.b15() | 0;
                    }
                    var chunkSize_0 = tmp$ret$12;
                    var tmp$ret$13;
                    {
                      var tmp0_minOf_0 = inputRemaining;
                      tmp$ret$13 = Math.min(chunkSize_0, tmp0_minOf_0);
                    }
                    var size_1 = tmp$ret$13;
                    var tmp_5;
                    if (tmp1__anonymous__uwfjfc.b15() === 0 ? tmp1__anonymous__uwfjfc.x14_1.j19_1.byteLength === size_1 : false) {
                      tmp_5 = decoder.l1i(tmp1__anonymous__uwfjfc.x14_1.j19_1);
                    } else {
                      var tmp$ret$14;
                      $l$block_3: {
                        var tmp1_decodeStream_0 = new Int8Array(tmp1__anonymous__uwfjfc.x14_1.j19_1.buffer, tmp1__anonymous__uwfjfc.x14_1.j19_1.byteOffset + tmp1__anonymous__uwfjfc.b15() | 0, size_1);
                        var tmp$ret$15;
                        {
                          try {
                            tmp$ret$14 = decoder.p1i(tmp1_decodeStream_0, decodeOptions(true));
                            break $l$block_3;
                          } catch ($p) {
                            if ($p instanceof Error) {
                              var tmp0_elvis_lhs_3 = $p.message;
                              throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs_3 == null ? 'no cause provided' : tmp0_elvis_lhs_3));
                            } else {
                              throw $p;
                            }
                          }
                        }
                      }
                      tmp_5 = tmp$ret$14;
                    }
                    var text_0 = tmp_5;
                    sb.pf(text_0);
                    tmp1__anonymous__uwfjfc.l1a(size_1);
                    inputRemaining = inputRemaining - size_1 | 0;
                    tmp$ret$16 = true;
                  }
                  if (!tmp$ret$16) {
                    break $l$loop_1;
                  }
                  release_0 = false;
                  var tmp1_elvis_lhs = prepareReadNextHead(input, current_0);
                  var tmp_6;
                  if (tmp1_elvis_lhs == null) {
                    break $l$loop_1;
                  } else {
                    tmp_6 = tmp1_elvis_lhs;
                  }
                  var next_0 = tmp_6;
                  current_0 = next_0;
                  release_0 = true;
                }
                 while (true);
              }finally {
                if (release_0) {
                  completeReadHead(input, current_0);
                }
              }
            }
          }
          tmp$ret$17 = sb.pf(decoder.q1i());
        }
        tmp$ret$18 = tmp$ret$17;
        break $l$block_4;
      } catch ($p) {
        if ($p instanceof Error) {
          var tmp0_elvis_lhs_4 = $p.message;
          throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs_4 == null ? 'no cause provided' : tmp0_elvis_lhs_4));
        } else {
          throw $p;
        }
      }
    }
    if (inputRemaining > 0) {
      throw new EOFException('Not enough bytes available: had only ' + (inputLength - inputRemaining | 0) + ' instead of ' + inputLength);
    }
    return sb.toString();
  }
  function CharsetEncoderImpl(charset) {
    CharsetEncoder.call(this, charset);
    this.s1i_1 = charset;
  }
  CharsetEncoderImpl.prototype.toString = function () {
    return 'CharsetEncoderImpl(charset=' + this.s1i_1 + ')';
  };
  CharsetEncoderImpl.prototype.hashCode = function () {
    return hashCode(this.s1i_1);
  };
  CharsetEncoderImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetEncoderImpl))
      return false;
    var tmp0_other_with_cast = other instanceof CharsetEncoderImpl ? other : THROW_CCE();
    if (!equals(this.s1i_1, tmp0_other_with_cast.s1i_1))
      return false;
    return true;
  };
  CharsetEncoderImpl.$metadata$ = classMeta('CharsetEncoderImpl', undefined, undefined, undefined, undefined, CharsetEncoder.prototype);
  function CharsetDecoderImpl(charset) {
    CharsetDecoder.call(this, charset);
    this.u1i_1 = charset;
  }
  CharsetDecoderImpl.prototype.toString = function () {
    return 'CharsetDecoderImpl(charset=' + this.u1i_1 + ')';
  };
  CharsetDecoderImpl.prototype.hashCode = function () {
    return hashCode(this.u1i_1);
  };
  CharsetDecoderImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetDecoderImpl))
      return false;
    var tmp0_other_with_cast = other instanceof CharsetDecoderImpl ? other : THROW_CCE();
    if (!equals(this.u1i_1, tmp0_other_with_cast.u1i_1))
      return false;
    return true;
  };
  CharsetDecoderImpl.$metadata$ = classMeta('CharsetDecoderImpl', undefined, undefined, undefined, undefined, CharsetDecoder.prototype);
  function get_name(_this__u8e3s4) {
    return _this__u8e3s4.i1f_1;
  }
  function encodeImpl(_this__u8e3s4, input, fromIndex, toIndex, dst) {
    {
      var tmp0_require = fromIndex <= toIndex;
      {
      }
      {
        {
        }
        if (!tmp0_require) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Failed requirement.';
          }
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
      }
    }
    if (equals(get_charset_0(_this__u8e3s4), Charsets_getInstance().t1c_1)) {
      return encodeISO88591(input, fromIndex, toIndex, dst);
    }
    {
      var tmp1_require = get_charset_0(_this__u8e3s4) === Charsets_getInstance().s1c_1;
      {
      }
      if (!tmp1_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Only UTF-8 encoding is supported in JS';
        }
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    var encoder = new TextEncoder();
    var start = fromIndex;
    var tmp$ret$2;
    {
      tmp$ret$2 = dst.c17() - dst.a15() | 0;
    }
    var dstRemaining = tmp$ret$2;
    $l$loop: while (start < toIndex ? dstRemaining > 0 : false) {
      var tmp$ret$3;
      {
        var tmp2_minOf = toIndex - start | 0;
        var tmp3_minOf = dstRemaining / 6 | 0;
        tmp$ret$3 = Math.min(tmp2_minOf, tmp3_minOf);
      }
      var numChars = coerceAtLeast(tmp$ret$3, 1);
      var dropLastChar = isHighSurrogate(charSequenceGet(input, (start + numChars | 0) - 1 | 0));
      var endIndexExclusive = (dropLastChar ? numChars === 1 : false) ? start + 2 | 0 : dropLastChar ? (start + numChars | 0) - 1 | 0 : start + numChars | 0;
      var tmp$ret$4;
      {
        var tmp4_substring = start;
        tmp$ret$4 = toString(charSequenceSubSequence(input, tmp4_substring, endIndexExclusive));
      }
      var array1 = encoder.encode(tmp$ret$4);
      if (array1.length > dstRemaining)
        break $l$loop;
      writeFully$default_1(dst, array1, 0, 0, 6, null);
      start = endIndexExclusive;
      dstRemaining = dstRemaining - array1.length | 0;
    }
    return start - fromIndex | 0;
  }
  function encodeComplete(_this__u8e3s4, dst) {
    return true;
  }
  function MalformedInputException(message) {
    extendThrowable(this, message, void 1);
    captureStack(this, MalformedInputException);
  }
  MalformedInputException.$metadata$ = classMeta('MalformedInputException', undefined, undefined, undefined, undefined, Error.prototype);
  function get_charset_0(_this__u8e3s4) {
    return _this__u8e3s4.k1i_1;
  }
  function encodeToByteArray(_this__u8e3s4, input, fromIndex, toIndex) {
    return encodeToByteArrayImpl1(_this__u8e3s4, input, fromIndex, toIndex);
  }
  function decode_0(_this__u8e3s4, input, dst, max) {
    var decoder = Decoder_0(get_name(get_charset(_this__u8e3s4)), true);
    var charactersCopied = 0;
    var tmp$ret$0;
    $l$block: {
      var release = true;
      var tmp0_elvis_lhs = prepareReadFirstHead(input, 1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      var size = 1;
      try {
        $l$loop: do {
          var tmp$ret$1;
          {
            var tmp0__get_readRemaining__u3cy9h = current;
            tmp$ret$1 = tmp0__get_readRemaining__u3cy9h.a15() - tmp0__get_readRemaining__u3cy9h.b15() | 0;
          }
          var before = tmp$ret$1;
          var after;
          if (before >= size) {
            try {
              var tmp$ret$3;
              $l$block_0: {
                var tmp0__anonymous__q1qw7t = current;
                var rem = max - charactersCopied | 0;
                var tmp$ret$2;
                {
                  tmp$ret$2 = tmp0__anonymous__q1qw7t.a15() - tmp0__anonymous__q1qw7t.b15() | 0;
                }
                var bufferSize = tmp$ret$2;
                if (rem < bufferSize) {
                  tmp$ret$3 = 0;
                  break $l$block_0;
                }
                var tmp$ret$11;
                {
                  {
                  }
                  var tmp$ret$10;
                  {
                    {
                    }
                    var tmp$ret$9;
                    {
                      var tmp0__anonymous__q1qw7t_0 = tmp0__anonymous__q1qw7t.x14_1;
                      var tmp1__anonymous__uwfjfc = tmp0__anonymous__q1qw7t.b15();
                      var tmp2__anonymous__z9zvc9 = tmp0__anonymous__q1qw7t.a15();
                      var tmp$ret$8;
                      {
                        var tmp3__anonymous__ufb84q = new Int8Array(tmp0__anonymous__q1qw7t_0.j19_1.buffer, tmp0__anonymous__q1qw7t_0.j19_1.byteOffset + tmp1__anonymous__uwfjfc | 0, tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0);
                        var tmp$ret$7;
                        $l$block_2: {
                          try {
                            var tmp$ret$6;
                            {
                              var tmp$ret$4;
                              $l$block_1: {
                                var tmp$ret$5;
                                {
                                  try {
                                    tmp$ret$4 = decoder.p1i(tmp3__anonymous__ufb84q, decodeOptions(true));
                                    break $l$block_1;
                                  } catch ($p) {
                                    if ($p instanceof Error) {
                                      var tmp0_elvis_lhs_0 = $p.message;
                                      throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs_0 == null ? 'no cause provided' : tmp0_elvis_lhs_0));
                                    } else {
                                      throw $p;
                                    }
                                  }
                                }
                              }
                              tmp$ret$6 = tmp$ret$4;
                            }
                            tmp$ret$7 = tmp$ret$6;
                            break $l$block_2;
                          } catch ($p) {
                            if ($p instanceof Error) {
                              var tmp0_elvis_lhs_1 = $p.message;
                              throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs_1 == null ? 'no cause provided' : tmp0_elvis_lhs_1));
                            } else {
                              throw $p;
                            }
                          }
                        }
                        var decodedText = tmp$ret$7;
                        dst.b(decodedText);
                        charactersCopied = charactersCopied + decodedText.length | 0;
                        tmp$ret$8 = tmp3__anonymous__ufb84q.byteLength;
                      }
                      tmp$ret$9 = tmp$ret$8;
                    }
                    var rc = tmp$ret$9;
                    tmp0__anonymous__q1qw7t.l1a(rc);
                    tmp$ret$10 = rc;
                  }
                  tmp$ret$11 = tmp$ret$10;
                }
                var tmp_0;
                if (charactersCopied === max) {
                  var tmp_1;
                  try {
                    tmp_1 = decoder.q1i();
                  } catch ($p) {
                    var tmp_2;
                    {
                      tmp_2 = '';
                    }
                    tmp_1 = tmp_2;
                  }
                  var tail = tmp_1;
                  var tmp$ret$12;
                  {
                    tmp$ret$12 = charSequenceLength(tail) > 0;
                  }
                  if (tmp$ret$12) {
                    tmp0__anonymous__q1qw7t.s1d(bufferSize);
                  }
                  tmp_0 = 0;
                } else if (charactersCopied < max) {
                  tmp_0 = get_MAX_CHARACTERS_SIZE_IN_BYTES();
                } else {
                  tmp_0 = 0;
                }
                tmp$ret$3 = tmp_0;
              }
              size = tmp$ret$3;
            }finally {
              var tmp$ret$13;
              {
                var tmp1__get_readRemaining__qliyus = current;
                tmp$ret$13 = tmp1__get_readRemaining__qliyus.a15() - tmp1__get_readRemaining__qliyus.b15() | 0;
              }
              after = tmp$ret$13;
            }
          } else {
            after = before;
          }
          release = false;
          var tmp_3;
          if (after === 0) {
            tmp_3 = prepareReadNextHead(input, current);
          } else {
            var tmp_4;
            if (after < size) {
              tmp_4 = true;
            } else {
              var tmp$ret$14;
              {
                var tmp2__get_endGap__m31424 = current;
                tmp$ret$14 = tmp2__get_endGap__m31424.z14_1 - tmp2__get_endGap__m31424.c17() | 0;
              }
              var tmp_5 = tmp$ret$14;
              Companion_getInstance_2();
              tmp_4 = tmp_5 < 8;
            }
            if (tmp_4) {
              completeReadHead(input, current);
              tmp_3 = prepareReadFirstHead(input, size);
            } else {
              tmp_3 = current;
            }
          }
          var next = tmp_3;
          if (next == null) {
            break $l$loop;
          }
          current = next;
          release = true;
        }
         while (size > 0);
      }finally {
        if (release) {
          completeReadHead(input, current);
        }
      }
    }
    if (charactersCopied < max) {
      var size_0 = 1;
      var tmp$ret$15;
      $l$block_3: {
        var release_0 = true;
        var tmp0_elvis_lhs_2 = prepareReadFirstHead(input, 1);
        var tmp_6;
        if (tmp0_elvis_lhs_2 == null) {
          tmp$ret$15 = Unit_getInstance();
          break $l$block_3;
        } else {
          tmp_6 = tmp0_elvis_lhs_2;
        }
        var current_0 = tmp_6;
        var size_1 = 1;
        try {
          $l$loop_0: do {
            var tmp$ret$16;
            {
              var tmp0__get_readRemaining__u3cy9h_0 = current_0;
              tmp$ret$16 = tmp0__get_readRemaining__u3cy9h_0.a15() - tmp0__get_readRemaining__u3cy9h_0.b15() | 0;
            }
            var before_0 = tmp$ret$16;
            var after_0;
            if (before_0 >= size_1) {
              try {
                var tmp$ret$21;
                {
                  var tmp1__anonymous__uwfjfc_0 = current_0;
                  var tmp$ret$20;
                  {
                    {
                    }
                    var tmp$ret$19;
                    {
                      {
                      }
                      var tmp$ret$18;
                      {
                        var tmp0__anonymous__q1qw7t_1 = tmp1__anonymous__uwfjfc_0.x14_1;
                        var tmp1__anonymous__uwfjfc_1 = tmp1__anonymous__uwfjfc_0.b15();
                        var tmp2__anonymous__z9zvc9_0 = tmp1__anonymous__uwfjfc_0.a15();
                        var tmp$ret$17;
                        {
                          var tmp3__anonymous__ufb84q_0 = new Int8Array(tmp0__anonymous__q1qw7t_1.j19_1.buffer, tmp0__anonymous__q1qw7t_1.j19_1.byteOffset + tmp1__anonymous__uwfjfc_1 | 0, tmp2__anonymous__z9zvc9_0 - tmp1__anonymous__uwfjfc_1 | 0);
                          var result = decodeBufferImpl(tmp3__anonymous__ufb84q_0, decoder, max - charactersCopied | 0);
                          dst.b(result.v1i_1);
                          charactersCopied = charactersCopied + result.v1i_1.length | 0;
                          tmp$ret$17 = result.w1i_1;
                        }
                        tmp$ret$18 = tmp$ret$17;
                      }
                      var rc_0 = tmp$ret$18;
                      tmp1__anonymous__uwfjfc_0.l1a(rc_0);
                      tmp$ret$19 = rc_0;
                    }
                    tmp$ret$20 = tmp$ret$19;
                  }
                  var rc_1 = tmp$ret$20;
                  if (rc_1 > 0)
                    size_0 = 1;
                  else if (size_0 === get_MAX_CHARACTERS_SIZE_IN_BYTES())
                    size_0 = 0;
                  else {
                    var tmp0 = size_0;
                    size_0 = tmp0 + 1 | 0;
                  }
                  tmp$ret$21 = size_0;
                }
                size_1 = tmp$ret$21;
              }finally {
                var tmp$ret$22;
                {
                  var tmp1__get_readRemaining__qliyus_0 = current_0;
                  tmp$ret$22 = tmp1__get_readRemaining__qliyus_0.a15() - tmp1__get_readRemaining__qliyus_0.b15() | 0;
                }
                after_0 = tmp$ret$22;
              }
            } else {
              after_0 = before_0;
            }
            release_0 = false;
            var tmp_7;
            if (after_0 === 0) {
              tmp_7 = prepareReadNextHead(input, current_0);
            } else {
              var tmp_8;
              if (after_0 < size_1) {
                tmp_8 = true;
              } else {
                var tmp$ret$23;
                {
                  var tmp2__get_endGap__m31424_0 = current_0;
                  tmp$ret$23 = tmp2__get_endGap__m31424_0.z14_1 - tmp2__get_endGap__m31424_0.c17() | 0;
                }
                var tmp_9 = tmp$ret$23;
                Companion_getInstance_2();
                tmp_8 = tmp_9 < 8;
              }
              if (tmp_8) {
                completeReadHead(input, current_0);
                tmp_7 = prepareReadFirstHead(input, size_1);
              } else {
                tmp_7 = current_0;
              }
            }
            var next_0 = tmp_7;
            if (next_0 == null) {
              break $l$loop_0;
            }
            current_0 = next_0;
            release_0 = true;
          }
           while (size_1 > 0);
        }finally {
          if (release_0) {
            completeReadHead(input, current_0);
          }
        }
      }
    }
    return charactersCopied;
  }
  function get_MAX_CHARACTERS_SIZE_IN_BYTES() {
    return MAX_CHARACTERS_SIZE_IN_BYTES;
  }
  var MAX_CHARACTERS_SIZE_IN_BYTES;
  function DecodeBufferResult(charactersDecoded, bytesConsumed) {
    this.v1i_1 = charactersDecoded;
    this.w1i_1 = bytesConsumed;
  }
  DecodeBufferResult.prototype.x1i = function () {
    return this.v1i_1;
  };
  DecodeBufferResult.prototype.y1i = function () {
    return this.w1i_1;
  };
  DecodeBufferResult.prototype.toString = function () {
    return 'DecodeBufferResult(charactersDecoded=' + this.v1i_1 + ', bytesConsumed=' + this.w1i_1 + ')';
  };
  DecodeBufferResult.prototype.hashCode = function () {
    var result = getStringHashCode(this.v1i_1);
    result = imul(result, 31) + this.w1i_1 | 0;
    return result;
  };
  DecodeBufferResult.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DecodeBufferResult))
      return false;
    var tmp0_other_with_cast = other instanceof DecodeBufferResult ? other : THROW_CCE();
    if (!(this.v1i_1 === tmp0_other_with_cast.v1i_1))
      return false;
    if (!(this.w1i_1 === tmp0_other_with_cast.w1i_1))
      return false;
    return true;
  };
  DecodeBufferResult.$metadata$ = classMeta('DecodeBufferResult');
  function decodeBufferImpl(_this__u8e3s4, nativeDecoder, maxCharacters) {
    if (maxCharacters === 0) {
      return new DecodeBufferResult('', 0);
    }
    try {
      var sizeInBytes = coerceAtMost(maxCharacters, _this__u8e3s4.byteLength);
      var text = nativeDecoder.l1i(_this__u8e3s4.subarray(0, sizeInBytes));
      if (text.length <= maxCharacters) {
        return new DecodeBufferResult(text, sizeInBytes);
      }
    } catch ($p) {
    }
    return decodeBufferImplSlow(_this__u8e3s4, nativeDecoder, maxCharacters);
  }
  function decodeBufferImplSlow(_this__u8e3s4, nativeDecoder, maxCharacters) {
    var maxBytes = coerceAtMost(maxCharacters >= 268435455 ? IntCompanionObject_getInstance().w_1 : imul(maxCharacters, 8), _this__u8e3s4.byteLength);
    var sizeInBytes = maxBytes;
    while (sizeInBytes > 8) {
      try {
        var text = nativeDecoder.l1i(_this__u8e3s4.subarray(0, sizeInBytes));
        if (text.length <= maxCharacters) {
          return new DecodeBufferResult(text, sizeInBytes);
        }
      } catch ($p) {
      }
      sizeInBytes = sizeInBytes / 2 | 0;
    }
    sizeInBytes = 8;
    while (sizeInBytes > 0) {
      try {
        var text_0 = nativeDecoder.l1i(_this__u8e3s4.subarray(0, sizeInBytes));
        if (text_0.length <= maxCharacters) {
          return new DecodeBufferResult(text_0, sizeInBytes);
        }
      } catch ($p) {
      }
      var tmp0 = sizeInBytes;
      sizeInBytes = tmp0 - 1 | 0;
    }
    var tmp$ret$1;
    $l$block: {
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = nativeDecoder.l1i(_this__u8e3s4);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          var tmp0_elvis_lhs = $p.message;
          throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs == null ? 'no cause provided' : tmp0_elvis_lhs));
        } else {
          throw $p;
        }
      }
    }
    throw new MalformedInputException('Unable to decode buffer');
  }
  function encodeISO88591(input, fromIndex, toIndex, dst) {
    if (fromIndex >= toIndex)
      return 0;
    var tmp$ret$4;
    {
      {
      }
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0__anonymous__q1qw7t = dst.x14_1;
          var tmp1__anonymous__uwfjfc = dst.a15();
          var tmp2__anonymous__z9zvc9 = dst.c17();
          var tmp$ret$1;
          {
            var tmp3__anonymous__ufb84q = tmp0__anonymous__q1qw7t.h1i(tmp1__anonymous__uwfjfc, tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0).j19_1;
            var i8 = new Int8Array(tmp3__anonymous__ufb84q.buffer, tmp3__anonymous__ufb84q.byteOffset, tmp3__anonymous__ufb84q.byteLength);
            var writeIndex = 0;
            var inductionVariable = fromIndex;
            if (inductionVariable < toIndex)
              do {
                var index = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                var character = Char__toInt_impl_vasixd(charSequenceGet(input, index));
                if (character > 255) {
                  failedToMapError(character);
                }
                {
                  var tmp1 = writeIndex;
                  writeIndex = tmp1 + 1 | 0;
                  var tmp0_set = tmp1;
                  var tmp1_set = toByte(character);
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = i8;
                  }
                  tmp$ret$0[tmp0_set] = tmp1_set;
                }
              }
               while (inductionVariable < toIndex);
            tmp$ret$1 = writeIndex;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        var rc = tmp$ret$2;
        dst.s1b(rc);
        tmp$ret$3 = rc;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return toIndex - fromIndex | 0;
  }
  function failedToMapError(ch) {
    throw new MalformedInputException('The character with unicode point ' + ch + " couldn't be mapped to ISO-8859-1 character");
  }
  function shared(value) {
    return new shared$1(value);
  }
  function threadLocal(value) {
    var tmp = threadLocal$lambda(value);
    return new sam$kotlin_properties_ReadOnlyProperty$0(tmp);
  }
  function shared$1($value) {
    this.z1i_1 = $value;
  }
  shared$1.prototype.a1j = function (thisRef, property) {
    return this.z1i_1;
  };
  shared$1.prototype.l4 = function (thisRef, property) {
    return this.a1j(isObject(thisRef) ? thisRef : THROW_CCE(), property);
  };
  shared$1.prototype.b1j = function (thisRef, property, value) {
    this.z1i_1 = value;
  };
  shared$1.prototype.m4 = function (thisRef, property, value) {
    var tmp = isObject(thisRef) ? thisRef : THROW_CCE();
    return this.b1j(tmp, property, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  shared$1.$metadata$ = classMeta(undefined, [ReadWriteProperty]);
  function sam$kotlin_properties_ReadOnlyProperty$0(function_0) {
    this.c1j_1 = function_0;
  }
  sam$kotlin_properties_ReadOnlyProperty$0.prototype.l4 = function (thisRef, property) {
    return this.c1j_1(thisRef, property);
  };
  sam$kotlin_properties_ReadOnlyProperty$0.$metadata$ = classMeta('sam$kotlin_properties_ReadOnlyProperty$0', [ReadOnlyProperty]);
  function threadLocal$lambda($value) {
    return function (thisRef, property) {
      return $value;
    };
  }
  function AbstractInputSharedState(head, remaining) {
    this.y19_1 = head;
    this.z19_1 = this.y19_1.d1a();
    this.a1a_1 = this.y19_1.b15();
    this.b1a_1 = this.y19_1.a15();
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_minus = this.b1a_1 - this.a1a_1 | 0;
      tmp$ret$0 = remaining.g5(toLong(tmp0_minus));
    }
    tmp.c1a_1 = tmp$ret$0;
  }
  AbstractInputSharedState.$metadata$ = classMeta('AbstractInputSharedState');
  function AbstractOutputSharedState() {
    this.u1b_1 = null;
    this.v1b_1 = null;
    this.w1b_1 = Companion_getInstance_7().p1c_1;
    this.x1b_1 = 0;
    this.y1b_1 = 0;
    this.z1b_1 = 0;
    this.a1c_1 = 0;
  }
  AbstractOutputSharedState.$metadata$ = classMeta('AbstractOutputSharedState');
  function BufferSharedState(limit) {
    this.v1c_1 = limit;
    this.w1c_1 = 0;
    this.x1c_1 = 0;
    this.y1c_1 = 0;
    this.z1c_1 = null;
  }
  BufferSharedState.$metadata$ = classMeta('BufferSharedState');
  var ByteOrder_BIG_ENDIAN_instance;
  var ByteOrder_LITTLE_ENDIAN_instance;
  function Companion_7() {
    Companion_instance_7 = this;
    var buffer = new ArrayBuffer(4);
    var arr = new Int32Array(buffer);
    var view = new DataView(buffer);
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = arr;
      }
      tmp$ret$0[0] = 287454020;
    }
    this.d1j_1 = view.getInt32(0, true) === 287454020 ? ByteOrder_LITTLE_ENDIAN_getInstance() : ByteOrder_BIG_ENDIAN_getInstance();
  }
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_9() {
    ByteOrder_initEntries();
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  var ByteOrder_entriesInitialized;
  function ByteOrder_initEntries() {
    if (ByteOrder_entriesInitialized)
      return Unit_getInstance();
    ByteOrder_entriesInitialized = true;
    ByteOrder_BIG_ENDIAN_instance = new ByteOrder('BIG_ENDIAN', 0);
    ByteOrder_LITTLE_ENDIAN_instance = new ByteOrder('LITTLE_ENDIAN', 1);
    Companion_getInstance_9();
  }
  function ByteOrder(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ByteOrder.$metadata$ = classMeta('ByteOrder', undefined, undefined, undefined, undefined, Enum.prototype);
  function ByteOrder_BIG_ENDIAN_getInstance() {
    ByteOrder_initEntries();
    return ByteOrder_BIG_ENDIAN_instance;
  }
  function ByteOrder_LITTLE_ENDIAN_getInstance() {
    ByteOrder_initEntries();
    return ByteOrder_LITTLE_ENDIAN_instance;
  }
  function Closeable() {
  }
  Closeable.$metadata$ = interfaceMeta('Closeable');
  function Input() {
  }
  Input.$metadata$ = interfaceMeta('Input', [Closeable]);
  function _no_name_provided__qut3iv_22($instance) {
    this.e1j_1 = $instance;
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_22.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = 'unable to recycle buffer: buffer view is in use (refCount = ' + this.e1j_1.o1e() + ')';
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_22.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function _no_name_provided__qut3iv_23() {
    RequireFailureCapture.call(this);
  }
  _no_name_provided__qut3iv_23.prototype.f1a = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = "Unable to recycle buffer view: view copy shouldn't be recycled";
    }
    throw IllegalArgumentException_init_$Create$(tmp$ret$0);
  };
  _no_name_provided__qut3iv_23.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, RequireFailureCapture.prototype);
  function IoBuffer$Companion$Pool$1() {
    DefaultPool.call(this, get_BUFFER_VIEW_POOL_SIZE());
  }
  IoBuffer$Companion$Pool$1.prototype.f1e = function () {
    return new IoBuffer(DefaultAllocator_getInstance().k19(get_DEFAULT_BUFFER_SIZE()), null, this);
  };
  IoBuffer$Companion$Pool$1.prototype.q1e = function (instance) {
    var tmp$ret$0;
    {
      var tmp0_apply = DefaultPool.prototype.r1e.call(this, instance);
      {
      }
      {
        tmp0_apply.s1e();
        tmp0_apply.z1d();
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  IoBuffer$Companion$Pool$1.prototype.r1e = function (instance) {
    return this.q1e(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  IoBuffer$Companion$Pool$1.prototype.m1e = function (instance) {
    DefaultPool.prototype.n1e.call(this, instance);
    {
      var tmp0_require = instance.o1e() === 0;
      {
      }
      if (!tmp0_require) {
        var m = new _no_name_provided__qut3iv_22(instance);
        m.f1a();
      }
    }
    {
      var tmp1_require = instance.p1e() == null;
      {
      }
      if (!tmp1_require) {
        var m_0 = new _no_name_provided__qut3iv_23();
        m_0.f1a();
      }
    }
  };
  IoBuffer$Companion$Pool$1.prototype.n1e = function (instance) {
    return this.m1e(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  IoBuffer$Companion$Pool$1.prototype.g1e = function (instance) {
    DefaultAllocator_getInstance().l19(instance.d1a());
    instance.l1e();
  };
  IoBuffer$Companion$Pool$1.prototype.k1e = function (instance) {
    return this.g1e(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  IoBuffer$Companion$Pool$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, DefaultPool.prototype);
  function IoBuffer$Companion$NoPool$1() {
    NoPoolImpl.call(this);
  }
  IoBuffer$Companion$NoPool$1.prototype.n19 = function () {
    return new IoBuffer(DefaultAllocator_getInstance().k19(get_DEFAULT_BUFFER_SIZE()), null, this);
  };
  IoBuffer$Companion$NoPool$1.prototype.i1j = function (instance) {
    DefaultAllocator_getInstance().l19(instance.d1a());
  };
  IoBuffer$Companion$NoPool$1.prototype.t1e = function (instance) {
    return this.i1j(instance instanceof IoBuffer ? instance : THROW_CCE());
  };
  IoBuffer$Companion$NoPool$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, NoPoolImpl.prototype);
  function Companion_8() {
    Companion_instance_8 = this;
    this.c1d_1 = new ArrayBuffer(0);
    this.d1d_1 = new DataView(this.c1d_1);
    this.e1d_1 = new IoBuffer(Companion_getInstance_7().p1c_1, null, EmptyBufferPoolImpl_getInstance());
    var tmp = this;
    tmp.f1d_1 = new IoBuffer$Companion$Pool$1();
    var tmp_0 = this;
    tmp_0.g1d_1 = new IoBuffer$Companion$NoPool$1();
    this.h1d_1 = EmptyBufferPoolImpl_getInstance();
  }
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_10() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function IoBuffer(memory, origin, parentPool) {
    Companion_getInstance_10();
    ChunkBuffer.call(this, memory, origin, (!(parentPool == null) ? isInterface(parentPool, ObjectPool) : false) ? parentPool : null);
  }
  IoBuffer.prototype.r17 = function () {
    return this.a15() === this.b15();
  };
  IoBuffer.prototype.c1b = function (destination, destinationOffset, offset, min, max) {
    return peekTo(this instanceof Buffer ? this : THROW_CCE(), destination, destinationOffset, offset, min, max);
  };
  IoBuffer.prototype.lf = function (csq, start, end) {
    var tmp0_elvis_lhs = csq;
    var idx = appendChars(this, tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, start, end);
    if (!(idx === end))
      throw IllegalStateException_init_$Create$('Not enough free space to append char sequence');
    return this;
  };
  IoBuffer.prototype.b = function (csq) {
    return csq == null ? this.b('null') : this.lf(csq, 0, charSequenceLength(csq));
  };
  IoBuffer.prototype.b5 = function (c) {
    append(this instanceof Buffer ? this : THROW_CCE(), c);
    return this;
  };
  IoBuffer.prototype.e1b = function () {
    throw UnsupportedOperationException_init_$Create$('close for buffer view is not supported');
  };
  IoBuffer.prototype.toString = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = this.a15() - this.b15() | 0;
    }
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = this.c17() - this.a15() | 0;
    }
    var tmp_0 = tmp$ret$1;
    var tmp_1 = this.q1b();
    var tmp$ret$2;
    {
      tmp$ret$2 = this.z14_1 - this.c17() | 0;
    }
    return 'Buffer[readable = ' + tmp + ', writable = ' + tmp_0 + ', startGap = ' + tmp_1 + ', endGap = ' + tmp$ret$2 + ']';
  };
  IoBuffer.$metadata$ = classMeta('IoBuffer', [Input, Output], undefined, undefined, undefined, ChunkBuffer.prototype);
  function writeFully_4(_this__u8e3s4, src, offset, length) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
        if ((tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0) < length) {
          throw new InsufficientSpaceException('Not enough free space to write ' + length + ' bytes');
        }
        copyTo_0(src, tmp0__anonymous__q1qw7t, offset, length, tmp1__anonymous__uwfjfc);
        tmp$ret$0 = length;
      }
      var rc = tmp$ret$0;
      _this__u8e3s4.s1b(rc);
      tmp$ret$1 = rc;
    }
  }
  function writeFully$default_1(_this__u8e3s4, src, offset, length, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = src.byteLength - offset | 0;
    return writeFully_4(_this__u8e3s4, src, offset, length);
  }
  function writeDirect(_this__u8e3s4, block) {
    {
    }
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.a15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.c17();
        tmp$ret$0 = block(tmp0__anonymous__q1qw7t.h1i(tmp1__anonymous__uwfjfc, tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0).j19_1);
      }
      var rc = tmp$ret$0;
      _this__u8e3s4.s1b(rc);
      tmp$ret$1 = rc;
    }
    return tmp$ret$1;
  }
  function readDirectInt8Array(_this__u8e3s4, block) {
    {
    }
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0__anonymous__q1qw7t = _this__u8e3s4.x14_1;
        var tmp1__anonymous__uwfjfc = _this__u8e3s4.b15();
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4.a15();
        tmp$ret$0 = block(new Int8Array(tmp0__anonymous__q1qw7t.j19_1.buffer, tmp0__anonymous__q1qw7t.j19_1.byteOffset + tmp1__anonymous__uwfjfc | 0, tmp2__anonymous__z9zvc9 - tmp1__anonymous__uwfjfc | 0));
      }
      var rc = tmp$ret$0;
      _this__u8e3s4.l1a(rc);
      tmp$ret$1 = rc;
    }
    return tmp$ret$1;
  }
  function Output() {
  }
  Output.$metadata$ = interfaceMeta('Output', [Appendable, Closeable]);
  function get_PACKET_MAX_COPY_SIZE() {
    return PACKET_MAX_COPY_SIZE;
  }
  var PACKET_MAX_COPY_SIZE;
  function get_BUFFER_VIEW_POOL_SIZE() {
    return BUFFER_VIEW_POOL_SIZE;
  }
  var BUFFER_VIEW_POOL_SIZE;
  function BytePacketBuilder_0(headerSizeHint) {
    return new BytePacketBuilder(headerSizeHint, Companion_getInstance_5().i11_1);
  }
  function BytePacketBuilder$default(headerSizeHint, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      headerSizeHint = 0;
    return BytePacketBuilder_0(headerSizeHint);
  }
  function String_0(bytes, offset, length, charset) {
    if ((offset < 0 ? true : length < 0) ? true : (offset + length | 0) > bytes.length) {
      checkIndices(offset, length, bytes);
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = bytes;
    }
    var i8 = tmp$ret$0;
    var bufferOffset = i8.byteOffset + offset | 0;
    var buffer = i8.buffer.slice(bufferOffset, bufferOffset + length | 0);
    var tmp = Companion_getInstance_7();
    var view = new IoBuffer(of$default(tmp, buffer, 0, 0, 6, null), null, Companion_getInstance_10().g1d_1);
    view.t1d();
    var packet = ByteReadPacket_init_$Create$(view, Companion_getInstance_5().l11_1);
    return decode(charset.k1f(), packet, IntCompanionObject_getInstance().w_1);
  }
  function String$default(bytes, offset, length, charset, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      offset = 0;
    if (!(($mask0 & 4) === 0))
      length = bytes.length;
    if (!(($mask0 & 8) === 0))
      charset = Charsets_getInstance().s1c_1;
    return String_0(bytes, offset, length, charset);
  }
  function checkIndices(offset, length, bytes) {
    {
      var tmp0_require = offset >= 0;
      {
      }
      if (!tmp0_require) {
        throw IndexOutOfBoundsException_init_$Create$('offset (' + offset + ") shouldn't be negative");
      }
    }
    {
      var tmp1_require = length >= 0;
      {
      }
      if (!tmp1_require) {
        throw IndexOutOfBoundsException_init_$Create$('length (' + length + ") shouldn't be negative");
      }
    }
    {
      var tmp2_require = (offset + length | 0) <= bytes.length;
      {
      }
      if (!tmp2_require) {
        throw IndexOutOfBoundsException_init_$Create$('offset (' + offset + ') + length (' + length + ') > bytes.size (' + bytes.length + ')');
      }
    }
    throw IndexOutOfBoundsException_init_$Create$_0();
  }
  function EOFException(message) {
    IOException_init_$Init$(message, this);
    captureStack(this, EOFException);
  }
  EOFException.$metadata$ = classMeta('EOFException', undefined, undefined, undefined, undefined, IOException.prototype);
  function IOException_init_$Init$(message, $this) {
    IOException.call($this, message, null);
    return $this;
  }
  function IOException(message, cause) {
    Exception_init_$Init$_0(message, cause, this);
    captureStack(this, IOException);
  }
  IOException.$metadata$ = classMeta('IOException', undefined, undefined, undefined, undefined, Exception.prototype);
  function Decoder() {
  }
  Decoder.$metadata$ = interfaceMeta('Decoder');
  function Decoder_0(encoding, fatal) {
    var tmp;
    try {
      tmp = toKtor(new TextDecoder(encoding, textDecoderOptions(fatal)));
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = new TextDecoderFallback(encoding, fatal);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function decodeStream(_this__u8e3s4, buffer, stream) {
    var tmp$ret$0;
    {
      try {
        return _this__u8e3s4.p1i(buffer, decodeOptions(stream));
      } catch ($p) {
        if ($p instanceof Error) {
          var tmp0_elvis_lhs = $p.message;
          throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs == null ? 'no cause provided' : tmp0_elvis_lhs));
        } else {
          throw $p;
        }
      }
    }
  }
  function decodeOptions(stream) {
    var tmp$ret$2;
    {
      var tmp0_apply = new Object();
      {
      }
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_apply;
          }
          var tmp0_with = tmp$ret$0;
          {
          }
          tmp$ret$1 = tmp0_with.stream = stream;
        }
      }
      tmp$ret$2 = tmp0_apply;
    }
    return tmp$ret$2;
  }
  function toKtor(_this__u8e3s4) {
    return new toKtor$1(_this__u8e3s4);
  }
  function textDecoderOptions(fatal) {
    var tmp$ret$2;
    {
      var tmp0_apply = new Object();
      {
      }
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0_apply;
          }
          var tmp0_with = tmp$ret$0;
          {
          }
          tmp$ret$1 = tmp0_with.fatal = fatal;
        }
      }
      tmp$ret$2 = tmp0_apply;
    }
    return tmp$ret$2;
  }
  function toKtor$1($this_toKtor) {
    this.q1j_1 = $this_toKtor;
  }
  toKtor$1.prototype.q1i = function () {
    return this.q1j_1.decode();
  };
  toKtor$1.prototype.l1i = function (buffer) {
    return this.q1j_1.decode(buffer);
  };
  toKtor$1.prototype.p1i = function (buffer, options) {
    return this.q1j_1.decode(buffer, options);
  };
  toKtor$1.$metadata$ = classMeta(undefined, [Decoder]);
  function get_ENCODING_ALIASES() {
    init_properties_TextDecoderFallback_kt_mch4cl();
    return ENCODING_ALIASES;
  }
  var ENCODING_ALIASES;
  function get_REPLACEMENT() {
    init_properties_TextDecoderFallback_kt_mch4cl();
    return REPLACEMENT;
  }
  var REPLACEMENT;
  function TextDecoderFallback(encoding, fatal) {
    this.r1j_1 = fatal;
    var tmp$ret$2;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = toString(trim(isCharSequence(encoding) ? encoding : THROW_CCE()));
      }
      var tmp0_toLowerCase = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp0_toLowerCase;
      }
      tmp$ret$2 = tmp$ret$1.toLowerCase();
    }
    var requestedEncoding = tmp$ret$2;
    {
      var tmp1_check = get_ENCODING_ALIASES().l1(requestedEncoding);
      {
      }
      if (!tmp1_check) {
        var tmp$ret$3;
        {
          tmp$ret$3 = encoding + ' is not supported.';
        }
        var message = tmp$ret$3;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
  }
  TextDecoderFallback.prototype.s1j = function () {
    return this.r1j_1;
  };
  TextDecoderFallback.prototype.q1i = function () {
    return '';
  };
  TextDecoderFallback.prototype.l1i = function (buffer) {
    var tmp$ret$3;
    $l$block: {
      {
      }
      var builder = BytePacketBuilder_0(0);
      try {
        {
          var bytes = buffer instanceof Int8Array ? buffer : THROW_CCE();
          var inductionVariable = 0;
          var last = bytes.length;
          if (inductionVariable < last)
            $l$loop: do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp$ret$1;
              {
                var tmp$ret$0;
                {
                  tmp$ret$0 = bytes;
                }
                tmp$ret$1 = tmp$ret$0[index];
              }
              var byte = tmp$ret$1;
              var point = toCodePoint(byte);
              if (point < 0) {
                {
                  var tmp0_check = !this.r1j_1;
                  {
                  }
                  if (!tmp0_check) {
                    var tmp$ret$2;
                    {
                      tmp$ret$2 = 'Invalid character: ' + point;
                    }
                    var message = tmp$ret$2;
                    throw IllegalStateException_init_$Create$(toString(message));
                  }
                }
                var tmp = get_REPLACEMENT();
                writeFully$default(builder, tmp, 0, 0, 6, null);
                continue $l$loop;
              }
              if (point > 255) {
                builder.g1c(toByte(point >> 8));
              }
              builder.g1c(toByte(point & 255));
            }
             while (inductionVariable < last);
        }
        tmp$ret$3 = builder.o16();
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          builder.q12();
          throw $p;
        } else {
          throw $p;
        }
      }
    }
    var tmp_0 = tmp$ret$3;
    return decodeToString(readBytes$default(tmp_0, 0, 1, null));
  };
  TextDecoderFallback.prototype.p1i = function (buffer, options) {
    return this.l1i(buffer);
  };
  TextDecoderFallback.$metadata$ = classMeta('TextDecoderFallback', [Decoder]);
  function toCodePoint(_this__u8e3s4) {
    init_properties_TextDecoderFallback_kt_mch4cl();
    var value = _this__u8e3s4 & 255;
    if (isASCII(value)) {
      return value;
    }
    return get_WIN1252_TABLE()[value - 128 | 0];
  }
  function isASCII(_this__u8e3s4) {
    init_properties_TextDecoderFallback_kt_mch4cl();
    return 0 <= _this__u8e3s4 ? _this__u8e3s4 <= 127 : false;
  }
  var properties_initialized_TextDecoderFallback_kt_7y92ax;
  function init_properties_TextDecoderFallback_kt_mch4cl() {
    if (properties_initialized_TextDecoderFallback_kt_7y92ax) {
    } else {
      properties_initialized_TextDecoderFallback_kt_7y92ax = true;
      ENCODING_ALIASES = setOf(['ansi_x3.4-1968', 'ascii', 'cp1252', 'cp819', 'csisolatin1', 'ibm819', 'iso-8859-1', 'iso-ir-100', 'iso8859-1', 'iso88591', 'iso_8859-1', 'iso_8859-1:1987', 'l1', 'latin1', 'us-ascii', 'windows-1252', 'x-cp1252']);
      var tmp$ret$0;
      {
        var tmp0_byteArrayOf = new Int8Array([-17, -65, -67]);
        tmp$ret$0 = tmp0_byteArrayOf;
      }
      REPLACEMENT = tmp$ret$0;
    }
  }
  function decodeWrap(block) {
    try {
      return block();
    } catch ($p) {
      if ($p instanceof Error) {
        var tmp0_elvis_lhs = $p.message;
        throw new MalformedInputException('Failed to decode bytes: ' + (tmp0_elvis_lhs == null ? 'no cause provided' : tmp0_elvis_lhs));
      } else {
        throw $p;
      }
    }
  }
  function get_WIN1252_TABLE() {
    init_properties_Win1252Table_kt_2hu70m();
    return WIN1252_TABLE;
  }
  var WIN1252_TABLE;
  var properties_initialized_Win1252Table_kt_pkmjoq;
  function init_properties_Win1252Table_kt_2hu70m() {
    if (properties_initialized_Win1252Table_kt_pkmjoq) {
    } else {
      properties_initialized_Win1252Table_kt_pkmjoq = true;
      var tmp$ret$0;
      {
        tmp$ret$0 = new Int32Array([8364, -1, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, -1, 381, -1, -1, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, -1, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]);
      }
      WIN1252_TABLE = tmp$ret$0;
    }
  }
  function DefaultPool(capacity) {
    this.h1e_1 = capacity;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_arrayOfNulls = this.h1e_1;
      tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    tmp.i1e_1 = tmp$ret$0;
    this.j1e_1 = 0;
  }
  DefaultPool.prototype.k1e = function (instance) {
  };
  DefaultPool.prototype.r1e = function (instance) {
    return instance;
  };
  DefaultPool.prototype.n1e = function (instance) {
  };
  DefaultPool.prototype.n19 = function () {
    if (this.j1e_1 === 0)
      return this.f1e();
    var tmp0_this = this;
    tmp0_this.j1e_1 = tmp0_this.j1e_1 - 1 | 0;
    var idx = tmp0_this.j1e_1;
    var tmp = this.i1e_1[idx];
    var instance = isObject(tmp) ? tmp : THROW_CCE();
    this.i1e_1[idx] = null;
    return this.r1e(instance);
  };
  DefaultPool.prototype.t1e = function (instance) {
    this.n1e(instance);
    if (this.j1e_1 === this.h1e_1) {
      this.k1e(instance);
    } else {
      var tmp0_this = this;
      var tmp1 = tmp0_this.j1e_1;
      tmp0_this.j1e_1 = tmp1 + 1 | 0;
      this.i1e_1[tmp1] = instance;
    }
  };
  DefaultPool.prototype.fm = function () {
    var inductionVariable = 0;
    var last = this.j1e_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.i1e_1[i];
        var instance = isObject(tmp) ? tmp : THROW_CCE();
        this.i1e_1[i] = null;
        this.k1e(instance);
      }
       while (inductionVariable < last);
    this.j1e_1 = 0;
  };
  DefaultPool.$metadata$ = classMeta('DefaultPool', [ObjectPool]);
  //region block: post-declaration
  ChannelJob.prototype.xj = invokeOnCompletion$default;
  ChannelJob.prototype.bk = cancel$default;
  DefaultPool.prototype.e1b = close;
  DefaultBufferPool.prototype.e1b = close;
  NoPoolImpl.prototype.e1b = close;
  EmptyBufferPoolImpl.prototype.e1b = close;
  ChunkBuffer$Companion$Pool$1.prototype.e1b = close;
  ChunkBuffer$Companion$EmptyPool$1.prototype.e1b = close;
  ChunkBuffer$Companion$NoPool$1.prototype.e1b = close;
  ChunkBuffer$Companion$NoPoolManuallyManaged$1.prototype.e1b = close;
  IoBuffer$Companion$Pool$1.prototype.e1b = close;
  IoBuffer$Companion$NoPool$1.prototype.e1b = close;
  //endregion
  //region block: init
  DEFAULT_BUFFER_SIZE = 4096;
  MAX_CHARACTERS_SIZE_IN_BYTES = 8;
  PACKET_MAX_COPY_SIZE = 200;
  BUFFER_VIEW_POOL_SIZE = 100;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = copyTo;
  _.$_$.b = readRemaining;
  _.$_$.c = readRemaining_0;
  _.$_$.d = writeFully;
  _.$_$.e = decode$default;
  _.$_$.f = encode$default;
  _.$_$.g = String$default;
  _.$_$.h = readBytes$default;
  _.$_$.i = readText$default;
  _.$_$.j = writeFully$default;
  _.$_$.k = writeText$default;
  _.$_$.l = writer$default;
  _.$_$.m = Companion_getInstance_8;
  _.$_$.n = Charsets_getInstance;
  _.$_$.o = Companion_getInstance_6;
  _.$_$.p = encodeToByteArray;
  _.$_$.q = encode;
  _.$_$.r = get_name;
  _.$_$.s = threadLocal;
  _.$_$.t = completeReadHead;
  _.$_$.u = prepareReadFirstHead;
  _.$_$.v = prepareReadNextHead;
  _.$_$.w = BytePacketBuilder_0;
  _.$_$.x = ByteReadPacket;
  _.$_$.y = Closeable;
  _.$_$.z = Input;
  _.$_$.a1 = String_0;
  _.$_$.b1 = readShort_0;
  _.$_$.c1 = writeShort_0;
  _.$_$.d1 = ByteReadChannel;
  _.$_$.e1 = ByteReadChannel_1;
  _.$_$.f1 = WriterScope;
  _.$_$.g1 = cancel;
  _.$_$.h1 = makeShared;
  _.$_$.i1 = preventFreeze;
  _.$_$.j1 = shared$1;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(925), __nccwpck_require__(329)));

//# sourceMappingURL=kotlin_io_ktor_ktor_io.js.map

/***/ }),

/***/ 219:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_io_ktor_ktor_io, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_org_jetbrains_kotlinx_atomicfu) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var charSequenceLength = kotlin_kotlin.$_$.w7;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var anyToString = kotlin_kotlin.$_$.q7;
  var classMeta = kotlin_kotlin.$_$.y7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var CoroutineImpl = kotlin_kotlin.$_$.j7;
  var readRemaining = kotlin_io_ktor_ktor_io.$_$.b;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.t6;
  var readBytes$default = kotlin_io_ktor_ktor_io.$_$.h;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var isObject = kotlin_kotlin.$_$.r8;
  var equals = kotlin_kotlin.$_$.a8;
  var hashCode = kotlin_kotlin.$_$.f8;
  var MutableMap = kotlin_kotlin.$_$.m4;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var Entry = kotlin_kotlin.$_$.e4;
  var isInterface = kotlin_kotlin.$_$.p8;
  var MutableEntry = kotlin_kotlin.$_$.l4;
  var charArray = kotlin_kotlin.$_$.u7;
  var charSequenceGet = kotlin_kotlin.$_$.v7;
  var toString = kotlin_kotlin.$_$.l2;
  var Char = kotlin_kotlin.$_$.va;
  var SupervisorJob = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f1;
  var AbstractCoroutineContextElement = kotlin_kotlin.$_$.x6;
  var Key_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.o;
  var get = kotlin_kotlin.$_$.e7;
  var fold = kotlin_kotlin.$_$.d7;
  var minusKey = kotlin_kotlin.$_$.f7;
  var plus = kotlin_kotlin.$_$.i7;
  var CoroutineExceptionHandler = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.x;
  var MutableIterator = kotlin_kotlin.$_$.i4;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.u4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var Set = kotlin_kotlin.$_$.o4;
  var toString_0 = kotlin_kotlin.$_$.c9;
  var MutableSet = kotlin_kotlin.$_$.n4;
  var toList = kotlin_kotlin.$_$.m6;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.a1;
  var firstOrNull = kotlin_kotlin.$_$.k5;
  var Collection = kotlin_kotlin.$_$.v3;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var to = kotlin_kotlin.$_$.bc;
  var addAll = kotlin_kotlin.$_$.q4;
  var toMap = kotlin_kotlin.$_$.n6;
  var lazy = kotlin_kotlin.$_$.xb;
  var KProperty1 = kotlin_kotlin.$_$.p9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.d8;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.f1;
  var get_lastIndex = kotlin_kotlin.$_$.ba;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.d2;
  var Char__plus_impl_qi7pgj = kotlin_kotlin.$_$.h2;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var equals_0 = kotlin_kotlin.$_$.u9;
  var addAll_0 = kotlin_kotlin.$_$.p4;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.u1;
  var shared$1 = kotlin_io_ktor_ktor_io.$_$.j1;
  var MutableListIterator = kotlin_kotlin.$_$.j4;
  var makeShared = kotlin_io_ktor_ktor_io.$_$.h1;
  var List = kotlin_kotlin.$_$.d4;
  var checkIndexOverflow = kotlin_kotlin.$_$.t4;
  var StringBuilder_init_$Create$_0 = kotlin_kotlin.$_$.g1;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.w1;
  var MutableList = kotlin_kotlin.$_$.k4;
  var KMutableProperty1 = kotlin_kotlin.$_$.o9;
  var Map = kotlin_kotlin.$_$.f4;
  var atomic$int$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.d;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.b2;
  var MutableCollection = kotlin_kotlin.$_$.g4;
  var MutableIterable = kotlin_kotlin.$_$.h4;
  var ListIterator = kotlin_kotlin.$_$.c4;
  var atomicfu$AtomicRefArray$ofNulls = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.a;
  var Long = kotlin_kotlin.$_$.db;
  var Comparable = kotlin_kotlin.$_$.wa;
  var Enum = kotlin_kotlin.$_$.ya;
  var ArrayList = kotlin_kotlin.$_$.u3;
  var emptyList = kotlin_kotlin.$_$.g5;
  var get_lastIndex_0 = kotlin_kotlin.$_$.p5;
  var last = kotlin_kotlin.$_$.s5;
  var atomic$ref$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.c;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a1;
  var extendThrowable = kotlin_kotlin.$_$.b8;
  var captureStack = kotlin_kotlin.$_$.t7;
  var recoverStackTrace = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.t;
  var Companion_getInstance = kotlin_kotlin.$_$.o3;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.m2;
  var createFailure = kotlin_kotlin.$_$.rb;
  var Continuation = kotlin_kotlin.$_$.c7;
  var Result__exceptionOrNull_impl_p6xea9 = kotlin_kotlin.$_$.n2;
  var _Result___get_isFailure__impl__jpiriv = kotlin_kotlin.$_$.o2;
  var toString_1 = kotlin_kotlin.$_$.ac;
  var preventFreeze = kotlin_io_ktor_ktor_io.$_$.i1;
  var SuspendFunction0 = kotlin_kotlin.$_$.k7;
  var toList_0 = kotlin_kotlin.$_$.l6;
  var isNaN_0 = kotlin_kotlin.$_$.vb;
  var numberToLong = kotlin_kotlin.$_$.x8;
  var IllegalStateException = kotlin_kotlin.$_$.cb;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.q1;
  //endregion
  //region block: pre-declaration
  function get_0(key) {
    var tmp0_elvis_lhs = this.v1j(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('No instance for key ' + key);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  $toByteArrayCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $toByteArrayCOROUTINE$0.prototype.constructor = $toByteArrayCOROUTINE$0;
  _no_name_provided__qut3iv.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  _no_name_provided__qut3iv.prototype.constructor = _no_name_provided__qut3iv;
  function get_1(name) {
    var tmp0_safe_receiver = this.r1l(name);
    return tmp0_safe_receiver == null ? null : firstOrNull(tmp0_safe_receiver);
  }
  function forEach(body) {
    var tmp0_forEach = this.s1l();
    var tmp0_iterator = tmp0_forEach.d();
    while (tmp0_iterator.e()) {
      var element = tmp0_iterator.f();
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = element.s();
        }
        var k = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = element.t();
        }
        var v = tmp$ret$1;
        body(k, v);
      }
    }
    return Unit_getInstance();
  }
  WeekDay.prototype = Object.create(Enum.prototype);
  WeekDay.prototype.constructor = WeekDay;
  Month.prototype = Object.create(Enum.prototype);
  Month.prototype.constructor = Month;
  $proceedLoopCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $proceedLoopCOROUTINE$1.prototype.constructor = $proceedLoopCOROUTINE$1;
  InvalidPhaseException.prototype = Object.create(Error.prototype);
  InvalidPhaseException.prototype.constructor = InvalidPhaseException;
  Before.prototype = Object.create(PipelinePhaseRelation.prototype);
  Before.prototype.constructor = Before;
  Last.prototype = Object.create(PipelinePhaseRelation.prototype);
  Last.prototype.constructor = Last;
  SuspendFunctionGun$loop$slambda.prototype = Object.create(CoroutineImpl.prototype);
  SuspendFunctionGun$loop$slambda.prototype.constructor = SuspendFunctionGun$loop$slambda;
  startCoroutineUninterceptedOrReturn3$slambda.prototype = Object.create(CoroutineImpl.prototype);
  startCoroutineUninterceptedOrReturn3$slambda.prototype.constructor = startCoroutineUninterceptedOrReturn3$slambda;
  InvalidTimestampException.prototype = Object.create(IllegalStateException.prototype);
  InvalidTimestampException.prototype.constructor = InvalidTimestampException;
  //endregion
  function AttributeKey(name) {
    this.t1j_1 = name;
  }
  AttributeKey.prototype.toString = function () {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0_isEmpty = this.t1j_1;
      tmp$ret$0 = charSequenceLength(tmp0_isEmpty) === 0;
    }
    if (tmp$ret$0) {
      tmp = anyToString(this);
    } else {
      tmp = 'AttributeKey: ' + this.t1j_1;
    }
    return tmp;
  };
  AttributeKey.$metadata$ = classMeta('AttributeKey');
  function Attributes() {
  }
  Attributes.$metadata$ = interfaceMeta('Attributes');
  function toByteArray(_this__u8e3s4, $cont) {
    var tmp = new $toByteArrayCOROUTINE$0(_this__u8e3s4, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $toByteArrayCOROUTINE$0(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.i1k_1 = _this__u8e3s4;
  }
  $toByteArrayCOROUTINE$0.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = readRemaining(this.i1k_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return readBytes$default(ARGUMENT, 0, 1, null);
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $toByteArrayCOROUTINE$0.$metadata$ = classMeta('$toByteArrayCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function CaseInsensitiveMap$_get_keys_$lambda_ptzlqj() {
    return function ($this$$receiver) {
      return $this$$receiver.j1k_1;
    };
  }
  function CaseInsensitiveMap$_get_keys_$lambda_ptzlqj_0() {
    return function ($this$$receiver) {
      return caseInsensitive($this$$receiver);
    };
  }
  function CaseInsensitiveMap$_get_entries_$lambda_r32w19() {
    return function ($this$$receiver) {
      return new Entry_0($this$$receiver.s().j1k_1, $this$$receiver.t());
    };
  }
  function CaseInsensitiveMap$_get_entries_$lambda_r32w19_0() {
    return function ($this$$receiver) {
      return new Entry_0(caseInsensitive($this$$receiver.s()), $this$$receiver.t());
    };
  }
  function CaseInsensitiveMap() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.l1k_1 = tmp$ret$0;
  }
  CaseInsensitiveMap.prototype.g = function () {
    return this.l1k_1.g();
  };
  CaseInsensitiveMap.prototype.m1k = function (key) {
    return this.l1k_1.c2(new CaseInsensitiveString(key));
  };
  CaseInsensitiveMap.prototype.c2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.m1k((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.n1k = function (key) {
    return this.l1k_1.i2(caseInsensitive(key));
  };
  CaseInsensitiveMap.prototype.i2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.n1k((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.m = function () {
    return this.l1k_1.m();
  };
  CaseInsensitiveMap.prototype.s9 = function () {
    this.l1k_1.s9();
  };
  CaseInsensitiveMap.prototype.o1k = function (key, value) {
    return this.l1k_1.c(caseInsensitive(key), value);
  };
  CaseInsensitiveMap.prototype.c = function (key, value) {
    var tmp = (!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE();
    return this.o1k(tmp, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.p1k = function (from) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = from.r().d();
      }
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = element.s();
          }
          var key = tmp$ret$1;
          var tmp$ret$2;
          {
            tmp$ret$2 = element.t();
          }
          var value = tmp$ret$2;
          this.o1k(key, value);
        }
      }
    }
  };
  CaseInsensitiveMap.prototype.b3 = function (from) {
    return this.p1k(from);
  };
  CaseInsensitiveMap.prototype.q1k = function (key) {
    return this.l1k_1.xa(caseInsensitive(key));
  };
  CaseInsensitiveMap.prototype.xa = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.q1k((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  CaseInsensitiveMap.prototype.j2 = function () {
    var tmp = this.l1k_1.j2();
    var tmp_0 = CaseInsensitiveMap$_get_keys_$lambda_ptzlqj();
    return new DelegatingMutableSet(tmp, tmp_0, CaseInsensitiveMap$_get_keys_$lambda_ptzlqj_0());
  };
  CaseInsensitiveMap.prototype.r = function () {
    var tmp = this.l1k_1.r();
    var tmp_0 = CaseInsensitiveMap$_get_entries_$lambda_r32w19();
    return new DelegatingMutableSet(tmp, tmp_0, CaseInsensitiveMap$_get_entries_$lambda_r32w19_0());
  };
  CaseInsensitiveMap.prototype.k2 = function () {
    return this.l1k_1.k2();
  };
  CaseInsensitiveMap.prototype.equals = function (other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(other instanceof CaseInsensitiveMap);
    }
    if (tmp)
      return false;
    return equals(other.l1k_1, this.l1k_1);
  };
  CaseInsensitiveMap.prototype.hashCode = function () {
    return hashCode(this.l1k_1);
  };
  CaseInsensitiveMap.$metadata$ = classMeta('CaseInsensitiveMap', [MutableMap]);
  function Entry_0(key, value) {
    this.r1k_1 = key;
    this.s1k_1 = value;
  }
  Entry_0.prototype.s = function () {
    return this.r1k_1;
  };
  Entry_0.prototype.t = function () {
    return this.s1k_1;
  };
  Entry_0.prototype.t1k = function (newValue) {
    this.s1k_1 = newValue;
    return this.s1k_1;
  };
  Entry_0.prototype.na = function (newValue) {
    return this.t1k((newValue == null ? true : isObject(newValue)) ? newValue : THROW_CCE());
  };
  Entry_0.prototype.hashCode = function () {
    return (527 + hashCode(ensureNotNull(this.r1k_1)) | 0) + hashCode(ensureNotNull(this.s1k_1)) | 0;
  };
  Entry_0.prototype.equals = function (other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(!(other == null) ? isInterface(other, Entry) : false);
    }
    if (tmp)
      return false;
    return equals(other.s(), this.r1k_1) ? equals(other.t(), this.s1k_1) : false;
  };
  Entry_0.prototype.toString = function () {
    return '' + this.r1k_1 + '=' + this.s1k_1;
  };
  Entry_0.$metadata$ = classMeta('Entry', [MutableEntry]);
  function toCharArray(_this__u8e3s4) {
    var tmp = 0;
    var tmp_0 = _this__u8e3s4.length;
    var tmp_1 = charArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      {
        tmp$ret$0 = charSequenceGet(_this__u8e3s4, tmp_2);
      }
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  }
  function isLowerCase(_this__u8e3s4) {
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp$ret$0;
            {
              var tmp0_asDynamic = toString(_this__u8e3s4);
              tmp$ret$0 = tmp0_asDynamic;
            }
            var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
            tmp$ret$1 = tmp1_unsafeCast;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return equals(new Char(tmp$ret$4), new Char(_this__u8e3s4));
  }
  function caseInsensitiveMap() {
    return new CaseInsensitiveMap();
  }
  function SilentSupervisor(parent) {
    var tmp = SupervisorJob(parent);
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv();
    }
    return tmp.d4(tmp$ret$0);
  }
  function SilentSupervisor$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return SilentSupervisor(parent);
  }
  function _no_name_provided__qut3iv() {
    AbstractCoroutineContextElement.call(this, Key_getInstance());
  }
  _no_name_provided__qut3iv.prototype.jp = function (context, exception) {
    var tmp$ret$0;
    {
      tmp$ret$0 = Unit_getInstance();
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [CoroutineExceptionHandler], undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  function DelegatingMutableSet$iterator$1(this$0) {
    this.w1k_1 = this$0;
    this.v1k_1 = this$0.x1k_1.d();
  }
  DelegatingMutableSet$iterator$1.prototype.e = function () {
    return this.v1k_1.e();
  };
  DelegatingMutableSet$iterator$1.prototype.f = function () {
    return this.w1k_1.y1k_1(this.v1k_1.f());
  };
  DelegatingMutableSet$iterator$1.prototype.v7 = function () {
    return this.v1k_1.v7();
  };
  DelegatingMutableSet$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function DelegatingMutableSet(delegate, convertTo, convert) {
    this.x1k_1 = delegate;
    this.y1k_1 = convertTo;
    this.z1k_1 = convert;
    this.a1l_1 = this.x1k_1.g();
  }
  DelegatingMutableSet.prototype.b1l = function (_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
        var tmp0_iterator = _this__u8e3s4.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$0;
          {
            tmp$ret$0 = this.z1k_1(item);
          }
          tmp0_mapTo.a(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  DelegatingMutableSet.prototype.c1l = function (_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
        var tmp0_iterator = _this__u8e3s4.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$0;
          {
            tmp$ret$0 = this.y1k_1(item);
          }
          tmp0_mapTo.a(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  DelegatingMutableSet.prototype.g = function () {
    return this.a1l_1;
  };
  DelegatingMutableSet.prototype.d1l = function (element) {
    return this.x1k_1.a(this.z1k_1(element));
  };
  DelegatingMutableSet.prototype.a = function (element) {
    return this.d1l((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  DelegatingMutableSet.prototype.e1l = function (elements) {
    return this.x1k_1.k(this.b1l(elements));
  };
  DelegatingMutableSet.prototype.k = function (elements) {
    return this.e1l(elements);
  };
  DelegatingMutableSet.prototype.s9 = function () {
    this.x1k_1.s9();
  };
  DelegatingMutableSet.prototype.f1l = function (element) {
    return this.x1k_1.l1(this.z1k_1(element));
  };
  DelegatingMutableSet.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.f1l((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  DelegatingMutableSet.prototype.g1l = function (elements) {
    return this.x1k_1.m1(this.b1l(elements));
  };
  DelegatingMutableSet.prototype.m1 = function (elements) {
    return this.g1l(elements);
  };
  DelegatingMutableSet.prototype.m = function () {
    return this.x1k_1.m();
  };
  DelegatingMutableSet.prototype.d = function () {
    return new DelegatingMutableSet$iterator$1(this);
  };
  DelegatingMutableSet.prototype.hashCode = function () {
    return hashCode(this.x1k_1);
  };
  DelegatingMutableSet.prototype.equals = function (other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(!(other == null) ? isInterface(other, Set) : false);
    }
    if (tmp)
      return false;
    var elements = this.c1l(this.x1k_1);
    var tmp_0;
    if (other.m1(elements)) {
      var tmp$ret$0;
      {
        var tmp0_containsAll = other;
        tmp$ret$0 = elements.m1(tmp0_containsAll);
      }
      tmp_0 = tmp$ret$0;
    } else {
      tmp_0 = false;
    }
    return tmp_0;
  };
  DelegatingMutableSet.prototype.toString = function () {
    return toString_0(this.c1l(this.x1k_1));
  };
  DelegatingMutableSet.$metadata$ = classMeta('DelegatingMutableSet', [MutableSet]);
  function Hash() {
    Hash_instance = this;
  }
  Hash.prototype.h1l = function (objects) {
    return hashCode(toList(objects));
  };
  Hash.$metadata$ = objectMeta('Hash');
  var Hash_instance;
  function Hash_getInstance() {
    if (Hash_instance == null)
      new Hash();
    return Hash_instance;
  }
  function withLock(_this__u8e3s4, block) {
    try {
      _this__u8e3s4.i1l();
      return block();
    }finally {
      _this__u8e3s4.j1l();
    }
  }
  function ensureListForKey($this, name, size) {
    if ($this.m1l_1) {
      throw IllegalStateException_init_$Create$('Cannot modify a builder after build() function already invoked. Make sure you call build() last.');
    }
    var tmp0_elvis_lhs = $this.l1l_1.i2(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = ArrayList_init_$Create$(size);
        {
        }
        {
          $this.n1l(name);
          {
            var tmp0_set = $this.l1l_1;
            tmp0_set.c(name, tmp0_also);
          }
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function StringValuesBuilder$appendAll$lambda(this$0) {
    return function (name, values) {
      this$0.o1l(name, values);
      return Unit_getInstance();
    };
  }
  function StringValuesBuilder(caseInsensitiveName, size) {
    this.k1l_1 = caseInsensitiveName;
    this.l1l_1 = this.k1l_1 ? caseInsensitiveMap() : LinkedHashMap_init_$Create$_0(size);
    this.m1l_1 = false;
  }
  StringValuesBuilder.prototype.k2 = function () {
    return this.l1l_1;
  };
  StringValuesBuilder.prototype.p1l = function (_set____db54di) {
    this.m1l_1 = _set____db54di;
  };
  StringValuesBuilder.prototype.q1l = function () {
    return this.m1l_1;
  };
  StringValuesBuilder.prototype.r1l = function (name) {
    return this.l1l_1.i2(name);
  };
  StringValuesBuilder.prototype.m = function () {
    return this.l1l_1.m();
  };
  StringValuesBuilder.prototype.s1l = function () {
    return unmodifiable(this.l1l_1.r());
  };
  StringValuesBuilder.prototype.t1l = function (name, value) {
    this.u1l(value);
    var list = ensureListForKey(this, name, 1);
    list.s9();
    list.a(value);
  };
  StringValuesBuilder.prototype.n1k = function (name) {
    var tmp0_safe_receiver = this.r1l(name);
    return tmp0_safe_receiver == null ? null : firstOrNull(tmp0_safe_receiver);
  };
  StringValuesBuilder.prototype.v1l = function (name, value) {
    this.u1l(value);
    ensureListForKey(this, name, 1).a(value);
  };
  StringValuesBuilder.prototype.w1l = function (stringValues) {
    stringValues.x1l(StringValuesBuilder$appendAll$lambda(this));
  };
  StringValuesBuilder.prototype.o1l = function (name, values) {
    var tmp$ret$0;
    {
      var tmp0_safe_receiver = isInterface(values, Collection) ? values : null;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.g();
      var tmp0_let = ensureListForKey(this, name, tmp1_elvis_lhs == null ? 2 : tmp1_elvis_lhs);
      {
      }
      var tmp0_iterator = values.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          this.u1l(element);
          tmp0_let.a(element);
        }
      }
      tmp$ret$0 = Unit_getInstance();
    }
  };
  StringValuesBuilder.prototype.y1l = function (name) {
    this.l1l_1.xa(name);
  };
  StringValuesBuilder.prototype.s9 = function () {
    this.l1l_1.s9();
  };
  StringValuesBuilder.prototype.n1l = function (name) {
  };
  StringValuesBuilder.prototype.u1l = function (value) {
  };
  StringValuesBuilder.$metadata$ = classMeta('StringValuesBuilder');
  function appendAll(_this__u8e3s4, builder) {
    var tmp$ret$2;
    {
      {
      }
      {
        {
          var tmp0_forEach = builder.s1l();
          var tmp0_iterator = tmp0_forEach.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = element.s();
              }
              var name = tmp$ret$0;
              var tmp$ret$1;
              {
                tmp$ret$1 = element.t();
              }
              var values = tmp$ret$1;
              _this__u8e3s4.o1l(name, values);
            }
          }
        }
      }
      tmp$ret$2 = _this__u8e3s4;
    }
    return tmp$ret$2;
  }
  function flattenEntries(_this__u8e3s4) {
    var tmp$ret$5;
    {
      var tmp0_flatMap = _this__u8e3s4.s1l();
      var tmp$ret$4;
      {
        var tmp0_flatMapTo = ArrayList_init_$Create$_0();
        var tmp0_iterator = tmp0_flatMap.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$3;
          {
            var tmp$ret$2;
            {
              var tmp0_map = element.t();
              var tmp$ret$1;
              {
                var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
                var tmp0_iterator_0 = tmp0_map.d();
                while (tmp0_iterator_0.e()) {
                  var item = tmp0_iterator_0.f();
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = to(element.s(), item);
                  }
                  tmp0_mapTo.a(tmp$ret$0);
                }
                tmp$ret$1 = tmp0_mapTo;
              }
              tmp$ret$2 = tmp$ret$1;
            }
            tmp$ret$3 = tmp$ret$2;
          }
          var list = tmp$ret$3;
          addAll(tmp0_flatMapTo, list);
        }
        tmp$ret$4 = tmp0_flatMapTo;
      }
      tmp$ret$5 = tmp$ret$4;
    }
    return tmp$ret$5;
  }
  function StringValues() {
  }
  StringValues.$metadata$ = interfaceMeta('StringValues');
  function listForKey($this, name) {
    return $this.k2().i2(name);
  }
  function StringValuesImpl$values$delegate$lambda(this$0, $values) {
    return function () {
      var tmp;
      if (this$0.z1l()) {
        var tmp$ret$0;
        {
          var tmp0_apply = caseInsensitiveMap();
          {
          }
          {
            tmp0_apply.b3($values);
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp = tmp$ret$0;
      } else {
        tmp = toMap($values);
      }
      return tmp;
    };
  }
  function StringValuesImpl(caseInsensitiveName, values) {
    this.a1m_1 = caseInsensitiveName;
    var tmp = this;
    tmp.b1m_1 = lazy(StringValuesImpl$values$delegate$lambda(this, values));
  }
  StringValuesImpl.prototype.z1l = function () {
    return this.a1m_1;
  };
  StringValuesImpl.prototype.k2 = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = values$factory();
      tmp$ret$0 = this.b1m_1.t();
    }
    return tmp$ret$0;
  };
  StringValuesImpl.prototype.n1k = function (name) {
    var tmp0_safe_receiver = listForKey(this, name);
    return tmp0_safe_receiver == null ? null : firstOrNull(tmp0_safe_receiver);
  };
  StringValuesImpl.prototype.r1l = function (name) {
    return listForKey(this, name);
  };
  StringValuesImpl.prototype.c1m = function () {
    return unmodifiable(this.k2().j2());
  };
  StringValuesImpl.prototype.m = function () {
    return this.k2().m();
  };
  StringValuesImpl.prototype.s1l = function () {
    return unmodifiable(this.k2().r());
  };
  StringValuesImpl.prototype.x1l = function (body) {
    var tmp$ret$0;
    {
      var tmp0_iterator = this.k2();
      tmp$ret$0 = tmp0_iterator.r().d();
    }
    var tmp0_iterator_0 = tmp$ret$0;
    while (tmp0_iterator_0.e()) {
      var tmp1_loop_parameter = tmp0_iterator_0.f();
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_loop_parameter.s();
      }
      var key = tmp$ret$1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_loop_parameter.t();
      }
      var value = tmp$ret$2;
      body(key, value);
    }
  };
  StringValuesImpl.prototype.toString = function () {
    return 'StringValues(case=' + !this.z1l() + ') ' + this.s1l();
  };
  StringValuesImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(!(other == null) ? isInterface(other, StringValues) : false))
      return false;
    if (!(this.z1l() === other.z1l()))
      return false;
    return entriesEquals(this.s1l(), other.s1l());
  };
  StringValuesImpl.prototype.hashCode = function () {
    return entriesHashCode(this.s1l(), imul(31, this.z1l() | 0));
  };
  StringValuesImpl.$metadata$ = classMeta('StringValuesImpl', [StringValues]);
  function entriesEquals(a, b) {
    return equals(a, b);
  }
  function entriesHashCode(entries, seed) {
    return imul(seed, 31) + hashCode(entries) | 0;
  }
  function values$factory() {
    return getPropertyCallableRef('values', 1, KProperty1, function (receiver) {
      return receiver.k2();
    }, null);
  }
  function toLowerCasePreservingASCIIRules(_this__u8e3s4) {
    var tmp$ret$1;
    $l$block: {
      var inductionVariable = 0;
      var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          {
            var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, index);
            tmp$ret$0 = !equals(new Char(toLowerCasePreservingASCII(tmp0__anonymous__q1qw7t)), new Char(tmp0__anonymous__q1qw7t));
          }
          if (tmp$ret$0) {
            tmp$ret$1 = index;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = -1;
    }
    var firstIndex = tmp$ret$1;
    if (firstIndex === -1) {
      return _this__u8e3s4;
    }
    var original = _this__u8e3s4;
    var tmp$ret$3;
    {
      var tmp1_buildString = _this__u8e3s4.length;
      {
      }
      var tmp$ret$2;
      {
        var tmp0_apply = StringBuilder_init_$Create$(tmp1_buildString);
        {
        }
        {
          tmp0_apply.lf(original, 0, firstIndex);
          var inductionVariable_0 = firstIndex;
          var last_0 = get_lastIndex(original);
          if (inductionVariable_0 <= last_0)
            do {
              var index_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              tmp0_apply.b5(toLowerCasePreservingASCII(charSequenceGet(original, index_0)));
            }
             while (!(index_0 === last_0));
        }
        tmp$ret$2 = tmp0_apply;
      }
      tmp$ret$3 = tmp$ret$2.toString();
    }
    return tmp$ret$3;
  }
  function toLowerCasePreservingASCII(ch) {
    var tmp0_subject = ch;
    var tmp;
    if (_Char___init__impl__6a9atx(65) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(90) : false) {
      tmp = Char__plus_impl_qi7pgj(ch, 32);
    } else if (_Char___init__impl__6a9atx(0) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(127) : false) {
      tmp = ch;
    } else {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                var tmp0_asDynamic = toString(ch);
                tmp$ret$0 = tmp0_asDynamic;
              }
              var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
              tmp$ret$1 = tmp1_unsafeCast;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function CaseInsensitiveString(content) {
    this.j1k_1 = content;
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_toLowerCase = this.j1k_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_toLowerCase;
      }
      tmp$ret$1 = tmp$ret$0.toLowerCase();
    }
    tmp.k1k_1 = getStringHashCode(tmp$ret$1);
  }
  CaseInsensitiveString.prototype.equals = function (other) {
    var tmp0_safe_receiver = other instanceof CaseInsensitiveString ? other : null;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.j1k_1;
    return (tmp1_safe_receiver == null ? null : equals_0(tmp1_safe_receiver, this.j1k_1, true)) === true;
  };
  CaseInsensitiveString.prototype.hashCode = function () {
    return this.k1k_1;
  };
  CaseInsensitiveString.prototype.toString = function () {
    return this.j1k_1;
  };
  CaseInsensitiveString.$metadata$ = classMeta('CaseInsensitiveString');
  function caseInsensitive(_this__u8e3s4) {
    return new CaseInsensitiveString(_this__u8e3s4);
  }
  function sharedListOf(values) {
    if (PlatformUtils_getInstance().g1m_1) {
      var tmp$ret$0;
      {
        var tmp0_apply = new ConcurrentList();
        {
        }
        {
          addAll_0(tmp0_apply, values);
        }
        tmp$ret$0 = tmp0_apply;
      }
      return tmp$ret$0;
    }
    var tmp$ret$2;
    {
      var tmp1_mapTo = ArrayList_init_$Create$(values.length);
      var indexedObject = values;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$1;
        {
          tmp$ret$1 = item;
        }
        tmp1_mapTo.a(tmp$ret$1);
      }
      tmp$ret$2 = tmp1_mapTo;
    }
    return tmp$ret$2;
  }
  function _set_data__9licbx($this, _set____db54di) {
    return $this.i1m_1.m4($this, data$factory(), _set____db54di);
  }
  function _get_data__d5abxd($this) {
    return $this.i1m_1.l4($this, data$factory_0());
  }
  function _set_size__9twho6($this, _set____db54di) {
    return $this.j1m_1.m4($this, size$factory(), _set____db54di);
  }
  function checkIndex($this, index) {
    if (index >= $this.g() ? true : index < 0)
      throw IndexOutOfBoundsException_init_$Create$();
  }
  function increaseCapacity($this, targetCapacity) {
    var newData = new SharedList(targetCapacity);
    var inductionVariable = 0;
    var last = _get_data__d5abxd($this).l1m_1;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        newData.n1m(index, _get_data__d5abxd($this).l(index));
      }
       while (inductionVariable < last);
    _set_data__9licbx($this, newData);
  }
  function increaseCapacity$default($this, targetCapacity, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      targetCapacity = imul(_get_data__d5abxd($this).l1m_1, 2);
    return increaseCapacity($this, targetCapacity);
  }
  function sweep($this, firstNull) {
    var writePosition = firstNull;
    var inductionVariable = writePosition + 1 | 0;
    var last = $this.g();
    if (inductionVariable < last)
      $l$loop: do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (_get_data__d5abxd($this).l(index) == null) {
          continue $l$loop;
        }
        _get_data__d5abxd($this).n1m(writePosition, _get_data__d5abxd($this).l(index));
        writePosition = writePosition + 1 | 0;
      }
       while (inductionVariable < last);
    var inductionVariable_0 = writePosition;
    var last_0 = $this.g();
    if (inductionVariable_0 < last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        _get_data__d5abxd($this).n1m(index_0, null);
      }
       while (inductionVariable_0 < last_0);
    _set_size__9twho6($this, writePosition);
  }
  function reserve($this, index, gapSize) {
    var targetSize = gapSize + $this.g() | 0;
    while (_get_data__d5abxd($this).l1m_1 < targetSize) {
      increaseCapacity$default($this, 0, 2, null);
    }
    var readPosition = $this.g() - 1 | 0;
    while (readPosition >= index) {
      _get_data__d5abxd($this).n1m(readPosition + gapSize | 0, _get_data__d5abxd($this).l(readPosition));
      readPosition = readPosition - 1 | 0;
    }
    var inductionVariable = index;
    var last = index + gapSize | 0;
    if (inductionVariable < last)
      do {
        var current = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        _get_data__d5abxd($this).n1m(current, null);
      }
       while (inductionVariable < last);
    var tmp1_this = $this;
    _set_size__9twho6(tmp1_this, tmp1_this.g() + gapSize | 0);
  }
  function ConcurrentList$listIterator$1($index, this$0) {
    this.p1m_1 = this$0;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1($index);
    }
    tmp.o1m_1 = tmp$ret$0;
  }
  ConcurrentList$listIterator$1.prototype.q1m = function (_set____db54di) {
    return this.o1m_1.m4(this, current$factory(), _set____db54di);
  };
  ConcurrentList$listIterator$1.prototype.r1m = function () {
    return this.o1m_1.l4(this, current$factory_0());
  };
  ConcurrentList$listIterator$1.prototype.e = function () {
    return this.r1m() < this.p1m_1.g();
  };
  ConcurrentList$listIterator$1.prototype.f = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.r1m();
    tmp0_this.q1m(tmp1 + 1 | 0);
    return this.p1m_1.l(tmp1);
  };
  ConcurrentList$listIterator$1.prototype.v7 = function () {
    this.p1m_1.y9(this.r1m() - 1 | 0);
    var tmp0_this = this;
    var tmp1 = tmp0_this.r1m();
    tmp0_this.q1m(tmp1 - 1 | 0);
  };
  ConcurrentList$listIterator$1.$metadata$ = classMeta(undefined, [MutableListIterator]);
  function ConcurrentList() {
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_shared = new SharedList(32);
      tmp$ret$0 = new shared$1(tmp0_shared);
    }
    tmp.i1m_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(0);
    }
    tmp_0.j1m_1 = tmp$ret$1;
    this.k1m_1 = new Object();
    makeShared(this);
  }
  ConcurrentList.prototype.g = function () {
    return this.j1m_1.l4(this, size$factory_0());
  };
  ConcurrentList.prototype.hashCode = function () {
    var tmp$ret$4;
    {
      var tmp0_synchronized = this.k1m_1;
      var tmp$ret$3;
      {
        var tmp$ret$2;
        {
          var accumulator = 7;
          var tmp0_iterator = this.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            var tmp$ret$1;
            {
              var tmp0__anonymous__q1qw7t = accumulator;
              var tmp = Hash_getInstance();
              var tmp$ret$0;
              {
                var tmp0_safe_receiver = element;
                var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
                tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
              }
              tmp$ret$1 = tmp.h1l([tmp0__anonymous__q1qw7t, tmp$ret$0]);
            }
            accumulator = tmp$ret$1;
          }
          tmp$ret$2 = accumulator;
        }
        tmp$ret$3 = tmp$ret$2;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    return tmp$ret$4;
  };
  ConcurrentList.prototype.equals = function (other) {
    var tmp$ret$1;
    {
      var tmp0_synchronized = this.k1m_1;
      var tmp$ret$0;
      $l$block_0: {
        var tmp;
        var tmp_0;
        if (other == null) {
          tmp_0 = true;
        } else {
          tmp_0 = !(!(other == null) ? isInterface(other, List) : false);
        }
        if (tmp_0) {
          tmp = true;
        } else {
          tmp = !(other.g() === this.g());
        }
        if (tmp) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
        {
          var index = 0;
          var tmp0_iterator = this.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            {
              var tmp1 = index;
              index = tmp1 + 1 | 0;
              var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
              if (!equals(other.l(tmp0__anonymous__q1qw7t), item)) {
                tmp$ret$0 = false;
                break $l$block_0;
              }
            }
          }
        }
        tmp$ret$0 = true;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConcurrentList.prototype.toString = function () {
    var tmp$ret$3;
    {
      var tmp0_synchronized = this.k1m_1;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          {
          }
          var tmp$ret$0;
          {
            var tmp0_apply = StringBuilder_init_$Create$_0();
            {
            }
            {
              tmp0_apply.b5(_Char___init__impl__6a9atx(91));
              {
                var index = 0;
                var tmp0_iterator = this.d();
                while (tmp0_iterator.e()) {
                  var item = tmp0_iterator.f();
                  {
                    var tmp1 = index;
                    index = tmp1 + 1 | 0;
                    var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
                    tmp0_apply.pf('' + item);
                    if ((tmp0__anonymous__q1qw7t + 1 | 0) < this.g()) {
                      tmp0_apply.pf(', ');
                    }
                  }
                }
              }
              tmp0_apply.b5(_Char___init__impl__6a9atx(93));
            }
            tmp$ret$0 = tmp0_apply;
          }
          tmp$ret$1 = tmp$ret$0.toString();
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp$ret$3 = tmp$ret$2;
    }
    return tmp$ret$3;
  };
  ConcurrentList.prototype.d1 = function (element) {
    return this.s1m(element) >= 0;
  };
  ConcurrentList.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.d1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.prototype.s2 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.d1(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ConcurrentList.prototype.m1 = function (elements) {
    return this.s2(elements);
  };
  ConcurrentList.prototype.l = function (index) {
    var tmp$ret$0;
    {
      var tmp0_synchronized = this.k1m_1;
      if (index >= this.g()) {
        throw NoSuchElementException_init_$Create$();
      }
      return ensureNotNull(_get_data__d5abxd(this).l(index));
    }
  };
  ConcurrentList.prototype.s1m = function (element) {
    var tmp$ret$0;
    {
      var tmp0_synchronized = this.k1m_1;
      var inductionVariable = 0;
      var last = this.g();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (equals(_get_data__d5abxd(this).l(index), element)) {
            return index;
          }
        }
         while (inductionVariable < last);
      return -1;
    }
  };
  ConcurrentList.prototype.m = function () {
    return this.g() === 0;
  };
  ConcurrentList.prototype.t1m = function (element) {
    var tmp$ret$0;
    {
      var tmp0_synchronized = this.k1m_1;
      if (this.g() >= _get_data__d5abxd(this).l1m_1) {
        increaseCapacity$default(this, 0, 2, null);
      }
      _get_data__d5abxd(this).n1m(this.g(), element);
      var tmp0_this = this;
      _set_size__9twho6(tmp0_this, tmp0_this.g() + 1 | 0);
      return true;
    }
  };
  ConcurrentList.prototype.a = function (element) {
    return this.t1m((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.prototype.u1m = function (index, element) {
    reserve(this, index, 1);
    _get_data__d5abxd(this).n1m(index, element);
  };
  ConcurrentList.prototype.fa = function (index, element) {
    return this.u1m(index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.prototype.v1m = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.t1m(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = !elements.m();
    }
    return tmp$ret$2;
  };
  ConcurrentList.prototype.k = function (elements) {
    return this.v1m(elements);
  };
  ConcurrentList.prototype.s9 = function () {
    var tmp$ret$0;
    {
      var tmp0_synchronized = this.k1m_1;
      _set_data__9licbx(this, new SharedList(32));
      tmp$ret$0 = _set_size__9twho6(this, 0);
    }
    return tmp$ret$0;
  };
  ConcurrentList.prototype.d = function () {
    return this.w1m();
  };
  ConcurrentList.prototype.w1m = function () {
    return this.ia(0);
  };
  ConcurrentList.prototype.ia = function (index) {
    return new ConcurrentList$listIterator$1(index, this);
  };
  ConcurrentList.prototype.y9 = function (index) {
    var tmp$ret$0;
    {
      var tmp0_synchronized = this.k1m_1;
      checkIndex(this, index);
      var old = _get_data__d5abxd(this).l(index);
      _get_data__d5abxd(this).n1m(index, null);
      sweep(this, index);
      return ensureNotNull(old);
    }
  };
  ConcurrentList.prototype.x1m = function (index, element) {
    var tmp$ret$0;
    {
      var tmp0_synchronized = this.k1m_1;
      checkIndex(this, index);
      var old = _get_data__d5abxd(this).l(index);
      _get_data__d5abxd(this).n1m(index, element);
      var tmp0_elvis_lhs = old;
      return tmp0_elvis_lhs == null ? element : tmp0_elvis_lhs;
    }
  };
  ConcurrentList.prototype.q9 = function (index, element) {
    return this.x1m(index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ConcurrentList.$metadata$ = classMeta('ConcurrentList', [MutableList]);
  function data$factory() {
    return getPropertyCallableRef('data', 1, KMutableProperty1, function (receiver) {
      return _get_data__d5abxd(receiver);
    }, function (receiver, value) {
      return _set_data__9licbx(receiver, value);
    });
  }
  function data$factory_0() {
    return getPropertyCallableRef('data', 1, KMutableProperty1, function (receiver) {
      return _get_data__d5abxd(receiver);
    }, function (receiver, value) {
      return _set_data__9licbx(receiver, value);
    });
  }
  function size$factory() {
    return getPropertyCallableRef('size', 1, KMutableProperty1, function (receiver) {
      return receiver.g();
    }, function (receiver, value) {
      return _set_size__9twho6(receiver, value);
    });
  }
  function size$factory_0() {
    return getPropertyCallableRef('size', 1, KMutableProperty1, function (receiver) {
      return receiver.g();
    }, function (receiver, value) {
      return _set_size__9twho6(receiver, value);
    });
  }
  function current$factory() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return receiver.r1m();
    }, function (receiver, value) {
      return receiver.q1m(value);
    });
  }
  function current$factory_0() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return receiver.r1m();
    }, function (receiver, value) {
      return receiver.q1m(value);
    });
  }
  function _set_current__qj3kk($this, _set____db54di) {
    return $this.y1m_1.m4($this, current$factory_1(), _set____db54di);
  }
  function _get_current__qcrdxk($this) {
    return $this.y1m_1.l4($this, current$factory_2());
  }
  function _get_previous__aqp48k($this) {
    var tmp0_safe_receiver = _get_current__qcrdxk($this);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e1n();
  }
  function ConcurrentMap_init_$Init$(lock, initialCapacity, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      lock = new Lock();
    if (!(($mask0 & 2) === 0))
      initialCapacity = 32;
    ConcurrentMap.call($this, lock, initialCapacity);
    return $this;
  }
  function ConcurrentMap_init_$Create$(lock, initialCapacity, $mask0, $marker) {
    return ConcurrentMap_init_$Init$(lock, initialCapacity, $mask0, $marker, Object.create(ConcurrentMap.prototype));
  }
  function _set_table__kyr41j($this, _set____db54di) {
    return $this.g1n_1.m4($this, table$factory(), _set____db54di);
  }
  function _get_table__b2dcfx($this) {
    return $this.g1n_1.l4($this, table$factory_0());
  }
  function _set_insertionOrder__oq1ujs($this, _set____db54di) {
    return $this.h1n_1.m4($this, insertionOrder$factory(), _set____db54di);
  }
  function _get_insertionOrder__t1lho($this) {
    return $this.h1n_1.l4($this, insertionOrder$factory_0());
  }
  function _get_loadFactor__daomdy($this) {
    return $this.i1n_1.gi_1 / _get_table__b2dcfx($this).l1m_1;
  }
  function findBucket($this, key) {
    var bucketId = hashCode(key) & (_get_table__b2dcfx($this).l1m_1 - 1 | 0);
    return _get_table__b2dcfx($this).l(bucketId);
  }
  function findOrCreateBucket($this, key) {
    var bucketId = hashCode(key) & (_get_table__b2dcfx($this).l1m_1 - 1 | 0);
    var result = _get_table__b2dcfx($this).l(bucketId);
    if (result == null) {
      var bucket = new SharedForwardList();
      _get_table__b2dcfx($this).n1m(bucketId, bucket);
      return bucket;
    }
    return result;
  }
  function upsize($this) {
    var newTable = ConcurrentMap_init_$Create$(null, imul(_get_table__b2dcfx($this).l1m_1, 2), 1, null);
    newTable.j1n($this);
    _set_table__kyr41j($this, _get_table__b2dcfx(newTable));
  }
  function locked($this, block) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_withLock = $this.f1n_1;
      try {
        tmp0_withLock.i1l();
        var tmp$ret$0;
        {
          tmp$ret$0 = block();
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      }finally {
        tmp0_withLock.j1l();
      }
    }
    return tmp$ret$1;
  }
  function ConcurrentMap$containsValue$lambda(this$0, $value) {
    return function () {
      var tmp0_iterator = _get_table__b2dcfx(this$0).d();
      $l$loop: while (tmp0_iterator.e()) {
        var bucket = tmp0_iterator.f();
        var tmp1_elvis_lhs = bucket;
        if (tmp1_elvis_lhs == null)
          continue $l$loop;
        else
          tmp1_elvis_lhs;
        var tmp2_iterator = bucket.d();
        while (tmp2_iterator.e()) {
          var item = tmp2_iterator.f();
          if (equals(item.t(), $value)) {
            return true;
          }
        }
      }
      return false;
    };
  }
  function ConcurrentMap$get$lambda(this$0, $key) {
    return function () {
      var tmp0_elvis_lhs = findBucket(this$0, $key);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return null;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var bucket = tmp;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        $l$block: {
          var tmp0_iterator = bucket.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            var tmp$ret$0;
            {
              tmp$ret$0 = equals(element.m1n_1, $key);
            }
            if (tmp$ret$0) {
              tmp$ret$1 = element;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var item = tmp$ret$2;
      var tmp1_safe_receiver = item;
      return tmp1_safe_receiver == null ? null : tmp1_safe_receiver.t();
    };
  }
  function ConcurrentMap$clear$lambda(this$0) {
    return function () {
      _set_table__kyr41j(this$0, new SharedList(32));
      _set_insertionOrder__oq1ujs(this$0, new SharedForwardList());
      return Unit_getInstance();
    };
  }
  function ConcurrentMap$put$lambda(this$0, $key, $value) {
    return function () {
      var tmp;
      if (_get_loadFactor__daomdy(this$0) > 0.5) {
        tmp = upsize(this$0);
      }
      var bucket = findOrCreateBucket(this$0, $key);
      var tmp$ret$2;
      {
        var tmp$ret$1;
        $l$block: {
          var tmp0_iterator = bucket.d();
          while (tmp0_iterator.e()) {
            var element = tmp0_iterator.f();
            var tmp$ret$0;
            {
              tmp$ret$0 = equals(element.m1n_1, $key);
            }
            if (tmp$ret$0) {
              tmp$ret$1 = element;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      var item = tmp$ret$2;
      var tmp_0;
      if (!(item == null)) {
        var oldValue = item.t();
        item.q1n($value);
        return oldValue;
      }
      var mapNode = new MapNode($key, $value);
      var node = _get_insertionOrder__t1lho(this$0).r1n(mapNode);
      mapNode.s1n(node);
      bucket.t1n(mapNode);
      this$0.i1n_1.atomicfu$incrementAndGet();
      return null;
    };
  }
  function ConcurrentMap$remove$lambda(this$0, $key) {
    return function () {
      var tmp0_elvis_lhs = findBucket(this$0, $key);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return null;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var bucket = tmp;
      var tmp$ret$0;
      {
        var tmp0_with = bucket.d();
        {
        }
        while (tmp0_with.e()) {
          var item = tmp0_with.f();
          if (equals(item.m1n_1, $key)) {
            var result = item.t();
            this$0.i1n_1.atomicfu$decrementAndGet();
            item.v7();
            tmp0_with.v7();
            return result;
          }
        }
        tmp$ret$0 = Unit_getInstance();
      }
      return null;
    };
  }
  function ConcurrentMap$equals$lambda($other, this$0) {
    return function () {
      var tmp;
      var tmp_0;
      var tmp_1;
      if ($other == null) {
        tmp_1 = true;
      } else {
        tmp_1 = !(!($other == null) ? isInterface($other, Map) : false);
      }
      if (tmp_1) {
        tmp_0 = true;
      } else {
        tmp_0 = !($other.g() === this$0.g());
      }
      if (tmp_0) {
        return false;
      }
      var tmp0_iterator = $other.r().d();
      while (tmp0_iterator.e()) {
        var tmp1_loop_parameter = tmp0_iterator.f();
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp1_loop_parameter.s();
        }
        var key = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = tmp1_loop_parameter.t();
        }
        var value = tmp$ret$1;
        var tmp$ret$2;
        {
          tmp$ret$2 = (isInterface(this$0, Map) ? this$0 : THROW_CCE()).i2(key);
        }
        if (!equals(tmp$ret$2, value)) {
          return false;
        }
      }
      return true;
    };
  }
  function ConcurrentMap$hashCode$lambda(this$0) {
    return function () {
      var current = 7;
      var tmp0_iterator = this$0.r().d();
      while (tmp0_iterator.e()) {
        var tmp1_loop_parameter = tmp0_iterator.f();
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp1_loop_parameter.s();
        }
        var key = tmp$ret$0;
        var tmp$ret$1;
        {
          tmp$ret$1 = tmp1_loop_parameter.t();
        }
        var value = tmp$ret$1;
        current = Hash_getInstance().h1l([hashCode(key), hashCode(value), current]);
      }
      return current;
    };
  }
  function ConcurrentMap$toString$lambda(this$0) {
    return function () {
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0_apply = StringBuilder_init_$Create$_0();
          {
          }
          {
            tmp0_apply.pf('{');
            {
              var tmp0_forEachIndexed = this$0.r();
              var index = 0;
              var tmp0_iterator = tmp0_forEachIndexed.d();
              while (tmp0_iterator.e()) {
                var item = tmp0_iterator.f();
                {
                  var tmp1 = index;
                  index = tmp1 + 1 | 0;
                  var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
                  var tmp$ret$0;
                  {
                    tmp$ret$0 = item.s();
                  }
                  var key = tmp$ret$0;
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = item.t();
                  }
                  var value = tmp$ret$1;
                  tmp0_apply.pf('' + key + '=' + value);
                  if (!(tmp1__anonymous__uwfjfc === (this$0.g() - 1 | 0))) {
                    tmp0_apply.pf(', ');
                  }
                }
              }
            }
            tmp0_apply.pf('}');
          }
          tmp$ret$2 = tmp0_apply;
        }
        tmp$ret$3 = tmp$ret$2.toString();
      }
      return tmp$ret$3;
    };
  }
  function ConcurrentMap$iterator$1(this$0) {
    this.z1m_1 = this$0;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_shared = _get_insertionOrder__t1lho(this$0).u1n();
      tmp$ret$0 = new shared$1(tmp0_shared);
    }
    tmp.y1m_1 = tmp$ret$0;
    makeShared(this);
  }
  ConcurrentMap$iterator$1.prototype.e = function () {
    return !(_get_current__qcrdxk(this) == null);
  };
  ConcurrentMap$iterator$1.prototype.f = function () {
    var result = ensureNotNull(ensureNotNull(_get_current__qcrdxk(this)).b1n_1);
    var tmp0_safe_receiver = _get_current__qcrdxk(this);
    _set_current__qj3kk(this, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p1a());
    return result;
  };
  ConcurrentMap$iterator$1.prototype.v7 = function () {
    var item = ensureNotNull(ensureNotNull(_get_previous__aqp48k(this)).b1n_1);
    this.z1m_1.v1n(item.m1n_1);
  };
  ConcurrentMap$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function ConcurrentMap(lock, initialCapacity) {
    this.f1n_1 = lock;
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_shared = new SharedList(initialCapacity);
      tmp$ret$0 = new shared$1(tmp0_shared);
    }
    tmp.g1n_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_shared_0 = new SharedForwardList();
      tmp$ret$1 = new shared$1(tmp0_shared_0);
    }
    tmp_0.h1n_1 = tmp$ret$1;
    this.i1n_1 = atomic$int$1(0);
    makeShared(this);
  }
  ConcurrentMap.prototype.g = function () {
    return this.i1n_1.gi_1;
  };
  ConcurrentMap.prototype.w1n = function (key) {
    return !(this.x1n(key) == null);
  };
  ConcurrentMap.prototype.c2 = function (key) {
    if (!isObject(key))
      return false;
    return this.w1n(isObject(key) ? key : THROW_CCE());
  };
  ConcurrentMap.prototype.y1n = function (value) {
    return locked(this, ConcurrentMap$containsValue$lambda(this, value));
  };
  ConcurrentMap.prototype.x1n = function (key) {
    return locked(this, ConcurrentMap$get$lambda(this, key));
  };
  ConcurrentMap.prototype.i2 = function (key) {
    if (!isObject(key))
      return null;
    return this.x1n(isObject(key) ? key : THROW_CCE());
  };
  ConcurrentMap.prototype.m = function () {
    return this.g() === 0;
  };
  ConcurrentMap.prototype.s9 = function () {
    return locked(this, ConcurrentMap$clear$lambda(this));
  };
  ConcurrentMap.prototype.z1n = function (key, value) {
    return locked(this, ConcurrentMap$put$lambda(this, key, value));
  };
  ConcurrentMap.prototype.c = function (key, value) {
    var tmp = isObject(key) ? key : THROW_CCE();
    return this.z1n(tmp, isObject(value) ? value : THROW_CCE());
  };
  ConcurrentMap.prototype.j1n = function (from) {
    var tmp$ret$0;
    {
      tmp$ret$0 = from.r().d();
    }
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.e()) {
      var tmp1_loop_parameter = tmp0_iterator.f();
      var tmp$ret$1;
      {
        tmp$ret$1 = tmp1_loop_parameter.s();
      }
      var key = tmp$ret$1;
      var tmp$ret$2;
      {
        tmp$ret$2 = tmp1_loop_parameter.t();
      }
      var value = tmp$ret$2;
      this.z1n(key, value);
    }
  };
  ConcurrentMap.prototype.b3 = function (from) {
    return this.j1n(from);
  };
  ConcurrentMap.prototype.v1n = function (key) {
    return locked(this, ConcurrentMap$remove$lambda(this, key));
  };
  ConcurrentMap.prototype.xa = function (key) {
    if (!isObject(key))
      return null;
    return this.v1n(isObject(key) ? key : THROW_CCE());
  };
  ConcurrentMap.prototype.r = function () {
    return new MutableMapEntries(this);
  };
  ConcurrentMap.prototype.j2 = function () {
    return new ConcurrentMapKeys(this);
  };
  ConcurrentMap.prototype.k2 = function () {
    return new ConcurrentMapValues(this);
  };
  ConcurrentMap.prototype.equals = function (other) {
    return locked(this, ConcurrentMap$equals$lambda(other, this));
  };
  ConcurrentMap.prototype.hashCode = function () {
    return locked(this, ConcurrentMap$hashCode$lambda(this));
  };
  ConcurrentMap.prototype.toString = function () {
    return locked(this, ConcurrentMap$toString$lambda(this));
  };
  ConcurrentMap.prototype.d = function () {
    return new ConcurrentMap$iterator$1(this);
  };
  ConcurrentMap.$metadata$ = classMeta('ConcurrentMap', [MutableMap]);
  function table$factory() {
    return getPropertyCallableRef('table', 1, KMutableProperty1, function (receiver) {
      return _get_table__b2dcfx(receiver);
    }, function (receiver, value) {
      return _set_table__kyr41j(receiver, value);
    });
  }
  function table$factory_0() {
    return getPropertyCallableRef('table', 1, KMutableProperty1, function (receiver) {
      return _get_table__b2dcfx(receiver);
    }, function (receiver, value) {
      return _set_table__kyr41j(receiver, value);
    });
  }
  function insertionOrder$factory() {
    return getPropertyCallableRef('insertionOrder', 1, KMutableProperty1, function (receiver) {
      return _get_insertionOrder__t1lho(receiver);
    }, function (receiver, value) {
      return _set_insertionOrder__oq1ujs(receiver, value);
    });
  }
  function insertionOrder$factory_0() {
    return getPropertyCallableRef('insertionOrder', 1, KMutableProperty1, function (receiver) {
      return _get_insertionOrder__t1lho(receiver);
    }, function (receiver, value) {
      return _set_insertionOrder__oq1ujs(receiver, value);
    });
  }
  function current$factory_1() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return _get_current__qcrdxk(receiver);
    }, function (receiver, value) {
      return _set_current__qj3kk(receiver, value);
    });
  }
  function current$factory_2() {
    return getPropertyCallableRef('current', 1, KMutableProperty1, function (receiver) {
      return _get_current__qcrdxk(receiver);
    }, function (receiver, value) {
      return _set_current__qj3kk(receiver, value);
    });
  }
  function ConcurrentMapKeys$iterator$1(this$0) {
    this.a1o_1 = this$0.b1o_1.d();
    makeShared(this);
  }
  ConcurrentMapKeys$iterator$1.prototype.e = function () {
    return this.a1o_1.e();
  };
  ConcurrentMapKeys$iterator$1.prototype.f = function () {
    return this.a1o_1.f().s();
  };
  ConcurrentMapKeys$iterator$1.prototype.v7 = function () {
    this.a1o_1.v7();
  };
  ConcurrentMapKeys$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function ConcurrentMapKeys(delegate) {
    this.b1o_1 = delegate;
    makeShared(this);
  }
  ConcurrentMapKeys.prototype.c1o = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapKeys.prototype.a = function (element) {
    return this.c1o(isObject(element) ? element : THROW_CCE());
  };
  ConcurrentMapKeys.prototype.d1o = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapKeys.prototype.k = function (elements) {
    return this.d1o(elements);
  };
  ConcurrentMapKeys.prototype.s9 = function () {
    this.b1o_1.s9();
  };
  ConcurrentMapKeys.prototype.d = function () {
    return new ConcurrentMapKeys$iterator$1(this);
  };
  ConcurrentMapKeys.prototype.g = function () {
    return this.b1o_1.g();
  };
  ConcurrentMapKeys.prototype.e1o = function (element) {
    var tmp$ret$1;
    {
      var tmp0_contains = this.b1o_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).c2(element);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConcurrentMapKeys.prototype.l1 = function (element) {
    if (!isObject(element))
      return false;
    return this.e1o(isObject(element) ? element : THROW_CCE());
  };
  ConcurrentMapKeys.prototype.f1o = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.e1o(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ConcurrentMapKeys.prototype.m1 = function (elements) {
    return this.f1o(elements);
  };
  ConcurrentMapKeys.prototype.m = function () {
    return this.g() === 0;
  };
  ConcurrentMapKeys.$metadata$ = classMeta('ConcurrentMapKeys', [MutableSet]);
  function ConcurrentMapValues$iterator$1(this$0) {
    this.g1o_1 = this$0.h1o_1.d();
    makeShared(this);
  }
  ConcurrentMapValues$iterator$1.prototype.e = function () {
    return this.g1o_1.e();
  };
  ConcurrentMapValues$iterator$1.prototype.f = function () {
    return this.g1o_1.f().t();
  };
  ConcurrentMapValues$iterator$1.prototype.v7 = function () {
    this.g1o_1.v7();
  };
  ConcurrentMapValues$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function ConcurrentMapValues(delegate) {
    this.h1o_1 = delegate;
    makeShared(this);
  }
  ConcurrentMapValues.prototype.g = function () {
    return this.h1o_1.g();
  };
  ConcurrentMapValues.prototype.i1o = function (element) {
    return this.h1o_1.y1n(element);
  };
  ConcurrentMapValues.prototype.j1o = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.i1o(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ConcurrentMapValues.prototype.m1 = function (elements) {
    return this.j1o(elements);
  };
  ConcurrentMapValues.prototype.m = function () {
    return this.h1o_1.g() === 0;
  };
  ConcurrentMapValues.prototype.k1o = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapValues.prototype.a = function (element) {
    return this.k1o(isObject(element) ? element : THROW_CCE());
  };
  ConcurrentMapValues.prototype.l1o = function (elements) {
    throw UnsupportedOperationException_init_$Create$();
  };
  ConcurrentMapValues.prototype.k = function (elements) {
    return this.l1o(elements);
  };
  ConcurrentMapValues.prototype.d = function () {
    return new ConcurrentMapValues$iterator$1(this);
  };
  ConcurrentMapValues.$metadata$ = classMeta('ConcurrentMapValues', [MutableCollection]);
  function ForwardListIterator(head) {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(head);
    }
    tmp.m1o_1 = tmp$ret$0;
  }
  ForwardListIterator.prototype.n1o = function (_set____db54di) {
    return this.m1o_1.m4(this, previous$factory(), _set____db54di);
  };
  ForwardListIterator.prototype.e1n = function () {
    return this.m1o_1.l4(this, previous$factory_0());
  };
  ForwardListIterator.prototype.r1m = function () {
    var tmp0_safe_receiver = this.e1n();
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p1a();
  };
  ForwardListIterator.prototype.e = function () {
    var tmp0_safe_receiver = this.r1m();
    return !((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b1n_1) == null);
  };
  ForwardListIterator.prototype.f = function () {
    this.n1o(this.r1m());
    var tmp0_safe_receiver = this.e1n();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b1n_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  };
  ForwardListIterator.prototype.v7 = function () {
    var tmp0_safe_receiver = this.e1n();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp0_safe_receiver.v7();
      tmp = Unit_getInstance();
    }
    var tmp1_elvis_lhs = tmp;
    if (tmp1_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('Fail to remove element before iteration');
    } else {
    }
  };
  ForwardListIterator.$metadata$ = classMeta('ForwardListIterator', [MutableIterator]);
  function previous$factory() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver.e1n();
    }, function (receiver, value) {
      return receiver.n1o(value);
    });
  }
  function previous$factory_0() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver.e1n();
    }, function (receiver, value) {
      return receiver.n1o(value);
    });
  }
  function ForwardListNode(list, next, item, previous) {
    this.a1n_1 = list;
    this.b1n_1 = item;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(next);
    }
    tmp.c1n_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(previous);
    }
    tmp_0.d1n_1 = tmp$ret$1;
    makeShared(this);
  }
  ForwardListNode.prototype.o1o = function (_set____db54di) {
    return this.c1n_1.m4(this, next$factory(), _set____db54di);
  };
  ForwardListNode.prototype.p1a = function () {
    return this.c1n_1.l4(this, next$factory_0());
  };
  ForwardListNode.prototype.n1o = function (_set____db54di) {
    return this.d1n_1.m4(this, previous$factory_1(), _set____db54di);
  };
  ForwardListNode.prototype.e1n = function () {
    return this.d1n_1.l4(this, previous$factory_2());
  };
  ForwardListNode.prototype.p1o = function (value) {
    var result = new ForwardListNode(this.a1n_1, this.p1a(), value, this);
    var tmp0_safe_receiver = this.p1a();
    if (tmp0_safe_receiver == null) {
    } else
      tmp0_safe_receiver.n1o(result);
    this.o1o(result);
    return result;
  };
  ForwardListNode.prototype.q1o = function () {
    if (equals(this.p1a(), this.a1n_1.s1o())) {
      this.a1n_1.r1o(this);
    }
    var tmp0_safe_receiver = this.p1a();
    this.o1o(tmp0_safe_receiver == null ? null : tmp0_safe_receiver.p1a());
    var tmp1_safe_receiver = this.p1a();
    if (tmp1_safe_receiver == null) {
    } else
      tmp1_safe_receiver.n1o(this);
  };
  ForwardListNode.prototype.v7 = function () {
    ensureNotNull(this.e1n()).q1o();
  };
  ForwardListNode.$metadata$ = classMeta('ForwardListNode');
  function next$factory() {
    return getPropertyCallableRef('next', 1, KMutableProperty1, function (receiver) {
      return receiver.p1a();
    }, function (receiver, value) {
      return receiver.o1o(value);
    });
  }
  function next$factory_0() {
    return getPropertyCallableRef('next', 1, KMutableProperty1, function (receiver) {
      return receiver.p1a();
    }, function (receiver, value) {
      return receiver.o1o(value);
    });
  }
  function previous$factory_1() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver.e1n();
    }, function (receiver, value) {
      return receiver.n1o(value);
    });
  }
  function previous$factory_2() {
    return getPropertyCallableRef('previous', 1, KMutableProperty1, function (receiver) {
      return receiver.e1n();
    }, function (receiver, value) {
      return receiver.n1o(value);
    });
  }
  function MapNode(key, value) {
    this.m1n_1 = key;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(null);
    }
    tmp.n1n_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(value);
    }
    tmp_0.o1n_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      var tmp0_hashCode = this.m1n_1;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$2 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    }
    tmp_1.p1n_1 = tmp$ret$2;
    makeShared(this);
  }
  MapNode.prototype.s = function () {
    return this.m1n_1;
  };
  MapNode.prototype.s1n = function (_set____db54di) {
    return this.n1n_1.m4(this, backReference$factory(), _set____db54di);
  };
  MapNode.prototype.t1o = function () {
    return this.n1n_1.l4(this, backReference$factory_0());
  };
  MapNode.prototype.q1n = function (_set____db54di) {
    return this.o1n_1.m4(this, value$factory(), _set____db54di);
  };
  MapNode.prototype.t = function () {
    return this.o1n_1.l4(this, value$factory_0());
  };
  MapNode.prototype.t1k = function (newValue) {
    var result = this.t();
    this.q1n(newValue);
    return result;
  };
  MapNode.prototype.na = function (newValue) {
    return this.t1k((newValue == null ? true : isObject(newValue)) ? newValue : THROW_CCE());
  };
  MapNode.prototype.v7 = function () {
    ensureNotNull(this.t1o()).v7();
    this.s1n(null);
  };
  MapNode.prototype.toString = function () {
    return 'MapItem[' + this.m1n_1 + ', ' + this.t() + ']';
  };
  MapNode.$metadata$ = classMeta('MapNode', [MutableEntry]);
  function backReference$factory() {
    return getPropertyCallableRef('backReference', 1, KMutableProperty1, function (receiver) {
      return receiver.t1o();
    }, function (receiver, value) {
      return receiver.s1n(value);
    });
  }
  function backReference$factory_0() {
    return getPropertyCallableRef('backReference', 1, KMutableProperty1, function (receiver) {
      return receiver.t1o();
    }, function (receiver, value) {
      return receiver.s1n(value);
    });
  }
  function value$factory() {
    return getPropertyCallableRef('value', 1, KMutableProperty1, function (receiver) {
      return receiver.t();
    }, function (receiver, value) {
      return receiver.q1n(value);
    });
  }
  function value$factory_0() {
    return getPropertyCallableRef('value', 1, KMutableProperty1, function (receiver) {
      return receiver.t();
    }, function (receiver, value) {
      return receiver.q1n(value);
    });
  }
  function MutableMapEntries$iterator$1(this$0) {
    this.u1o_1 = this$0.v1o_1.d();
  }
  MutableMapEntries$iterator$1.prototype.e = function () {
    return this.u1o_1.e();
  };
  MutableMapEntries$iterator$1.prototype.f = function () {
    return this.u1o_1.f();
  };
  MutableMapEntries$iterator$1.prototype.v7 = function () {
    return this.u1o_1.v7();
  };
  MutableMapEntries$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function MutableMapEntries(delegate) {
    this.v1o_1 = delegate;
    makeShared(this);
  }
  MutableMapEntries.prototype.w1o = function (element) {
    return !equals(this.v1o_1.z1n(element.s(), element.t()), element.t());
  };
  MutableMapEntries.prototype.a = function (element) {
    return this.w1o((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  MutableMapEntries.prototype.x1o = function (elements) {
    var result = false;
    {
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          result = this.w1o(element) ? true : result;
        }
      }
    }
    return result;
  };
  MutableMapEntries.prototype.k = function (elements) {
    return this.x1o(elements);
  };
  MutableMapEntries.prototype.s9 = function () {
    this.v1o_1.s9();
  };
  MutableMapEntries.prototype.d = function () {
    return new MutableMapEntries$iterator$1(this);
  };
  MutableMapEntries.prototype.g = function () {
    return this.v1o_1.g();
  };
  MutableMapEntries.prototype.y1o = function (element) {
    return equals(this.v1o_1.x1n(element.s()), element.t());
  };
  MutableMapEntries.prototype.l1 = function (element) {
    if (!(!(element == null) ? isInterface(element, MutableEntry) : false))
      return false;
    return this.y1o((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  MutableMapEntries.prototype.z1o = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.y1o(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  MutableMapEntries.prototype.m1 = function (elements) {
    return this.z1o(elements);
  };
  MutableMapEntries.prototype.m = function () {
    return this.v1o_1.m();
  };
  MutableMapEntries.$metadata$ = classMeta('MutableMapEntries', [MutableSet]);
  function SharedForwardList() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(null);
    }
    tmp.k1n_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_shared = this.f11();
      tmp$ret$1 = new shared$1(tmp0_shared);
    }
    tmp_0.l1n_1 = tmp$ret$1;
    makeShared(this);
    this.a1p(new ForwardListNode(this, null, null, null));
    this.r1o(this.f11());
  }
  SharedForwardList.prototype.a1p = function (_set____db54di) {
    return this.k1n_1.m4(this, head$factory(), _set____db54di);
  };
  SharedForwardList.prototype.f11 = function () {
    return this.k1n_1.l4(this, head$factory_0());
  };
  SharedForwardList.prototype.r1o = function (_set____db54di) {
    return this.l1n_1.m4(this, tail$factory(), _set____db54di);
  };
  SharedForwardList.prototype.s1o = function () {
    return this.l1n_1.l4(this, tail$factory_0());
  };
  SharedForwardList.prototype.u1n = function () {
    return ensureNotNull(this.f11()).p1a();
  };
  SharedForwardList.prototype.t1n = function (value) {
    var newValue = ensureNotNull(this.f11()).p1o(value);
    if (equals(this.f11(), this.s1o())) {
      this.r1o(newValue);
    }
    return newValue;
  };
  SharedForwardList.prototype.r1n = function (value) {
    this.r1o(ensureNotNull(this.s1o()).p1o(value));
    return ensureNotNull(this.s1o());
  };
  SharedForwardList.prototype.d = function () {
    return new ForwardListIterator(ensureNotNull(this.f11()));
  };
  SharedForwardList.$metadata$ = classMeta('SharedForwardList', [MutableIterable]);
  function head$factory() {
    return getPropertyCallableRef('head', 1, KMutableProperty1, function (receiver) {
      return receiver.f11();
    }, function (receiver, value) {
      return receiver.a1p(value);
    });
  }
  function head$factory_0() {
    return getPropertyCallableRef('head', 1, KMutableProperty1, function (receiver) {
      return receiver.f11();
    }, function (receiver, value) {
      return receiver.a1p(value);
    });
  }
  function tail$factory() {
    return getPropertyCallableRef('tail', 1, KMutableProperty1, function (receiver) {
      return receiver.s1o();
    }, function (receiver, value) {
      return receiver.r1o(value);
    });
  }
  function tail$factory_0() {
    return getPropertyCallableRef('tail', 1, KMutableProperty1, function (receiver) {
      return receiver.s1o();
    }, function (receiver, value) {
      return receiver.r1o(value);
    });
  }
  function SharedList$listIterator$1($index, this$0) {
    this.c1p_1 = this$0;
    this.b1p_1 = atomic$int$1($index);
    makeShared(this);
  }
  SharedList$listIterator$1.prototype.e = function () {
    return this.b1p_1.gi_1 < this.c1p_1.l1m_1;
  };
  SharedList$listIterator$1.prototype.f = function () {
    {
      var tmp0_check = this.e();
      {
      }
      {
        {
        }
        if (!tmp0_check) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Check failed.';
          }
          var message = tmp$ret$0;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
    }
    var current = this.b1p_1.atomicfu$getAndIncrement();
    return this.c1p_1.m1m_1.atomicfu$get(current).fi_1;
  };
  SharedList$listIterator$1.$metadata$ = classMeta(undefined, [ListIterator]);
  function SharedList(size) {
    this.l1m_1 = size;
    this.m1m_1 = atomicfu$AtomicRefArray$ofNulls(this.l1m_1);
    makeShared(this);
  }
  SharedList.prototype.g = function () {
    return this.l1m_1;
  };
  SharedList.prototype.n1m = function (index, value) {
    this.m1m_1.atomicfu$get(index).fi_1 = value;
  };
  SharedList.prototype.d1p = function (element) {
    var inductionVariable = 0;
    var last = this.l1m_1;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.m1m_1.atomicfu$get(index).fi_1, element)) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  SharedList.prototype.l1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.d1p((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  SharedList.prototype.e1p = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.m();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = this.d1p(element);
        }
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SharedList.prototype.m1 = function (elements) {
    return this.e1p(elements);
  };
  SharedList.prototype.l = function (index) {
    return this.m1m_1.atomicfu$get(index).fi_1;
  };
  SharedList.prototype.m = function () {
    return this.l1m_1 === 0;
  };
  SharedList.prototype.d = function () {
    return this.ia(0);
  };
  SharedList.prototype.ia = function (index) {
    return new SharedList$listIterator$1(index, this);
  };
  SharedList.$metadata$ = classMeta('SharedList', [List]);
  function Companion() {
    Companion_instance = this;
    this.f1p_1 = GMTDate_0(new Long(0, 0));
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function GMTDate(seconds, minutes, hours, dayOfWeek, dayOfMonth, dayOfYear, month, year, timestamp) {
    Companion_getInstance_0();
    this.g1p_1 = seconds;
    this.h1p_1 = minutes;
    this.i1p_1 = hours;
    this.j1p_1 = dayOfWeek;
    this.k1p_1 = dayOfMonth;
    this.l1p_1 = dayOfYear;
    this.m1p_1 = month;
    this.n1p_1 = year;
    this.o1p_1 = timestamp;
  }
  GMTDate.prototype.p1p = function (other) {
    return this.o1p_1.g1(other.o1p_1);
  };
  GMTDate.prototype.u6 = function (other) {
    return this.p1p(other instanceof GMTDate ? other : THROW_CCE());
  };
  GMTDate.prototype.toString = function () {
    return 'GMTDate(seconds=' + this.g1p_1 + ', minutes=' + this.h1p_1 + ', hours=' + this.i1p_1 + ', dayOfWeek=' + this.j1p_1 + ', dayOfMonth=' + this.k1p_1 + ', dayOfYear=' + this.l1p_1 + ', month=' + this.m1p_1 + ', year=' + this.n1p_1 + ', timestamp=' + toString_0(this.o1p_1) + ')';
  };
  GMTDate.prototype.hashCode = function () {
    var result = this.g1p_1;
    result = imul(result, 31) + this.h1p_1 | 0;
    result = imul(result, 31) + this.i1p_1 | 0;
    result = imul(result, 31) + this.j1p_1.hashCode() | 0;
    result = imul(result, 31) + this.k1p_1 | 0;
    result = imul(result, 31) + this.l1p_1 | 0;
    result = imul(result, 31) + this.m1p_1.hashCode() | 0;
    result = imul(result, 31) + this.n1p_1 | 0;
    result = imul(result, 31) + this.o1p_1.hashCode() | 0;
    return result;
  };
  GMTDate.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GMTDate))
      return false;
    var tmp0_other_with_cast = other instanceof GMTDate ? other : THROW_CCE();
    if (!(this.g1p_1 === tmp0_other_with_cast.g1p_1))
      return false;
    if (!(this.h1p_1 === tmp0_other_with_cast.h1p_1))
      return false;
    if (!(this.i1p_1 === tmp0_other_with_cast.i1p_1))
      return false;
    if (!this.j1p_1.equals(tmp0_other_with_cast.j1p_1))
      return false;
    if (!(this.k1p_1 === tmp0_other_with_cast.k1p_1))
      return false;
    if (!(this.l1p_1 === tmp0_other_with_cast.l1p_1))
      return false;
    if (!this.m1p_1.equals(tmp0_other_with_cast.m1p_1))
      return false;
    if (!(this.n1p_1 === tmp0_other_with_cast.n1p_1))
      return false;
    if (!this.o1p_1.equals(tmp0_other_with_cast.o1p_1))
      return false;
    return true;
  };
  GMTDate.$metadata$ = classMeta('GMTDate', [Comparable]);
  var WeekDay_MONDAY_instance;
  var WeekDay_TUESDAY_instance;
  var WeekDay_WEDNESDAY_instance;
  var WeekDay_THURSDAY_instance;
  var WeekDay_FRIDAY_instance;
  var WeekDay_SATURDAY_instance;
  var WeekDay_SUNDAY_instance;
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.q1p = function (ordinal) {
    return values()[ordinal];
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_1() {
    WeekDay_initEntries();
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function values() {
    return [WeekDay_MONDAY_getInstance(), WeekDay_TUESDAY_getInstance(), WeekDay_WEDNESDAY_getInstance(), WeekDay_THURSDAY_getInstance(), WeekDay_FRIDAY_getInstance(), WeekDay_SATURDAY_getInstance(), WeekDay_SUNDAY_getInstance()];
  }
  var WeekDay_entriesInitialized;
  function WeekDay_initEntries() {
    if (WeekDay_entriesInitialized)
      return Unit_getInstance();
    WeekDay_entriesInitialized = true;
    WeekDay_MONDAY_instance = new WeekDay('MONDAY', 0, 'Mon');
    WeekDay_TUESDAY_instance = new WeekDay('TUESDAY', 1, 'Tue');
    WeekDay_WEDNESDAY_instance = new WeekDay('WEDNESDAY', 2, 'Wed');
    WeekDay_THURSDAY_instance = new WeekDay('THURSDAY', 3, 'Thu');
    WeekDay_FRIDAY_instance = new WeekDay('FRIDAY', 4, 'Fri');
    WeekDay_SATURDAY_instance = new WeekDay('SATURDAY', 5, 'Sat');
    WeekDay_SUNDAY_instance = new WeekDay('SUNDAY', 6, 'Sun');
    Companion_getInstance_1();
  }
  function WeekDay(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this.t1p_1 = value;
  }
  WeekDay.$metadata$ = classMeta('WeekDay', undefined, undefined, undefined, undefined, Enum.prototype);
  var Month_JANUARY_instance;
  var Month_FEBRUARY_instance;
  var Month_MARCH_instance;
  var Month_APRIL_instance;
  var Month_MAY_instance;
  var Month_JUNE_instance;
  var Month_JULY_instance;
  var Month_AUGUST_instance;
  var Month_SEPTEMBER_instance;
  var Month_OCTOBER_instance;
  var Month_NOVEMBER_instance;
  var Month_DECEMBER_instance;
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.q1p = function (ordinal) {
    return values_0()[ordinal];
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_2() {
    Month_initEntries();
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function values_0() {
    return [Month_JANUARY_getInstance(), Month_FEBRUARY_getInstance(), Month_MARCH_getInstance(), Month_APRIL_getInstance(), Month_MAY_getInstance(), Month_JUNE_getInstance(), Month_JULY_getInstance(), Month_AUGUST_getInstance(), Month_SEPTEMBER_getInstance(), Month_OCTOBER_getInstance(), Month_NOVEMBER_getInstance(), Month_DECEMBER_getInstance()];
  }
  var Month_entriesInitialized;
  function Month_initEntries() {
    if (Month_entriesInitialized)
      return Unit_getInstance();
    Month_entriesInitialized = true;
    Month_JANUARY_instance = new Month('JANUARY', 0, 'Jan');
    Month_FEBRUARY_instance = new Month('FEBRUARY', 1, 'Feb');
    Month_MARCH_instance = new Month('MARCH', 2, 'Mar');
    Month_APRIL_instance = new Month('APRIL', 3, 'Apr');
    Month_MAY_instance = new Month('MAY', 4, 'May');
    Month_JUNE_instance = new Month('JUNE', 5, 'Jun');
    Month_JULY_instance = new Month('JULY', 6, 'Jul');
    Month_AUGUST_instance = new Month('AUGUST', 7, 'Aug');
    Month_SEPTEMBER_instance = new Month('SEPTEMBER', 8, 'Sep');
    Month_OCTOBER_instance = new Month('OCTOBER', 9, 'Oct');
    Month_NOVEMBER_instance = new Month('NOVEMBER', 10, 'Nov');
    Month_DECEMBER_instance = new Month('DECEMBER', 11, 'Dec');
    Companion_getInstance_2();
  }
  function Month(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this.w1p_1 = value;
  }
  Month.$metadata$ = classMeta('Month', undefined, undefined, undefined, undefined, Enum.prototype);
  function WeekDay_MONDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_MONDAY_instance;
  }
  function WeekDay_TUESDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_TUESDAY_instance;
  }
  function WeekDay_WEDNESDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_WEDNESDAY_instance;
  }
  function WeekDay_THURSDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_THURSDAY_instance;
  }
  function WeekDay_FRIDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_FRIDAY_instance;
  }
  function WeekDay_SATURDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_SATURDAY_instance;
  }
  function WeekDay_SUNDAY_getInstance() {
    WeekDay_initEntries();
    return WeekDay_SUNDAY_instance;
  }
  function Month_JANUARY_getInstance() {
    Month_initEntries();
    return Month_JANUARY_instance;
  }
  function Month_FEBRUARY_getInstance() {
    Month_initEntries();
    return Month_FEBRUARY_instance;
  }
  function Month_MARCH_getInstance() {
    Month_initEntries();
    return Month_MARCH_instance;
  }
  function Month_APRIL_getInstance() {
    Month_initEntries();
    return Month_APRIL_instance;
  }
  function Month_MAY_getInstance() {
    Month_initEntries();
    return Month_MAY_instance;
  }
  function Month_JUNE_getInstance() {
    Month_initEntries();
    return Month_JUNE_instance;
  }
  function Month_JULY_getInstance() {
    Month_initEntries();
    return Month_JULY_instance;
  }
  function Month_AUGUST_getInstance() {
    Month_initEntries();
    return Month_AUGUST_instance;
  }
  function Month_SEPTEMBER_getInstance() {
    Month_initEntries();
    return Month_SEPTEMBER_instance;
  }
  function Month_OCTOBER_getInstance() {
    Month_initEntries();
    return Month_OCTOBER_instance;
  }
  function Month_NOVEMBER_getInstance() {
    Month_initEntries();
    return Month_NOVEMBER_instance;
  }
  function Month_DECEMBER_getInstance() {
    Month_initEntries();
    return Month_DECEMBER_instance;
  }
  function proceedLoop($this, $cont) {
    var tmp = new $proceedLoopCOROUTINE$1($this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  }
  function $proceedLoopCOROUTINE$1(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.f1q_1 = _this__u8e3s4;
  }
  $proceedLoopCOROUTINE$1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 6;
            this.vg_1 = 1;
            continue $sm;
          case 1:
            this.g1q_1 = this.f1q_1.n1q_1;
            if (this.g1q_1 === -1) {
              this.vg_1 = 5;
              continue $sm;
            } else {
              this.vg_1 = 2;
              continue $sm;
            }

            break;
          case 2:
            this.h1q_1 = this.f1q_1.k1q_1;
            if (this.g1q_1 >= this.h1q_1.g()) {
              this.f1q_1.o1q();
              this.vg_1 = 5;
              continue $sm;
            } else {
              this.vg_1 = 3;
              continue $sm;
            }

            break;
          case 3:
            this.i1q_1 = this.h1q_1.l(this.g1q_1);
            this.f1q_1.n1q_1 = this.g1q_1 + 1 | 0;
            this.vg_1 = 4;
            suspendResult = this.i1q_1(this.f1q_1, this.f1q_1.m1q_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            {
              this.vg_1 = 1;
              continue $sm;
            }

            this.vg_1 = 5;
            continue $sm;
          case 5:
            return this.f1q_1.m1q_1;
          case 6:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 6) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $proceedLoopCOROUTINE$1.$metadata$ = classMeta('$proceedLoopCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function DebugPipelineContext(context, interceptors, subject, coroutineContext) {
    this.j1q_1 = context;
    this.k1q_1 = interceptors;
    this.l1q_1 = coroutineContext;
    this.m1q_1 = subject;
    this.n1q_1 = 0;
  }
  DebugPipelineContext.prototype.q3 = function () {
    return this.j1q_1;
  };
  DebugPipelineContext.prototype.si = function () {
    return this.l1q_1;
  };
  DebugPipelineContext.prototype.o1q = function () {
    this.n1q_1 = -1;
  };
  DebugPipelineContext.prototype.p1q = function (subject, $cont) {
    this.m1q_1 = subject;
    return this.q1q($cont);
  };
  DebugPipelineContext.prototype.q1q = function ($cont) {
    var index = this.n1q_1;
    if (index < 0)
      return this.m1q_1;
    if (index >= this.k1q_1.g()) {
      this.o1q();
      return this.m1q_1;
    }
    return proceedLoop(this, $cont);
  };
  DebugPipelineContext.prototype.r1q = function (initial, $cont) {
    this.n1q_1 = 0;
    this.m1q_1 = initial;
    return this.q1q($cont);
  };
  DebugPipelineContext.prototype.s1q = function (initial, $cont) {
    return this.r1q(isObject(initial) ? initial : THROW_CCE(), $cont);
  };
  DebugPipelineContext.$metadata$ = classMeta('DebugPipelineContext', [PipelineContext, PipelineExecutor]);
  function _set_interceptors__wod97b($this, _set____db54di) {
    return $this.v1q_1.m4($this, interceptors$factory(), _set____db54di);
  }
  function _get_interceptors__h4min7($this) {
    return $this.v1q_1.l4($this, interceptors$factory_0());
  }
  function PhaseContent_init_$Init$(phase, relation, $this) {
    var tmp = Companion_getInstance_3().x1q_1;
    PhaseContent.call($this, phase, relation, isInterface(tmp, MutableList) ? tmp : THROW_CCE());
    {
      var tmp0_check = Companion_getInstance_3().x1q_1.m();
      {
      }
      if (!tmp0_check) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'The shared empty array list has been modified';
        }
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_0(message));
      }
    }
    return $this;
  }
  function PhaseContent_init_$Create$(phase, relation) {
    return PhaseContent_init_$Init$(phase, relation, Object.create(PhaseContent.prototype));
  }
  function copyInterceptors($this) {
    _set_interceptors__wod97b($this, $this.y1q());
    $this.z1q(false);
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.x1q_1 = sharedListOf([]);
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_3() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function PhaseContent(phase, relation, interceptors) {
    Companion_getInstance_3();
    this.t1q_1 = phase;
    this.u1q_1 = relation;
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(interceptors);
    }
    tmp.v1q_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(true);
    }
    tmp_0.w1q_1 = tmp$ret$1;
  }
  PhaseContent.prototype.z1q = function (_set____db54di) {
    return this.w1q_1.m4(this, shared$factory(), _set____db54di);
  };
  PhaseContent.prototype.a1r = function () {
    return this.w1q_1.l4(this, shared$factory_0());
  };
  PhaseContent.prototype.cq = function () {
    return _get_interceptors__h4min7(this).m();
  };
  PhaseContent.prototype.g = function () {
    return _get_interceptors__h4min7(this).g();
  };
  PhaseContent.prototype.b1r = function (interceptor) {
    if (this.a1r()) {
      copyInterceptors(this);
    }
    _get_interceptors__h4min7(this).a(interceptor);
  };
  PhaseContent.prototype.c1r = function (destination) {
    var interceptors = _get_interceptors__h4min7(this);
    if (destination instanceof ArrayList) {
      destination.ya(destination.g() + interceptors.g() | 0);
    }
    var inductionVariable = 0;
    var last = interceptors.g();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        destination.a(interceptors.l(index));
      }
       while (inductionVariable < last);
  };
  PhaseContent.prototype.d1r = function () {
    this.z1q(true);
    return _get_interceptors__h4min7(this);
  };
  PhaseContent.prototype.y1q = function () {
    var tmp$ret$0;
    {
      var tmp0_apply = sharedListOf([]);
      {
      }
      {
        tmp0_apply.k(_get_interceptors__h4min7(this));
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  };
  PhaseContent.prototype.toString = function () {
    return 'Phase `' + this.t1q_1.e1r_1 + '`, ' + this.g() + ' handlers';
  };
  PhaseContent.$metadata$ = classMeta('PhaseContent');
  function interceptors$factory() {
    return getPropertyCallableRef('interceptors', 1, KMutableProperty1, function (receiver) {
      return _get_interceptors__h4min7(receiver);
    }, function (receiver, value) {
      return _set_interceptors__wod97b(receiver, value);
    });
  }
  function interceptors$factory_0() {
    return getPropertyCallableRef('interceptors', 1, KMutableProperty1, function (receiver) {
      return _get_interceptors__h4min7(receiver);
    }, function (receiver, value) {
      return _set_interceptors__wod97b(receiver, value);
    });
  }
  function shared$factory() {
    return getPropertyCallableRef('shared', 1, KMutableProperty1, function (receiver) {
      return receiver.a1r();
    }, function (receiver, value) {
      return receiver.z1q(value);
    });
  }
  function shared$factory_0() {
    return getPropertyCallableRef('shared', 1, KMutableProperty1, function (receiver) {
      return receiver.a1r();
    }, function (receiver, value) {
      return receiver.z1q(value);
    });
  }
  function _set_interceptorsQuantity__wbahq($this, _set____db54di) {
    return $this.i1r_1.m4($this, interceptorsQuantity$factory(), _set____db54di);
  }
  function _get_interceptorsQuantity__d1rdim($this) {
    return $this.i1r_1.l4($this, interceptorsQuantity$factory_0());
  }
  function _set_interceptors__wod97b_0($this, value) {
    $this.j1r_1.fi_1 = value;
  }
  function _get_interceptors__h4min7_0($this) {
    return $this.j1r_1.fi_1;
  }
  function _set_interceptorsListShared__d5l722($this, _set____db54di) {
    return $this.k1r_1.m4($this, interceptorsListShared$factory(), _set____db54di);
  }
  function _get_interceptorsListShared__93i9dm($this) {
    return $this.k1r_1.l4($this, interceptorsListShared$factory_0());
  }
  function _set_interceptorsListSharedPhase__tmqge3($this, _set____db54di) {
    return $this.l1r_1.m4($this, interceptorsListSharedPhase$factory(), _set____db54di);
  }
  function _get_interceptorsListSharedPhase__2d8553($this) {
    return $this.l1r_1.l4($this, interceptorsListSharedPhase$factory_0());
  }
  function createContext($this, context, subject, coroutineContext) {
    return pipelineExecutorFor(context, sharedInterceptorsList($this), subject, coroutineContext, $this.m1r());
  }
  function findPhase($this, phase) {
    var phasesList = $this.h1r_1;
    var inductionVariable = 0;
    var last = phasesList.g();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var current = phasesList.l(index);
        if (current === phase) {
          var content = PhaseContent_init_$Create$(phase, Last_getInstance());
          phasesList.q9(index, content);
          return content;
        }
        var tmp;
        if (current instanceof PhaseContent) {
          tmp = current.t1q_1 === phase;
        } else {
          tmp = false;
        }
        if (tmp) {
          return current instanceof PhaseContent ? current : THROW_CCE();
        }
      }
       while (inductionVariable < last);
    return null;
  }
  function findPhaseIndex($this, phase) {
    var phasesList = $this.h1r_1;
    var inductionVariable = 0;
    var last = phasesList.g();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var current = phasesList.l(index);
        var tmp;
        if (current === phase) {
          tmp = true;
        } else {
          var tmp_0;
          if (current instanceof PhaseContent) {
            tmp_0 = current.t1q_1 === phase;
          } else {
            tmp_0 = false;
          }
          tmp = tmp_0;
        }
        if (tmp) {
          return index;
        }
      }
       while (inductionVariable < last);
    return -1;
  }
  function hasPhase($this, phase) {
    var phasesList = $this.h1r_1;
    var inductionVariable = 0;
    var last = phasesList.g();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var current = phasesList.l(index);
        var tmp;
        if (current === phase) {
          tmp = true;
        } else {
          var tmp_0;
          if (current instanceof PhaseContent) {
            tmp_0 = current.t1q_1 === phase;
          } else {
            tmp_0 = false;
          }
          tmp = tmp_0;
        }
        if (tmp) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  }
  function cacheInterceptors($this) {
    var interceptorsQuantity = _get_interceptorsQuantity__d1rdim($this);
    if (interceptorsQuantity === 0) {
      notSharedInterceptorsList($this, emptyList());
      return emptyList();
    }
    var phases = $this.h1r_1;
    if (interceptorsQuantity === 1) {
      var inductionVariable = 0;
      var last = get_lastIndex_0(phases);
      if (inductionVariable <= last)
        $l$loop: do {
          var phaseIndex = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp = phases.l(phaseIndex);
          var tmp1_elvis_lhs = tmp instanceof PhaseContent ? tmp : null;
          var tmp_0;
          if (tmp1_elvis_lhs == null) {
            continue $l$loop;
          } else {
            tmp_0 = tmp1_elvis_lhs;
          }
          var phaseContent = tmp_0;
          if (!phaseContent.cq()) {
            var interceptors = phaseContent.d1r();
            setInterceptorsListFromPhase($this, phaseContent);
            return interceptors;
          }
        }
         while (!(phaseIndex === last));
    }
    var destination = sharedListOf([]);
    var inductionVariable_0 = 0;
    var last_0 = get_lastIndex_0(phases);
    if (inductionVariable_0 <= last_0)
      $l$loop_0: do {
        var phaseIndex_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp_1 = phases.l(phaseIndex_0);
        var tmp3_elvis_lhs = tmp_1 instanceof PhaseContent ? tmp_1 : null;
        var tmp_2;
        if (tmp3_elvis_lhs == null) {
          continue $l$loop_0;
        } else {
          tmp_2 = tmp3_elvis_lhs;
        }
        var phase = tmp_2;
        phase.c1r(destination);
      }
       while (!(phaseIndex_0 === last_0));
    notSharedInterceptorsList($this, destination);
    return destination;
  }
  function sharedInterceptorsList($this) {
    if (_get_interceptors__h4min7_0($this) == null) {
      cacheInterceptors($this);
    }
    _set_interceptorsListShared__d5l722($this, true);
    return ensureNotNull(_get_interceptors__h4min7_0($this));
  }
  function resetInterceptorsList($this) {
    _set_interceptors__wod97b_0($this, null);
    _set_interceptorsListShared__d5l722($this, false);
    _set_interceptorsListSharedPhase__tmqge3($this, null);
  }
  function notSharedInterceptorsList($this, list) {
    _set_interceptors__wod97b_0($this, list);
    _set_interceptorsListShared__d5l722($this, false);
    _set_interceptorsListSharedPhase__tmqge3($this, null);
  }
  function setInterceptorsListFromPhase($this, phaseContent) {
    _set_interceptors__wod97b_0($this, phaseContent.d1r());
    _set_interceptorsListShared__d5l722($this, false);
    _set_interceptorsListSharedPhase__tmqge3($this, phaseContent.t1q_1);
  }
  function tryAddToPhaseFastPath($this, phase, block) {
    var currentInterceptors = _get_interceptors__h4min7_0($this);
    if ($this.h1r_1.m() ? true : currentInterceptors == null) {
      return false;
    }
    var tmp;
    if (_get_interceptorsListShared__93i9dm($this)) {
      tmp = true;
    } else {
      tmp = !(!(currentInterceptors == null) ? isInterface(currentInterceptors, MutableList) : false);
    }
    if (tmp) {
      return false;
    }
    if (equals(_get_interceptorsListSharedPhase__2d8553($this), phase)) {
      currentInterceptors.a(block);
      return true;
    }
    if (equals(phase, last($this.h1r_1)) ? true : findPhaseIndex($this, phase) === get_lastIndex_0($this.h1r_1)) {
      ensureNotNull(findPhase($this, phase)).b1r(block);
      currentInterceptors.a(block);
      return true;
    }
    return false;
  }
  function Pipeline(phases) {
    this.f1r_1 = Attributes_0(true);
    this.g1r_1 = false;
    this.h1r_1 = sharedListOf(phases.slice());
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = new shared$1(0);
    }
    tmp.i1r_1 = tmp$ret$0;
    this.j1r_1 = atomic$ref$1(null);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      tmp$ret$1 = new shared$1(false);
    }
    tmp_0.k1r_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    {
      tmp$ret$2 = new shared$1(null);
    }
    tmp_1.l1r_1 = tmp$ret$2;
  }
  Pipeline.prototype.m1r = function () {
    return this.g1r_1;
  };
  Pipeline.prototype.n1r = function (context, subject, $cont) {
    var tmp$ret$0;
    {
      tmp$ret$0 = $cont.q3();
    }
    return createContext(this, context, subject, tmp$ret$0).s1q(subject, $cont);
  };
  Pipeline.prototype.o1r = function (reference, phase) {
    if (hasPhase(this, phase))
      return Unit_getInstance();
    var index = findPhaseIndex(this, reference);
    if (index === -1) {
      throw new InvalidPhaseException('Phase ' + reference + ' was not registered for this pipeline');
    }
    this.h1r_1.fa(index, PhaseContent_init_$Create$(phase, new Before(reference)));
  };
  Pipeline.prototype.p1r = function (phase, block) {
    var tmp0_elvis_lhs = findPhase(this, phase);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw new InvalidPhaseException('Phase ' + phase + ' was not registered for this pipeline');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var phaseContent = tmp;
    if (tryAddToPhaseFastPath(this, phase, block)) {
      var tmp1_this = this;
      var tmp2 = _get_interceptorsQuantity__d1rdim(tmp1_this);
      _set_interceptorsQuantity__wbahq(tmp1_this, tmp2 + 1 | 0);
      return Unit_getInstance();
    }
    phaseContent.b1r(block);
    var tmp3_this = this;
    var tmp4 = _get_interceptorsQuantity__d1rdim(tmp3_this);
    _set_interceptorsQuantity__wbahq(tmp3_this, tmp4 + 1 | 0);
    resetInterceptorsList(this);
    this.q1r();
  };
  Pipeline.prototype.q1r = function () {
  };
  Pipeline.$metadata$ = classMeta('Pipeline');
  function interceptorsQuantity$factory() {
    return getPropertyCallableRef('interceptorsQuantity', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsQuantity__d1rdim(receiver);
    }, function (receiver, value) {
      return _set_interceptorsQuantity__wbahq(receiver, value);
    });
  }
  function interceptorsQuantity$factory_0() {
    return getPropertyCallableRef('interceptorsQuantity', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsQuantity__d1rdim(receiver);
    }, function (receiver, value) {
      return _set_interceptorsQuantity__wbahq(receiver, value);
    });
  }
  function interceptorsListShared$factory() {
    return getPropertyCallableRef('interceptorsListShared', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListShared__93i9dm(receiver);
    }, function (receiver, value) {
      return _set_interceptorsListShared__d5l722(receiver, value);
    });
  }
  function interceptorsListShared$factory_0() {
    return getPropertyCallableRef('interceptorsListShared', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListShared__93i9dm(receiver);
    }, function (receiver, value) {
      return _set_interceptorsListShared__d5l722(receiver, value);
    });
  }
  function interceptorsListSharedPhase$factory() {
    return getPropertyCallableRef('interceptorsListSharedPhase', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListSharedPhase__2d8553(receiver);
    }, function (receiver, value) {
      return _set_interceptorsListSharedPhase__tmqge3(receiver, value);
    });
  }
  function interceptorsListSharedPhase$factory_0() {
    return getPropertyCallableRef('interceptorsListSharedPhase', 1, KMutableProperty1, function (receiver) {
      return _get_interceptorsListSharedPhase__2d8553(receiver);
    }, function (receiver, value) {
      return _set_interceptorsListSharedPhase__tmqge3(receiver, value);
    });
  }
  function PipelineContext() {
  }
  PipelineContext.$metadata$ = interfaceMeta('PipelineContext', [CoroutineScope]);
  function PipelineExecutor() {
  }
  PipelineExecutor.$metadata$ = interfaceMeta('PipelineExecutor');
  function pipelineExecutorFor(context, interceptors, subject, coroutineContext, debugMode) {
    var tmp;
    if (debugMode) {
      tmp = new DebugPipelineContext(context, interceptors, subject, coroutineContext);
    } else {
      tmp = new SuspendFunctionGun(subject, context, interceptors);
    }
    return tmp;
  }
  function PipelinePhase(name) {
    this.e1r_1 = name;
  }
  PipelinePhase.prototype.toString = function () {
    return "Phase('" + this.e1r_1 + "')";
  };
  PipelinePhase.$metadata$ = classMeta('PipelinePhase');
  function InvalidPhaseException(message) {
    extendThrowable(this, message, void 1);
    captureStack(this, InvalidPhaseException);
  }
  InvalidPhaseException.$metadata$ = classMeta('InvalidPhaseException', undefined, undefined, undefined, undefined, Error.prototype);
  function Before(relativeTo) {
    PipelinePhaseRelation.call(this);
    this.r1r_1 = relativeTo;
  }
  Before.$metadata$ = classMeta('Before', undefined, undefined, undefined, undefined, PipelinePhaseRelation.prototype);
  function Last() {
    Last_instance = this;
    PipelinePhaseRelation.call(this);
  }
  Last.$metadata$ = objectMeta('Last', undefined, undefined, undefined, undefined, PipelinePhaseRelation.prototype);
  var Last_instance;
  function Last_getInstance() {
    if (Last_instance == null)
      new Last();
    return Last_instance;
  }
  function PipelinePhaseRelation() {
  }
  PipelinePhaseRelation.$metadata$ = classMeta('PipelinePhaseRelation');
  function recoverStackTraceBridge(exception, continuation) {
    var tmp;
    try {
      tmp = withCause(recoverStackTrace(exception, continuation), exception.cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = exception;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function loop($this, direct) {
    do {
      var index = $this.y1r_1;
      if (index === $this.t1r_1.g()) {
        if (!direct) {
          var tmp$ret$0;
          {
            var tmp0_success = Companion_getInstance();
            var tmp1_success = $this.w1r_1;
            tmp$ret$0 = _Result___init__impl__xyqfz8(tmp1_success);
          }
          resumeRootWith($this, tmp$ret$0);
          return false;
        }
        return true;
      }
      $this.y1r_1 = index + 1 | 0;
      var next = $this.t1r_1.l(index);
      try {
        var me = $this;
        var tmp$ret$3;
        {
          var tmp2_startCoroutineUninterceptedOrReturn3 = me.w1r_1;
          var tmp3_startCoroutineUninterceptedOrReturn3 = me.v1r_1;
          var block = SuspendFunctionGun$loop$slambda_0(next, me, tmp2_startCoroutineUninterceptedOrReturn3, null);
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              tmp$ret$1 = block;
            }
            var a = tmp$ret$1;
            tmp$ret$2 = typeof a === 'function' ? a(tmp3_startCoroutineUninterceptedOrReturn3) : block.fh(tmp3_startCoroutineUninterceptedOrReturn3);
          }
          tmp$ret$3 = tmp$ret$2;
        }
        var rc = tmp$ret$3;
        if (rc === get_COROUTINE_SUSPENDED()) {
          return false;
        }
      } catch ($p) {
        if ($p instanceof Error) {
          var tmp$ret$4;
          {
            var tmp4_failure = Companion_getInstance();
            tmp$ret$4 = _Result___init__impl__xyqfz8(createFailure($p));
          }
          resumeRootWith($this, tmp$ret$4);
          return false;
        } else {
          throw $p;
        }
      }
    }
     while (true);
  }
  function resumeRootWith($this, result) {
    var rootContinuation = $this.x1r_1;
    var tmp0_subject = rootContinuation;
    var tmp;
    if (tmp0_subject == null) {
      throw IllegalStateException_init_$Create$('No more continuations to resume');
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Continuation) : false) {
        $this.x1r_1 = null;
        $this.u1r_1 = -1;
        tmp = rootContinuation;
      } else {
        if (tmp0_subject instanceof ArrayList) {
          if (rootContinuation.m())
            throw IllegalStateException_init_$Create$('No more continuations to resume');
          $this.u1r_1 = get_lastIndex_0(rootContinuation) - 1 | 0;
          tmp = rootContinuation.y9(get_lastIndex_0(rootContinuation));
        } else {
          unexpectedRootContinuationValue($this, rootContinuation);
        }
      }
    }
    var tmp_0 = tmp;
    var next = (!(tmp_0 == null) ? isInterface(tmp_0, Continuation) : false) ? tmp_0 : THROW_CCE();
    if (!_Result___get_isFailure__impl__jpiriv(result)) {
      next.r3(result);
    } else {
      var exception = recoverStackTraceBridge(ensureNotNull(Result__exceptionOrNull_impl_p6xea9(result)), next);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
        }
        tmp$ret$1 = next.r3(tmp$ret$0);
      }
    }
  }
  function discardLastRootContinuation($this) {
    var rootContinuation = $this.x1r_1;
    var tmp0_subject = rootContinuation;
    if (tmp0_subject == null)
      throw IllegalStateException_init_$Create$('No more continuations to resume');
    else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Continuation) : false) {
        $this.u1r_1 = -1;
        $this.x1r_1 = null;
      } else {
        if (tmp0_subject instanceof ArrayList) {
          if (rootContinuation.m())
            throw IllegalStateException_init_$Create$('No more continuations to resume');
          rootContinuation.y9(get_lastIndex_0(rootContinuation));
          $this.u1r_1 = get_lastIndex_0(rootContinuation);
        } else {
          unexpectedRootContinuationValue($this, rootContinuation);
        }
      }
    }
  }
  function addContinuation($this, continuation) {
    var rootContinuation = $this.x1r_1;
    if (rootContinuation == null) {
      $this.u1r_1 = 0;
      $this.x1r_1 = continuation;
    } else {
      if (!(rootContinuation == null) ? isInterface(rootContinuation, Continuation) : false) {
        var tmp = $this;
        var tmp$ret$0;
        {
          var tmp0_apply = ArrayList_init_$Create$($this.t1r_1.g());
          {
          }
          {
            tmp0_apply.a(rootContinuation);
            tmp0_apply.a(continuation);
            $this.u1r_1 = 1;
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp.x1r_1 = tmp$ret$0;
      } else {
        if (rootContinuation instanceof ArrayList) {
          if (rootContinuation instanceof ArrayList)
            rootContinuation;
          else
            THROW_CCE();
          rootContinuation.a(continuation);
          $this.u1r_1 = get_lastIndex_0(rootContinuation);
        } else {
          unexpectedRootContinuationValue($this, rootContinuation);
        }
      }
    }
  }
  function unexpectedRootContinuationValue($this, rootContinuation) {
    throw IllegalStateException_init_$Create$('Unexpected rootContinuation content: ' + toString_1(rootContinuation));
  }
  function SuspendFunctionGun$continuation$1(this$0) {
    this.z1r_1 = this$0;
  }
  SuspendFunctionGun$continuation$1.prototype.q3 = function () {
    var cont = this.z1r_1.x1r_1;
    var tmp;
    if (cont == null) {
      throw IllegalStateException_init_$Create$('Not started');
    } else {
      if (!(cont == null) ? isInterface(cont, Continuation) : false) {
        tmp = cont.q3();
      } else {
        if (!(cont == null) ? isInterface(cont, List) : false) {
          tmp = last((!(cont == null) ? isInterface(cont, List) : false) ? cont : THROW_CCE()).q3();
        } else {
          throw IllegalStateException_init_$Create$('Unexpected rootContinuation value');
        }
      }
    }
    return tmp;
  };
  SuspendFunctionGun$continuation$1.prototype.a1s = function (result) {
    if (_Result___get_isFailure__impl__jpiriv(result)) {
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance();
        var tmp1_failure = ensureNotNull(Result__exceptionOrNull_impl_p6xea9(result));
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
      }
      resumeRootWith(this.z1r_1, tmp$ret$0);
      return Unit_getInstance();
    }
    loop(this.z1r_1, false);
  };
  SuspendFunctionGun$continuation$1.prototype.r3 = function (result) {
    return this.a1s(result);
  };
  SuspendFunctionGun$continuation$1.$metadata$ = classMeta(undefined, [Continuation, CoroutineStackFrame]);
  function SuspendFunctionGun$loop$slambda($next, $me, $tmp2_startCoroutineUninterceptedOrReturn3, resultContinuation) {
    this.j1s_1 = $next;
    this.k1s_1 = $me;
    this.l1s_1 = $tmp2_startCoroutineUninterceptedOrReturn3;
    CoroutineImpl.call(this, resultContinuation);
  }
  SuspendFunctionGun$loop$slambda.prototype.m1s = function ($cont) {
    var tmp = this.n1s($cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  SuspendFunctionGun$loop$slambda.prototype.fh = function ($cont) {
    return this.m1s($cont);
  };
  SuspendFunctionGun$loop$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.j1s_1(this.k1s_1, this.l1s_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  SuspendFunctionGun$loop$slambda.prototype.n1s = function (completion) {
    var i = new SuspendFunctionGun$loop$slambda(this.j1s_1, this.k1s_1, this.l1s_1, completion);
    return i;
  };
  SuspendFunctionGun$loop$slambda.$metadata$ = classMeta('SuspendFunctionGun$loop$slambda', undefined, undefined, undefined, [0], CoroutineImpl.prototype);
  function SuspendFunctionGun$loop$slambda_0($next, $me, $tmp2_startCoroutineUninterceptedOrReturn3, resultContinuation) {
    var i = new SuspendFunctionGun$loop$slambda($next, $me, $tmp2_startCoroutineUninterceptedOrReturn3, resultContinuation);
    var l = function ($cont) {
      return i.m1s($cont);
    };
    l.$arity = 0;
    return l;
  }
  function SuspendFunctionGun(initial, context, blocks) {
    this.s1r_1 = context;
    this.t1r_1 = blocks;
    this.u1r_1 = -1;
    var tmp = this;
    tmp.v1r_1 = new SuspendFunctionGun$continuation$1(this);
    this.w1r_1 = initial;
    this.x1r_1 = null;
    this.y1r_1 = 0;
    preventFreeze(this);
  }
  SuspendFunctionGun.prototype.q3 = function () {
    return this.s1r_1;
  };
  SuspendFunctionGun.prototype.si = function () {
    return this.v1r_1.q3();
  };
  SuspendFunctionGun.prototype.o1s = function () {
    return this.w1r_1;
  };
  SuspendFunctionGun.prototype.q1q = function ($cont) {
    var tmp$ret$0;
    $l$block_0: {
      var tmp0__anonymous__q1qw7t = $cont;
      if (this.y1r_1 === this.t1r_1.g()) {
        tmp$ret$0 = this.w1r_1;
        break $l$block_0;
      }
      addContinuation(this, tmp0__anonymous__q1qw7t);
      if (loop(this, true)) {
        discardLastRootContinuation(this);
        tmp$ret$0 = this.w1r_1;
        break $l$block_0;
      }
      tmp$ret$0 = get_COROUTINE_SUSPENDED();
    }
    return tmp$ret$0;
  };
  SuspendFunctionGun.prototype.p1q = function (subject, $cont) {
    this.w1r_1 = subject;
    return this.q1q($cont);
  };
  SuspendFunctionGun.prototype.r1q = function (initial, $cont) {
    this.y1r_1 = 0;
    if (this.y1r_1 === this.t1r_1.g())
      return initial;
    this.w1r_1 = initial;
    if (!(this.x1r_1 == null))
      throw IllegalStateException_init_$Create$('Already started');
    return this.q1q($cont);
  };
  SuspendFunctionGun.prototype.s1q = function (initial, $cont) {
    return this.r1q(isObject(initial) ? initial : THROW_CCE(), $cont);
  };
  SuspendFunctionGun.$metadata$ = classMeta('SuspendFunctionGun', [PipelineContext, PipelineExecutor, CoroutineScope]);
  function Attributes_0(concurrent) {
    return new AttributesJs();
  }
  function AttributesJs() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashMap_init_$Create$();
    }
    tmp.p1s_1 = tmp$ret$0;
  }
  AttributesJs.prototype.v1j = function (key) {
    var tmp = this.p1s_1.i2(key);
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  AttributesJs.prototype.w1j = function (key) {
    return this.p1s_1.c2(key);
  };
  AttributesJs.prototype.x1j = function (key, value) {
    {
      var tmp0_set = this.p1s_1;
      tmp0_set.c(key, value);
    }
  };
  AttributesJs.prototype.y1j = function (key, block) {
    var tmp0_safe_receiver = this.p1s_1.i2(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return isObject(tmp0_safe_receiver) ? tmp0_safe_receiver : THROW_CCE();
      }
    }
    var tmp$ret$1;
    {
      var tmp0_also = block();
      {
      }
      {
        {
          var tmp0_set = this.p1s_1;
          tmp0_set.c(key, tmp0_also);
        }
      }
      tmp$ret$1 = tmp0_also;
    }
    return tmp$ret$1;
  };
  AttributesJs.prototype.z1j = function () {
    return toList_0(this.p1s_1.j2());
  };
  AttributesJs.$metadata$ = classMeta('AttributesJs', [Attributes]);
  function unmodifiable(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function startCoroutineUninterceptedOrReturn3(_this__u8e3s4, receiver, arg, continuation) {
    var block = startCoroutineUninterceptedOrReturn3$slambda_0(_this__u8e3s4, receiver, arg, null);
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = block;
      }
      var a = tmp$ret$0;
      tmp$ret$1 = typeof a === 'function' ? a(continuation) : block.fh(continuation);
    }
    return tmp$ret$1;
  }
  function startCoroutineUninterceptedOrReturn3$slambda($this_startCoroutineUninterceptedOrReturn3, $receiver, $arg, resultContinuation) {
    this.y1s_1 = $this_startCoroutineUninterceptedOrReturn3;
    this.z1s_1 = $receiver;
    this.a1t_1 = $arg;
    CoroutineImpl.call(this, resultContinuation);
  }
  startCoroutineUninterceptedOrReturn3$slambda.prototype.m1s = function ($cont) {
    var tmp = this.n1s($cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  startCoroutineUninterceptedOrReturn3$slambda.prototype.fh = function ($cont) {
    return this.m1s($cont);
  };
  startCoroutineUninterceptedOrReturn3$slambda.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.y1s_1(this.z1s_1, this.a1t_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  startCoroutineUninterceptedOrReturn3$slambda.prototype.n1s = function (completion) {
    var i = new startCoroutineUninterceptedOrReturn3$slambda(this.y1s_1, this.z1s_1, this.a1t_1, completion);
    return i;
  };
  startCoroutineUninterceptedOrReturn3$slambda.$metadata$ = classMeta('startCoroutineUninterceptedOrReturn3$slambda', undefined, undefined, undefined, [0], CoroutineImpl.prototype);
  function startCoroutineUninterceptedOrReturn3$slambda_0($this_startCoroutineUninterceptedOrReturn3, $receiver, $arg, resultContinuation) {
    var i = new startCoroutineUninterceptedOrReturn3$slambda($this_startCoroutineUninterceptedOrReturn3, $receiver, $arg, resultContinuation);
    var l = function ($cont) {
      return i.m1s($cont);
    };
    l.$arity = 0;
    return l;
  }
  function Lock() {
  }
  Lock.prototype.i1l = function () {
  };
  Lock.prototype.j1l = function () {
  };
  Lock.$metadata$ = classMeta('Lock');
  function PlatformUtils() {
    PlatformUtils_instance = this;
    var tmp = this;
    var tmp_0 = typeof window !== 'undefined' && typeof window.document !== 'undefined';
    tmp.d1m_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'boolean' : false) ? tmp_0 : THROW_CCE();
    var tmp_1 = this;
    var tmp_2 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
    tmp_1.e1m_1 = (!(tmp_2 == null) ? typeof tmp_2 === 'boolean' : false) ? tmp_2 : THROW_CCE();
    this.f1m_1 = false;
    this.g1m_1 = false;
    this.h1m_1 = false;
  }
  PlatformUtils.prototype.b1t = function () {
    return this.d1m_1;
  };
  PlatformUtils.$metadata$ = objectMeta('PlatformUtils');
  var PlatformUtils_instance;
  function PlatformUtils_getInstance() {
    if (PlatformUtils_instance == null)
      new PlatformUtils();
    return PlatformUtils_instance;
  }
  function CoroutineStackFrame() {
  }
  CoroutineStackFrame.$metadata$ = interfaceMeta('CoroutineStackFrame');
  function GMTDate_0(timestamp) {
    var tmp0_safe_receiver = timestamp;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.jg();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = new Date(tmp1_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp2_elvis_lhs = tmp;
    var date = tmp2_elvis_lhs == null ? new Date() : tmp2_elvis_lhs;
    if (isNaN_0(date.getTime()))
      throw new InvalidTimestampException(ensureNotNull(timestamp));
    var tmp$ret$2;
    {
      {
      }
      var dayOfWeek = Companion_getInstance_1().q1p((date.getUTCDay() + 6 | 0) % 7 | 0);
      var month = Companion_getInstance_2().q1p(date.getUTCMonth());
      return new GMTDate(date.getUTCSeconds(), date.getUTCMinutes(), date.getUTCHours(), dayOfWeek, date.getUTCDate(), date.getUTCFullYear(), month, date.getUTCFullYear(), numberToLong(date.getTime()));
    }
  }
  function GMTDate$default(timestamp, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      timestamp = null;
    return GMTDate_0(timestamp);
  }
  function InvalidTimestampException(timestamp) {
    IllegalStateException_init_$Init$('Invalid date timestamp exception: ' + toString_0(timestamp), this);
    captureStack(this, InvalidTimestampException);
  }
  InvalidTimestampException.$metadata$ = classMeta('InvalidTimestampException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function withCause(_this__u8e3s4, cause) {
    return _this__u8e3s4;
  }
  //region block: post-declaration
  _no_name_provided__qut3iv.prototype.w3 = get;
  _no_name_provided__qut3iv.prototype.c4 = fold;
  _no_name_provided__qut3iv.prototype.b4 = minusKey;
  _no_name_provided__qut3iv.prototype.d4 = plus;
  AttributesJs.prototype.u1j = get_0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = toByteArray;
  _.$_$.b = GMTDate$default;
  _.$_$.c = SilentSupervisor$default;
  _.$_$.d = ConcurrentMap_init_$Create$;
  _.$_$.e = PlatformUtils_getInstance;
  _.$_$.f = ConcurrentList;
  _.$_$.g = PipelineContext;
  _.$_$.h = PipelinePhase;
  _.$_$.i = Pipeline;
  _.$_$.j = AttributeKey;
  _.$_$.k = Attributes_0;
  _.$_$.l = forEach;
  _.$_$.m = get_1;
  _.$_$.n = StringValuesBuilder;
  _.$_$.o = StringValuesImpl;
  _.$_$.p = StringValues;
  _.$_$.q = appendAll;
  _.$_$.r = flattenEntries;
  _.$_$.s = isLowerCase;
  _.$_$.t = toCharArray;
  _.$_$.u = toLowerCasePreservingASCIIRules;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(230), __nccwpck_require__(925), __nccwpck_require__(329)));

//# sourceMappingURL=kotlin_io_ktor_ktor_utils.js.map

/***/ }),

/***/ 329:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  var classMeta = kotlin_kotlin.$_$.y7;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var toString = kotlin_kotlin.$_$.ac;
  //endregion
  //region block: pre-declaration
  None.prototype = Object.create(atomicfu$TraceBase.prototype);
  None.prototype.constructor = None;
  //endregion
  function loop(_this__u8e3s4, action) {
    while (true) {
      action(_this__u8e3s4.fi_1);
    }
  }
  function loop_0(_this__u8e3s4, action) {
    while (true) {
      action(_this__u8e3s4.gi_1);
    }
  }
  function update(_this__u8e3s4, function_0) {
    while (true) {
      var cur = _this__u8e3s4.gi_1;
      var upd = function_0(cur);
      if (_this__u8e3s4.atomicfu$compareAndSet(cur, upd))
        return Unit_getInstance();
    }
  }
  function updateAndGet(_this__u8e3s4, function_0) {
    while (true) {
      var cur = _this__u8e3s4.gi_1;
      var upd = function_0(cur);
      if (_this__u8e3s4.atomicfu$compareAndSet(cur, upd))
        return upd;
    }
  }
  function atomicfu$AtomicRefArray$ref(size) {
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = size;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = atomic$ref$1(null);
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.hi_1 = tmp_2;
  }
  atomicfu$AtomicRefArray$ref.prototype.ii = function () {
    return this.hi_1.length;
  };
  atomicfu$AtomicRefArray$ref.prototype.atomicfu$get = function (index) {
    return this.hi_1[index];
  };
  atomicfu$AtomicRefArray$ref.$metadata$ = classMeta('AtomicArray');
  Object.defineProperty(atomicfu$AtomicRefArray$ref.prototype, 'atomicfu$size', {
    configurable: true,
    get: atomicfu$AtomicRefArray$ref.prototype.ii
  });
  function atomicfu$AtomicRefArray$ofNulls(size) {
    return new atomicfu$AtomicRefArray$ref(size);
  }
  function None() {
    None_instance = this;
    atomicfu$TraceBase.call(this);
  }
  None.$metadata$ = objectMeta('None', undefined, undefined, undefined, undefined, atomicfu$TraceBase.prototype);
  var None_instance;
  function None_getInstance() {
    if (None_instance == null)
      new None();
    return None_instance;
  }
  function atomicfu$TraceBase() {
  }
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$1 = function (event) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$2 = function (event1, event2) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$3 = function (event1, event2, event3) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$4 = function (event1, event2, event3, event4) {
  };
  atomicfu$TraceBase.$metadata$ = classMeta('TraceBase');
  function AtomicRef(value) {
    this.fi_1 = value;
  }
  AtomicRef.prototype.ji = function (_set____db54di) {
    this.fi_1 = _set____db54di;
  };
  AtomicRef.prototype.ki = function () {
    return this.fi_1;
  };
  AtomicRef.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.fi_1 === expect))
      return false;
    this.fi_1 = update;
    return true;
  };
  AtomicRef.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.fi_1;
    this.fi_1 = value;
    return oldValue;
  };
  AtomicRef.prototype.toString = function () {
    return toString(this.fi_1);
  };
  AtomicRef.$metadata$ = classMeta('AtomicRef');
  Object.defineProperty(AtomicRef.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicRef.prototype.ki,
    set: AtomicRef.prototype.ji
  });
  function atomic$ref$1(initial) {
    return atomic(initial, None_getInstance());
  }
  function AtomicBoolean(value) {
    this.li_1 = value;
  }
  AtomicBoolean.prototype.mi = function (_set____db54di) {
    this.li_1 = _set____db54di;
  };
  AtomicBoolean.prototype.ki = function () {
    return this.li_1;
  };
  AtomicBoolean.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.li_1 === expect))
      return false;
    this.li_1 = update;
    return true;
  };
  AtomicBoolean.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.li_1;
    this.li_1 = value;
    return oldValue;
  };
  AtomicBoolean.prototype.toString = function () {
    return this.li_1.toString();
  };
  AtomicBoolean.$metadata$ = classMeta('AtomicBoolean');
  Object.defineProperty(AtomicBoolean.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicBoolean.prototype.ki,
    set: AtomicBoolean.prototype.mi
  });
  function atomic$boolean$1(initial) {
    return atomic_0(initial, None_getInstance());
  }
  function AtomicInt(value) {
    this.gi_1 = value;
  }
  AtomicInt.prototype.ni = function (_set____db54di) {
    this.gi_1 = _set____db54di;
  };
  AtomicInt.prototype.ki = function () {
    return this.gi_1;
  };
  AtomicInt.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.gi_1 === expect))
      return false;
    this.gi_1 = update;
    return true;
  };
  AtomicInt.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.gi_1;
    this.gi_1 = value;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$getAndIncrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.gi_1;
    tmp0_this.gi_1 = tmp1 + 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndDecrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.gi_1;
    tmp0_this.gi_1 = tmp1 - 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndAdd = function (delta) {
    var oldValue = this.gi_1;
    var tmp0_this = this;
    tmp0_this.gi_1 = tmp0_this.gi_1 + delta | 0;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$addAndGet = function (delta) {
    var tmp0_this = this;
    tmp0_this.gi_1 = tmp0_this.gi_1 + delta | 0;
    return this.gi_1;
  };
  AtomicInt.prototype.atomicfu$incrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.gi_1 = tmp0_this.gi_1 + 1 | 0;
    return tmp0_this.gi_1;
  };
  AtomicInt.prototype.atomicfu$decrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.gi_1 = tmp0_this.gi_1 - 1 | 0;
    return tmp0_this.gi_1;
  };
  AtomicInt.prototype.toString = function () {
    return this.gi_1.toString();
  };
  AtomicInt.$metadata$ = classMeta('AtomicInt');
  Object.defineProperty(AtomicInt.prototype, 'kotlinx$atomicfu$value', {
    configurable: true,
    get: AtomicInt.prototype.ki,
    set: AtomicInt.prototype.ni
  });
  function atomic$int$1(initial) {
    return atomic_1(initial, None_getInstance());
  }
  function atomic(initial, trace) {
    return new AtomicRef(initial);
  }
  function atomic_0(initial, trace) {
    return new AtomicBoolean(initial);
  }
  function atomic_1(initial, trace) {
    return new AtomicInt(initial);
  }
  var Lock;
  function ReentrantLock() {
  }
  ReentrantLock.$metadata$ = classMeta('ReentrantLock');
  function synchronized(lock, block) {
    init_properties_Synchronized_kt_vep4ze();
    return block();
  }
  var properties_initialized_Synchronized_kt_8bwsba;
  function init_properties_Synchronized_kt_vep4ze() {
    if (properties_initialized_Synchronized_kt_8bwsba) {
    } else {
      properties_initialized_Synchronized_kt_8bwsba = true;
      Lock = new ReentrantLock();
    }
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = atomicfu$AtomicRefArray$ofNulls;
  _.$_$.b = atomic$boolean$1;
  _.$_$.c = atomic$ref$1;
  _.$_$.d = atomic$int$1;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391)));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_atomicfu.js.map

/***/ }),

/***/ 925:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_atomicfu) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var isObject = kotlin_kotlin.$_$.r8;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var plus = kotlin_kotlin.$_$.i7;
  var get = kotlin_kotlin.$_$.e7;
  var fold = kotlin_kotlin.$_$.d7;
  var minusKey = kotlin_kotlin.$_$.f7;
  var Continuation = kotlin_kotlin.$_$.c7;
  var classMeta = kotlin_kotlin.$_$.y7;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.d3;
  var createCoroutineUnintercepted = kotlin_kotlin.$_$.u6;
  var isInterface = kotlin_kotlin.$_$.p8;
  var CoroutineImpl = kotlin_kotlin.$_$.j7;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.t6;
  var startCoroutine = kotlin_kotlin.$_$.o7;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.yb;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var toString = kotlin_kotlin.$_$.ac;
  var toString_0 = kotlin_kotlin.$_$.c9;
  var atomic$int$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.d;
  var atomic$ref$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.c;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var atomic$boolean$1 = kotlin_org_jetbrains_kotlinx_atomicfu.$_$.b;
  var Result__exceptionOrNull_impl_p6xea9 = kotlin_kotlin.$_$.n2;
  var _Result___get_value__impl__bjfvqg = kotlin_kotlin.$_$.p2;
  var hashCode = kotlin_kotlin.$_$.f8;
  var equals = kotlin_kotlin.$_$.a8;
  var AbstractCoroutineContextKey = kotlin_kotlin.$_$.y6;
  var Key_getInstance = kotlin_kotlin.$_$.c3;
  var AbstractCoroutineContextElement = kotlin_kotlin.$_$.x6;
  var get_0 = kotlin_kotlin.$_$.z6;
  var minusKey_0 = kotlin_kotlin.$_$.a7;
  var ContinuationInterceptor = kotlin_kotlin.$_$.b7;
  var Key = kotlin_kotlin.$_$.h7;
  var Element = kotlin_kotlin.$_$.g7;
  var RuntimeException_init_$Create$ = kotlin_kotlin.$_$.z1;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var Enum = kotlin_kotlin.$_$.ya;
  var Long = kotlin_kotlin.$_$.db;
  var intercepted = kotlin_kotlin.$_$.v6;
  var Companion_getInstance = kotlin_kotlin.$_$.n3;
  var RuntimeException = kotlin_kotlin.$_$.gb;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.y1;
  var captureStack = kotlin_kotlin.$_$.t7;
  var Error_0 = kotlin_kotlin.$_$.za;
  var Error_init_$Init$ = kotlin_kotlin.$_$.i1;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.g1;
  var anyToString = kotlin_kotlin.$_$.q7;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.zb;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var ArrayList = kotlin_kotlin.$_$.u3;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.t1;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.o3;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.m2;
  var createFailure = kotlin_kotlin.$_$.rb;
  var UnsupportedOperationException = kotlin_kotlin.$_$.ob;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.c2;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var addSuppressed = kotlin_kotlin.$_$.pb;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var NoSuchElementException = kotlin_kotlin.$_$.eb;
  var NoSuchElementException_init_$Init$ = kotlin_kotlin.$_$.x1;
  var IllegalStateException = kotlin_kotlin.$_$.cb;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.q1;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  var arrayCopy = kotlin_kotlin.$_$.r4;
  var toLong = kotlin_kotlin.$_$.a9;
  var toLongOrNull = kotlin_kotlin.$_$.ka;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var IllegalStateException_init_$Init$_0 = kotlin_kotlin.$_$.s1;
  var coerceIn = kotlin_kotlin.$_$.j9;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.x;
  var UnsupportedOperationException_init_$Create$_0 = kotlin_kotlin.$_$.b2;
  //endregion
  //region block: pre-declaration
  function cancel$default(cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.ak(cause) : $handler(cause);
  }
  function invokeOnCompletion$default(onCancelling, invokeImmediately, handler, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancelling = false;
    if (!(($mask0 & 2) === 0))
      invokeImmediately = true;
    return $handler == null ? this.wj(onCancelling, invokeImmediately, handler) : $handler(onCancelling, invokeImmediately, handler);
  }
  AbstractCoroutine.prototype = Object.create(JobSupport.prototype);
  AbstractCoroutine.prototype.constructor = AbstractCoroutine;
  StandaloneCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  StandaloneCoroutine.prototype.constructor = StandaloneCoroutine;
  LazyStandaloneCoroutine.prototype = Object.create(StandaloneCoroutine.prototype);
  LazyStandaloneCoroutine.prototype.constructor = LazyStandaloneCoroutine;
  $awaitCOROUTINE$0.prototype = Object.create(CoroutineImpl.prototype);
  $awaitCOROUTINE$0.prototype.constructor = $awaitCOROUTINE$0;
  DeferredCoroutine.prototype = Object.create(AbstractCoroutine.prototype);
  DeferredCoroutine.prototype.constructor = DeferredCoroutine;
  LazyDeferredCoroutine.prototype = Object.create(DeferredCoroutine.prototype);
  LazyDeferredCoroutine.prototype.constructor = LazyDeferredCoroutine;
  function tryResume$default(value, idempotent, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      idempotent = null;
    return $handler == null ? this.vl(value, idempotent) : $handler(value, idempotent);
  }
  CancelHandler.prototype = Object.create(CancelHandlerBase.prototype);
  CancelHandler.prototype.constructor = CancelHandler;
  DisposeOnCancel.prototype = Object.create(CancelHandler.prototype);
  DisposeOnCancel.prototype.constructor = DisposeOnCancel;
  BeforeResumeCancelHandler.prototype = Object.create(CancelHandler.prototype);
  BeforeResumeCancelHandler.prototype.constructor = BeforeResumeCancelHandler;
  RemoveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveOnCancel.prototype.constructor = RemoveOnCancel;
  DispatchedTask.prototype = Object.create(SchedulerTask.prototype);
  DispatchedTask.prototype.constructor = DispatchedTask;
  CancellableContinuationImpl.prototype = Object.create(DispatchedTask.prototype);
  CancellableContinuationImpl.prototype.constructor = CancellableContinuationImpl;
  InvokeOnCancel.prototype = Object.create(CancelHandler.prototype);
  InvokeOnCancel.prototype.constructor = InvokeOnCancel;
  $awaitCOROUTINE$1.prototype = Object.create(CoroutineImpl.prototype);
  $awaitCOROUTINE$1.prototype.constructor = $awaitCOROUTINE$1;
  CompletableDeferredImpl.prototype = Object.create(JobSupport.prototype);
  CompletableDeferredImpl.prototype.constructor = CompletableDeferredImpl;
  CancelledContinuation.prototype = Object.create(CompletedExceptionally.prototype);
  CancelledContinuation.prototype.constructor = CancelledContinuation;
  Key_0.prototype = Object.create(AbstractCoroutineContextKey.prototype);
  Key_0.prototype.constructor = Key_0;
  CoroutineDispatcher.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  CoroutineDispatcher.prototype.constructor = CoroutineDispatcher;
  _no_name_provided__qut3iv.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  _no_name_provided__qut3iv.prototype.constructor = _no_name_provided__qut3iv;
  CoroutineName.prototype = Object.create(AbstractCoroutineContextElement.prototype);
  CoroutineName.prototype.constructor = CoroutineName;
  CoroutineStart.prototype = Object.create(Enum.prototype);
  CoroutineStart.prototype.constructor = CoroutineStart;
  EventLoop.prototype = Object.create(CoroutineDispatcher.prototype);
  EventLoop.prototype.constructor = EventLoop;
  CompletionHandlerException.prototype = Object.create(RuntimeException.prototype);
  CompletionHandlerException.prototype.constructor = CompletionHandlerException;
  CoroutinesInternalError.prototype = Object.create(Error_0.prototype);
  CoroutinesInternalError.prototype.constructor = CoroutinesInternalError;
  LinkedListHead.prototype = Object.create(LinkedListNode.prototype);
  LinkedListHead.prototype.constructor = LinkedListHead;
  NodeList.prototype = Object.create(LinkedListHead.prototype);
  NodeList.prototype.constructor = NodeList;
  CompletionHandlerBase.prototype = Object.create(LinkedListNode.prototype);
  CompletionHandlerBase.prototype.constructor = CompletionHandlerBase;
  JobNode.prototype = Object.create(CompletionHandlerBase.prototype);
  JobNode.prototype.constructor = JobNode;
  ChildCompletion.prototype = Object.create(JobNode.prototype);
  ChildCompletion.prototype.constructor = ChildCompletion;
  AwaitContinuation.prototype = Object.create(CancellableContinuationImpl.prototype);
  AwaitContinuation.prototype.constructor = AwaitContinuation;
  JobCancellingNode.prototype = Object.create(JobNode.prototype);
  JobCancellingNode.prototype.constructor = JobCancellingNode;
  ChildHandleNode.prototype = Object.create(JobCancellingNode.prototype);
  ChildHandleNode.prototype.constructor = ChildHandleNode;
  InvokeOnCancelling.prototype = Object.create(JobCancellingNode.prototype);
  InvokeOnCancelling.prototype.constructor = InvokeOnCancelling;
  InvokeOnCompletion.prototype = Object.create(JobNode.prototype);
  InvokeOnCompletion.prototype.constructor = InvokeOnCompletion;
  ResumeOnCompletion.prototype = Object.create(JobNode.prototype);
  ResumeOnCompletion.prototype.constructor = ResumeOnCompletion;
  ResumeAwaitOnCompletion.prototype = Object.create(JobNode.prototype);
  ResumeAwaitOnCompletion.prototype.constructor = ResumeAwaitOnCompletion;
  ChildContinuation.prototype = Object.create(JobCancellingNode.prototype);
  ChildContinuation.prototype.constructor = ChildContinuation;
  JobImpl.prototype = Object.create(JobSupport.prototype);
  JobImpl.prototype.constructor = JobImpl;
  MainCoroutineDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  MainCoroutineDispatcher.prototype.constructor = MainCoroutineDispatcher;
  SupervisorJobImpl.prototype = Object.create(JobImpl.prototype);
  SupervisorJobImpl.prototype.constructor = SupervisorJobImpl;
  CancellationException.prototype = Object.create(IllegalStateException.prototype);
  CancellationException.prototype.constructor = CancellationException;
  TimeoutCancellationException.prototype = Object.create(CancellationException.prototype);
  TimeoutCancellationException.prototype.constructor = TimeoutCancellationException;
  Unconfined.prototype = Object.create(CoroutineDispatcher.prototype);
  Unconfined.prototype.constructor = Unconfined;
  RemoveReceiveOnCancel.prototype = Object.create(BeforeResumeCancelHandler.prototype);
  RemoveReceiveOnCancel.prototype.constructor = RemoveReceiveOnCancel;
  Receive.prototype = Object.create(LinkedListNode.prototype);
  Receive.prototype.constructor = Receive;
  ReceiveHasNext.prototype = Object.create(Receive.prototype);
  ReceiveHasNext.prototype.constructor = ReceiveHasNext;
  function close$default(cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.lw(cause) : $handler(cause);
  }
  function cancel$default_0(cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return $handler == null ? this.ak(cause) : $handler(cause);
  }
  AbstractChannel.prototype = Object.create(AbstractSendChannel.prototype);
  AbstractChannel.prototype.constructor = AbstractChannel;
  Send.prototype = Object.create(LinkedListNode.prototype);
  Send.prototype.constructor = Send;
  SendBuffered.prototype = Object.create(Send.prototype);
  SendBuffered.prototype.constructor = SendBuffered;
  Closed.prototype = Object.create(Send.prototype);
  Closed.prototype.constructor = Closed;
  SendElement.prototype = Object.create(Send.prototype);
  SendElement.prototype.constructor = SendElement;
  SendElementWithUndeliveredHandler.prototype = Object.create(SendElement.prototype);
  SendElementWithUndeliveredHandler.prototype.constructor = SendElementWithUndeliveredHandler;
  ArrayChannel.prototype = Object.create(AbstractChannel.prototype);
  ArrayChannel.prototype.constructor = ArrayChannel;
  BufferOverflow.prototype = Object.create(Enum.prototype);
  BufferOverflow.prototype.constructor = BufferOverflow;
  ClosedReceiveChannelException.prototype = Object.create(NoSuchElementException.prototype);
  ClosedReceiveChannelException.prototype.constructor = ClosedReceiveChannelException;
  ClosedSendChannelException.prototype = Object.create(IllegalStateException.prototype);
  ClosedSendChannelException.prototype.constructor = ClosedSendChannelException;
  ConflatedChannel.prototype = Object.create(AbstractChannel.prototype);
  ConflatedChannel.prototype.constructor = ConflatedChannel;
  LinkedListChannel.prototype = Object.create(AbstractChannel.prototype);
  LinkedListChannel.prototype.constructor = LinkedListChannel;
  RendezvousChannel.prototype = Object.create(AbstractChannel.prototype);
  RendezvousChannel.prototype.constructor = RendezvousChannel;
  DispatchedContinuation.prototype = Object.create(DispatchedTask.prototype);
  DispatchedContinuation.prototype.constructor = DispatchedContinuation;
  UndeliveredElementException.prototype = Object.create(RuntimeException.prototype);
  UndeliveredElementException.prototype.constructor = UndeliveredElementException;
  JsMainDispatcher.prototype = Object.create(MainCoroutineDispatcher.prototype);
  JsMainDispatcher.prototype.constructor = JsMainDispatcher;
  UnconfinedEventLoop.prototype = Object.create(EventLoop.prototype);
  UnconfinedEventLoop.prototype.constructor = UnconfinedEventLoop;
  JobCancellationException.prototype = Object.create(CancellationException.prototype);
  JobCancellationException.prototype.constructor = JobCancellationException;
  SetTimeoutBasedDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  SetTimeoutBasedDispatcher.prototype.constructor = SetTimeoutBasedDispatcher;
  NodeDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  NodeDispatcher.prototype.constructor = NodeDispatcher;
  SetTimeoutDispatcher.prototype = Object.create(SetTimeoutBasedDispatcher.prototype);
  SetTimeoutDispatcher.prototype.constructor = SetTimeoutDispatcher;
  MessageQueue.prototype = Object.create(ArrayQueue.prototype);
  MessageQueue.prototype.constructor = MessageQueue;
  ScheduledMessageQueue.prototype = Object.create(MessageQueue.prototype);
  ScheduledMessageQueue.prototype.constructor = ScheduledMessageQueue;
  ClearTimeout.prototype = Object.create(CancelHandler.prototype);
  ClearTimeout.prototype.constructor = ClearTimeout;
  WindowDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  WindowDispatcher.prototype.constructor = WindowDispatcher;
  WindowMessageQueue.prototype = Object.create(MessageQueue.prototype);
  WindowMessageQueue.prototype.constructor = WindowMessageQueue;
  ArrayChannelState.prototype = Object.create(ArrayBufferState.prototype);
  ArrayChannelState.prototype.constructor = ArrayChannelState;
  //endregion
  function AbstractCoroutine(parentContext, active) {
    JobSupport.call(this, active);
    this.qi_1 = parentContext;
    this.ri_1 = this.qi_1.d4(this);
  }
  AbstractCoroutine.prototype.q3 = function () {
    return this.ri_1;
  };
  AbstractCoroutine.prototype.si = function () {
    return this.ri_1;
  };
  AbstractCoroutine.prototype.ti = function () {
    return JobSupport.prototype.ti.call(this);
  };
  AbstractCoroutine.prototype.wi = function () {
    this.xi(this.qi_1.w3(Key_getInstance_3()));
  };
  AbstractCoroutine.prototype.yi = function () {
  };
  AbstractCoroutine.prototype.zi = function () {
    this.yi();
  };
  AbstractCoroutine.prototype.aj = function (value) {
  };
  AbstractCoroutine.prototype.bj = function (cause, handled) {
  };
  AbstractCoroutine.prototype.cj = function () {
    return get_classSimpleName(this) + ' was cancelled';
  };
  AbstractCoroutine.prototype.dj = function (state) {
    if (state instanceof CompletedExceptionally)
      this.bj(state.ej_1, state.gj());
    else {
      this.aj((state == null ? true : isObject(state)) ? state : THROW_CCE());
    }
  };
  AbstractCoroutine.prototype.r3 = function (result) {
    var state = this.hj(toState$default(result, null, 1, null));
    if (state === get_COMPLETING_WAITING_CHILDREN())
      return Unit_getInstance();
    this.ij(state);
  };
  AbstractCoroutine.prototype.ij = function (state) {
    return this.jj(state);
  };
  AbstractCoroutine.prototype.kj = function (exception) {
    handleCoroutineException(this.ri_1, exception);
  };
  AbstractCoroutine.prototype.lj = function () {
    var tmp0_elvis_lhs = get_coroutineName(this.ri_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return JobSupport.prototype.lj.call(this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var coroutineName = tmp;
    return '"' + coroutineName + '":' + JobSupport.prototype.lj.call(this);
  };
  AbstractCoroutine.prototype.mj = function (start, receiver, block) {
    {
      this.wi();
      startCoroutineImpl(start, receiver, this, null, block);
    }
  };
  AbstractCoroutine.$metadata$ = classMeta('AbstractCoroutine', [Job, Continuation, CoroutineScope], undefined, undefined, undefined, JobSupport.prototype);
  function launch(_this__u8e3s4, context, start, block) {
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = start.qk() ? new LazyStandaloneCoroutine(newContext, block) : new StandaloneCoroutine(newContext, true);
    coroutine.mj(start, coroutine, block);
    return coroutine;
  }
  function launch$default(_this__u8e3s4, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return launch(_this__u8e3s4, context, start, block);
  }
  function async(_this__u8e3s4, context, start, block) {
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = start.qk() ? new LazyDeferredCoroutine(newContext, block) : new DeferredCoroutine(newContext, true);
    coroutine.mj(start, coroutine, block);
    return coroutine;
  }
  function async$default(_this__u8e3s4, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return async(_this__u8e3s4, context, start, block);
  }
  function StandaloneCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, active);
  }
  StandaloneCoroutine.prototype.mk = function (exception) {
    handleCoroutineException(this.q3(), exception);
    return true;
  };
  StandaloneCoroutine.$metadata$ = classMeta('StandaloneCoroutine', undefined, undefined, undefined, undefined, AbstractCoroutine.prototype);
  function LazyStandaloneCoroutine(parentContext, block) {
    StandaloneCoroutine.call(this, parentContext, false);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = createCoroutineUnintercepted(block, this, this);
    }
    tmp.zk_1 = tmp$ret$0;
  }
  LazyStandaloneCoroutine.prototype.yi = function () {
    var tmp$ret$0;
    {
      var tmp0_startLazyCoroutine = this.zk_1;
      tmp$ret$0 = startCoroutineCancellable_0(isInterface(tmp0_startLazyCoroutine, Continuation) ? tmp0_startLazyCoroutine : THROW_CCE(), this);
    }
  };
  LazyStandaloneCoroutine.$metadata$ = classMeta('LazyStandaloneCoroutine', undefined, undefined, undefined, undefined, StandaloneCoroutine.prototype);
  function $awaitCOROUTINE$0(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.il_1 = _this__u8e3s4;
  }
  $awaitCOROUTINE$0.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.il_1.jl(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return (suspendResult == null ? true : isObject(suspendResult)) ? suspendResult : THROW_CCE();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $awaitCOROUTINE$0.$metadata$ = classMeta('$awaitCOROUTINE$0', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function DeferredCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, active);
  }
  DeferredCoroutine.prototype.ol = function ($cont) {
    var tmp = new $awaitCOROUTINE$0(this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  DeferredCoroutine.$metadata$ = classMeta('DeferredCoroutine', [Deferred, SelectClause1], undefined, undefined, undefined, AbstractCoroutine.prototype);
  function LazyDeferredCoroutine(parentContext, block) {
    DeferredCoroutine.call(this, parentContext, false);
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = createCoroutineUnintercepted(block, this, this);
    }
    tmp.tl_1 = tmp$ret$0;
  }
  LazyDeferredCoroutine.prototype.yi = function () {
    var tmp$ret$0;
    {
      var tmp0_startLazyCoroutine = this.tl_1;
      tmp$ret$0 = startCoroutineCancellable_0(isInterface(tmp0_startLazyCoroutine, Continuation) ? tmp0_startLazyCoroutine : THROW_CCE(), this);
    }
  };
  LazyDeferredCoroutine.$metadata$ = classMeta('LazyDeferredCoroutine', undefined, undefined, undefined, undefined, DeferredCoroutine.prototype);
  function startCoroutineImpl(start, receiver, completion, onCancellation, block) {
    var tmp0_subject = start;
    var tmp0 = tmp0_subject.a5();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = startCoroutineCancellable(block, receiver, completion, onCancellation);
        break;
      case 2:
        tmp = startCoroutine(block, receiver, completion);
        break;
      case 3:
        tmp = startCoroutineUndispatched(block, receiver, completion);
        break;
      case 1:
        tmp = Unit_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function CancellableContinuation() {
  }
  CancellableContinuation.$metadata$ = interfaceMeta('CancellableContinuation', [Continuation]);
  function disposeOnCancellation(_this__u8e3s4, handle) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new DisposeOnCancel(handle);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return _this__u8e3s4.am(tmp$ret$1);
  }
  function DisposeOnCancel(handle) {
    CancelHandler.call(this);
    this.dm_1 = handle;
  }
  DisposeOnCancel.prototype.em = function (cause) {
    return this.dm_1.fm();
  };
  DisposeOnCancel.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  DisposeOnCancel.prototype.toString = function () {
    return 'DisposeOnCancel[' + this.dm_1 + ']';
  };
  DisposeOnCancel.$metadata$ = classMeta('DisposeOnCancel', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  function removeOnCancellation(_this__u8e3s4, node) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new RemoveOnCancel(node);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return _this__u8e3s4.am(tmp$ret$1);
  }
  function getOrCreateCancellableContinuation(delegate) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = true;
    }
    if (!tmp$ret$0) {
      tmp = true;
    } else {
      tmp = !(delegate instanceof DispatchedContinuation);
    }
    if (tmp) {
      return new CancellableContinuationImpl(delegate, get_MODE_CANCELLABLE_REUSABLE());
    }
    var tmp0_safe_receiver = delegate.mm();
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$2;
      {
        {
        }
        var tmp_1;
        var tmp$ret$1;
        {
          tmp$ret$1 = tmp0_safe_receiver.tm();
        }
        if (tmp$ret$1) {
          tmp_1 = tmp0_safe_receiver;
        } else {
          tmp_1 = null;
        }
        tmp$ret$2 = tmp_1;
      }
      tmp_0 = tmp$ret$2;
    }
    var tmp1_elvis_lhs = tmp_0;
    var tmp_2;
    if (tmp1_elvis_lhs == null) {
      return new CancellableContinuationImpl(delegate, get_MODE_CANCELLABLE_REUSABLE());
    } else {
      tmp_2 = tmp1_elvis_lhs;
    }
    return tmp_2;
  }
  function RemoveOnCancel(node) {
    BeforeResumeCancelHandler.call(this);
    this.um_1 = node;
  }
  RemoveOnCancel.prototype.em = function (cause) {
    this.um_1.ym();
  };
  RemoveOnCancel.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  RemoveOnCancel.prototype.toString = function () {
    return 'RemoveOnCancel[' + this.um_1 + ']';
  };
  RemoveOnCancel.$metadata$ = classMeta('RemoveOnCancel', undefined, undefined, undefined, undefined, BeforeResumeCancelHandler.prototype);
  function get_RESUME_TOKEN() {
    init_properties_CancellableContinuationImpl_kt_jcze1b();
    return RESUME_TOKEN;
  }
  var RESUME_TOKEN;
  function _set_parentHandle__bde57($this, value) {
    $this.sm_1.fi_1 = value;
  }
  function _get_parentHandle__f8dcex($this) {
    return $this.sm_1.fi_1;
  }
  function _get_stateDebugRepresentation__bf18u4($this) {
    var tmp0_subject = $this.pj();
    var tmp;
    if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
      tmp = 'Active';
    } else {
      if (tmp0_subject instanceof CancelledContinuation) {
        tmp = 'Cancelled';
      } else {
        tmp = 'Completed';
      }
    }
    return tmp;
  }
  function isReusable($this) {
    var tmp;
    var tmp_0;
    var tmp_1 = $this.om_1;
    if (tmp_1 instanceof DispatchedContinuation) {
      tmp_0 = $this.om_1.zm($this);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$0;
      {
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function setupCancellation($this) {
    if (checkCompleted($this))
      return Unit_getInstance();
    if (!(_get_parentHandle__f8dcex($this) === null))
      return Unit_getInstance();
    var tmp0_elvis_lhs = $this.om_1.q3().w3(Key_getInstance_3());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var parent = tmp;
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ChildContinuation($this);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var handle = parent.xj(true, false, tmp$ret$1, 2, null);
    _set_parentHandle__bde57($this, handle);
    if ($this.qj() ? !isReusable($this) : false) {
      handle.fm();
      _set_parentHandle__bde57($this, NonDisposableHandle_getInstance());
    }
  }
  function checkCompleted($this) {
    var completed = $this.qj();
    if (!get_isReusableMode($this.bn()))
      return completed;
    var tmp$ret$0;
    {
      tmp$ret$0 = true;
    }
    if (!tmp$ret$0)
      return completed;
    var tmp = $this.om_1;
    var tmp0_elvis_lhs = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return completed;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var dispatched = tmp_0;
    var tmp1_elvis_lhs = dispatched.cn($this);
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      return completed;
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    var cause = tmp_1;
    if (!completed) {
      $this.dn(cause);
    }
    return true;
  }
  function cancelLater($this, cause) {
    if (!get_isReusableMode($this.bn()))
      return false;
    var tmp = $this.om_1;
    var tmp0_elvis_lhs = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var dispatched = tmp_0;
    return dispatched.en(cause);
  }
  function callCancelHandler($this, handler, cause) {
    var tmp;
    try {
      tmp = invokeIt(handler, cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException($this.q3(), new CompletionHandlerException('Exception in invokeOnCancellation handler for ' + $this, $p));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function trySuspend($this) {
    {
      var tmp0_loop = $this.qm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.gi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.qm_1.atomicfu$compareAndSet(0, 1))
                return true;
              break;
            case 2:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already suspended');
          }
        }
      }
    }
  }
  function tryResume($this) {
    {
      var tmp0_loop = $this.qm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.gi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          switch (tmp0_subject) {
            case 0:
              if ($this.qm_1.atomicfu$compareAndSet(0, 2))
                return true;
              break;
            case 1:
              return false;
            default:
              throw IllegalStateException_init_$Create$('Already resumed');
          }
        }
      }
    }
  }
  function multipleHandlersError($this, handler, state) {
    {
      var tmp0_error = "It's prohibited to register multiple handlers, tried to register " + handler + ', already has ' + toString(state);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function makeCancelHandler($this, handler) {
    var tmp;
    if (handler instanceof CancelHandler) {
      tmp = handler;
    } else {
      tmp = new InvokeOnCancel(handler);
    }
    return tmp;
  }
  function dispatchResume($this, mode) {
    if (tryResume($this))
      return Unit_getInstance();
    dispatch($this, mode);
  }
  function resumedState($this, state, proposedUpdate, resumeMode, onCancellation, idempotent) {
    var tmp;
    if (proposedUpdate instanceof CompletedExceptionally) {
      {
      }
      {
      }
      tmp = proposedUpdate;
    } else {
      if (!get_isCancellableMode(resumeMode) ? idempotent == null : false) {
        tmp = proposedUpdate;
      } else {
        var tmp_0;
        var tmp_1;
        if (!(onCancellation == null)) {
          tmp_1 = true;
        } else {
          var tmp_2;
          if (state instanceof CancelHandler) {
            tmp_2 = !(state instanceof BeforeResumeCancelHandler);
          } else {
            tmp_2 = false;
          }
          tmp_1 = tmp_2;
        }
        if (tmp_1) {
          tmp_0 = true;
        } else {
          tmp_0 = !(idempotent == null);
        }
        if (tmp_0) {
          var tmp_3 = state instanceof CancelHandler ? state : null;
          tmp = CompletedContinuation_init_$Create$(proposedUpdate, tmp_3, onCancellation, idempotent, null, 16, null);
        } else {
          tmp = proposedUpdate;
        }
      }
    }
    return tmp;
  }
  function resumeImpl($this, proposedUpdate, resumeMode, onCancellation) {
    {
      var tmp0_loop = $this.rm_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            var update = resumedState($this, tmp1__anonymous__uwfjfc, proposedUpdate, resumeMode, onCancellation, null);
            if (!$this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            }
            detachChildIfNonResuable($this);
            dispatchResume($this, resumeMode);
            return Unit_getInstance();
          } else {
            if (tmp0_subject instanceof CancelledContinuation) {
              if (tmp1__anonymous__uwfjfc.jn()) {
                var tmp1_safe_receiver = onCancellation;
                if (tmp1_safe_receiver == null)
                  null;
                else {
                  var tmp$ret$1;
                  {
                    {
                    }
                    tmp$ret$1 = $this.fn(tmp1_safe_receiver, tmp1__anonymous__uwfjfc.k1());
                  }
                }
                return Unit_getInstance();
              }
            }
          }
          alreadyResumedError($this, proposedUpdate);
        }
      }
    }
  }
  function resumeImpl$default($this, proposedUpdate, resumeMode, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      onCancellation = null;
    return resumeImpl($this, proposedUpdate, resumeMode, onCancellation);
  }
  function tryResumeImpl($this, proposedUpdate, idempotent, onCancellation) {
    {
      var tmp0_loop = $this.rm_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            var update = resumedState($this, tmp1__anonymous__uwfjfc, proposedUpdate, $this.bn(), onCancellation, idempotent);
            if (!$this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
              tmp$ret$0 = Unit_getInstance();
              break $l$block;
            }
            detachChildIfNonResuable($this);
            return get_RESUME_TOKEN();
          } else {
            if (tmp0_subject instanceof CompletedContinuation) {
              var tmp;
              if (!(idempotent == null) ? tmp1__anonymous__uwfjfc.ln_1 === idempotent : false) {
                {
                }
                tmp = get_RESUME_TOKEN();
              } else {
                tmp = null;
              }
              return tmp;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
  function alreadyResumedError($this, proposedUpdate) {
    {
      var tmp0_error = 'Already resumed, but proposed with update ' + toString(proposedUpdate);
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    }
  }
  function detachChildIfNonResuable($this) {
    if (!isReusable($this))
      $this.pn();
  }
  function CancellableContinuationImpl(delegate, resumeMode) {
    DispatchedTask.call(this, resumeMode);
    {
    }
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = delegate;
    }
    tmp.om_1 = tmp$ret$0;
    this.pm_1 = delegate.q3();
    this.qm_1 = atomic$int$1(0);
    this.rm_1 = atomic$ref$1(Active_getInstance());
    this.sm_1 = atomic$ref$1(null);
  }
  CancellableContinuationImpl.prototype.qn = function () {
    return this.om_1;
  };
  CancellableContinuationImpl.prototype.q3 = function () {
    return this.pm_1;
  };
  CancellableContinuationImpl.prototype.pj = function () {
    return this.rm_1.fi_1;
  };
  CancellableContinuationImpl.prototype.qj = function () {
    var tmp = this.pj();
    return !(!(tmp == null) ? isInterface(tmp, NotCompleted) : false);
  };
  CancellableContinuationImpl.prototype.ul = function () {
    var tmp = this.pj();
    return tmp instanceof CancelledContinuation;
  };
  CancellableContinuationImpl.prototype.rn = function () {
    setupCancellation(this);
  };
  CancellableContinuationImpl.prototype.tm = function () {
    {
    }
    {
    }
    var state = this.rm_1.fi_1;
    {
    }
    var tmp;
    if (state instanceof CompletedContinuation) {
      tmp = !(state.ln_1 == null);
    } else {
      tmp = false;
    }
    if (tmp) {
      this.pn();
      return false;
    }
    this.qm_1.gi_1 = 0;
    this.rm_1.fi_1 = Active_getInstance();
    return true;
  };
  CancellableContinuationImpl.prototype.sn = function () {
    return this.pj();
  };
  CancellableContinuationImpl.prototype.tn = function (takenState, cause) {
    {
      var tmp0_loop = this.rm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, NotCompleted) : false) {
            throw IllegalStateException_init_$Create$('Not completed');
          } else {
            if (tmp0_subject instanceof CompletedExceptionally)
              return Unit_getInstance();
            else {
              if (tmp0_subject instanceof CompletedContinuation) {
                {
                  var tmp0_check = !tmp1__anonymous__uwfjfc.un();
                  {
                  }
                  if (!tmp0_check) {
                    var tmp$ret$0;
                    {
                      tmp$ret$0 = 'Must be called at most once';
                    }
                    var message = tmp$ret$0;
                    throw IllegalStateException_init_$Create$(toString_0(message));
                  }
                }
                var update = tmp1__anonymous__uwfjfc.vn(null, null, null, null, cause, 15, null);
                if (this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
                  tmp1__anonymous__uwfjfc.wn(this, cause);
                  return Unit_getInstance();
                }
              } else {
                if (this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, CompletedContinuation_init_$Create$(tmp1__anonymous__uwfjfc, null, null, null, cause, 14, null))) {
                  return Unit_getInstance();
                }
              }
            }
          }
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.dn = function (cause) {
    {
      var tmp0_loop = this.rm_1;
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          if (!(!(tmp1__anonymous__uwfjfc == null) ? isInterface(tmp1__anonymous__uwfjfc, NotCompleted) : false))
            return false;
          var update = new CancelledContinuation(this, cause, tmp1__anonymous__uwfjfc instanceof CancelHandler);
          if (!this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update)) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          }
          var tmp0_safe_receiver = tmp1__anonymous__uwfjfc instanceof CancelHandler ? tmp1__anonymous__uwfjfc : null;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$1;
            {
              {
              }
              tmp$ret$1 = this.xn(tmp0_safe_receiver, cause);
            }
          }
          detachChildIfNonResuable(this);
          dispatchResume(this, this.bn());
          return true;
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.yn = function (parentJob) {
    var cause = this.zn(parentJob);
    if (cancelLater(this, cause))
      return Unit_getInstance();
    this.dn(cause);
    detachChildIfNonResuable(this);
  };
  CancellableContinuationImpl.prototype.xn = function (handler, cause) {
    var tmp;
    try {
      tmp = handler.invoke(cause);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        tmp_0 = handleCoroutineException(this.q3(), new CompletionHandlerException('Exception in invokeOnCancellation handler for ' + this, $p));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.fn = function (onCancellation, cause) {
    try {
      onCancellation(cause);
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineException(this.q3(), new CompletionHandlerException('Exception in resume onCancellation handler for ' + this, $p));
      } else {
        throw $p;
      }
    }
  };
  CancellableContinuationImpl.prototype.zn = function (parent) {
    return parent.sj();
  };
  CancellableContinuationImpl.prototype.ao = function () {
    setupCancellation(this);
    if (trySuspend(this))
      return get_COROUTINE_SUSPENDED();
    {
    }
    var state = this.pj();
    if (state instanceof CompletedExceptionally)
      throw recoverStackTrace(state.ej_1, this);
    if (get_isCancellableMode(this.bn())) {
      var job = this.q3().w3(Key_getInstance_3());
      if (!(job == null) ? !job.ti() : false) {
        var cause = job.sj();
        this.tn(state, cause);
        throw recoverStackTrace(cause, this);
      }
    }
    return this.bo(state);
  };
  CancellableContinuationImpl.prototype.r3 = function (result) {
    var tmp = toState(result, this);
    var tmp_0 = this.bn();
    return resumeImpl$default(this, tmp, tmp_0, null, 8, null);
  };
  CancellableContinuationImpl.prototype.cm = function (value, onCancellation) {
    return resumeImpl(this, value, this.bn(), onCancellation);
  };
  CancellableContinuationImpl.prototype.am = function (handler) {
    var cancelHandler = makeCancelHandler(this, handler);
    {
      var tmp0_loop = this.rm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (tmp0_subject instanceof Active) {
            if (this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, cancelHandler))
              return Unit_getInstance();
          } else {
            if (tmp0_subject instanceof CancelHandler)
              multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
            else {
              if (tmp0_subject instanceof CompletedExceptionally) {
                if (!tmp1__anonymous__uwfjfc.do())
                  multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
                if (tmp1__anonymous__uwfjfc instanceof CancelledContinuation) {
                  var tmp1_safe_receiver = tmp1__anonymous__uwfjfc instanceof CompletedExceptionally ? tmp1__anonymous__uwfjfc : null;
                  callCancelHandler(this, handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.ej_1);
                }
                return Unit_getInstance();
              } else {
                if (tmp0_subject instanceof CompletedContinuation) {
                  if (!(tmp1__anonymous__uwfjfc.co() == null))
                    multipleHandlersError(this, handler, tmp1__anonymous__uwfjfc);
                  if (cancelHandler instanceof BeforeResumeCancelHandler)
                    return Unit_getInstance();
                  if (tmp1__anonymous__uwfjfc.un()) {
                    callCancelHandler(this, handler, tmp1__anonymous__uwfjfc.mn_1);
                    return Unit_getInstance();
                  }
                  var update = tmp1__anonymous__uwfjfc.vn(null, cancelHandler, null, null, null, 29, null);
                  if (this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update))
                    return Unit_getInstance();
                } else {
                  if (cancelHandler instanceof BeforeResumeCancelHandler)
                    return Unit_getInstance();
                  var update_0 = CompletedContinuation_init_$Create$(tmp1__anonymous__uwfjfc, cancelHandler, null, null, null, 28, null);
                  if (this.rm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, update_0))
                    return Unit_getInstance();
                }
              }
            }
          }
        }
      }
    }
  };
  CancellableContinuationImpl.prototype.pn = function () {
    var handle = _get_parentHandle__f8dcex(this);
    var tmp0_safe_receiver = handle;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.fm();
    }
    _set_parentHandle__bde57(this, NonDisposableHandle_getInstance());
  };
  CancellableContinuationImpl.prototype.vl = function (value, idempotent) {
    return tryResumeImpl(this, value, idempotent, null);
  };
  CancellableContinuationImpl.prototype.xl = function (value, idempotent, onCancellation) {
    return tryResumeImpl(this, value, idempotent, onCancellation);
  };
  CancellableContinuationImpl.prototype.yl = function (exception) {
    return tryResumeImpl(this, CompletedExceptionally_init_$Create$(exception, false, 2, null), null, null);
  };
  CancellableContinuationImpl.prototype.zl = function (token) {
    {
    }
    dispatchResume(this, this.bn());
  };
  CancellableContinuationImpl.prototype.bm = function (_this__u8e3s4, value) {
    var tmp = asLocalOrNullIfNotUsed(this.om_1);
    var dc = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    var tmp0_safe_receiver = dc;
    if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hm_1) === _this__u8e3s4) {
      tmp_0 = get_MODE_UNDISPATCHED();
    } else {
      tmp_0 = this.bn();
    }
    var tmp_1 = tmp_0;
    resumeImpl$default(this, value, tmp_1, null, 8, null);
  };
  CancellableContinuationImpl.prototype.bo = function (state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof CompletedContinuation) {
      state.eo();
      var tmp_0 = state.kn_1;
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    } else {
      tmp = (state == null ? true : isObject(state)) ? state : THROW_CCE();
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.fo = function (state) {
    var tmp0_safe_receiver = DispatchedTask.prototype.fo.call(this, state);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = recoverStackTrace(tmp0_safe_receiver, this.om_1);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    return tmp;
  };
  CancellableContinuationImpl.prototype.toString = function () {
    return this.lj() + '(' + toDebugString(this.om_1) + '){' + _get_stateDebugRepresentation__bf18u4(this) + '}@' + get_hexAddress(this);
  };
  CancellableContinuationImpl.prototype.lj = function () {
    return 'CancellableContinuation';
  };
  CancellableContinuationImpl.$metadata$ = classMeta('CancellableContinuationImpl', [CancellableContinuation, CoroutineStackFrame], undefined, undefined, undefined, DispatchedTask.prototype);
  function CancelHandler() {
    CancelHandlerBase.call(this);
  }
  CancelHandler.$metadata$ = classMeta('CancelHandler', [NotCompleted], undefined, undefined, undefined, CancelHandlerBase.prototype);
  function get_UNDECIDED() {
    return UNDECIDED;
  }
  var UNDECIDED;
  function Active() {
    Active_instance = this;
  }
  Active.prototype.toString = function () {
    return 'Active';
  };
  Active.$metadata$ = objectMeta('Active', [NotCompleted]);
  var Active_instance;
  function Active_getInstance() {
    if (Active_instance == null)
      new Active();
    return Active_instance;
  }
  function NotCompleted() {
  }
  NotCompleted.$metadata$ = interfaceMeta('NotCompleted');
  function CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      cancelHandler = null;
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    if (!(($mask0 & 8) === 0))
      idempotentResume = null;
    if (!(($mask0 & 16) === 0))
      cancelCause = null;
    CompletedContinuation.call($this, result, cancelHandler, onCancellation, idempotentResume, cancelCause);
    return $this;
  }
  function CompletedContinuation_init_$Create$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker) {
    return CompletedContinuation_init_$Init$(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $marker, Object.create(CompletedContinuation.prototype));
  }
  function CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    this.kn_1 = result;
    this.ln_1 = idempotentResume;
    this.mn_1 = cancelCause;
    this.nn_1 = atomic$ref$1(cancelHandler);
    this.on_1 = atomic$ref$1(onCancellation);
  }
  CompletedContinuation.prototype.io = function () {
    return this.ln_1;
  };
  CompletedContinuation.prototype.jo = function () {
    return this.mn_1;
  };
  CompletedContinuation.prototype.co = function () {
    return this.nn_1.fi_1;
  };
  CompletedContinuation.prototype.ko = function () {
    return this.on_1.fi_1;
  };
  CompletedContinuation.prototype.un = function () {
    return !(this.mn_1 == null);
  };
  CompletedContinuation.prototype.eo = function () {
    this.nn_1.fi_1 = null;
    this.on_1.fi_1 = null;
  };
  CompletedContinuation.prototype.wn = function (cont, cause) {
    var tmp0_safe_receiver = this.co();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = cont.xn(tmp0_safe_receiver, cause);
      }
    }
    var tmp1_safe_receiver = this.ko();
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        tmp$ret$1 = cont.fn(tmp1_safe_receiver, cause);
      }
    }
    this.eo();
  };
  CompletedContinuation.prototype.lo = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    return new CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation.prototype.vn = function (result, cancelHandler, onCancellation, idempotentResume, cancelCause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      result = this.kn_1;
    if (!(($mask0 & 2) === 0))
      cancelHandler = this.co();
    if (!(($mask0 & 4) === 0))
      onCancellation = this.ko();
    if (!(($mask0 & 8) === 0))
      idempotentResume = this.ln_1;
    if (!(($mask0 & 16) === 0))
      cancelCause = this.mn_1;
    return this.lo(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  };
  CompletedContinuation.$metadata$ = classMeta('CompletedContinuation');
  function get_SUSPENDED() {
    return SUSPENDED;
  }
  var SUSPENDED;
  function get_RESUMED() {
    return RESUMED;
  }
  var RESUMED;
  function BeforeResumeCancelHandler() {
    CancelHandler.call(this);
  }
  BeforeResumeCancelHandler.$metadata$ = classMeta('BeforeResumeCancelHandler', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  function InvokeOnCancel(handler) {
    CancelHandler.call(this);
    this.mo_1 = handler;
  }
  InvokeOnCancel.prototype.em = function (cause) {
    this.mo_1(cause);
  };
  InvokeOnCancel.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  InvokeOnCancel.prototype.toString = function () {
    return 'InvokeOnCancel[' + get_classSimpleName(this.mo_1) + '@' + get_hexAddress(this) + ']';
  };
  InvokeOnCancel.$metadata$ = classMeta('InvokeOnCancel', undefined, undefined, undefined, undefined, CancelHandler.prototype);
  var properties_initialized_CancellableContinuationImpl_kt_xtzb03;
  function init_properties_CancellableContinuationImpl_kt_jcze1b() {
    if (properties_initialized_CancellableContinuationImpl_kt_xtzb03) {
    } else {
      properties_initialized_CancellableContinuationImpl_kt_xtzb03 = true;
      RESUME_TOKEN = new Symbol('RESUME_TOKEN');
    }
  }
  function CompletableDeferred() {
  }
  CompletableDeferred.$metadata$ = interfaceMeta('CompletableDeferred', [Deferred]);
  function CompletableDeferred_0(parent) {
    return new CompletableDeferredImpl(parent);
  }
  function CompletableDeferred$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return CompletableDeferred_0(parent);
  }
  function $awaitCOROUTINE$1(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.xo_1 = _this__u8e3s4;
  }
  $awaitCOROUTINE$1.prototype.eh = function () {
    var suspendResult = this.xg_1;
    $sm: do
      try {
        var tmp = this.vg_1;
        switch (tmp) {
          case 0:
            this.wg_1 = 2;
            this.vg_1 = 1;
            suspendResult = this.xo_1.jl(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return (suspendResult == null ? true : isObject(suspendResult)) ? suspendResult : THROW_CCE();
          case 2:
            throw this.yg_1;
        }
      } catch ($p) {
        if (this.wg_1 === 2) {
          throw $p;
        } else {
          this.vg_1 = this.wg_1;
          this.yg_1 = $p;
        }
      }
     while (true);
  };
  $awaitCOROUTINE$1.$metadata$ = classMeta('$awaitCOROUTINE$1', undefined, undefined, undefined, undefined, CoroutineImpl.prototype);
  function CompletableDeferredImpl(parent) {
    JobSupport.call(this, true);
    this.xi(parent);
  }
  CompletableDeferredImpl.prototype.zj = function () {
    return true;
  };
  CompletableDeferredImpl.prototype.ol = function ($cont) {
    var tmp = new $awaitCOROUTINE$1(this, $cont);
    tmp.xg_1 = Unit_getInstance();
    tmp.yg_1 = null;
    return tmp.eh();
  };
  CompletableDeferredImpl.prototype.no = function (value) {
    return this.ap(value);
  };
  CompletableDeferredImpl.prototype.oo = function (exception) {
    return this.ap(CompletedExceptionally_init_$Create$(exception, false, 2, null));
  };
  CompletableDeferredImpl.$metadata$ = classMeta('CompletableDeferredImpl', [CompletableDeferred, SelectClause1], undefined, undefined, undefined, JobSupport.prototype);
  function CompletableJob() {
  }
  CompletableJob.$metadata$ = interfaceMeta('CompletableJob', [Job]);
  function CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      handled = false;
    CompletedExceptionally.call($this, cause, handled);
    return $this;
  }
  function CompletedExceptionally_init_$Create$(cause, handled, $mask0, $marker) {
    return CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, Object.create(CompletedExceptionally.prototype));
  }
  function CompletedExceptionally(cause, handled) {
    this.ej_1 = cause;
    this.fj_1 = atomic$boolean$1(handled);
  }
  CompletedExceptionally.prototype.k1 = function () {
    return this.ej_1;
  };
  CompletedExceptionally.prototype.gj = function () {
    return this.fj_1.li_1;
  };
  CompletedExceptionally.prototype.do = function () {
    return this.fj_1.atomicfu$compareAndSet(false, true);
  };
  CompletedExceptionally.prototype.toString = function () {
    return get_classSimpleName(this) + '[' + this.ej_1 + ']';
  };
  CompletedExceptionally.$metadata$ = classMeta('CompletedExceptionally');
  function CancelledContinuation(continuation, cause, handled) {
    var tmp0_elvis_lhs = cause;
    CompletedExceptionally.call(this, tmp0_elvis_lhs == null ? CancellationException_init_$Create$('Continuation ' + continuation + ' was cancelled normally') : tmp0_elvis_lhs, handled);
    this.in_1 = atomic$boolean$1(false);
  }
  CancelledContinuation.prototype.jn = function () {
    return this.in_1.atomicfu$compareAndSet(false, true);
  };
  CancelledContinuation.$metadata$ = classMeta('CancelledContinuation', undefined, undefined, undefined, undefined, CompletedExceptionally.prototype);
  function toState(_this__u8e3s4, caller) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = tmp0__anonymous__q1qw7t;
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          var tmp_1 = recoverStackTrace(exception, caller);
          tmp$ret$1 = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  }
  function toState_0(_this__u8e3s4, onCancellation) {
    var tmp$ret$2;
    {
      {
      }
      var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
      var tmp;
      if (exception == null) {
        var tmp$ret$0;
        {
          var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
          var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
          tmp$ret$0 = !(onCancellation == null) ? new CompletedWithCancellation(tmp0__anonymous__q1qw7t, onCancellation) : tmp0__anonymous__q1qw7t;
        }
        tmp = tmp$ret$0;
      } else {
        var tmp$ret$1;
        {
          tmp$ret$1 = CompletedExceptionally_init_$Create$(exception, false, 2, null);
        }
        tmp = tmp$ret$1;
      }
      tmp$ret$2 = tmp;
    }
    return tmp$ret$2;
  }
  function toState$default(_this__u8e3s4, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancellation = null;
    return toState_0(_this__u8e3s4, onCancellation);
  }
  function CompletedWithCancellation(result, onCancellation) {
    this.dp_1 = result;
    this.ep_1 = onCancellation;
  }
  CompletedWithCancellation.prototype.toString = function () {
    return 'CompletedWithCancellation(result=' + toString(this.dp_1) + ', onCancellation=' + this.ep_1 + ')';
  };
  CompletedWithCancellation.prototype.hashCode = function () {
    var result = this.dp_1 == null ? 0 : hashCode(this.dp_1);
    result = imul(result, 31) + hashCode(this.ep_1) | 0;
    return result;
  };
  CompletedWithCancellation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedWithCancellation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedWithCancellation ? other : THROW_CCE();
    if (!equals(this.dp_1, tmp0_other_with_cast.dp_1))
      return false;
    if (!equals(this.ep_1, tmp0_other_with_cast.ep_1))
      return false;
    return true;
  };
  CompletedWithCancellation.$metadata$ = classMeta('CompletedWithCancellation');
  function CoroutineDispatcher$Key$_init_$lambda_akl8b5() {
    return function (it) {
      return it instanceof CoroutineDispatcher ? it : null;
    };
  }
  function Key_0() {
    Key_instance = this;
    var tmp = Key_getInstance();
    AbstractCoroutineContextKey.call(this, tmp, CoroutineDispatcher$Key$_init_$lambda_akl8b5());
  }
  Key_0.$metadata$ = objectMeta('Key', undefined, undefined, undefined, undefined, AbstractCoroutineContextKey.prototype);
  var Key_instance;
  function Key_getInstance_0() {
    if (Key_instance == null)
      new Key_0();
    return Key_instance;
  }
  function CoroutineDispatcher() {
    Key_getInstance_0();
    AbstractCoroutineContextElement.call(this, Key_getInstance());
  }
  CoroutineDispatcher.prototype.gp = function (context) {
    return true;
  };
  CoroutineDispatcher.prototype.u3 = function (continuation) {
    return new DispatchedContinuation(this, continuation);
  };
  CoroutineDispatcher.prototype.v3 = function (continuation) {
    var tmp0_safe_receiver = (continuation instanceof DispatchedContinuation ? continuation : THROW_CCE()).ip();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.pn();
    }
  };
  CoroutineDispatcher.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this);
  };
  CoroutineDispatcher.$metadata$ = classMeta('CoroutineDispatcher', [ContinuationInterceptor], undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  function Key_1() {
    Key_instance_0 = this;
  }
  Key_1.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_0;
  function Key_getInstance_1() {
    if (Key_instance_0 == null)
      new Key_1();
    return Key_instance_0;
  }
  function CoroutineExceptionHandler() {
  }
  CoroutineExceptionHandler.$metadata$ = interfaceMeta('CoroutineExceptionHandler', [Element]);
  function handleCoroutineException(context, exception) {
    try {
      var tmp0_safe_receiver = context.w3(Key_getInstance_1());
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp0_safe_receiver.jp(context, exception);
          return Unit_getInstance();
        }
      }
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineExceptionImpl(context, handlerException(exception, $p));
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    handleCoroutineExceptionImpl(context, exception);
  }
  function handlerException(originalException, thrownException) {
    if (originalException === thrownException)
      return originalException;
    var tmp$ret$0;
    {
      var tmp0_apply = RuntimeException_init_$Create$('Exception while trying to handle coroutine exception', thrownException);
      {
      }
      {
        {
        }
      }
      tmp$ret$0 = tmp0_apply;
    }
    return tmp$ret$0;
  }
  function CoroutineExceptionHandler_0(handler) {
    return new _no_name_provided__qut3iv(handler);
  }
  function _no_name_provided__qut3iv($handler) {
    this.lp_1 = $handler;
    AbstractCoroutineContextElement.call(this, Key_getInstance_1());
  }
  _no_name_provided__qut3iv.prototype.jp = function (context, exception) {
    return this.lp_1(context, exception);
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [CoroutineExceptionHandler], undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  function Key_2() {
    Key_instance_1 = this;
  }
  Key_2.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_1;
  function Key_getInstance_2() {
    if (Key_instance_1 == null)
      new Key_2();
    return Key_instance_1;
  }
  function CoroutineName(name) {
    Key_getInstance_2();
    AbstractCoroutineContextElement.call(this, Key_getInstance_2());
    this.np_1 = name;
  }
  CoroutineName.prototype.toString = function () {
    return 'CoroutineName(' + this.np_1 + ')';
  };
  CoroutineName.prototype.hashCode = function () {
    return getStringHashCode(this.np_1);
  };
  CoroutineName.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CoroutineName))
      return false;
    var tmp0_other_with_cast = other instanceof CoroutineName ? other : THROW_CCE();
    if (!(this.np_1 === tmp0_other_with_cast.np_1))
      return false;
    return true;
  };
  CoroutineName.$metadata$ = classMeta('CoroutineName', undefined, undefined, undefined, undefined, AbstractCoroutineContextElement.prototype);
  function CoroutineScope() {
  }
  CoroutineScope.$metadata$ = interfaceMeta('CoroutineScope');
  function cancel(_this__u8e3s4, cause) {
    var tmp0_elvis_lhs = _this__u8e3s4.si().w3(Key_getInstance_3());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp0_error = 'Scope cannot be cancelled because it does not have a job: ' + _this__u8e3s4;
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var job = tmp;
    job.ak(cause);
  }
  function cancel$default_1(_this__u8e3s4, cause, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      cause = null;
    return cancel(_this__u8e3s4, cause);
  }
  function cancel_0(_this__u8e3s4, message, cause) {
    return cancel(_this__u8e3s4, new CancellationException(message, cause));
  }
  function GlobalScope() {
    GlobalScope_instance = this;
  }
  GlobalScope.prototype.si = function () {
    return EmptyCoroutineContext_getInstance();
  };
  GlobalScope.$metadata$ = objectMeta('GlobalScope', [CoroutineScope]);
  var GlobalScope_instance;
  function GlobalScope_getInstance() {
    if (GlobalScope_instance == null)
      new GlobalScope();
    return GlobalScope_instance;
  }
  function CoroutineScope_0(context) {
    var tmp;
    if (!(context.w3(Key_getInstance_3()) == null)) {
      tmp = context;
    } else {
      tmp = context.d4(Job$default(null, 1, null));
    }
    return new ContextScope(tmp);
  }
  var CoroutineStart_DEFAULT_instance;
  var CoroutineStart_LAZY_instance;
  var CoroutineStart_ATOMIC_instance;
  var CoroutineStart_UNDISPATCHED_instance;
  var CoroutineStart_entriesInitialized;
  function CoroutineStart_initEntries() {
    if (CoroutineStart_entriesInitialized)
      return Unit_getInstance();
    CoroutineStart_entriesInitialized = true;
    CoroutineStart_DEFAULT_instance = new CoroutineStart('DEFAULT', 0);
    CoroutineStart_LAZY_instance = new CoroutineStart('LAZY', 1);
    CoroutineStart_ATOMIC_instance = new CoroutineStart('ATOMIC', 2);
    CoroutineStart_UNDISPATCHED_instance = new CoroutineStart('UNDISPATCHED', 3);
  }
  function CoroutineStart(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineStart.prototype.qk = function () {
    return this === CoroutineStart_LAZY_getInstance();
  };
  CoroutineStart.$metadata$ = classMeta('CoroutineStart', undefined, undefined, undefined, undefined, Enum.prototype);
  function CoroutineStart_DEFAULT_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_DEFAULT_instance;
  }
  function CoroutineStart_LAZY_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_LAZY_instance;
  }
  function CopyableThrowable() {
  }
  CopyableThrowable.$metadata$ = interfaceMeta('CopyableThrowable');
  function Deferred() {
  }
  Deferred.$metadata$ = interfaceMeta('Deferred', [Job]);
  function delay(timeMillis, $cont) {
    if (timeMillis.g1(new Long(0, 0)) <= 0)
      return Unit_getInstance();
    var tmp$ret$0;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = new CancellableContinuationImpl(intercepted(tmp0__anonymous__q1qw7t), get_MODE_CANCELLABLE());
      cancellable.rn();
      {
        Companion_getInstance();
        if (timeMillis.g1(new Long(-1, 2147483647)) < 0) {
          get_delay(cancellable.q3()).op(timeMillis, cancellable);
        }
      }
      tmp$ret$0 = cancellable.ao();
    }
    return tmp$ret$0;
  }
  function Delay() {
  }
  Delay.$metadata$ = interfaceMeta('Delay');
  function get_delay(_this__u8e3s4) {
    var tmp = _this__u8e3s4.w3(Key_getInstance());
    var tmp0_elvis_lhs = (!(tmp == null) ? isInterface(tmp, Delay) : false) ? tmp : null;
    return tmp0_elvis_lhs == null ? get_DefaultDelay() : tmp0_elvis_lhs;
  }
  function delta($this, unconfined) {
    return unconfined ? new Long(0, 1) : new Long(1, 0);
  }
  function EventLoop() {
    CoroutineDispatcher.call(this);
    this.qp_1 = new Long(0, 0);
    this.rp_1 = false;
    this.sp_1 = null;
  }
  EventLoop.prototype.tp = function () {
    var tmp0_elvis_lhs = this.sp_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    var tmp1_elvis_lhs = queue.xp();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var task = tmp_0;
    var tmp$ret$0;
    {
      tmp$ret$0 = task.go();
    }
    return true;
  };
  EventLoop.prototype.yp = function (task) {
    var tmp0_elvis_lhs = this.sp_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = new ArrayQueue();
        {
        }
        {
          this.sp_1 = tmp0_also;
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    queue.zp(task);
  };
  EventLoop.prototype.aq = function () {
    return this.qp_1.g1(delta(this, true)) >= 0;
  };
  EventLoop.prototype.bq = function () {
    var tmp0_safe_receiver = this.sp_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.cq();
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  };
  EventLoop.prototype.dq = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.qp_1 = tmp0_this.qp_1.f5(delta(this, unconfined));
    if (!unconfined)
      this.rp_1 = true;
  };
  EventLoop.prototype.eq = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.qp_1 = tmp0_this.qp_1.g5(delta(this, unconfined));
    if (this.qp_1.g1(new Long(0, 0)) > 0)
      return Unit_getInstance();
    {
    }
    if (this.rp_1) {
      this.fq();
    }
  };
  EventLoop.prototype.fq = function () {
  };
  EventLoop.$metadata$ = classMeta('EventLoop', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function ThreadLocalEventLoop() {
    ThreadLocalEventLoop_instance = this;
    this.gq_1 = new CommonThreadLocal();
  }
  ThreadLocalEventLoop.prototype.hq = function () {
    var tmp0_elvis_lhs = this.gq_1.jq();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_also = createEventLoop();
        {
        }
        {
          ThreadLocalEventLoop_getInstance().gq_1.kq(tmp0_also);
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ThreadLocalEventLoop.$metadata$ = objectMeta('ThreadLocalEventLoop');
  var ThreadLocalEventLoop_instance;
  function ThreadLocalEventLoop_getInstance() {
    if (ThreadLocalEventLoop_instance == null)
      new ThreadLocalEventLoop();
    return ThreadLocalEventLoop_instance;
  }
  function CompletionHandlerException(message, cause) {
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, CompletionHandlerException);
  }
  CompletionHandlerException.$metadata$ = classMeta('CompletionHandlerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function CoroutinesInternalError(message, cause) {
    Error_init_$Init$(message, cause, this);
    captureStack(this, CoroutinesInternalError);
  }
  CoroutinesInternalError.$metadata$ = classMeta('CoroutinesInternalError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function DisposableHandle() {
  }
  DisposableHandle.$metadata$ = interfaceMeta('DisposableHandle');
  function Key_3() {
    Key_instance_2 = this;
    Key_getInstance_1();
  }
  Key_3.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_2;
  function Key_getInstance_3() {
    if (Key_instance_2 == null)
      new Key_3();
    return Key_instance_2;
  }
  function Job() {
  }
  Job.$metadata$ = interfaceMeta('Job', [Element]);
  function ChildJob() {
  }
  ChildJob.$metadata$ = interfaceMeta('ChildJob', [Job]);
  function ParentJob() {
  }
  ParentJob.$metadata$ = interfaceMeta('ParentJob', [Job]);
  function ChildHandle() {
  }
  ChildHandle.$metadata$ = interfaceMeta('ChildHandle', [DisposableHandle]);
  function NonDisposableHandle() {
    NonDisposableHandle_instance = this;
  }
  NonDisposableHandle.prototype.fm = function () {
  };
  NonDisposableHandle.prototype.ek = function (cause) {
    return false;
  };
  NonDisposableHandle.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  NonDisposableHandle.$metadata$ = objectMeta('NonDisposableHandle', [DisposableHandle, ChildHandle]);
  var NonDisposableHandle_instance;
  function NonDisposableHandle_getInstance() {
    if (NonDisposableHandle_instance == null)
      new NonDisposableHandle();
    return NonDisposableHandle_instance;
  }
  function Job_0(parent) {
    return new JobImpl(parent);
  }
  function Job$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return Job_0(parent);
  }
  function cancel_1(_this__u8e3s4, message, cause) {
    return _this__u8e3s4.ak(new CancellationException(message, cause));
  }
  function cancel_2(_this__u8e3s4, cause) {
    var tmp0_safe_receiver = _this__u8e3s4.w3(Key_getInstance_3());
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.ak(cause);
    }
  }
  function get_COMPLETING_ALREADY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_ALREADY;
  }
  var COMPLETING_ALREADY;
  function get_COMPLETING_WAITING_CHILDREN() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_WAITING_CHILDREN;
  }
  var COMPLETING_WAITING_CHILDREN;
  function get_COMPLETING_RETRY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_RETRY;
  }
  var COMPLETING_RETRY;
  function get_TOO_LATE_TO_CANCEL() {
    init_properties_JobSupport_kt_iaxwag();
    return TOO_LATE_TO_CANCEL;
  }
  var TOO_LATE_TO_CANCEL;
  function get_SEALED() {
    init_properties_JobSupport_kt_iaxwag();
    return SEALED;
  }
  var SEALED;
  function get_EMPTY_NEW() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_NEW;
  }
  var EMPTY_NEW;
  function get_EMPTY_ACTIVE() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_ACTIVE;
  }
  var EMPTY_ACTIVE;
  function Empty(isActive) {
    this.lq_1 = isActive;
  }
  Empty.prototype.ti = function () {
    return this.lq_1;
  };
  Empty.prototype.mq = function () {
    return null;
  };
  Empty.prototype.toString = function () {
    return 'Empty{' + (this.lq_1 ? 'Active' : 'New') + '}';
  };
  Empty.$metadata$ = classMeta('Empty', [Incomplete]);
  function Incomplete() {
  }
  Incomplete.$metadata$ = interfaceMeta('Incomplete');
  function NodeList() {
    LinkedListHead.call(this);
  }
  NodeList.prototype.ti = function () {
    return true;
  };
  NodeList.prototype.mq = function () {
    return this;
  };
  NodeList.prototype.qq = function (state) {
    var tmp$ret$1;
    {
      {
      }
      var tmp$ret$0;
      {
        var tmp0_apply = StringBuilder_init_$Create$();
        {
        }
        {
          tmp0_apply.pf('List{');
          tmp0_apply.pf(state);
          tmp0_apply.pf('}[');
          var first = true;
          {
            var cur = this.rq();
            while (!equals(cur, this)) {
              if (cur instanceof JobNode) {
                var tmp0__anonymous__q1qw7t = cur;
                if (first)
                  first = false;
                else {
                  tmp0_apply.pf(', ');
                }
                tmp0_apply.nf(tmp0__anonymous__q1qw7t);
              }
              cur = cur.vm_1;
            }
          }
          tmp0_apply.pf(']');
        }
        tmp$ret$0 = tmp0_apply;
      }
      tmp$ret$1 = tmp$ret$0.toString();
    }
    return tmp$ret$1;
  };
  NodeList.prototype.toString = function () {
    return get_DEBUG() ? this.qq('Active') : anyToString(this);
  };
  NodeList.$metadata$ = classMeta('NodeList', [Incomplete], undefined, undefined, undefined, LinkedListHead.prototype);
  function JobNode() {
    CompletionHandlerBase.call(this);
  }
  JobNode.prototype.hr = function () {
    var tmp = this.gr_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('job');
    }
  };
  JobNode.prototype.ti = function () {
    return true;
  };
  JobNode.prototype.mq = function () {
    return null;
  };
  JobNode.prototype.fm = function () {
    return this.hr().yj(this);
  };
  JobNode.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '[job@' + get_hexAddress(this.hr()) + ']';
  };
  JobNode.$metadata$ = classMeta('JobNode', [DisposableHandle, Incomplete], undefined, undefined, undefined, CompletionHandlerBase.prototype);
  function _set_exceptionsHolder__tqm22h($this, value) {
    $this.mr_1.fi_1 = value;
  }
  function _get_exceptionsHolder__nhszp($this) {
    return $this.mr_1.fi_1;
  }
  function allocateList($this) {
    return ArrayList_init_$Create$(4);
  }
  function finalizeFinishingState($this, state, proposedUpdate) {
    {
    }
    {
    }
    {
    }
    var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    var proposedException = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ej_1;
    var wasCancelling = false;
    var tmp$ret$1;
    {
      var tmp$ret$0;
      {
        wasCancelling = state.nr();
        var exceptions = state.or(proposedException);
        var finalCause = getFinalRootCause($this, state, exceptions);
        if (!(finalCause == null))
          addSuppressedExceptions($this, finalCause, exceptions);
        tmp$ret$0 = finalCause;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var finalException = tmp$ret$1;
    var tmp;
    if (finalException == null) {
      tmp = proposedUpdate;
    } else if (finalException === proposedException) {
      tmp = proposedUpdate;
    } else {
      tmp = CompletedExceptionally_init_$Create$(finalException, false, 2, null);
    }
    var finalState = tmp;
    if (!(finalException == null)) {
      var handled = cancelParent($this, finalException) ? true : $this.mk(finalException);
      if (handled) {
        (finalState instanceof CompletedExceptionally ? finalState : THROW_CCE()).do();
      }
    }
    if (!wasCancelling)
      $this.jk(finalException);
    $this.dj(finalState);
    var casSuccess = $this.ui_1.atomicfu$compareAndSet(state, boxIncomplete(finalState));
    {
    }
    completeStateFinalization($this, state, finalState);
    {
    }
    return finalState;
  }
  function getFinalRootCause($this, state, exceptions) {
    if (exceptions.m()) {
      if (state.nr()) {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = null;
          tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.cj() : tmp0_elvis_lhs, null, $this);
        }
        return tmp$ret$0;
      }
      return null;
    }
    var tmp$ret$2;
    $l$block: {
      var tmp0_iterator = exceptions.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          tmp$ret$1 = !(element instanceof CancellationException);
        }
        if (tmp$ret$1) {
          tmp$ret$2 = element;
          break $l$block;
        }
      }
      tmp$ret$2 = null;
    }
    var firstNonCancellation = tmp$ret$2;
    if (!(firstNonCancellation == null))
      return firstNonCancellation;
    var first = exceptions.l(0);
    if (first instanceof TimeoutCancellationException) {
      var tmp$ret$4;
      $l$block_0: {
        var tmp0_iterator_0 = exceptions.d();
        while (tmp0_iterator_0.e()) {
          var element_0 = tmp0_iterator_0.f();
          var tmp$ret$3;
          {
            var tmp;
            if (!(element_0 === first)) {
              tmp = element_0 instanceof TimeoutCancellationException;
            } else {
              tmp = false;
            }
            tmp$ret$3 = tmp;
          }
          if (tmp$ret$3) {
            tmp$ret$4 = element_0;
            break $l$block_0;
          }
        }
        tmp$ret$4 = null;
      }
      var detailedTimeoutException = tmp$ret$4;
      if (!(detailedTimeoutException == null))
        return detailedTimeoutException;
    }
    return first;
  }
  function addSuppressedExceptions($this, rootCause, exceptions) {
    if (exceptions.g() <= 1)
      return Unit_getInstance();
    var seenExceptions = identitySet(exceptions.g());
    var unwrappedCause = unwrap(rootCause);
    var tmp0_iterator = exceptions.d();
    while (tmp0_iterator.e()) {
      var exception = tmp0_iterator.f();
      var unwrapped = unwrap(exception);
      var tmp;
      var tmp_0;
      if (!(unwrapped === rootCause) ? !(unwrapped === unwrappedCause) : false) {
        tmp_0 = !(unwrapped instanceof CancellationException);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = seenExceptions.a(unwrapped);
      } else {
        tmp = false;
      }
      if (tmp) {
        {
        }
      }
    }
  }
  function tryFinalizeSimpleState($this, state, update) {
    {
    }
    {
    }
    if (!$this.ui_1.atomicfu$compareAndSet(state, boxIncomplete(update)))
      return false;
    $this.jk(null);
    $this.dj(update);
    completeStateFinalization($this, state, update);
    {
    }
    return true;
  }
  function completeStateFinalization($this, state, update) {
    var tmp0_safe_receiver = $this.oj();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp0_safe_receiver.fm();
        tmp$ret$0 = $this.nj(NonDisposableHandle_getInstance());
      }
    }
    var tmp1_safe_receiver = update instanceof CompletedExceptionally ? update : null;
    var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.ej_1;
    if (state instanceof JobNode) {
      try {
        state.invoke(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          $this.kj(new CompletionHandlerException('Exception in completion handler ' + state + ' for ' + $this, $p));
        } else {
          throw $p;
        }
      }
    } else {
      var tmp2_safe_receiver = state.mq();
      if (tmp2_safe_receiver == null)
        null;
      else {
        notifyCompletion(tmp2_safe_receiver, $this, cause);
      }
    }
  }
  function notifyCancelling($this, list, cause) {
    $this.jk(cause);
    {
      var exception = null;
      {
        var cur = list.rq();
        while (!equals(cur, list)) {
          if (cur instanceof JobCancellingNode) {
            var tmp0__anonymous__q1qw7t = cur;
            try {
              tmp0__anonymous__q1qw7t.invoke(cause);
            } catch ($p) {
              if ($p instanceof Error) {
                var tmp0_safe_receiver = exception;
                var tmp;
                if (tmp0_safe_receiver == null) {
                  tmp = null;
                } else {
                  var tmp$ret$0;
                  {
                    {
                    }
                    {
                      {
                      }
                    }
                    tmp$ret$0 = tmp0_safe_receiver;
                  }
                  tmp = tmp$ret$0;
                }
                var tmp1_elvis_lhs = tmp;
                if (tmp1_elvis_lhs == null) {
                  var tmp$ret$1;
                  {
                    {
                    }
                    exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
                    tmp$ret$1 = Unit_getInstance();
                  }
                } else
                  tmp1_elvis_lhs;
              } else {
                throw $p;
              }
            }
          }
          cur = cur.vm_1;
        }
      }
      var tmp0_safe_receiver_0 = exception;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$2;
        {
          {
          }
          tmp$ret$2 = $this.kj(tmp0_safe_receiver_0);
        }
      }
    }
    cancelParent($this, cause);
  }
  function cancelParent($this, cause) {
    if ($this.kk())
      return true;
    var isCancellation = cause instanceof CancellationException;
    var parent = $this.oj();
    if (parent === null ? true : parent === NonDisposableHandle_getInstance()) {
      return isCancellation;
    }
    return parent.ek(cause) ? true : isCancellation;
  }
  function notifyCompletion(_this__u8e3s4, $this, cause) {
    var exception = null;
    {
      var cur = _this__u8e3s4.rq();
      while (!equals(cur, _this__u8e3s4)) {
        if (cur instanceof JobNode) {
          var tmp0__anonymous__q1qw7t = cur;
          try {
            tmp0__anonymous__q1qw7t.invoke(cause);
          } catch ($p) {
            if ($p instanceof Error) {
              var tmp0_safe_receiver = exception;
              var tmp;
              if (tmp0_safe_receiver == null) {
                tmp = null;
              } else {
                var tmp$ret$0;
                {
                  {
                  }
                  {
                    {
                    }
                  }
                  tmp$ret$0 = tmp0_safe_receiver;
                }
                tmp = tmp$ret$0;
              }
              var tmp1_elvis_lhs = tmp;
              if (tmp1_elvis_lhs == null) {
                var tmp$ret$1;
                {
                  {
                  }
                  exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
                  tmp$ret$1 = Unit_getInstance();
                }
              } else
                tmp1_elvis_lhs;
            } else {
              throw $p;
            }
          }
        }
        cur = cur.vm_1;
      }
    }
    var tmp0_safe_receiver_0 = exception;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        tmp$ret$2 = $this.kj(tmp0_safe_receiver_0);
      }
    }
    return Unit_getInstance();
  }
  function startInternal($this, state) {
    var tmp0_subject = state;
    if (tmp0_subject instanceof Empty) {
      if (state.lq_1)
        return 0;
      if (!$this.ui_1.atomicfu$compareAndSet(state, get_EMPTY_ACTIVE()))
        return -1;
      $this.zi();
      return 1;
    } else {
      if (tmp0_subject instanceof InactiveNodeList) {
        if (!$this.ui_1.atomicfu$compareAndSet(state, state.pr_1))
          return -1;
        $this.zi();
        return 1;
      } else {
        return 0;
      }
    }
  }
  function makeNode($this, handler, onCancelling) {
    var tmp;
    if (onCancelling) {
      var tmp0_elvis_lhs = handler instanceof JobCancellingNode ? handler : null;
      tmp = tmp0_elvis_lhs == null ? new InvokeOnCancelling(handler) : tmp0_elvis_lhs;
    } else {
      var tmp1_safe_receiver = handler instanceof JobNode ? handler : null;
      var tmp_0;
      if (tmp1_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$0;
        {
          {
          }
          {
            {
            }
          }
          tmp$ret$0 = tmp1_safe_receiver;
        }
        tmp_0 = tmp$ret$0;
      }
      var tmp2_elvis_lhs = tmp_0;
      tmp = tmp2_elvis_lhs == null ? new InvokeOnCompletion(handler) : tmp2_elvis_lhs;
    }
    var node = tmp;
    node.gr_1 = $this;
    return node;
  }
  function addLastAtomic($this, expect, list, node) {
    var tmp$ret$1;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = $this.pj() === expect;
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      list.yq(node);
      tmp$ret$1 = true;
    }
    return tmp$ret$1;
  }
  function promoteEmptyToNodeList($this, state) {
    var list = new NodeList();
    var update = state.lq_1 ? list : new InactiveNodeList(list);
    if (!$this.ui_1.atomicfu$compareAndSet(state, update)) {
      {
      }
    }
  }
  function promoteSingleToNodeList($this, state) {
    state.ir(new NodeList());
    var tmp$ret$0;
    {
      tmp$ret$0 = state.vm_1;
    }
    var list = tmp$ret$0;
    $this.ui_1.atomicfu$compareAndSet(state, list);
  }
  function joinInternal($this) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = $this.pj();
          if (!(!(tmp0__anonymous__q1qw7t == null) ? isInterface(tmp0__anonymous__q1qw7t, Incomplete) : false))
            return false;
          if (startInternal($this, tmp0__anonymous__q1qw7t) >= 0)
            return true;
        }
      }
    }
  }
  function joinSuspend($this, $cont) {
    var tmp$ret$2;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = new CancellableContinuationImpl(intercepted(tmp0__anonymous__q1qw7t), get_MODE_CANCELLABLE());
      cancellable.rn();
      {
        var tmp$ret$1;
        {
          var tmp0__get_asHandler__gq3rkj = new ResumeOnCompletion(cancellable);
          var tmp$ret$0;
          {
            tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
          }
          tmp$ret$1 = tmp$ret$0;
        }
        disposeOnCancellation(cancellable, $this.vj(tmp$ret$1));
      }
      tmp$ret$2 = cancellable.ao();
    }
    return tmp$ret$2;
  }
  function cancelMakeCompleting($this, cause) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = $this.pj();
          var tmp;
          if (!(!(tmp0__anonymous__q1qw7t == null) ? isInterface(tmp0__anonymous__q1qw7t, Incomplete) : false)) {
            tmp = true;
          } else {
            var tmp_0;
            if (tmp0__anonymous__q1qw7t instanceof Finishing) {
              tmp_0 = tmp0__anonymous__q1qw7t.qr();
            } else {
              tmp_0 = false;
            }
            tmp = tmp_0;
          }
          if (tmp) {
            return get_COMPLETING_ALREADY();
          }
          var tmp_1 = createCauseException($this, cause);
          var proposedUpdate = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
          var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (!(finalState === get_COMPLETING_RETRY()))
            return finalState;
        }
      }
    }
  }
  function createCauseException($this, cause) {
    var tmp0_subject = cause;
    var tmp;
    if (tmp0_subject == null ? true : tmp0_subject instanceof Error) {
      var tmp1_elvis_lhs = cause;
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = null;
          tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.cj() : tmp0_elvis_lhs, null, $this);
        }
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = ((!(cause == null) ? isInterface(cause, ParentJob) : false) ? cause : THROW_CCE()).hk();
    }
    return tmp;
  }
  function makeCancelling($this, cause) {
    var causeExceptionCache = null;
    {
      while (true) {
        var tmp$ret$7;
        $l$block: {
          var tmp0__anonymous__q1qw7t = $this.pj();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof Finishing) {
            var tmp$ret$4;
            {
              var tmp$ret$3;
              {
                if (tmp0__anonymous__q1qw7t.rr())
                  return get_TOO_LATE_TO_CANCEL();
                var wasCancelling = tmp0__anonymous__q1qw7t.nr();
                if (!(cause == null) ? true : !wasCancelling) {
                  var tmp0_elvis_lhs = causeExceptionCache;
                  var tmp;
                  if (tmp0_elvis_lhs == null) {
                    var tmp$ret$0;
                    {
                      var tmp0_also = createCauseException($this, cause);
                      {
                      }
                      {
                        causeExceptionCache = tmp0_also;
                      }
                      tmp$ret$0 = tmp0_also;
                    }
                    tmp = tmp$ret$0;
                  } else {
                    tmp = tmp0_elvis_lhs;
                  }
                  var causeException = tmp;
                  tmp0__anonymous__q1qw7t.sr(causeException);
                }
                var tmp$ret$2;
                {
                  var tmp1_takeIf = tmp0__anonymous__q1qw7t.tr();
                  {
                  }
                  var tmp_0;
                  var tmp$ret$1;
                  {
                    tmp$ret$1 = !wasCancelling;
                  }
                  if (tmp$ret$1) {
                    tmp_0 = tmp1_takeIf;
                  } else {
                    tmp_0 = null;
                  }
                  tmp$ret$2 = tmp_0;
                }
                tmp$ret$3 = tmp$ret$2;
              }
              tmp$ret$4 = tmp$ret$3;
            }
            var notifyRootCause = tmp$ret$4;
            var tmp1_safe_receiver = notifyRootCause;
            if (tmp1_safe_receiver == null)
              null;
            else {
              var tmp$ret$5;
              {
                {
                }
                tmp$ret$5 = notifyCancelling($this, tmp0__anonymous__q1qw7t.jr_1, tmp1_safe_receiver);
              }
            }
            return get_COMPLETING_ALREADY();
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              var tmp2_elvis_lhs = causeExceptionCache;
              var tmp_1;
              if (tmp2_elvis_lhs == null) {
                var tmp$ret$6;
                {
                  var tmp0_also_0 = createCauseException($this, cause);
                  {
                  }
                  {
                    causeExceptionCache = tmp0_also_0;
                  }
                  tmp$ret$6 = tmp0_also_0;
                }
                tmp_1 = tmp$ret$6;
              } else {
                tmp_1 = tmp2_elvis_lhs;
              }
              var causeException_0 = tmp_1;
              if (tmp0__anonymous__q1qw7t.ti()) {
                if (tryMakeCancelling($this, tmp0__anonymous__q1qw7t, causeException_0))
                  return get_COMPLETING_ALREADY();
              } else {
                var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, CompletedExceptionally_init_$Create$(causeException_0, false, 2, null));
                if (finalState === get_COMPLETING_ALREADY()) {
                  var tmp1_error = 'Cannot happen in ' + toString(tmp0__anonymous__q1qw7t);
                  throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
                } else if (finalState === get_COMPLETING_RETRY()) {
                  tmp$ret$7 = Unit_getInstance();
                  break $l$block;
                } else
                  return finalState;
              }
            } else {
              return get_TOO_LATE_TO_CANCEL();
            }
          }
        }
      }
    }
  }
  function getOrPromoteCancellingList($this, state) {
    var tmp1_elvis_lhs = state.mq();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_subject = state;
      var tmp_0;
      if (tmp0_subject instanceof Empty) {
        tmp_0 = new NodeList();
      } else {
        if (tmp0_subject instanceof JobNode) {
          promoteSingleToNodeList($this, state);
          tmp_0 = null;
        } else {
          var tmp0_error = 'State should have list: ' + state;
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        }
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryMakeCancelling($this, state, rootCause) {
    {
    }
    {
    }
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var cancelling = new Finishing(list, false, rootCause);
    if (!$this.ui_1.atomicfu$compareAndSet(state, cancelling)) {
      {
      }
      return false;
    }
    notifyCancelling($this, list, rootCause);
    return true;
  }
  function tryMakeCompleting($this, state, proposedUpdate) {
    if (!(!(state == null) ? isInterface(state, Incomplete) : false))
      return get_COMPLETING_ALREADY();
    var tmp;
    var tmp_0;
    var tmp_1;
    if (state instanceof Empty) {
      tmp_1 = true;
    } else {
      tmp_1 = state instanceof JobNode;
    }
    if (tmp_1) {
      tmp_0 = !(state instanceof ChildHandleNode);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = !(proposedUpdate instanceof CompletedExceptionally);
    } else {
      tmp = false;
    }
    if (tmp) {
      if (tryFinalizeSimpleState($this, state, proposedUpdate)) {
        return proposedUpdate;
      }
      return get_COMPLETING_RETRY();
    }
    return tryMakeCompletingSlowPath($this, state, proposedUpdate);
  }
  function tryMakeCompletingSlowPath($this, state, proposedUpdate) {
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return get_COMPLETING_RETRY();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var tmp1_elvis_lhs = state instanceof Finishing ? state : null;
    var finishing = tmp1_elvis_lhs == null ? new Finishing(list, false, null) : tmp1_elvis_lhs;
    var notifyRootCause = null;
    var tmp$ret$3;
    {
      if (finishing.qr())
        return get_COMPLETING_ALREADY();
      finishing.ur(true);
      if (!(finishing === state)) {
        if (!$this.ui_1.atomicfu$compareAndSet(state, finishing)) {
          {
          }
          return get_COMPLETING_RETRY();
        }
      }
      {
      }
      var wasCancelling = finishing.nr();
      var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = finishing.sr(tmp0_safe_receiver.ej_1);
        }
      }
      var tmp$ret$2;
      {
        var tmp0_takeIf = finishing.tr();
        {
        }
        var tmp_0;
        var tmp$ret$1;
        {
          tmp$ret$1 = !wasCancelling;
        }
        if (tmp$ret$1) {
          tmp_0 = tmp0_takeIf;
        } else {
          tmp_0 = null;
        }
        tmp$ret$2 = tmp_0;
      }
      notifyRootCause = tmp$ret$2;
      tmp$ret$3 = Unit_getInstance();
    }
    var tmp2_safe_receiver = notifyRootCause;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        tmp$ret$4 = notifyCancelling($this, list, tmp2_safe_receiver);
      }
    }
    var child = firstChild($this, state);
    if (!(child == null) ? tryWaitForChild($this, finishing, child, proposedUpdate) : false)
      return get_COMPLETING_WAITING_CHILDREN();
    return finalizeFinishingState($this, finishing, proposedUpdate);
  }
  function _get_exceptionOrNull__b3j7js(_this__u8e3s4, $this) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CompletedExceptionally ? _this__u8e3s4 : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ej_1;
  }
  function firstChild($this, state) {
    var tmp1_elvis_lhs = state instanceof ChildHandleNode ? state : null;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = state.mq();
      tmp = tmp0_safe_receiver == null ? null : nextChild(tmp0_safe_receiver, $this);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryWaitForChild($this, state, child, proposedUpdate) {
    var $this_0 = $this;
    var state_0 = state;
    var child_0 = child;
    var proposedUpdate_0 = proposedUpdate;
    while (true) {
      var $this_1 = $this_0;
      var state_1 = state_0;
      var child_1 = child_0;
      var proposedUpdate_1 = proposedUpdate_0;
      var tmp$ret$1;
      {
        var tmp0__get_asHandler__gq3rkj = new ChildCompletion($this_1, state_1, child_1, proposedUpdate_1);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      var handle = child_1.zr_1.xj(false, false, tmp$ret$1, 1, null);
      if (!(handle === NonDisposableHandle_getInstance()))
        return true;
      var tmp0_elvis_lhs = nextChild(child_1, $this_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var nextChild_0 = tmp;
      var tmp0 = $this_1;
      var tmp1 = state_1;
      var tmp2 = nextChild_0;
      var tmp3 = proposedUpdate_1;
      $this_0 = tmp0;
      state_0 = tmp1;
      child_0 = tmp2;
      proposedUpdate_0 = tmp3;
      continue;
    }
  }
  function continueCompleting($this, state, lastChild, proposedUpdate) {
    {
    }
    var waitChild = nextChild(lastChild, $this);
    if (!(waitChild == null) ? tryWaitForChild($this, state, waitChild, proposedUpdate) : false)
      return Unit_getInstance();
    var finalState = finalizeFinishingState($this, state, proposedUpdate);
    $this.jj(finalState);
  }
  function nextChild(_this__u8e3s4, $this) {
    var cur = _this__u8e3s4;
    $l$loop: while (true) {
      var tmp$ret$0;
      {
        var tmp0__get_isRemoved__hsfvgr = cur;
        tmp$ret$0 = tmp0__get_isRemoved__hsfvgr.xm_1;
      }
      if (!tmp$ret$0) {
        break $l$loop;
      }
      var tmp$ret$1;
      {
        var tmp1__get_prevNode__b1i0ed = cur;
        tmp$ret$1 = tmp1__get_prevNode__b1i0ed.wm_1;
      }
      cur = tmp$ret$1;
    }
    $l$loop_0: while (true) {
      var tmp$ret$2;
      {
        var tmp2__get_nextNode__ek7k4a = cur;
        tmp$ret$2 = tmp2__get_nextNode__ek7k4a.vm_1;
      }
      cur = tmp$ret$2;
      var tmp$ret$3;
      {
        var tmp3__get_isRemoved__lodk3s = cur;
        tmp$ret$3 = tmp3__get_isRemoved__lodk3s.xm_1;
      }
      if (tmp$ret$3)
        continue $l$loop_0;
      if (cur instanceof ChildHandleNode)
        return cur;
      if (cur instanceof NodeList)
        return null;
    }
  }
  function stateString($this, state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.nr() ? 'Cancelling' : state.qr() ? 'Completing' : 'Active';
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
        tmp = state.ti() ? 'Active' : 'New';
      } else {
        if (tmp0_subject instanceof CompletedExceptionally) {
          tmp = 'Cancelled';
        } else {
          tmp = 'Completed';
        }
      }
    }
    return tmp;
  }
  function Finishing(list, isCompleting, rootCause) {
    this.jr_1 = list;
    this.kr_1 = atomic$boolean$1(isCompleting);
    this.lr_1 = atomic$ref$1(rootCause);
    this.mr_1 = atomic$ref$1(null);
  }
  Finishing.prototype.mq = function () {
    return this.jr_1;
  };
  Finishing.prototype.ur = function (value) {
    this.kr_1.li_1 = value;
  };
  Finishing.prototype.qr = function () {
    return this.kr_1.li_1;
  };
  Finishing.prototype.as = function (value) {
    this.lr_1.fi_1 = value;
  };
  Finishing.prototype.tr = function () {
    return this.lr_1.fi_1;
  };
  Finishing.prototype.rr = function () {
    return _get_exceptionsHolder__nhszp(this) === get_SEALED();
  };
  Finishing.prototype.nr = function () {
    return !(this.tr() == null);
  };
  Finishing.prototype.ti = function () {
    return this.tr() == null;
  };
  Finishing.prototype.or = function (proposedException) {
    var eh = _get_exceptionsHolder__nhszp(this);
    var tmp;
    if (eh == null) {
      tmp = allocateList(this);
    } else {
      if (eh instanceof Error) {
        var tmp$ret$0;
        {
          var tmp0_also = allocateList(this);
          {
          }
          {
            tmp0_also.a(eh);
          }
          tmp$ret$0 = tmp0_also;
        }
        tmp = tmp$ret$0;
      } else {
        if (eh instanceof ArrayList) {
          tmp = eh instanceof ArrayList ? eh : THROW_CCE();
        } else {
          var tmp1_error = 'State is ' + toString(eh);
          throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
        }
      }
    }
    var list = tmp;
    var rootCause = this.tr();
    var tmp0_safe_receiver = rootCause;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        var tmp0_addOrUpdate = list;
        tmp$ret$1 = tmp0_addOrUpdate.fa(0, tmp0_safe_receiver);
      }
    }
    if (!(proposedException == null) ? !equals(proposedException, rootCause) : false) {
      {
        var tmp2_addOrUpdate = list;
        tmp2_addOrUpdate.a(proposedException);
      }
    }
    _set_exceptionsHolder__tqm22h(this, get_SEALED());
    return list;
  };
  Finishing.prototype.sr = function (exception) {
    var rootCause = this.tr();
    if (rootCause == null) {
      this.as(exception);
      return Unit_getInstance();
    }
    if (exception === rootCause)
      return Unit_getInstance();
    var eh = _get_exceptionsHolder__nhszp(this);
    if (eh == null)
      _set_exceptionsHolder__tqm22h(this, exception);
    else {
      if (eh instanceof Error) {
        if (exception === eh)
          return Unit_getInstance();
        var tmp$ret$0;
        {
          var tmp0_apply = allocateList(this);
          {
          }
          {
            tmp0_apply.a(eh);
            tmp0_apply.a(exception);
          }
          tmp$ret$0 = tmp0_apply;
        }
        _set_exceptionsHolder__tqm22h(this, tmp$ret$0);
      } else {
        if (eh instanceof ArrayList) {
          var tmp1_addOrUpdate = eh instanceof ArrayList ? eh : THROW_CCE();
          tmp1_addOrUpdate.a(exception);
        } else {
          var tmp2_error = 'State is ' + toString(eh);
          throw IllegalStateException_init_$Create$(toString_0(tmp2_error));
        }
      }
    }
  };
  Finishing.prototype.toString = function () {
    return 'Finishing[cancelling=' + this.nr() + ', completing=' + this.qr() + ', rootCause=' + this.tr() + ', exceptions=' + toString(_get_exceptionsHolder__nhszp(this)) + ', list=' + this.jr_1 + ']';
  };
  Finishing.$metadata$ = classMeta('Finishing', [Incomplete]);
  function ChildCompletion(parent, state, child, proposedUpdate) {
    JobNode.call(this);
    this.fs_1 = parent;
    this.gs_1 = state;
    this.hs_1 = child;
    this.is_1 = proposedUpdate;
  }
  ChildCompletion.prototype.em = function (cause) {
    continueCompleting(this.fs_1, this.gs_1, this.hs_1, this.is_1);
  };
  ChildCompletion.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  ChildCompletion.$metadata$ = classMeta('ChildCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function AwaitContinuation(delegate, job) {
    CancellableContinuationImpl.call(this, delegate, get_MODE_CANCELLABLE());
    this.ps_1 = job;
  }
  AwaitContinuation.prototype.zn = function (parent) {
    var state = this.ps_1.pj();
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.tr();
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        {
          {
          }
          return tmp0_safe_receiver;
        }
      }
    }
    if (state instanceof CompletedExceptionally)
      return state.ej_1;
    return parent.sj();
  };
  AwaitContinuation.prototype.lj = function () {
    return 'AwaitContinuation';
  };
  AwaitContinuation.$metadata$ = classMeta('AwaitContinuation', undefined, undefined, undefined, undefined, CancellableContinuationImpl.prototype);
  function awaitSuspend($this, $cont) {
    var tmp$ret$2;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cont = new AwaitContinuation(intercepted(tmp0__anonymous__q1qw7t), $this);
      var tmp$ret$1;
      {
        var tmp0__get_asHandler__gq3rkj = new ResumeAwaitOnCompletion(cont);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      disposeOnCancellation(cont, $this.vj(tmp$ret$1));
      tmp$ret$2 = cont.ao();
    }
    return tmp$ret$2;
  }
  function JobSupport(active) {
    this.ui_1 = atomic$ref$1(active ? get_EMPTY_ACTIVE() : get_EMPTY_NEW());
    this.vi_1 = atomic$ref$1(null);
  }
  JobSupport.prototype.s = function () {
    return Key_getInstance_3();
  };
  JobSupport.prototype.nj = function (value) {
    this.vi_1.fi_1 = value;
  };
  JobSupport.prototype.oj = function () {
    return this.vi_1.fi_1;
  };
  JobSupport.prototype.xi = function (parent) {
    {
    }
    if (parent == null) {
      this.nj(NonDisposableHandle_getInstance());
      return Unit_getInstance();
    }
    parent.rj();
    var handle = parent.ik(this);
    this.nj(handle);
    if (this.qj()) {
      handle.fm();
      this.nj(NonDisposableHandle_getInstance());
    }
  };
  JobSupport.prototype.pj = function () {
    {
      var tmp0_loop = this.ui_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          if (!(tmp1__anonymous__uwfjfc instanceof OpDescriptor))
            return tmp1__anonymous__uwfjfc;
          tmp1__anonymous__uwfjfc.qs(this);
        }
      }
    }
  };
  JobSupport.prototype.ti = function () {
    var state = this.pj();
    var tmp;
    if (!(state == null) ? isInterface(state, Incomplete) : false) {
      tmp = state.ti();
    } else {
      tmp = false;
    }
    return tmp;
  };
  JobSupport.prototype.qj = function () {
    var tmp = this.pj();
    return !(!(tmp == null) ? isInterface(tmp, Incomplete) : false);
  };
  JobSupport.prototype.rj = function () {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.pj();
          var tmp0_subject = startInternal(this, tmp0__anonymous__q1qw7t);
          if (tmp0_subject === 0)
            return false;
          else if (tmp0_subject === 1)
            return true;
        }
      }
    }
  };
  JobSupport.prototype.zi = function () {
  };
  JobSupport.prototype.sj = function () {
    var state = this.pj();
    var tmp;
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.tr();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.tj(tmp0_safe_receiver, get_classSimpleName(this) + ' is cancelling');
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp0_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      if (!(state == null) ? isInterface(state, Incomplete) : false) {
        var tmp1_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
      } else {
        if (state instanceof CompletedExceptionally) {
          tmp = this.uj(state.ej_1, null, 1, null);
        } else {
          tmp = new JobCancellationException(get_classSimpleName(this) + ' has completed normally', null, this);
        }
      }
    }
    return tmp;
  };
  JobSupport.prototype.tj = function (_this__u8e3s4, message) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof CancellationException ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs_0 = message;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.cj() : tmp0_elvis_lhs_0, _this__u8e3s4, this);
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  JobSupport.prototype.uj = function (_this__u8e3s4, message, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      message = null;
    return this.tj(_this__u8e3s4, message);
  };
  JobSupport.prototype.vj = function (handler) {
    return this.wj(false, true, handler);
  };
  JobSupport.prototype.wj = function (onCancelling, invokeImmediately, handler) {
    var node = makeNode(this, handler, onCancelling);
    {
      while (true) {
        var tmp$ret$1;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.pj();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof Empty) {
            if (tmp0__anonymous__q1qw7t.lq_1) {
              if (this.ui_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, node))
                return node;
            } else
              promoteEmptyToNodeList(this, tmp0__anonymous__q1qw7t);
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              var list = tmp0__anonymous__q1qw7t.mq();
              if (list == null) {
                promoteSingleToNodeList(this, tmp0__anonymous__q1qw7t instanceof JobNode ? tmp0__anonymous__q1qw7t : THROW_CCE());
              } else {
                var rootCause = null;
                var handle = NonDisposableHandle_getInstance();
                var tmp;
                if (onCancelling) {
                  tmp = tmp0__anonymous__q1qw7t instanceof Finishing;
                } else {
                  tmp = false;
                }
                if (tmp) {
                  var tmp$ret$2;
                  {
                    rootCause = tmp0__anonymous__q1qw7t.tr();
                    var tmp_0;
                    var tmp_1;
                    if (rootCause == null) {
                      tmp_1 = true;
                    } else {
                      var tmp_2;
                      var tmp$ret$0;
                      {
                        tmp$ret$0 = handler instanceof ChildHandleNode;
                      }
                      if (tmp$ret$0) {
                        tmp_2 = !tmp0__anonymous__q1qw7t.qr();
                      } else {
                        tmp_2 = false;
                      }
                      tmp_1 = tmp_2;
                    }
                    if (tmp_1) {
                      if (!addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node)) {
                        tmp$ret$1 = Unit_getInstance();
                        break $l$block;
                      }
                      if (rootCause == null)
                        return node;
                      handle = node;
                      tmp_0 = Unit_getInstance();
                    }
                    tmp$ret$2 = tmp_0;
                  }
                }
                if (!(rootCause == null)) {
                  if (invokeImmediately)
                    invokeIt(handler, rootCause);
                  return handle;
                } else {
                  if (addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node))
                    return node;
                }
              }
            } else {
              {
              }
              if (invokeImmediately) {
                var tmp1_safe_receiver = tmp0__anonymous__q1qw7t instanceof CompletedExceptionally ? tmp0__anonymous__q1qw7t : null;
                invokeIt(handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.ej_1);
              }
              return NonDisposableHandle_getInstance();
            }
          }
        }
      }
    }
  };
  JobSupport.prototype.cp = function ($cont) {
    if (!joinInternal(this)) {
      var tmp$ret$0;
      {
        tmp$ret$0 = $cont.q3();
      }
      checkCompletion(tmp$ret$0);
      return Unit_getInstance();
    }
    return joinSuspend(this, $cont);
  };
  JobSupport.prototype.yj = function (node) {
    {
      while (true) {
        {
          var tmp0__anonymous__q1qw7t = this.pj();
          var tmp0_subject = tmp0__anonymous__q1qw7t;
          if (tmp0_subject instanceof JobNode) {
            if (!(tmp0__anonymous__q1qw7t === node))
              return Unit_getInstance();
            if (this.ui_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, get_EMPTY_ACTIVE())) {
              {
              }
              return Unit_getInstance();
            }
          } else {
            if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
              if (!(tmp0__anonymous__q1qw7t.mq() == null)) {
                node.ym();
              }
              return Unit_getInstance();
            } else {
              return Unit_getInstance();
            }
          }
        }
      }
    }
  };
  JobSupport.prototype.zj = function () {
    return false;
  };
  JobSupport.prototype.ak = function (cause) {
    var tmp0_elvis_lhs = cause;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_elvis_lhs_0 = null;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.cj() : tmp0_elvis_lhs_0, null, this);
      }
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    this.ck(tmp);
  };
  JobSupport.prototype.cj = function () {
    return 'Job was cancelled';
  };
  JobSupport.prototype.ck = function (cause) {
    this.fk(cause);
  };
  JobSupport.prototype.dk = function (parentJob) {
    this.fk(parentJob);
  };
  JobSupport.prototype.ek = function (cause) {
    if (cause instanceof CancellationException)
      return true;
    return this.fk(cause) ? this.lk() : false;
  };
  JobSupport.prototype.fk = function (cause) {
    var finalState = get_COMPLETING_ALREADY();
    if (this.zj()) {
      finalState = cancelMakeCompleting(this, cause);
      if (finalState === get_COMPLETING_WAITING_CHILDREN())
        return true;
    }
    if (finalState === get_COMPLETING_ALREADY()) {
      finalState = makeCancelling(this, cause);
    }
    var tmp;
    if (finalState === get_COMPLETING_ALREADY()) {
      tmp = true;
    } else if (finalState === get_COMPLETING_WAITING_CHILDREN()) {
      tmp = true;
    } else if (finalState === get_TOO_LATE_TO_CANCEL()) {
      tmp = false;
    } else {
      this.jj(finalState);
      tmp = true;
    }
    return tmp;
  };
  JobSupport.prototype.gk = function (message, cause) {
    var tmp0_elvis_lhs = message;
    return new JobCancellationException(tmp0_elvis_lhs == null ? this.cj() : tmp0_elvis_lhs, cause, this);
  };
  JobSupport.prototype.hk = function () {
    var state = this.pj();
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.tr();
    } else {
      if (tmp0_subject instanceof CompletedExceptionally) {
        tmp = state.ej_1;
      } else {
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
          var tmp0_error = 'Cannot be cancelling child in this state: ' + toString(state);
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        } else {
          tmp = null;
        }
      }
    }
    var rootCause = tmp;
    var tmp1_elvis_lhs = rootCause instanceof CancellationException ? rootCause : null;
    return tmp1_elvis_lhs == null ? new JobCancellationException('Parent job is ' + stateString(this, state), rootCause, this) : tmp1_elvis_lhs;
  };
  JobSupport.prototype.ap = function (proposedUpdate) {
    {
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.pj();
          var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (finalState === get_COMPLETING_ALREADY())
            return false;
          else if (finalState === get_COMPLETING_WAITING_CHILDREN())
            return true;
          else if (finalState === get_COMPLETING_RETRY()) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else {
            this.jj(finalState);
            return true;
          }
        }
      }
    }
  };
  JobSupport.prototype.hj = function (proposedUpdate) {
    {
      while (true) {
        var tmp$ret$0;
        $l$block: {
          var tmp0__anonymous__q1qw7t = this.pj();
          var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
          if (finalState === get_COMPLETING_ALREADY())
            throw IllegalStateException_init_$Create$_0('Job ' + this + ' is already complete or completing, ' + ('but is being completed with ' + toString(proposedUpdate)), _get_exceptionOrNull__b3j7js(proposedUpdate, this));
          else if (finalState === get_COMPLETING_RETRY()) {
            tmp$ret$0 = Unit_getInstance();
            break $l$block;
          } else
            return finalState;
        }
      }
    }
  };
  JobSupport.prototype.ik = function (child) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ChildHandleNode(child);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    var tmp = this.xj(true, false, tmp$ret$1, 2, null);
    return isInterface(tmp, ChildHandle) ? tmp : THROW_CCE();
  };
  JobSupport.prototype.kj = function (exception) {
    throw exception;
  };
  JobSupport.prototype.jk = function (cause) {
  };
  JobSupport.prototype.kk = function () {
    return false;
  };
  JobSupport.prototype.lk = function () {
    return true;
  };
  JobSupport.prototype.mk = function (exception) {
    return false;
  };
  JobSupport.prototype.dj = function (state) {
  };
  JobSupport.prototype.jj = function (state) {
  };
  JobSupport.prototype.toString = function () {
    return this.nk() + '@' + get_hexAddress(this);
  };
  JobSupport.prototype.nk = function () {
    return this.lj() + '{' + stateString(this, this.pj()) + '}';
  };
  JobSupport.prototype.lj = function () {
    return get_classSimpleName(this);
  };
  JobSupport.prototype.jl = function ($cont) {
    $l$loop: while (true) {
      var state = this.pj();
      if (!(!(state == null) ? isInterface(state, Incomplete) : false)) {
        if (state instanceof CompletedExceptionally) {
          {
            var tmp0_recoverAndThrow = state.ej_1;
            throw tmp0_recoverAndThrow;
          }
        }
        return unboxState(state);
      }
      if (startInternal(this, state) >= 0)
        break $l$loop;
    }
    return awaitSuspend(this, $cont);
  };
  JobSupport.$metadata$ = classMeta('JobSupport', [Job, ChildJob, ParentJob, SelectClause0]);
  function boxIncomplete(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp;
    if (!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Incomplete) : false) {
      tmp = new IncompleteStateBox(_this__u8e3s4);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function JobCancellingNode() {
    JobNode.call(this);
  }
  JobCancellingNode.$metadata$ = classMeta('JobCancellingNode', undefined, undefined, undefined, undefined, JobNode.prototype);
  function get_FALSE() {
    return FALSE;
  }
  var FALSE;
  function get_TRUE() {
    return TRUE;
  }
  var TRUE;
  function InactiveNodeList(list) {
    this.pr_1 = list;
  }
  InactiveNodeList.prototype.mq = function () {
    return this.pr_1;
  };
  InactiveNodeList.prototype.ti = function () {
    return false;
  };
  InactiveNodeList.prototype.toString = function () {
    return get_DEBUG() ? this.pr_1.qq('New') : anyToString(this);
  };
  InactiveNodeList.$metadata$ = classMeta('InactiveNodeList', [Incomplete]);
  function ChildHandleNode(childJob) {
    JobCancellingNode.call(this);
    this.zr_1 = childJob;
  }
  ChildHandleNode.prototype.em = function (cause) {
    return this.zr_1.dk(this.hr());
  };
  ChildHandleNode.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  ChildHandleNode.prototype.ek = function (cause) {
    return this.hr().ek(cause);
  };
  ChildHandleNode.$metadata$ = classMeta('ChildHandleNode', [ChildHandle], undefined, undefined, undefined, JobCancellingNode.prototype);
  function InvokeOnCancelling(handler) {
    JobCancellingNode.call(this);
    this.vs_1 = handler;
    this.ws_1 = atomic$int$1(0);
  }
  InvokeOnCancelling.prototype.em = function (cause) {
    if (this.ws_1.atomicfu$compareAndSet(0, 1))
      this.vs_1(cause);
  };
  InvokeOnCancelling.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  InvokeOnCancelling.$metadata$ = classMeta('InvokeOnCancelling', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function InvokeOnCompletion(handler) {
    JobNode.call(this);
    this.bt_1 = handler;
  }
  InvokeOnCompletion.prototype.em = function (cause) {
    return this.bt_1(cause);
  };
  InvokeOnCompletion.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  InvokeOnCompletion.$metadata$ = classMeta('InvokeOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function ResumeOnCompletion(continuation) {
    JobNode.call(this);
    this.gt_1 = continuation;
  }
  ResumeOnCompletion.prototype.em = function (cause) {
    var tmp$ret$1;
    {
      var tmp0_resume = this.gt_1;
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp$ret$1 = tmp0_resume.r3(tmp$ret$0);
    }
    return tmp$ret$1;
  };
  ResumeOnCompletion.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  ResumeOnCompletion.$metadata$ = classMeta('ResumeOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function unboxState(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp0_safe_receiver = _this__u8e3s4 instanceof IncompleteStateBox ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ht_1;
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function ResumeAwaitOnCompletion(continuation) {
    JobNode.call(this);
    this.mt_1 = continuation;
  }
  ResumeAwaitOnCompletion.prototype.em = function (cause) {
    var state = this.hr().pj();
    {
    }
    if (state instanceof CompletedExceptionally) {
      var tmp$ret$1;
      {
        var tmp0_resumeWithException = this.mt_1;
        var tmp1_resumeWithException = state.ej_1;
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_resumeWithException));
        }
        tmp$ret$1 = tmp0_resumeWithException.r3(tmp$ret$0);
      }
    } else {
      var tmp$ret$3;
      {
        var tmp2_resume = this.mt_1;
        var tmp = unboxState(state);
        var tmp3_resume = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
        var tmp$ret$2;
        {
          var tmp0_success = Companion_getInstance_0();
          tmp$ret$2 = _Result___init__impl__xyqfz8(tmp3_resume);
        }
        tmp$ret$3 = tmp2_resume.r3(tmp$ret$2);
      }
    }
  };
  ResumeAwaitOnCompletion.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  ResumeAwaitOnCompletion.$metadata$ = classMeta('ResumeAwaitOnCompletion', undefined, undefined, undefined, undefined, JobNode.prototype);
  function IncompleteStateBox(state) {
    this.ht_1 = state;
  }
  IncompleteStateBox.$metadata$ = classMeta('IncompleteStateBox');
  function ChildContinuation(child) {
    JobCancellingNode.call(this);
    this.rt_1 = child;
  }
  ChildContinuation.prototype.em = function (cause) {
    this.rt_1.yn(this.hr());
  };
  ChildContinuation.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  ChildContinuation.$metadata$ = classMeta('ChildContinuation', undefined, undefined, undefined, undefined, JobCancellingNode.prototype);
  function handlesException($this, parent) {
    var $this_0 = $this;
    var parent_0 = parent;
    while (true) {
      var $this_1 = $this_0;
      var parent_1 = parent_0;
      var tmp0_elvis_lhs = parent_1 instanceof JobSupport ? parent_1 : null;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var parentJob = tmp;
      if (parentJob.lk())
        return true;
      var tmp0 = $this_1;
      var tmp_0 = parentJob.oj();
      var tmp1_safe_receiver = tmp_0 instanceof ChildHandleNode ? tmp_0 : null;
      var tmp1 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.hr();
      $this_0 = tmp0;
      parent_0 = tmp1;
      continue;
    }
  }
  function JobImpl(parent) {
    JobSupport.call(this, true);
    this.ut_1 = handlesException(this, parent);
    this.xi(parent);
  }
  JobImpl.prototype.lk = function () {
    return this.ut_1;
  };
  JobImpl.prototype.zj = function () {
    return true;
  };
  JobImpl.prototype.bp = function () {
    return this.ap(Unit_getInstance());
  };
  JobImpl.prototype.oo = function (exception) {
    return this.ap(CompletedExceptionally_init_$Create$(exception, false, 2, null));
  };
  JobImpl.$metadata$ = classMeta('JobImpl', [CompletableJob], undefined, undefined, undefined, JobSupport.prototype);
  var properties_initialized_JobSupport_kt_5iq8a4;
  function init_properties_JobSupport_kt_iaxwag() {
    if (properties_initialized_JobSupport_kt_5iq8a4) {
    } else {
      properties_initialized_JobSupport_kt_5iq8a4 = true;
      COMPLETING_ALREADY = new Symbol('COMPLETING_ALREADY');
      COMPLETING_WAITING_CHILDREN = new Symbol('COMPLETING_WAITING_CHILDREN');
      COMPLETING_RETRY = new Symbol('COMPLETING_RETRY');
      TOO_LATE_TO_CANCEL = new Symbol('TOO_LATE_TO_CANCEL');
      SEALED = new Symbol('SEALED');
      EMPTY_NEW = new Empty(false);
      EMPTY_ACTIVE = new Empty(true);
    }
  }
  function MainCoroutineDispatcher() {
    CoroutineDispatcher.call(this);
  }
  MainCoroutineDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.xt();
    return tmp0_elvis_lhs == null ? get_classSimpleName(this) + '@' + get_hexAddress(this) : tmp0_elvis_lhs;
  };
  MainCoroutineDispatcher.prototype.xt = function () {
    var main = Dispatchers_getInstance().zt_1;
    if (this === main)
      return 'Dispatchers.Main';
    var tmp;
    try {
      tmp = main.wt();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof UnsupportedOperationException) {
        tmp_0 = null;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var immediate = tmp;
    if (this === immediate)
      return 'Dispatchers.Main.immediate';
    return null;
  };
  MainCoroutineDispatcher.$metadata$ = classMeta('MainCoroutineDispatcher', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function SupervisorJob(parent) {
    return new SupervisorJobImpl(parent);
  }
  function SupervisorJob$default(parent, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      parent = null;
    return SupervisorJob(parent);
  }
  function SupervisorJobImpl(parent) {
    JobImpl.call(this, parent);
  }
  SupervisorJobImpl.prototype.ek = function (cause) {
    return false;
  };
  SupervisorJobImpl.$metadata$ = classMeta('SupervisorJobImpl', undefined, undefined, undefined, undefined, JobImpl.prototype);
  function TimeoutCancellationException() {
  }
  TimeoutCancellationException.$metadata$ = classMeta('TimeoutCancellationException', [CopyableThrowable], undefined, undefined, undefined, CancellationException.prototype);
  function Unconfined() {
    Unconfined_instance = this;
    CoroutineDispatcher.call(this);
  }
  Unconfined.prototype.gp = function (context) {
    return false;
  };
  Unconfined.prototype.hp = function (context, block) {
    var yieldContext = context.w3(Key_getInstance_4());
    if (!(yieldContext == null)) {
      yieldContext.gu_1 = true;
      return Unit_getInstance();
    }
    throw UnsupportedOperationException_init_$Create$('Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.');
  };
  Unconfined.prototype.toString = function () {
    return 'Dispatchers.Unconfined';
  };
  Unconfined.$metadata$ = objectMeta('Unconfined', undefined, undefined, undefined, undefined, CoroutineDispatcher.prototype);
  var Unconfined_instance;
  function Unconfined_getInstance() {
    if (Unconfined_instance == null)
      new Unconfined();
    return Unconfined_instance;
  }
  function Key_4() {
    Key_instance_3 = this;
  }
  Key_4.$metadata$ = objectMeta('Key', [Key]);
  var Key_instance_3;
  function Key_getInstance_4() {
    if (Key_instance_3 == null)
      new Key_4();
    return Key_instance_3;
  }
  function checkCompletion(_this__u8e3s4) {
    var job = _this__u8e3s4.w3(Key_getInstance_3());
    if (!(job == null) ? !job.ti() : false)
      throw job.sj();
  }
  function get_EMPTY() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return EMPTY;
  }
  var EMPTY;
  function get_OFFER_SUCCESS() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return OFFER_SUCCESS;
  }
  var OFFER_SUCCESS;
  function get_OFFER_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return OFFER_FAILED;
  }
  var OFFER_FAILED;
  function get_POLL_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return POLL_FAILED;
  }
  var POLL_FAILED;
  function get_ENQUEUE_FAILED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return ENQUEUE_FAILED;
  }
  var ENQUEUE_FAILED;
  function get_HANDLER_INVOKED() {
    init_properties_AbstractChannel_kt_mjk5bh();
    return HANDLER_INVOKED;
  }
  var HANDLER_INVOKED;
  function hasNextResult($this, result) {
    if (result instanceof Closed) {
      if (!(result.ku_1 == null))
        throw recoverStackTrace_0(result.lu());
      return false;
    }
    return true;
  }
  function hasNextSuspend($this, $cont) {
    var tmp$ret$5;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_1: {
        var receive = new ReceiveHasNext($this, cancellable);
        while (true) {
          if (enqueueReceive($this.mu_1, receive)) {
            removeReceiveOnCancel($this.mu_1, cancellable, receive);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
          var result = $this.mu_1.ru();
          $this.su(result);
          if (result instanceof Closed) {
            if (result.ku_1 == null) {
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  var tmp0_success = Companion_getInstance_0();
                  tmp$ret$1 = _Result___init__impl__xyqfz8(false);
                }
                tmp$ret$2 = cancellable.r3(tmp$ret$1);
              }
            } else {
              var tmp$ret$4;
              {
                var tmp0_resumeWithException = result.lu();
                var tmp$ret$3;
                {
                  var tmp0_failure = Companion_getInstance_0();
                  tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
                }
                tmp$ret$4 = cancellable.r3(tmp$ret$3);
              }
            }
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
          if (!(result === get_POLL_FAILED())) {
            var tmp0_safe_receiver = $this.mu_1.wu();
            var tmp;
            if (tmp0_safe_receiver == null) {
              tmp = null;
            } else {
              tmp = bindCancellationFun(tmp0_safe_receiver, (result == null ? true : isObject(result)) ? result : THROW_CCE(), cancellable.q3());
            }
            cancellable.cm(true, tmp);
            tmp$ret$0 = Unit_getInstance();
            break $l$block_1;
          }
        }
      }
      tmp$ret$5 = cancellable.ao();
    }
    return tmp$ret$5;
  }
  function enqueueReceive($this, receive) {
    var tmp$ret$0;
    {
      var tmp0_also = $this.xu(receive);
      {
      }
      {
        if (tmp0_also)
          $this.yu();
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  }
  function removeReceiveOnCancel($this, cont, receive) {
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new RemoveReceiveOnCancel($this, receive);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return cont.am(tmp$ret$1);
  }
  function RemoveReceiveOnCancel($outer, receive) {
    this.av_1 = $outer;
    BeforeResumeCancelHandler.call(this);
    this.zu_1 = receive;
  }
  RemoveReceiveOnCancel.prototype.em = function (cause) {
    if (this.zu_1.ym())
      this.av_1.bv();
  };
  RemoveReceiveOnCancel.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  RemoveReceiveOnCancel.prototype.toString = function () {
    return 'RemoveReceiveOnCancel[' + this.zu_1 + ']';
  };
  RemoveReceiveOnCancel.$metadata$ = classMeta('RemoveReceiveOnCancel', undefined, undefined, undefined, undefined, BeforeResumeCancelHandler.prototype);
  function Itr(channel) {
    this.mu_1 = channel;
    this.nu_1 = atomic$ref$1(get_POLL_FAILED());
  }
  Itr.prototype.cv = function () {
    return this.mu_1;
  };
  Itr.prototype.su = function (value) {
    this.nu_1.fi_1 = value;
  };
  Itr.prototype.dv = function () {
    return this.nu_1.fi_1;
  };
  Itr.prototype.ev = function ($cont) {
    if (!(this.dv() === get_POLL_FAILED()))
      return hasNextResult(this, this.dv());
    this.su(this.mu_1.ru());
    if (!(this.dv() === get_POLL_FAILED()))
      return hasNextResult(this, this.dv());
    return hasNextSuspend(this, $cont);
  };
  Itr.prototype.f = function () {
    var result = this.dv();
    if (result instanceof Closed)
      throw recoverStackTrace_0(result.lu());
    if (!(result === get_POLL_FAILED())) {
      this.su(get_POLL_FAILED());
      return (result == null ? true : isObject(result)) ? result : THROW_CCE();
    }
    throw IllegalStateException_init_$Create$("'hasNext' should be called prior to 'next' invocation");
  };
  Itr.$metadata$ = classMeta('Itr', [ChannelIterator]);
  function ReceiveHasNext(iterator, cont) {
    Receive.call(this);
    this.iv_1 = iterator;
    this.jv_1 = atomic$ref$1(cont);
    this.kv_1 = cont.q3();
  }
  ReceiveHasNext.prototype.lv = function (value, otherOp) {
    var tmp1_safe_receiver = this.jv_1.fi_1;
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp0_safe_receiver = otherOp;
      tmp = tmp1_safe_receiver.xl(true, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.nv_1, this.pv(value));
    }
    var tmp2_elvis_lhs = tmp;
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      return null;
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var token = tmp_0;
    {
    }
    var tmp3_safe_receiver = otherOp;
    if (tmp3_safe_receiver == null)
      null;
    else {
      tmp3_safe_receiver.qv();
    }
    return get_RESUME_TOKEN();
  };
  ReceiveHasNext.prototype.rv = function (value) {
    this.iv_1.su(value);
    ensureNotNull(this.jv_1.atomicfu$getAndSet(null)).zl(get_RESUME_TOKEN());
  };
  ReceiveHasNext.prototype.sv = function (closed) {
    var cont = ensureNotNull(this.jv_1.atomicfu$getAndSet(null));
    var tmp;
    if (closed.ku_1 == null) {
      tmp = cont.wl(false, null, 2, null);
    } else {
      tmp = cont.yl(closed.lu());
    }
    var token = tmp;
    if (!(token == null)) {
      this.iv_1.su(closed);
      cont.zl(token);
    }
  };
  ReceiveHasNext.prototype.pv = function (value) {
    var tmp0_safe_receiver = this.iv_1.mu_1.wu();
    return tmp0_safe_receiver == null ? null : bindCancellationFun(tmp0_safe_receiver, value, this.kv_1);
  };
  ReceiveHasNext.prototype.toString = function () {
    return 'ReceiveHasNext@' + get_hexAddress(this);
  };
  ReceiveHasNext.$metadata$ = classMeta('ReceiveHasNext', undefined, undefined, undefined, undefined, Receive.prototype);
  function AbstractChannel(onUndeliveredElement) {
    AbstractSendChannel.call(this, onUndeliveredElement);
  }
  AbstractChannel.prototype.ru = function () {
    while (true) {
      var tmp0_elvis_lhs = this.zv();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return get_POLL_FAILED();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var send = tmp;
      {
        {
        }
      }
      var token = send.dw(null);
      if (!(token == null)) {
        {
        }
        send.ew();
        return send.fw();
      }
      send.gw();
    }
  };
  AbstractChannel.prototype.hw = function () {
    return !(this.iw() == null) ? this.yv() : false;
  };
  AbstractChannel.prototype.xu = function (receive) {
    var tmp;
    if (this.xv()) {
      var tmp$ret$1;
      $l$block: {
        var tmp0_addLastIfPrev = this.jw();
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.wm_1;
          tmp$ret$0 = !(tmp1__anonymous__uwfjfc instanceof Send);
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block;
        }
        tmp0_addLastIfPrev.yq(receive);
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$3;
      $l$block_1: {
        var tmp2_addLastIfPrevAndIf = this.jw();
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = tmp2_addLastIfPrevAndIf.wm_1;
          tmp$ret$2 = !(tmp3__anonymous__ufb84q instanceof Send);
        }
        if (!tmp$ret$2) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        var tmp$ret$4;
        {
          tmp$ret$4 = this.yv();
        }
        if (!tmp$ret$4) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        tmp2_addLastIfPrevAndIf.yq(receive);
        tmp$ret$3 = true;
      }
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  AbstractChannel.prototype.ak = function (cause) {
    if (this.hw())
      return Unit_getInstance();
    var tmp0_elvis_lhs = cause;
    this.kw(tmp0_elvis_lhs == null ? CancellationException_init_$Create$(get_classSimpleName(this) + ' was cancelled') : tmp0_elvis_lhs);
  };
  AbstractChannel.prototype.kw = function (cause) {
    var tmp$ret$0;
    {
      var tmp0_also = this.lw(cause);
      {
      }
      {
        this.mw(tmp0_also);
        {
          {
          }
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  AbstractChannel.prototype.mw = function (wasClosed) {
    var tmp0_elvis_lhs = this.nw();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('Cannot happen');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var closed = tmp;
    var list = _InlineList___init__impl__z8n56_0(null, 1, null);
    $l$loop_0: while (true) {
      var tmp$ret$0;
      {
        tmp$ret$0 = closed.wm_1;
      }
      var previous = tmp$ret$0;
      var tmp_0;
      if (previous instanceof LinkedListHead) {
        tmp_0 = true;
      } else {
        tmp_0 = previous === closed;
      }
      if (tmp_0)
        break $l$loop_0;
      {
      }
      if (!previous.ym()) {
        previous.cr();
        continue $l$loop_0;
      }
      var tmp_1 = list;
      list = InlineList__plus_impl_nuetvo(tmp_1, previous instanceof Send ? previous : THROW_CCE());
    }
    this.ow(list, closed);
  };
  AbstractChannel.prototype.ow = function (list, closed) {
    var tmp$ret$0;
    $l$block: {
      var tmp0_subject = _get_holder__f6h5pd(list);
      if (tmp0_subject == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp = _get_holder__f6h5pd(list);
          var tmp0__anonymous__q1qw7t = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
          tmp0__anonymous__q1qw7t.pw(closed);
        } else {
          var tmp_0 = _get_holder__f6h5pd(list);
          var list_0 = tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE();
          var inductionVariable = list_0.g() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp1__anonymous__uwfjfc = list_0.l(i);
                tmp1__anonymous__uwfjfc.pw(closed);
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
  };
  AbstractChannel.prototype.d = function () {
    return new Itr(this);
  };
  AbstractChannel.prototype.qw = function () {
    var tmp$ret$0;
    {
      var tmp0_also = AbstractSendChannel.prototype.qw.call(this);
      {
      }
      {
        var tmp;
        if (!(tmp0_also == null)) {
          tmp = !(tmp0_also instanceof Closed);
        } else {
          tmp = false;
        }
        if (tmp)
          this.bv();
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  AbstractChannel.prototype.yu = function () {
  };
  AbstractChannel.prototype.bv = function () {
  };
  AbstractChannel.$metadata$ = classMeta('AbstractChannel', [Channel], undefined, undefined, undefined, AbstractSendChannel.prototype);
  function helpCloseAndGetSendException($this, element, closed) {
    helpClose($this, closed);
    var tmp0_safe_receiver = $this.tu_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, element, null, 2, null);
    }
    var tmp1_safe_receiver = tmp;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        addSuppressed(tmp1_safe_receiver, closed.cx());
        throw tmp1_safe_receiver;
      }
    }
    return closed.cx();
  }
  function sendSuspend($this, element, $cont) {
    var tmp$ret$3;
    {
      var tmp0__anonymous__q1qw7t = $cont;
      var cancellable = getOrCreateCancellableContinuation(intercepted(tmp0__anonymous__q1qw7t));
      var tmp$ret$0;
      $l$block_2: {
        loop: while (true) {
          if ($this.uw()) {
            var send = $this.tu_1 == null ? new SendElement(element, cancellable) : new SendElementWithUndeliveredHandler(element, cancellable, $this.tu_1);
            var enqueueResult = $this.xw(send);
            if (enqueueResult == null) {
              removeOnCancellation(cancellable, send);
              tmp$ret$0 = Unit_getInstance();
              break $l$block_2;
            } else {
              if (enqueueResult instanceof Closed) {
                helpCloseAndResumeWithSendException(cancellable, $this, element, enqueueResult);
                tmp$ret$0 = Unit_getInstance();
                break $l$block_2;
              } else {
                if (enqueueResult === get_ENQUEUE_FAILED()) {
                } else {
                  if (enqueueResult instanceof Receive) {
                  } else {
                    var tmp0_error = 'enqueueSend returned ' + toString(enqueueResult);
                    throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
                  }
                }
              }
            }
          }
          var offerResult = $this.tw(element);
          if (offerResult === get_OFFER_SUCCESS()) {
            var tmp$ret$2;
            {
              var tmp$ret$1;
              {
                var tmp0_success = Companion_getInstance_0();
                tmp$ret$1 = _Result___init__impl__xyqfz8(Unit_getInstance());
              }
              tmp$ret$2 = cancellable.r3(tmp$ret$1);
            }
            tmp$ret$0 = Unit_getInstance();
            break $l$block_2;
          } else {
            if (offerResult === get_OFFER_FAILED())
              continue loop;
            else {
              if (offerResult instanceof Closed) {
                helpCloseAndResumeWithSendException(cancellable, $this, element, offerResult);
                tmp$ret$0 = Unit_getInstance();
                break $l$block_2;
              } else {
                var tmp1_error = 'offerInternal returned ' + toString_0(offerResult);
                throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
              }
            }
          }
        }
      }
      tmp$ret$3 = cancellable.ao();
    }
    return tmp$ret$3;
  }
  function helpCloseAndResumeWithSendException(_this__u8e3s4, $this, element, closed) {
    helpClose($this, closed);
    var sendException = closed.cx();
    var tmp0_safe_receiver = $this.tu_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, element, null, 2, null);
    }
    var tmp1_safe_receiver = tmp;
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        addSuppressed(tmp1_safe_receiver, sendException);
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_failure = Companion_getInstance_0();
            tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_safe_receiver));
          }
          tmp$ret$1 = _this__u8e3s4.r3(tmp$ret$0);
        }
        return Unit_getInstance();
      }
    }
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var tmp0_failure_0 = Companion_getInstance_0();
        tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(sendException));
      }
      tmp$ret$4 = _this__u8e3s4.r3(tmp$ret$3);
    }
  }
  function invokeOnCloseHandler($this, cause) {
    var handler = $this.vu_1.fi_1;
    if ((!(handler === null) ? !(handler === get_HANDLER_INVOKED()) : false) ? $this.vu_1.atomicfu$compareAndSet(handler, get_HANDLER_INVOKED()) : false) {
      ((!(handler == null) ? typeof handler === 'function' : false) ? handler : THROW_CCE())(cause);
    }
  }
  function helpClose($this, closed) {
    var closedList = _InlineList___init__impl__z8n56_0(null, 1, null);
    $l$loop_0: while (true) {
      var tmp$ret$0;
      {
        tmp$ret$0 = closed.wm_1;
      }
      var tmp = tmp$ret$0;
      var tmp0_elvis_lhs = tmp instanceof Receive ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        break $l$loop_0;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var previous = tmp_0;
      if (!previous.ym()) {
        previous.cr();
        continue $l$loop_0;
      }
      closedList = InlineList__plus_impl_nuetvo(closedList, previous);
    }
    var tmp$ret$1;
    $l$block: {
      var tmp0_forEachReversed = closedList;
      var tmp0_subject = _get_holder__f6h5pd(tmp0_forEachReversed);
      if (tmp0_subject == null) {
        tmp$ret$1 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp_1 = _get_holder__f6h5pd(tmp0_forEachReversed);
          var tmp1__anonymous__uwfjfc = (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE();
          tmp1__anonymous__uwfjfc.sv(closed);
        } else {
          var tmp_2 = _get_holder__f6h5pd(tmp0_forEachReversed);
          var list = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
          var inductionVariable = list.g() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp2__anonymous__z9zvc9 = list.l(i);
                tmp2__anonymous__z9zvc9.sv(closed);
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
    $this.ax(closed);
    {
      {
      }
    }
  }
  function _get_queueDebugStateString__k7jj75($this) {
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = $this.uu_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.vm_1;
    }
    var head = tmp$ret$0;
    if (head === $this.uu_1)
      return 'EmptyQueue';
    var tmp0_subject = head;
    var tmp;
    if (tmp0_subject instanceof Closed) {
      tmp = toString_0(head);
    } else {
      if (tmp0_subject instanceof Receive) {
        tmp = 'ReceiveQueued';
      } else {
        if (tmp0_subject instanceof Send) {
          tmp = 'SendQueued';
        } else {
          tmp = 'UNEXPECTED:' + head;
        }
      }
    }
    var result = tmp;
    var tail = queueTail($this);
    if (!(tail === head)) {
      result = result + (',queueSize=' + countQueueSize($this));
      if (tail instanceof Closed)
        result = result + (',closedForSend=' + tail);
    }
    return result;
  }
  function queueTail($this) {
    var tmp$ret$0;
    {
      var tmp0__get_prevNode__2ljhpg = $this.uu_1;
      tmp$ret$0 = tmp0__get_prevNode__2ljhpg.wm_1;
    }
    var tail = tmp$ret$0;
    var tmp;
    if (tail === $this.uu_1) {
      var tmp$ret$1;
      {
        var tmp1__get_nextNode__n062t7 = $this.uu_1;
        tmp$ret$1 = tmp1__get_nextNode__n062t7.vm_1;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = tail;
    }
    return tmp;
  }
  function countQueueSize($this) {
    var size = 0;
    {
      var tmp0_forEach = $this.uu_1;
      var cur = tmp0_forEach.rq();
      while (!equals(cur, tmp0_forEach)) {
        if (cur instanceof LinkedListNode) {
          var tmp1__anonymous__uwfjfc = cur;
          var tmp0 = size;
          size = tmp0 + 1 | 0;
        }
        cur = cur.vm_1;
      }
    }
    return size;
  }
  function SendBuffered(element) {
    Send.call(this);
    this.gx_1 = element;
  }
  SendBuffered.prototype.hx = function () {
    return this.gx_1;
  };
  SendBuffered.prototype.fw = function () {
    return this.gx_1;
  };
  SendBuffered.prototype.dw = function (otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.qv();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  SendBuffered.prototype.ew = function () {
  };
  SendBuffered.prototype.pw = function (closed) {
    {
    }
  };
  SendBuffered.prototype.toString = function () {
    return 'SendBuffered@' + get_hexAddress(this) + '(' + this.gx_1 + ')';
  };
  SendBuffered.$metadata$ = classMeta('SendBuffered', undefined, undefined, undefined, undefined, Send.prototype);
  function AbstractSendChannel(onUndeliveredElement) {
    this.tu_1 = onUndeliveredElement;
    this.uu_1 = new LinkedListHead();
    this.vu_1 = atomic$ref$1(null);
  }
  AbstractSendChannel.prototype.wu = function () {
    return this.tu_1;
  };
  AbstractSendChannel.prototype.jw = function () {
    return this.uu_1;
  };
  AbstractSendChannel.prototype.tw = function (element) {
    while (true) {
      var tmp0_elvis_lhs = this.qw();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return get_OFFER_FAILED();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var receive = tmp;
      var token = receive.lv(element, null);
      if (!(token == null)) {
        {
        }
        receive.rv(element);
        return receive.wv();
      }
    }
  };
  AbstractSendChannel.prototype.nw = function () {
    var tmp = queueTail(this);
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$0;
      {
        {
        }
        {
          helpClose(this, tmp0_safe_receiver);
        }
        tmp$ret$0 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$0;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype.iw = function () {
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = this.uu_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.vm_1;
    }
    var tmp = tmp$ret$0;
    var tmp0_safe_receiver = tmp instanceof Closed ? tmp : null;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        {
          helpClose(this, tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp0_safe_receiver;
      }
      tmp_0 = tmp$ret$1;
    }
    return tmp_0;
  };
  AbstractSendChannel.prototype.zv = function () {
    var tmp$ret$0;
    $l$block_1: {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf = this.uu_1;
      var next = tmp1_removeFirstIfIsInstanceOfOrPeekIf.vm_1;
      if (next === tmp1_removeFirstIfIsInstanceOfOrPeekIf) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      if (!(next instanceof Send)) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = next;
        tmp$ret$1 = tmp2__anonymous__z9zvc9 instanceof Closed;
      }
      if (tmp$ret$1) {
        tmp$ret$0 = next;
        break $l$block_1;
      }
      {
        var tmp0_check = next.ym();
        {
        }
        if (!tmp0_check) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Should remove';
          }
          var message = tmp$ret$2;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
      tmp$ret$0 = next;
    }
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.ix = function (element) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_addLastIfPrev = this.uu_1;
      var tmp1_addLastIfPrev = new SendBuffered(element);
      var tmp$ret$0;
      {
        var tmp2__anonymous__z9zvc9 = tmp0_addLastIfPrev.wm_1;
        if (isInterface(tmp2__anonymous__z9zvc9, ReceiveOrClosed))
          return tmp2__anonymous__z9zvc9;
        tmp$ret$0 = true;
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      tmp0_addLastIfPrev.yq(tmp1_addLastIfPrev);
      tmp$ret$1 = true;
    }
    return null;
  };
  AbstractSendChannel.prototype.uw = function () {
    var tmp;
    var tmp$ret$0;
    {
      var tmp0__get_nextNode__vg4li4 = this.uu_1;
      tmp$ret$0 = tmp0__get_nextNode__vg4li4.vm_1;
    }
    var tmp_0 = tmp$ret$0;
    if (!isInterface(tmp_0, ReceiveOrClosed)) {
      tmp = this.sw();
    } else {
      tmp = false;
    }
    return tmp;
  };
  AbstractSendChannel.prototype.vw = function (element, $cont) {
    if (this.tw(element) === get_OFFER_SUCCESS())
      return Unit_getInstance();
    return sendSuspend(this, element, $cont);
  };
  AbstractSendChannel.prototype.ww = function (element) {
    var result = this.tw(element);
    var tmp;
    if (result === get_OFFER_SUCCESS()) {
      tmp = true;
    } else {
      if (result === get_OFFER_FAILED()) {
        var tmp0_elvis_lhs = this.nw();
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          return false;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        throw recoverStackTrace_0(helpCloseAndGetSendException(this, element, tmp_0));
      } else {
        if (result instanceof Closed) {
          throw recoverStackTrace_0(helpCloseAndGetSendException(this, element, result));
        } else {
          var tmp0_error = 'offerInternal returned ' + toString_0(result);
          throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
        }
      }
    }
    return tmp;
  };
  AbstractSendChannel.prototype.xw = function (send) {
    if (this.rw()) {
      var tmp$ret$1;
      $l$block: {
        var tmp0_addLastIfPrev = this.uu_1;
        var tmp$ret$0;
        {
          var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.wm_1;
          if (isInterface(tmp1__anonymous__uwfjfc, ReceiveOrClosed))
            return tmp1__anonymous__uwfjfc;
          tmp$ret$0 = true;
        }
        if (!tmp$ret$0) {
          tmp$ret$1 = false;
          break $l$block;
        }
        tmp0_addLastIfPrev.yq(send);
        tmp$ret$1 = true;
      }
    } else {
      var tmp$ret$3;
      $l$block_1: {
        var tmp2_addLastIfPrevAndIf = this.uu_1;
        var tmp$ret$2;
        {
          var tmp3__anonymous__ufb84q = tmp2_addLastIfPrevAndIf.wm_1;
          if (isInterface(tmp3__anonymous__ufb84q, ReceiveOrClosed))
            return tmp3__anonymous__ufb84q;
          tmp$ret$2 = true;
        }
        if (!tmp$ret$2) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        var tmp$ret$4;
        {
          tmp$ret$4 = this.sw();
        }
        if (!tmp$ret$4) {
          tmp$ret$3 = false;
          break $l$block_1;
        }
        tmp2_addLastIfPrevAndIf.yq(send);
        tmp$ret$3 = true;
      }
      if (!tmp$ret$3)
        return get_ENQUEUE_FAILED();
    }
    return null;
  };
  AbstractSendChannel.prototype.lw = function (cause) {
    var closed = new Closed(cause);
    var tmp$ret$1;
    $l$block: {
      var tmp0_addLastIfPrev = this.uu_1;
      var tmp$ret$0;
      {
        var tmp1__anonymous__uwfjfc = tmp0_addLastIfPrev.wm_1;
        tmp$ret$0 = !(tmp1__anonymous__uwfjfc instanceof Closed);
      }
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      tmp0_addLastIfPrev.yq(closed);
      tmp$ret$1 = true;
    }
    var closeAdded = tmp$ret$1;
    var tmp;
    if (closeAdded) {
      tmp = closed;
    } else {
      var tmp_0 = queueTail(this);
      tmp = tmp_0 instanceof Closed ? tmp_0 : THROW_CCE();
    }
    var actuallyClosed = tmp;
    {
    }
    helpClose(this, actuallyClosed);
    if (closeAdded)
      invokeOnCloseHandler(this, cause);
    return closeAdded;
  };
  AbstractSendChannel.prototype.zw = function (closed) {
    {
    }
  };
  AbstractSendChannel.prototype.ax = function (closed) {
  };
  AbstractSendChannel.prototype.qw = function () {
    var tmp$ret$0;
    $l$block_1: {
      var tmp1_removeFirstIfIsInstanceOfOrPeekIf = this.uu_1;
      var next = tmp1_removeFirstIfIsInstanceOfOrPeekIf.vm_1;
      if (next === tmp1_removeFirstIfIsInstanceOfOrPeekIf) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      if (!isInterface(next, ReceiveOrClosed)) {
        tmp$ret$0 = null;
        break $l$block_1;
      }
      var tmp$ret$1;
      {
        var tmp2__anonymous__z9zvc9 = next;
        tmp$ret$1 = tmp2__anonymous__z9zvc9 instanceof Closed;
      }
      if (tmp$ret$1) {
        tmp$ret$0 = next;
        break $l$block_1;
      }
      {
        var tmp0_check = next.ym();
        {
        }
        if (!tmp0_check) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Should remove';
          }
          var message = tmp$ret$2;
          throw IllegalStateException_init_$Create$(toString_0(message));
        }
      }
      tmp$ret$0 = next;
    }
    return tmp$ret$0;
  };
  AbstractSendChannel.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '{' + _get_queueDebugStateString__k7jj75(this) + '}' + this.bx();
  };
  AbstractSendChannel.prototype.bx = function () {
    return '';
  };
  AbstractSendChannel.$metadata$ = classMeta('AbstractSendChannel', [SendChannel]);
  function Send() {
    LinkedListNode.call(this);
  }
  Send.prototype.gw = function () {
  };
  Send.$metadata$ = classMeta('Send', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function Closed(closeCause) {
    Send.call(this);
    this.ku_1 = closeCause;
  }
  Closed.prototype.jx = function () {
    return this.ku_1;
  };
  Closed.prototype.cx = function () {
    var tmp0_elvis_lhs = this.ku_1;
    return tmp0_elvis_lhs == null ? new ClosedSendChannelException(get_DEFAULT_CLOSE_MESSAGE()) : tmp0_elvis_lhs;
  };
  Closed.prototype.lu = function () {
    var tmp0_elvis_lhs = this.ku_1;
    return tmp0_elvis_lhs == null ? new ClosedReceiveChannelException(get_DEFAULT_CLOSE_MESSAGE()) : tmp0_elvis_lhs;
  };
  Closed.prototype.wv = function () {
    return this;
  };
  Closed.prototype.fw = function () {
    return this;
  };
  Closed.prototype.dw = function (otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.qv();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  Closed.prototype.ew = function () {
  };
  Closed.prototype.lv = function (value, otherOp) {
    var tmp$ret$0;
    {
      var tmp0_also = get_RESUME_TOKEN();
      {
      }
      {
        var tmp0_safe_receiver = otherOp;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.qv();
        }
      }
      tmp$ret$0 = tmp0_also;
    }
    return tmp$ret$0;
  };
  Closed.prototype.rv = function (value) {
  };
  Closed.prototype.pw = function (closed) {
    return Unit_getInstance();
  };
  Closed.prototype.toString = function () {
    return 'Closed@' + get_hexAddress(this) + '[' + this.ku_1 + ']';
  };
  Closed.$metadata$ = classMeta('Closed', [ReceiveOrClosed], undefined, undefined, undefined, Send.prototype);
  function ReceiveOrClosed() {
  }
  ReceiveOrClosed.$metadata$ = interfaceMeta('ReceiveOrClosed');
  function Receive() {
    LinkedListNode.call(this);
  }
  Receive.prototype.wv = function () {
    return get_OFFER_SUCCESS();
  };
  Receive.$metadata$ = classMeta('Receive', [ReceiveOrClosed], undefined, undefined, undefined, LinkedListNode.prototype);
  function SendElement(pollResult, cont) {
    Send.call(this);
    this.nx_1 = pollResult;
    this.ox_1 = atomic$ref$1(cont);
  }
  SendElement.prototype.fw = function () {
    return this.nx_1;
  };
  SendElement.prototype.dw = function (otherOp) {
    var tmp1_safe_receiver = this.ox_1.fi_1;
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp0_safe_receiver = otherOp;
      tmp = tmp1_safe_receiver.vl(Unit_getInstance(), tmp0_safe_receiver == null ? null : tmp0_safe_receiver.nv_1);
    }
    var tmp2_elvis_lhs = tmp;
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      return null;
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var token = tmp_0;
    {
    }
    var tmp3_safe_receiver = otherOp;
    if (tmp3_safe_receiver == null)
      null;
    else {
      tmp3_safe_receiver.qv();
    }
    return get_RESUME_TOKEN();
  };
  SendElement.prototype.ew = function () {
    ensureNotNull(this.ox_1.atomicfu$getAndSet(null)).zl(get_RESUME_TOKEN());
  };
  SendElement.prototype.pw = function (closed) {
    var tmp$ret$1;
    {
      var tmp0_resumeWithException = ensureNotNull(this.ox_1.atomicfu$getAndSet(null));
      var tmp1_resumeWithException = closed.cx();
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_resumeWithException));
      }
      tmp$ret$1 = tmp0_resumeWithException.r3(tmp$ret$0);
    }
  };
  SendElement.prototype.toString = function () {
    return 'SendElement@' + get_hexAddress(this) + '(' + toString(this.fw()) + ')';
  };
  SendElement.$metadata$ = classMeta('SendElement', undefined, undefined, undefined, undefined, Send.prototype);
  function SendElementWithUndeliveredHandler(pollResult, cont, onUndeliveredElement) {
    SendElement.call(this, pollResult, cont);
    this.ux_1 = onUndeliveredElement;
    this.vx_1 = cont.q3();
  }
  SendElementWithUndeliveredHandler.prototype.ym = function () {
    if (!SendElement.prototype.ym.call(this))
      return false;
    this.gw();
    return true;
  };
  SendElementWithUndeliveredHandler.prototype.gw = function () {
    var tmp = this.fw();
    callUndeliveredElement(this.ux_1, (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE(), this.vx_1);
  };
  SendElementWithUndeliveredHandler.$metadata$ = classMeta('SendElementWithUndeliveredHandler', undefined, undefined, undefined, undefined, SendElement.prototype);
  var properties_initialized_AbstractChannel_kt_uwqnpt;
  function init_properties_AbstractChannel_kt_mjk5bh() {
    if (properties_initialized_AbstractChannel_kt_uwqnpt) {
    } else {
      properties_initialized_AbstractChannel_kt_uwqnpt = true;
      EMPTY = new Symbol('EMPTY');
      OFFER_SUCCESS = new Symbol('OFFER_SUCCESS');
      OFFER_FAILED = new Symbol('OFFER_FAILED');
      POLL_FAILED = new Symbol('POLL_FAILED');
      ENQUEUE_FAILED = new Symbol('ENQUEUE_FAILED');
      HANDLER_INVOKED = new Symbol('ON_CLOSE_HANDLER_INVOKED');
    }
  }
  function updateBufferSize($this, currentSize) {
    if (currentSize < $this.cy_1) {
      $this.ey_1.yx_1 = currentSize + 1 | 0;
      return null;
    }
    var tmp0_subject = $this.dy_1;
    var tmp0 = tmp0_subject.a5();
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = get_OFFER_FAILED();
        break;
      case 2:
        tmp = get_OFFER_SUCCESS();
        break;
      case 1:
        tmp = null;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function enqueueElement($this, currentSize, element) {
    if (currentSize < $this.cy_1) {
      $this.ey_1.iy(currentSize, $this.cy_1);
      $this.ey_1.hy(($this.ey_1.xx_1 + currentSize | 0) % $this.ey_1.gy() | 0, element);
    } else {
      {
      }
      $this.ey_1.hy($this.ey_1.xx_1 % $this.ey_1.gy() | 0, null);
      $this.ey_1.hy(($this.ey_1.xx_1 + currentSize | 0) % $this.ey_1.gy() | 0, element);
      $this.ey_1.xx_1 = ($this.ey_1.xx_1 + 1 | 0) % $this.ey_1.gy() | 0;
    }
  }
  function ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this.cy_1 = capacity;
    this.dy_1 = onBufferOverflow;
    {
      var tmp0_require = this.cy_1 >= 1;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'ArrayChannel capacity must be at least 1, but ' + this.cy_1 + ' was specified';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_0(message));
      }
    }
    var tmp = this;
    var tmp$ret$1;
    {
      var tmp0_min = this.cy_1;
      tmp$ret$1 = Math.min(tmp0_min, 8);
    }
    tmp.ey_1 = new ArrayChannelState(tmp$ret$1);
  }
  ArrayChannel.prototype.xv = function () {
    return false;
  };
  ArrayChannel.prototype.yv = function () {
    return this.ey_1.yx_1 === 0;
  };
  ArrayChannel.prototype.rw = function () {
    return false;
  };
  ArrayChannel.prototype.sw = function () {
    return this.ey_1.yx_1 === this.cy_1;
  };
  ArrayChannel.prototype.hw = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.ey_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.hw.call(this);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.tw = function (element) {
    var receive = null;
    var tmp$ret$3;
    {
      var tmp0_withLock = this.ey_1;
      var tmp$ret$2;
      $l$block: {
        var size = this.ey_1.yx_1;
        var tmp0_safe_receiver = this.nw();
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp0_safe_receiver;
          }
        }
        var tmp1_safe_receiver = updateBufferSize(this, size);
        if (tmp1_safe_receiver == null)
          null;
        else {
          var tmp$ret$1;
          {
            {
            }
            return tmp1_safe_receiver;
          }
        }
        if (size === 0) {
          loop: while (true) {
            var tmp2_elvis_lhs = this.qw();
            var tmp;
            if (tmp2_elvis_lhs == null) {
              break loop;
            } else {
              tmp = tmp2_elvis_lhs;
            }
            receive = tmp;
            if (receive instanceof Closed) {
              this.ey_1.yx_1 = size;
              return ensureNotNull(receive);
            }
            var token = ensureNotNull(receive).lv(element, null);
            if (!(token == null)) {
              {
              }
              this.ey_1.yx_1 = size;
              tmp$ret$2 = Unit_getInstance();
              break $l$block;
            }
          }
        }
        enqueueElement(this, size, element);
        return get_OFFER_SUCCESS();
      }
      tmp$ret$3 = tmp$ret$2;
    }
    ensureNotNull(receive).rv(element);
    return ensureNotNull(receive).wv();
  };
  ArrayChannel.prototype.xw = function (send) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.ey_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.xw.call(this, send);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.ru = function () {
    var send = null;
    var resumed = false;
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.ey_1;
      var size = this.ey_1.yx_1;
      if (size === 0) {
        var tmp0_elvis_lhs = this.nw();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.ey_1.jy(this.ey_1.xx_1);
      this.ey_1.hy(this.ey_1.xx_1, null);
      this.ey_1.yx_1 = size - 1 | 0;
      var replacement = get_POLL_FAILED();
      if (size === this.cy_1) {
        loop: while (true) {
          var tmp1_elvis_lhs = this.zv();
          var tmp;
          if (tmp1_elvis_lhs == null) {
            break loop;
          } else {
            tmp = tmp1_elvis_lhs;
          }
          send = tmp;
          {
            {
            }
          }
          var token = ensureNotNull(send).dw(null);
          if (!(token == null)) {
            {
            }
            resumed = true;
            replacement = ensureNotNull(send).fw();
            break loop;
          }
          ensureNotNull(send).gw();
        }
      }
      var tmp_0;
      if (!(replacement === get_POLL_FAILED())) {
        tmp_0 = !(replacement instanceof Closed);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        this.ey_1.yx_1 = size;
        this.ey_1.hy((this.ey_1.xx_1 + size | 0) % this.ey_1.gy() | 0, replacement);
      }
      this.ey_1.xx_1 = (this.ey_1.xx_1 + 1 | 0) % this.ey_1.gy() | 0;
      tmp$ret$0 = Unit_getInstance();
    }
    if (resumed)
      ensureNotNull(send).ew();
    return result;
  };
  ArrayChannel.prototype.xu = function (receive) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.ey_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.xu.call(this, receive);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.prototype.mw = function (wasClosed) {
    var onUndeliveredElement = this.wu();
    var undeliveredElementException = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.ey_1;
      {
        var tmp0_repeat = this.ey_1.yx_1;
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp0_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              var value = this.ey_1.jy(this.ey_1.xx_1);
              if (!(onUndeliveredElement == null) ? !(value === get_EMPTY()) : false) {
                undeliveredElementException = callUndeliveredElementCatchingException(onUndeliveredElement, (value == null ? true : isObject(value)) ? value : THROW_CCE(), undeliveredElementException);
              }
              this.ey_1.hy(this.ey_1.xx_1, null);
              this.ey_1.xx_1 = (this.ey_1.xx_1 + 1 | 0) % this.ey_1.gy() | 0;
            }
          }
           while (inductionVariable < tmp0_repeat);
      }
      this.ey_1.yx_1 = 0;
      tmp$ret$0 = Unit_getInstance();
    }
    AbstractChannel.prototype.mw.call(this, wasClosed);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  };
  ArrayChannel.prototype.bx = function () {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.ey_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = '(buffer:capacity=' + this.cy_1 + ',size=' + this.ey_1.yx_1 + ')';
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ArrayChannel.$metadata$ = classMeta('ArrayChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  var BufferOverflow_SUSPEND_instance;
  var BufferOverflow_DROP_OLDEST_instance;
  var BufferOverflow_DROP_LATEST_instance;
  var BufferOverflow_entriesInitialized;
  function BufferOverflow_initEntries() {
    if (BufferOverflow_entriesInitialized)
      return Unit_getInstance();
    BufferOverflow_entriesInitialized = true;
    BufferOverflow_SUSPEND_instance = new BufferOverflow('SUSPEND', 0);
    BufferOverflow_DROP_OLDEST_instance = new BufferOverflow('DROP_OLDEST', 1);
    BufferOverflow_DROP_LATEST_instance = new BufferOverflow('DROP_LATEST', 2);
  }
  function BufferOverflow(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  BufferOverflow.$metadata$ = classMeta('BufferOverflow', undefined, undefined, undefined, undefined, Enum.prototype);
  function BufferOverflow_SUSPEND_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_SUSPEND_instance;
  }
  function BufferOverflow_DROP_OLDEST_getInstance() {
    BufferOverflow_initEntries();
    return BufferOverflow_DROP_OLDEST_instance;
  }
  function Factory() {
    Factory_instance = this;
    this.ky_1 = 2147483647;
    this.ly_1 = 0;
    this.my_1 = -1;
    this.ny_1 = -2;
    this.oy_1 = -3;
    this.py_1 = 'kotlinx.coroutines.channels.defaultBuffer';
    this.qy_1 = systemProp('kotlinx.coroutines.channels.defaultBuffer', 64, 1, 2147483646);
  }
  Factory.$metadata$ = objectMeta('Factory');
  var Factory_instance;
  function Factory_getInstance() {
    if (Factory_instance == null)
      new Factory();
    return Factory_instance;
  }
  function Channel() {
  }
  Channel.$metadata$ = interfaceMeta('Channel', [SendChannel, ReceiveChannel]);
  function Channel_0(capacity, onBufferOverflow, onUndeliveredElement) {
    var tmp0_subject = capacity;
    var tmp;
    Factory_getInstance();
    if (tmp0_subject === 0) {
      tmp = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? new RendezvousChannel(onUndeliveredElement) : new ArrayChannel(1, onBufferOverflow, onUndeliveredElement);
    } else {
      Factory_getInstance();
      if (tmp0_subject === -1) {
        {
          var tmp0_require = onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance());
          {
          }
          if (!tmp0_require) {
            var tmp$ret$0;
            {
              tmp$ret$0 = 'CONFLATED capacity cannot be used with non-default onBufferOverflow';
            }
            var message = tmp$ret$0;
            throw IllegalArgumentException_init_$Create$(toString_0(message));
          }
        }
        tmp = new ConflatedChannel(onUndeliveredElement);
      } else {
        Factory_getInstance();
        if (tmp0_subject === 2147483647) {
          tmp = new LinkedListChannel(onUndeliveredElement);
        } else {
          Factory_getInstance();
          if (tmp0_subject === -2) {
            tmp = new ArrayChannel(onBufferOverflow.equals(BufferOverflow_SUSPEND_getInstance()) ? Factory_getInstance().qy_1 : 1, onBufferOverflow, onUndeliveredElement);
          } else {
            tmp = (capacity === 1 ? onBufferOverflow.equals(BufferOverflow_DROP_OLDEST_getInstance()) : false) ? new ConflatedChannel(onUndeliveredElement) : new ArrayChannel(capacity, onBufferOverflow, onUndeliveredElement);
          }
        }
      }
    }
    return tmp;
  }
  function Channel$default(capacity, onBufferOverflow, onUndeliveredElement, $mask0, $handler) {
    if (!(($mask0 & 1) === 0)) {
      Factory_getInstance();
      capacity = 0;
    }
    if (!(($mask0 & 2) === 0))
      onBufferOverflow = BufferOverflow_SUSPEND_getInstance();
    if (!(($mask0 & 4) === 0))
      onUndeliveredElement = null;
    return Channel_0(capacity, onBufferOverflow, onUndeliveredElement);
  }
  function ReceiveChannel() {
  }
  ReceiveChannel.$metadata$ = interfaceMeta('ReceiveChannel');
  function SendChannel() {
  }
  SendChannel.$metadata$ = interfaceMeta('SendChannel');
  function ChannelIterator() {
  }
  ChannelIterator.$metadata$ = interfaceMeta('ChannelIterator');
  function ClosedReceiveChannelException(message) {
    NoSuchElementException_init_$Init$(message, this);
    captureStack(this, ClosedReceiveChannelException);
  }
  ClosedReceiveChannelException.$metadata$ = classMeta('ClosedReceiveChannelException', undefined, undefined, undefined, undefined, NoSuchElementException.prototype);
  function ClosedSendChannelException(message) {
    IllegalStateException_init_$Init$(message, this);
    captureStack(this, ClosedSendChannelException);
  }
  ClosedSendChannelException.$metadata$ = classMeta('ClosedSendChannelException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function get_DEFAULT_CLOSE_MESSAGE() {
    return DEFAULT_CLOSE_MESSAGE;
  }
  var DEFAULT_CLOSE_MESSAGE;
  function cancelConsumed(_this__u8e3s4, cause) {
    var tmp0_safe_receiver = cause;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = tmp0_safe_receiver instanceof CancellationException ? tmp0_safe_receiver : null;
          tmp$ret$0 = tmp0_elvis_lhs == null ? new CancellationException('Channel was consumed, consumer had failed', tmp0_safe_receiver) : tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    _this__u8e3s4.ak(tmp);
  }
  function updateValueLocked($this, element) {
    var old = $this.vy_1.ry_1;
    var tmp;
    if (old === get_EMPTY()) {
      tmp = null;
    } else {
      var tmp0_safe_receiver = $this.wu();
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp_1 = (old == null ? true : isObject(old)) ? old : THROW_CCE();
        tmp_0 = callUndeliveredElementCatchingException$default(tmp0_safe_receiver, tmp_1, null, 2, null);
      }
      tmp = tmp_0;
    }
    var undeliveredElementException = tmp;
    $this.vy_1.ry_1 = element;
    return undeliveredElementException;
  }
  function ConflatedChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
    this.vy_1 = new ConflatedChannelState();
  }
  ConflatedChannel.prototype.xv = function () {
    return false;
  };
  ConflatedChannel.prototype.yv = function () {
    return this.vy_1.ry_1 === get_EMPTY();
  };
  ConflatedChannel.prototype.rw = function () {
    return false;
  };
  ConflatedChannel.prototype.sw = function () {
    return false;
  };
  ConflatedChannel.prototype.tw = function (element) {
    var receive = null;
    var tmp$ret$3;
    {
      var tmp0_withLock = this.vy_1;
      var tmp$ret$1;
      $l$block: {
        var tmp0_safe_receiver = this.nw();
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          {
            {
            }
            return tmp0_safe_receiver;
          }
        }
        if (this.vy_1.ry_1 === get_EMPTY()) {
          loop: while (true) {
            var tmp1_elvis_lhs = this.qw();
            var tmp;
            if (tmp1_elvis_lhs == null) {
              break loop;
            } else {
              tmp = tmp1_elvis_lhs;
            }
            receive = tmp;
            if (receive instanceof Closed) {
              return ensureNotNull(receive);
            }
            var token = ensureNotNull(receive).lv(element, null);
            if (!(token == null)) {
              {
              }
              tmp$ret$1 = Unit_getInstance();
              break $l$block;
            }
          }
        }
        var tmp2_safe_receiver = updateValueLocked(this, element);
        if (tmp2_safe_receiver == null)
          null;
        else {
          var tmp$ret$2;
          {
            {
            }
            throw tmp2_safe_receiver;
          }
        }
        return get_OFFER_SUCCESS();
      }
      tmp$ret$3 = tmp$ret$1;
    }
    ensureNotNull(receive).rv(element);
    return ensureNotNull(receive).wv();
  };
  ConflatedChannel.prototype.ru = function () {
    var result = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.vy_1;
      if (this.vy_1.ry_1 === get_EMPTY()) {
        var tmp0_elvis_lhs = this.nw();
        return tmp0_elvis_lhs == null ? get_POLL_FAILED() : tmp0_elvis_lhs;
      }
      result = this.vy_1.ry_1;
      this.vy_1.ry_1 = get_EMPTY();
      tmp$ret$0 = Unit_getInstance();
    }
    return result;
  };
  ConflatedChannel.prototype.mw = function (wasClosed) {
    var undeliveredElementException = null;
    var tmp$ret$0;
    {
      var tmp0_withLock = this.vy_1;
      undeliveredElementException = updateValueLocked(this, get_EMPTY());
      tmp$ret$0 = Unit_getInstance();
    }
    AbstractChannel.prototype.mw.call(this, wasClosed);
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  };
  ConflatedChannel.prototype.xu = function (receive) {
    var tmp$ret$1;
    {
      var tmp0_withLock = this.vy_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = AbstractChannel.prototype.xu.call(this, receive);
      }
      tmp$ret$1 = tmp$ret$0;
    }
    return tmp$ret$1;
  };
  ConflatedChannel.prototype.bx = function () {
    return '(value=' + toString(this.vy_1.ry_1) + ')';
  };
  ConflatedChannel.$metadata$ = classMeta('ConflatedChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function LinkedListChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  LinkedListChannel.prototype.xv = function () {
    return true;
  };
  LinkedListChannel.prototype.yv = function () {
    return true;
  };
  LinkedListChannel.prototype.rw = function () {
    return false;
  };
  LinkedListChannel.prototype.sw = function () {
    return false;
  };
  LinkedListChannel.prototype.tw = function (element) {
    while (true) {
      var result = AbstractChannel.prototype.tw.call(this, element);
      if (result === get_OFFER_SUCCESS())
        return get_OFFER_SUCCESS();
      else {
        if (result === get_OFFER_FAILED()) {
          var sendResult = this.ix(element);
          if (sendResult == null)
            return get_OFFER_SUCCESS();
          else {
            if (sendResult instanceof Closed)
              return sendResult;
          }
        } else {
          if (result instanceof Closed)
            return result;
          else {
            var tmp0_error = 'Invalid offerInternal result ' + toString_0(result);
            throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
          }
        }
      }
    }
  };
  LinkedListChannel.prototype.ow = function (list, closed) {
    var undeliveredElementException = null;
    var tmp$ret$0;
    $l$block: {
      var tmp0_subject = _get_holder__f6h5pd(list);
      if (tmp0_subject == null) {
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      } else {
        if (!(tmp0_subject instanceof ArrayList)) {
          var tmp = _get_holder__f6h5pd(list);
          var tmp0__anonymous__q1qw7t = (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
          var tmp0_subject_0 = tmp0__anonymous__q1qw7t;
          if (tmp0_subject_0 instanceof SendBuffered) {
            var tmp1_safe_receiver = this.wu();
            var tmp_0;
            if (tmp1_safe_receiver == null) {
              tmp_0 = null;
            } else {
              var tmp_1 = tmp0__anonymous__q1qw7t.gx_1;
              tmp_0 = callUndeliveredElementCatchingException(tmp1_safe_receiver, (tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE(), undeliveredElementException);
            }
            undeliveredElementException = tmp_0;
          } else {
            tmp0__anonymous__q1qw7t.pw(closed);
          }
        } else {
          var tmp_2 = _get_holder__f6h5pd(list);
          var list_0 = tmp_2 instanceof ArrayList ? tmp_2 : THROW_CCE();
          var inductionVariable = list_0.g() - 1 | 0;
          if (0 <= inductionVariable)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              {
                var tmp1__anonymous__uwfjfc = list_0.l(i);
                var tmp0_subject_1 = tmp1__anonymous__uwfjfc;
                if (tmp0_subject_1 instanceof SendBuffered) {
                  var tmp1_safe_receiver_0 = this.wu();
                  var tmp_3;
                  if (tmp1_safe_receiver_0 == null) {
                    tmp_3 = null;
                  } else {
                    var tmp_4 = tmp1__anonymous__uwfjfc.gx_1;
                    tmp_3 = callUndeliveredElementCatchingException(tmp1_safe_receiver_0, (tmp_4 == null ? true : isObject(tmp_4)) ? tmp_4 : THROW_CCE(), undeliveredElementException);
                  }
                  undeliveredElementException = tmp_3;
                } else {
                  tmp1__anonymous__uwfjfc.pw(closed);
                }
              }
            }
             while (0 <= inductionVariable);
        }
      }
    }
    var tmp0_safe_receiver = undeliveredElementException;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      {
        {
        }
        throw tmp0_safe_receiver;
      }
    }
  };
  LinkedListChannel.$metadata$ = classMeta('LinkedListChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function RendezvousChannel(onUndeliveredElement) {
    AbstractChannel.call(this, onUndeliveredElement);
  }
  RendezvousChannel.prototype.xv = function () {
    return true;
  };
  RendezvousChannel.prototype.yv = function () {
    return true;
  };
  RendezvousChannel.prototype.rw = function () {
    return true;
  };
  RendezvousChannel.prototype.sw = function () {
    return true;
  };
  RendezvousChannel.$metadata$ = classMeta('RendezvousChannel', undefined, undefined, undefined, undefined, AbstractChannel.prototype);
  function ensureCapacity($this) {
    var currentSize = $this.up_1.length;
    var newCapacity = currentSize << 1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(newCapacity), null);
    }
    var newElements = tmp$ret$0;
    var tmp$ret$1;
    {
      var tmp0_copyInto = $this.up_1;
      var tmp1_copyInto = $this.vp_1;
      var tmp2_copyInto = tmp0_copyInto.length;
      arrayCopy(tmp0_copyInto, newElements, 0, tmp1_copyInto, tmp2_copyInto);
      tmp$ret$1 = newElements;
    }
    var tmp$ret$2;
    {
      var tmp3_copyInto = $this.up_1;
      var tmp4_copyInto = $this.up_1.length - $this.vp_1 | 0;
      var tmp5_copyInto = $this.vp_1;
      arrayCopy(tmp3_copyInto, newElements, tmp4_copyInto, 0, tmp5_copyInto);
      tmp$ret$2 = newElements;
    }
    $this.up_1 = newElements;
    $this.vp_1 = 0;
    $this.wp_1 = currentSize;
  }
  function ArrayQueue() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(16), null);
    }
    tmp.up_1 = tmp$ret$0;
    this.vp_1 = 0;
    this.wp_1 = 0;
  }
  ArrayQueue.prototype.cq = function () {
    return this.vp_1 === this.wp_1;
  };
  ArrayQueue.prototype.zp = function (element) {
    this.up_1[this.wp_1] = element;
    this.wp_1 = (this.wp_1 + 1 | 0) & (this.up_1.length - 1 | 0);
    if (this.wp_1 === this.vp_1)
      ensureCapacity(this);
  };
  ArrayQueue.prototype.xp = function () {
    if (this.vp_1 === this.wp_1)
      return null;
    var element = this.up_1[this.vp_1];
    this.up_1[this.vp_1] = null;
    this.vp_1 = (this.vp_1 + 1 | 0) & (this.up_1.length - 1 | 0);
    return isObject(element) ? element : THROW_CCE();
  };
  ArrayQueue.$metadata$ = classMeta('ArrayQueue');
  function OpDescriptor() {
  }
  OpDescriptor.$metadata$ = classMeta('OpDescriptor');
  function get_UNDEFINED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return UNDEFINED;
  }
  var UNDEFINED;
  function get_REUSABLE_CLAIMED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return REUSABLE_CLAIMED;
  }
  var REUSABLE_CLAIMED;
  function resumeCancellableWith(_this__u8e3s4, result, onCancellation) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof DispatchedContinuation) {
      var tmp1_resumeCancellableWith = _this__u8e3s4;
      var state = toState_0(result, onCancellation);
      var tmp_0;
      if (tmp1_resumeCancellableWith.hm_1.gp(tmp1_resumeCancellableWith.q3())) {
        tmp1_resumeCancellableWith.jm_1 = state;
        tmp1_resumeCancellableWith.cz(get_MODE_CANCELLABLE());
        tmp_0 = tmp1_resumeCancellableWith.hm_1.hp(tmp1_resumeCancellableWith.q3(), tmp1_resumeCancellableWith);
      } else {
        var tmp$ret$0;
        $l$block: {
          var tmp0_executeUnconfined = get_MODE_CANCELLABLE();
          {
          }
          var eventLoop = ThreadLocalEventLoop_getInstance().hq();
          if (false) {}
          var tmp_1;
          if (eventLoop.aq()) {
            tmp1_resumeCancellableWith.jm_1 = state;
            tmp1_resumeCancellableWith.cz(tmp0_executeUnconfined);
            eventLoop.yp(tmp1_resumeCancellableWith);
            tmp_1 = true;
          } else {
            {
              eventLoop.dq(true);
              try {
                {
                  var tmp$ret$3;
                  $l$block_0: {
                    var job = tmp1_resumeCancellableWith.q3().w3(Key_getInstance_3());
                    if (!(job == null) ? !job.ti() : false) {
                      var cause = job.sj();
                      tmp1_resumeCancellableWith.tn(state, cause);
                      var tmp$ret$2;
                      {
                        var tmp$ret$1;
                        {
                          var tmp0_failure = Companion_getInstance_0();
                          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(cause));
                        }
                        tmp$ret$2 = tmp1_resumeCancellableWith.r3(tmp$ret$1);
                      }
                      tmp$ret$3 = true;
                      break $l$block_0;
                    }
                    tmp$ret$3 = false;
                  }
                  if (!tmp$ret$3) {
                    {
                      var tmp$ret$4;
                      {
                        var tmp0_withContinuationContext = tmp1_resumeCancellableWith.im_1;
                        var tmp1_withContinuationContext = tmp1_resumeCancellableWith.km_1;
                        tmp$ret$4 = tmp1_resumeCancellableWith.im_1.r3(result);
                      }
                    }
                  }
                }
                $l$loop: while (true) {
                  if (!eventLoop.tp())
                    break $l$loop;
                }
              } catch ($p) {
                if ($p instanceof Error) {
                  tmp1_resumeCancellableWith.ho($p, null);
                } else {
                  throw $p;
                }
              }
              finally {
                eventLoop.eq(true);
              }
            }
            tmp_1 = false;
          }
          tmp$ret$0 = tmp_1;
        }
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } else {
      tmp = _this__u8e3s4.r3(result);
    }
    return tmp;
  }
  function resumeCancellableWith$default(_this__u8e3s4, result, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      onCancellation = null;
    return resumeCancellableWith(_this__u8e3s4, result, onCancellation);
  }
  function DispatchedContinuation(dispatcher, continuation) {
    DispatchedTask.call(this, get_MODE_UNINITIALIZED());
    this.hm_1 = dispatcher;
    this.im_1 = continuation;
    this.jm_1 = get_UNDEFINED();
    this.km_1 = threadContextElements(this.q3());
    this.lm_1 = atomic$ref$1(null);
  }
  DispatchedContinuation.prototype.dz = function () {
    return this.im_1;
  };
  DispatchedContinuation.prototype.q3 = function () {
    return this.im_1.q3();
  };
  DispatchedContinuation.prototype.ez = function () {
    return this.km_1;
  };
  DispatchedContinuation.prototype.ip = function () {
    var tmp = this.lm_1.fi_1;
    return tmp instanceof CancellableContinuationImpl ? tmp : null;
  };
  DispatchedContinuation.prototype.zm = function (requester) {
    var tmp0_elvis_lhs = this.lm_1.fi_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var value = tmp;
    if (value instanceof CancellableContinuationImpl)
      return value === requester;
    return true;
  };
  DispatchedContinuation.prototype.mm = function () {
    {
      var tmp0_loop = this.lm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          if (tmp1__anonymous__uwfjfc === null) {
            this.lm_1.fi_1 = get_REUSABLE_CLAIMED();
            return null;
          } else {
            if (tmp1__anonymous__uwfjfc instanceof CancellableContinuationImpl) {
              if (this.lm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, get_REUSABLE_CLAIMED())) {
                return tmp1__anonymous__uwfjfc instanceof CancellableContinuationImpl ? tmp1__anonymous__uwfjfc : THROW_CCE();
              }
            } else {
              var tmp0_error = 'Inconsistent state ' + toString(tmp1__anonymous__uwfjfc);
              throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.cn = function (continuation) {
    {
      var tmp0_loop = this.lm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          if (tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()) {
            if (this.lm_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), continuation))
              return null;
          } else {
            if (tmp1__anonymous__uwfjfc === null)
              return null;
            else {
              if (tmp1__anonymous__uwfjfc instanceof Error) {
                {
                  var tmp0_require = this.lm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, null);
                  {
                  }
                  {
                    {
                    }
                    if (!tmp0_require) {
                      var tmp$ret$0;
                      {
                        tmp$ret$0 = 'Failed requirement.';
                      }
                      var message = tmp$ret$0;
                      throw IllegalArgumentException_init_$Create$(toString_0(message));
                    }
                  }
                }
                return tmp1__anonymous__uwfjfc;
              } else {
                var tmp1_error = 'Inconsistent state ' + toString(tmp1__anonymous__uwfjfc);
                throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
              }
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.en = function (cause) {
    {
      var tmp0_loop = this.lm_1;
      while (true) {
        {
          var tmp1__anonymous__uwfjfc = tmp0_loop.fi_1;
          var tmp0_subject = tmp1__anonymous__uwfjfc;
          if (equals(tmp0_subject, get_REUSABLE_CLAIMED())) {
            if (this.lm_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), cause))
              return true;
          } else {
            if (tmp0_subject instanceof Error)
              return true;
            else {
              if (this.lm_1.atomicfu$compareAndSet(tmp1__anonymous__uwfjfc, null))
                return false;
            }
          }
        }
      }
    }
  };
  DispatchedContinuation.prototype.sn = function () {
    var state = this.jm_1;
    {
    }
    this.jm_1 = get_UNDEFINED();
    return state;
  };
  DispatchedContinuation.prototype.qn = function () {
    return this;
  };
  DispatchedContinuation.prototype.r3 = function (result) {
    var context = this.im_1.q3();
    var state = toState$default(result, null, 1, null);
    if (this.hm_1.gp(context)) {
      this.jm_1 = state;
      this.cz(get_MODE_ATOMIC());
      this.hm_1.hp(context, this);
    } else {
      var tmp$ret$0;
      $l$block: {
        var tmp0_executeUnconfined = get_MODE_ATOMIC();
        {
        }
        var eventLoop = ThreadLocalEventLoop_getInstance().hq();
        if (false) {}
        var tmp;
        if (eventLoop.aq()) {
          this.jm_1 = state;
          this.cz(tmp0_executeUnconfined);
          eventLoop.yp(this);
          tmp = true;
        } else {
          {
            eventLoop.dq(true);
            try {
              {
                var tmp$ret$1;
                {
                  var tmp0_withCoroutineContext = this.q3();
                  var tmp1_withCoroutineContext = this.km_1;
                  tmp$ret$1 = this.im_1.r3(result);
                }
              }
              $l$loop: while (true) {
                if (!eventLoop.tp())
                  break $l$loop;
              }
            } catch ($p) {
              if ($p instanceof Error) {
                this.ho($p, null);
              } else {
                throw $p;
              }
            }
            finally {
              eventLoop.eq(true);
            }
          }
          tmp = false;
        }
        tmp$ret$0 = tmp;
      }
    }
  };
  DispatchedContinuation.prototype.tn = function (takenState, cause) {
    if (takenState instanceof CompletedWithCancellation) {
      takenState.ep_1(cause);
    }
  };
  DispatchedContinuation.prototype.fz = function (state) {
    var job = this.q3().w3(Key_getInstance_3());
    if (!(job == null) ? !job.ti() : false) {
      var cause = job.sj();
      this.tn(state, cause);
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(cause));
        }
        tmp$ret$1 = this.r3(tmp$ret$0);
      }
      return true;
    }
    return false;
  };
  DispatchedContinuation.prototype.gz = function (result) {
    var tmp$ret$0;
    {
      var tmp0_withContinuationContext = this.im_1;
      var tmp1_withContinuationContext = this.km_1;
      tmp$ret$0 = this.im_1.r3(result);
    }
  };
  DispatchedContinuation.prototype.toString = function () {
    return 'DispatchedContinuation[' + this.hm_1 + ', ' + toDebugString(this.im_1) + ']';
  };
  DispatchedContinuation.$metadata$ = classMeta('DispatchedContinuation', [CoroutineStackFrame, Continuation], undefined, undefined, undefined, DispatchedTask.prototype);
  function executeUnconfined(_this__u8e3s4, contState, mode, doYield, block) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    {
    }
    var eventLoop = ThreadLocalEventLoop_getInstance().hq();
    if (doYield ? eventLoop.bq() : false)
      return false;
    var tmp;
    if (eventLoop.aq()) {
      _this__u8e3s4.jm_1 = contState;
      _this__u8e3s4.cz(mode);
      eventLoop.yp(_this__u8e3s4);
      tmp = true;
    } else {
      {
        eventLoop.dq(true);
        try {
          block();
          $l$loop: while (true) {
            if (!eventLoop.tp())
              break $l$loop;
          }
        } catch ($p) {
          if ($p instanceof Error) {
            _this__u8e3s4.ho($p, null);
          } else {
            throw $p;
          }
        }
        finally {
          eventLoop.eq(true);
        }
      }
      tmp = false;
    }
    return tmp;
  }
  var properties_initialized_DispatchedContinuation_kt_2siadq;
  function init_properties_DispatchedContinuation_kt_s7rtw6() {
    if (properties_initialized_DispatchedContinuation_kt_2siadq) {
    } else {
      properties_initialized_DispatchedContinuation_kt_2siadq = true;
      UNDEFINED = new Symbol('UNDEFINED');
      REUSABLE_CLAIMED = new Symbol('REUSABLE_CLAIMED');
    }
  }
  function get_MODE_CANCELLABLE() {
    return MODE_CANCELLABLE;
  }
  var MODE_CANCELLABLE;
  function DispatchedTask(resumeMode) {
    SchedulerTask.call(this);
    this.an_1 = resumeMode;
  }
  DispatchedTask.prototype.cz = function (_set____db54di) {
    this.an_1 = _set____db54di;
  };
  DispatchedTask.prototype.bn = function () {
    return this.an_1;
  };
  DispatchedTask.prototype.tn = function (takenState, cause) {
  };
  DispatchedTask.prototype.bo = function (state) {
    return (state == null ? true : isObject(state)) ? state : THROW_CCE();
  };
  DispatchedTask.prototype.fo = function (state) {
    var tmp0_safe_receiver = state instanceof CompletedExceptionally ? state : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ej_1;
  };
  DispatchedTask.prototype.go = function () {
    {
    }
    var taskContext = get_taskContext(this);
    var fatalException = null;
    try {
      var tmp$ret$0;
      {
        var tmp0_useLocal = this.qn();
        tmp$ret$0 = tmp0_useLocal;
      }
      var tmp = tmp$ret$0;
      var delegate = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
      var continuation = delegate.im_1;
      var tmp$ret$6;
      {
        var tmp1_withContinuationContext = delegate.km_1;
        var context = continuation.q3();
        var state = this.sn();
        var exception = this.fo(state);
        var job = (exception == null ? get_isCancellableMode(this.an_1) : false) ? context.w3(Key_getInstance_3()) : null;
        var tmp_0;
        if (!(job == null) ? !job.ti() : false) {
          var cause = job.sj();
          this.tn(state, cause);
          var tmp$ret$1;
          {
            var tmp0_failure = Companion_getInstance_0();
            var tmp1_failure = recoverStackTrace(cause, continuation);
            tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
          }
          tmp_0 = continuation.r3(tmp$ret$1);
        } else {
          var tmp_1;
          if (!(exception == null)) {
            var tmp$ret$3;
            {
              var tmp$ret$2;
              {
                var tmp0_failure_0 = Companion_getInstance_0();
                tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(exception));
              }
              tmp$ret$3 = continuation.r3(tmp$ret$2);
            }
            tmp_1 = tmp$ret$3;
          } else {
            var tmp$ret$5;
            {
              var tmp2_resume = this.bo(state);
              var tmp$ret$4;
              {
                var tmp0_success = Companion_getInstance_0();
                tmp$ret$4 = _Result___init__impl__xyqfz8(tmp2_resume);
              }
              tmp$ret$5 = continuation.r3(tmp$ret$4);
            }
            tmp_1 = tmp$ret$5;
          }
          tmp_0 = tmp_1;
        }
        tmp$ret$6 = tmp_0;
      }
    } catch ($p) {
      if ($p instanceof Error) {
        fatalException = $p;
      } else {
        throw $p;
      }
    }
    finally {
      var tmp$ret$9;
      {
        var tmp_2;
        try {
          var tmp$ret$7;
          {
            var tmp0_success_0 = Companion_getInstance_0();
            var tmp1_success = Unit_getInstance();
            tmp$ret$7 = _Result___init__impl__xyqfz8(Unit_getInstance());
          }
          tmp_2 = tmp$ret$7;
        } catch ($p) {
          var tmp_3;
          if ($p instanceof Error) {
            var tmp$ret$8;
            {
              var tmp2_failure = Companion_getInstance_0();
              tmp$ret$8 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp_3 = tmp$ret$8;
          } else {
            throw $p;
          }
          tmp_2 = tmp_3;
        }
        tmp$ret$9 = tmp_2;
      }
      var result = tmp$ret$9;
      this.ho(fatalException, Result__exceptionOrNull_impl_p6xea9(result));
    }
  };
  DispatchedTask.prototype.ho = function (exception, finallyException) {
    if (exception === null ? finallyException === null : false)
      return Unit_getInstance();
    if (!(exception === null) ? !(finallyException === null) : false) {
      {
      }
    }
    var tmp0_elvis_lhs = exception;
    var cause = tmp0_elvis_lhs == null ? finallyException : tmp0_elvis_lhs;
    var reason = new CoroutinesInternalError('Fatal exception in coroutines machinery for ' + this + '. ' + "Please read KDoc to 'handleFatalException' method and report this incident to maintainers", ensureNotNull(cause));
    handleCoroutineException(this.qn().q3(), reason);
  };
  DispatchedTask.$metadata$ = classMeta('DispatchedTask', undefined, undefined, undefined, undefined, SchedulerTask.prototype);
  function get_MODE_UNINITIALIZED() {
    return MODE_UNINITIALIZED;
  }
  var MODE_UNINITIALIZED;
  function get_MODE_CANCELLABLE_REUSABLE() {
    return MODE_CANCELLABLE_REUSABLE;
  }
  var MODE_CANCELLABLE_REUSABLE;
  function get_isReusableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 2;
  }
  function get_isCancellableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 1 ? true : _this__u8e3s4 === 2;
  }
  function dispatch(_this__u8e3s4, mode) {
    {
    }
    var delegate = _this__u8e3s4.om_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = delegate;
    }
    var local = tmp$ret$0;
    var undispatched = mode === 4;
    var tmp;
    var tmp_0;
    if (!undispatched) {
      tmp_0 = local instanceof DispatchedContinuation;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = get_isCancellableMode(mode) === get_isCancellableMode(_this__u8e3s4.bn());
    } else {
      tmp = false;
    }
    if (tmp) {
      var dispatcher = local.hm_1;
      var context = local.q3();
      if (dispatcher.gp(context)) {
        dispatcher.hp(context, _this__u8e3s4);
      } else {
        resumeUnconfined(_this__u8e3s4);
      }
    } else {
      var tmp$ret$1;
      {
        tmp$ret$1 = resume(_this__u8e3s4, delegate, undispatched);
      }
    }
  }
  function get_MODE_UNDISPATCHED() {
    return MODE_UNDISPATCHED;
  }
  var MODE_UNDISPATCHED;
  function get_MODE_ATOMIC() {
    return MODE_ATOMIC;
  }
  var MODE_ATOMIC;
  function runUnconfinedEventLoop(_this__u8e3s4, eventLoop, block) {
    eventLoop.dq(true);
    try {
      block();
      $l$loop: while (true) {
        if (!eventLoop.tp())
          break $l$loop;
      }
    } catch ($p) {
      if ($p instanceof Error) {
        _this__u8e3s4.ho($p, null);
      } else {
        throw $p;
      }
    }
    finally {
      eventLoop.eq(true);
    }
  }
  function resumeUnconfined(_this__u8e3s4) {
    var eventLoop = ThreadLocalEventLoop_getInstance().hq();
    if (eventLoop.aq()) {
      eventLoop.yp(_this__u8e3s4);
    } else {
      {
        eventLoop.dq(true);
        try {
          {
            var tmp$ret$0;
            {
              var tmp0_useLocal = _this__u8e3s4.om_1;
              tmp$ret$0 = tmp0_useLocal;
            }
            resume(_this__u8e3s4, tmp$ret$0, true);
          }
          $l$loop: while (true) {
            if (!eventLoop.tp())
              break $l$loop;
          }
        } catch ($p) {
          if ($p instanceof Error) {
            _this__u8e3s4.ho($p, null);
          } else {
            throw $p;
          }
        }
        finally {
          eventLoop.eq(true);
        }
      }
    }
  }
  function resume(_this__u8e3s4, delegate, undispatched) {
    var state = _this__u8e3s4.sn();
    var exception = _this__u8e3s4.fo(state);
    var tmp;
    if (!(exception == null)) {
      var tmp$ret$0;
      {
        var tmp0_failure = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
      }
      tmp = tmp$ret$0;
    } else {
      var tmp$ret$1;
      {
        var tmp1_success = Companion_getInstance_0();
        var tmp2_success = _this__u8e3s4.bo(state);
        tmp$ret$1 = _Result___init__impl__xyqfz8(tmp2_success);
      }
      tmp = tmp$ret$1;
    }
    var result = tmp;
    if (undispatched) {
      var tmp3_resumeUndispatchedWith = delegate instanceof DispatchedContinuation ? delegate : THROW_CCE();
      var tmp$ret$2;
      {
        var tmp0_withContinuationContext = tmp3_resumeUndispatchedWith.im_1;
        var tmp1_withContinuationContext = tmp3_resumeUndispatchedWith.km_1;
        tmp$ret$2 = tmp3_resumeUndispatchedWith.im_1.r3(result);
      }
    } else
      delegate.r3(result);
  }
  function _InlineList___init__impl__z8n56(holder) {
    return holder;
  }
  function _InlineList___init__impl__z8n56_0(holder, $mask0, $marker) {
    if (!(($mask0 & 1) === 0))
      holder = null;
    var tmp = _InlineList___init__impl__z8n56(holder);
    return tmp;
  }
  function _get_holder__f6h5pd($this) {
    return $this;
  }
  function InlineList__plus_impl_nuetvo($this, element) {
    {
    }
    var tmp0_subject = _get_holder__f6h5pd($this);
    var tmp;
    if (tmp0_subject == null) {
      tmp = _InlineList___init__impl__z8n56(element);
    } else {
      if (tmp0_subject instanceof ArrayList) {
        var tmp_0 = _get_holder__f6h5pd($this);
        (tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE()).a(element);
        tmp = _InlineList___init__impl__z8n56(_get_holder__f6h5pd($this));
      } else {
        var list = ArrayList_init_$Create$(4);
        var tmp_1 = _get_holder__f6h5pd($this);
        list.a((tmp_1 == null ? true : isObject(tmp_1)) ? tmp_1 : THROW_CCE());
        list.a(element);
        tmp = _InlineList___init__impl__z8n56(list);
      }
    }
    return tmp;
  }
  function InlineList__forEachReversed_impl_jituug($this, action) {
    var tmp0_subject = _get_holder__f6h5pd($this);
    if (tmp0_subject == null)
      return Unit_getInstance();
    else {
      if (!(tmp0_subject instanceof ArrayList)) {
        var tmp = _get_holder__f6h5pd($this);
        action((tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE());
      } else {
        var tmp_0 = _get_holder__f6h5pd($this);
        var list = tmp_0 instanceof ArrayList ? tmp_0 : THROW_CCE();
        var inductionVariable = list.g() - 1 | 0;
        if (0 <= inductionVariable)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            action(list.l(i));
          }
           while (0 <= inductionVariable);
      }
    }
  }
  function InlineList__toString_impl_1aej86($this) {
    return 'InlineList(holder=' + toString($this) + ')';
  }
  function InlineList__hashCode_impl_n1kg11($this) {
    return $this == null ? 0 : hashCode($this);
  }
  function InlineList__equals_impl_wwe0i1($this, other) {
    if (!(other instanceof InlineList))
      return false;
    var tmp0_other_with_cast = other instanceof InlineList ? other.hz_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function InlineList(holder) {
    this.hz_1 = holder;
  }
  InlineList.prototype.toString = function () {
    return InlineList__toString_impl_1aej86(this.hz_1);
  };
  InlineList.prototype.hashCode = function () {
    return InlineList__hashCode_impl_n1kg11(this.hz_1);
  };
  InlineList.prototype.equals = function (other) {
    return InlineList__equals_impl_wwe0i1(this.hz_1, other);
  };
  InlineList.$metadata$ = classMeta('InlineList');
  function bindCancellationFun(_this__u8e3s4, element, context) {
    return bindCancellationFun$lambda(_this__u8e3s4, element, context);
  }
  function UndeliveredElementException(message, cause) {
    RuntimeException_init_$Init$(message, cause, this);
    captureStack(this, UndeliveredElementException);
  }
  UndeliveredElementException.$metadata$ = classMeta('UndeliveredElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function callUndeliveredElementCatchingException(_this__u8e3s4, element, undeliveredElementException) {
    try {
      _this__u8e3s4(element);
    } catch ($p) {
      if ($p instanceof Error) {
        if (!(undeliveredElementException == null) ? !(undeliveredElementException.cause === $p) : false) {
          {
          }
        } else {
          return new UndeliveredElementException('Exception in undelivered element handler for ' + element, $p);
        }
      } else {
        throw $p;
      }
    }
    return undeliveredElementException;
  }
  function callUndeliveredElementCatchingException$default(_this__u8e3s4, element, undeliveredElementException, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      undeliveredElementException = null;
    return callUndeliveredElementCatchingException(_this__u8e3s4, element, undeliveredElementException);
  }
  function callUndeliveredElement(_this__u8e3s4, element, context) {
    var tmp0_safe_receiver = callUndeliveredElementCatchingException(_this__u8e3s4, element, null);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = handleCoroutineException(context, tmp0_safe_receiver);
      }
    }
  }
  function bindCancellationFun$lambda($this_bindCancellationFun, $element, $context) {
    return function (_anonymous_parameter_0__qggqh8) {
      callUndeliveredElement($this_bindCancellationFun, $element, $context);
      return Unit_getInstance();
    };
  }
  function ContextScope(context) {
    this.iz_1 = context;
  }
  ContextScope.prototype.si = function () {
    return this.iz_1;
  };
  ContextScope.prototype.toString = function () {
    return 'CoroutineScope(coroutineContext=' + this.iz_1 + ')';
  };
  ContextScope.$metadata$ = classMeta('ContextScope', [CoroutineScope]);
  function Symbol(symbol) {
    this.jz_1 = symbol;
  }
  Symbol.prototype.toString = function () {
    return '<' + this.jz_1 + '>';
  };
  Symbol.$metadata$ = classMeta('Symbol');
  function systemProp(propertyName, defaultValue, minValue, maxValue) {
    return systemProp_0(propertyName, toLong(defaultValue), toLong(minValue), toLong(maxValue)).c7();
  }
  function systemProp_0(propertyName, defaultValue, minValue, maxValue) {
    var tmp0_elvis_lhs = systemProp_1(propertyName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return defaultValue;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var value = tmp;
    var tmp1_elvis_lhs = toLongOrNull(value);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var tmp0_error = "System property '" + propertyName + "' has unrecognized value '" + value + "'";
      throw IllegalStateException_init_$Create$(toString_0(tmp0_error));
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var parsed = tmp_0;
    if (!(minValue.g1(parsed) <= 0 ? parsed.g1(maxValue) <= 0 : false)) {
      {
        var tmp1_error = "System property '" + propertyName + "' should be in range " + toString_0(minValue) + '..' + toString_0(maxValue) + ", but is '" + toString_0(parsed) + "'";
        throw IllegalStateException_init_$Create$(toString_0(tmp1_error));
      }
    }
    return parsed;
  }
  function startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation) {
    var tmp;
    try {
      var tmp_0 = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      tmp = resumeCancellableWith(tmp_0, tmp$ret$0, onCancellation);
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        var tmp$ret$1;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
        }
        tmp_1 = completion.r3(tmp$ret$1);
      } else {
        throw $p;
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function startCoroutineCancellable_0(_this__u8e3s4, fatalCompletion) {
    var tmp;
    try {
      var tmp_0 = intercepted(_this__u8e3s4);
      var tmp$ret$0;
      {
        var tmp0_success = Companion_getInstance_0();
        tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      }
      var tmp_1 = tmp$ret$0;
      tmp = resumeCancellableWith$default(tmp_0, tmp_1, null, 2, null);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Error) {
        var tmp$ret$1;
        {
          var tmp0_failure = Companion_getInstance_0();
          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
        }
        tmp_2 = fatalCompletion.r3(tmp$ret$1);
      } else {
        throw $p;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function startDirect(completion, block) {
    var tmp$ret$0;
    {
      tmp$ret$0 = completion;
    }
    var actualCompletion = tmp$ret$0;
    var tmp;
    try {
      tmp = block(actualCompletion);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_failure = Companion_getInstance_0();
            tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure($p));
          }
          tmp$ret$2 = actualCompletion.r3(tmp$ret$1);
        }
        return Unit_getInstance();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var value = tmp;
    if (!(value === get_COROUTINE_SUSPENDED())) {
      var tmp$ret$4;
      {
        var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        var tmp$ret$3;
        {
          var tmp0_success = Companion_getInstance_0();
          tmp$ret$3 = _Result___init__impl__xyqfz8(tmp0_resume);
        }
        tmp$ret$4 = actualCompletion.r3(tmp$ret$3);
      }
    }
  }
  function startCoroutineUndispatched(_this__u8e3s4, receiver, completion) {
    var tmp$ret$8;
    $l$block: {
      var tmp$ret$0;
      {
        tmp$ret$0 = completion;
      }
      var actualCompletion = tmp$ret$0;
      var tmp;
      try {
        var tmp$ret$5;
        {
          var tmp$ret$4;
          {
            var tmp0_withCoroutineContext = completion.q3();
            var tmp$ret$3;
            {
              var tmp$ret$2;
              {
                var tmp$ret$1;
                {
                  tmp$ret$1 = _this__u8e3s4;
                }
                var a = tmp$ret$1;
                tmp$ret$2 = typeof a === 'function' ? a(receiver, actualCompletion) : _this__u8e3s4.gh(receiver, actualCompletion);
              }
              tmp$ret$3 = tmp$ret$2;
            }
            tmp$ret$4 = tmp$ret$3;
          }
          tmp$ret$5 = tmp$ret$4;
        }
        tmp = tmp$ret$5;
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp$ret$7;
          {
            var tmp$ret$6;
            {
              var tmp0_failure = Companion_getInstance_0();
              tmp$ret$6 = _Result___init__impl__xyqfz8(createFailure($p));
            }
            tmp$ret$7 = actualCompletion.r3(tmp$ret$6);
          }
          tmp$ret$8 = Unit_getInstance();
          break $l$block;
        } else {
          throw $p;
        }
        tmp = tmp_0;
      }
      var value = tmp;
      if (!(value === get_COROUTINE_SUSPENDED())) {
        var tmp$ret$10;
        {
          var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
          var tmp$ret$9;
          {
            var tmp0_success = Companion_getInstance_0();
            tmp$ret$9 = _Result___init__impl__xyqfz8(tmp0_resume);
          }
          tmp$ret$10 = actualCompletion.r3(tmp$ret$9);
        }
      }
    }
  }
  function SelectClause0() {
  }
  SelectClause0.$metadata$ = interfaceMeta('SelectClause0');
  function SelectClause1() {
  }
  SelectClause1.$metadata$ = interfaceMeta('SelectClause1');
  function saveLazyCoroutine(coroutine, receiver, block) {
    return createCoroutineUnintercepted(block, receiver, coroutine);
  }
  function startLazyCoroutine(saved, coroutine, receiver) {
    return startCoroutineCancellable_0(isInterface(saved, Continuation) ? saved : THROW_CCE(), coroutine);
  }
  function startAbstractCoroutine(start, receiver, coroutine, block) {
    coroutine.wi();
    startCoroutineImpl(start, receiver, coroutine, null, block);
  }
  function CompletionHandlerBase() {
    LinkedListNode.call(this);
  }
  CompletionHandlerBase.$metadata$ = classMeta('CompletionHandlerBase', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function invokeIt(_this__u8e3s4, cause) {
    var tmp0_subject = typeof _this__u8e3s4;
    if (tmp0_subject === 'function')
      _this__u8e3s4(cause);
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _this__u8e3s4;
      }
      tmp$ret$0.invoke(cause);
    }
  }
  function get_asHandler(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function get_asHandler_0(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    return tmp$ret$0;
  }
  function CancelHandlerBase() {
  }
  CancelHandlerBase.$metadata$ = classMeta('CancelHandlerBase');
  function toDebugString(_this__u8e3s4) {
    return toString_0(_this__u8e3s4);
  }
  function withCoroutineContext(context, countOrElement, block) {
    return block();
  }
  function withContinuationContext(continuation, countOrElement, block) {
    return block();
  }
  function newCoroutineContext(_this__u8e3s4, context) {
    var combined = _this__u8e3s4.si().d4(context);
    return (!(combined === Dispatchers_getInstance().yt_1) ? combined.w3(Key_getInstance()) == null : false) ? combined.d4(Dispatchers_getInstance().yt_1) : combined;
  }
  function get_DefaultDelay() {
    var tmp = Dispatchers_getInstance().yt_1;
    return isInterface(tmp, Delay) ? tmp : THROW_CCE();
  }
  function get_coroutineName(_this__u8e3s4) {
    return null;
  }
  function createDefaultDispatcher() {
    var tmp;
    if ((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.product == 'ReactNative' : false) {
      tmp = NodeDispatcher_getInstance();
    } else {
      if (isJsdom()) {
        tmp = NodeDispatcher_getInstance();
      } else {
        var tmp_0;
        var tmp_1;
        if (!(typeof window === 'undefined')) {
          var tmp$ret$0;
          {
            var tmp0_asDynamic = window;
            tmp$ret$0 = tmp0_asDynamic;
          }
          tmp_1 = tmp$ret$0 != null;
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          var tmp$ret$1;
          {
            var tmp1_asDynamic = window;
            tmp$ret$1 = tmp1_asDynamic;
          }
          tmp_0 = !(typeof tmp$ret$1.addEventListener === 'undefined');
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp = asCoroutineDispatcher(window);
        } else {
          if (typeof process === 'undefined') {
            tmp = SetTimeoutDispatcher_getInstance();
          } else {
            tmp = NodeDispatcher_getInstance();
          }
        }
      }
    }
    return tmp;
  }
  function isJsdom() {
    return ((((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.userAgent != null : false) ? !(typeof navigator.userAgent === 'undefined') : false) ? !(typeof navigator.userAgent.match === 'undefined') : false) ? navigator.userAgent.match('\\bjsdom\\b') : false;
  }
  function handleCoroutineExceptionImpl(context, exception) {
    console.error(exception);
  }
  var counter;
  function get_DEBUG() {
    return DEBUG;
  }
  var DEBUG;
  function get_classSimpleName(_this__u8e3s4) {
    var tmp0_elvis_lhs = getKClassFromExpression(_this__u8e3s4).hd();
    return tmp0_elvis_lhs == null ? 'Unknown' : tmp0_elvis_lhs;
  }
  function get_hexAddress(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var result = tmp$ret$0.__debug_counter;
    if (!(typeof result === 'number')) {
      counter = counter + 1 | 0;
      result = counter;
      var tmp$ret$1;
      {
        tmp$ret$1 = _this__u8e3s4;
      }
      tmp$ret$1.__debug_counter = result;
    }
    return ((!(result == null) ? typeof result === 'number' : false) ? result : THROW_CCE()).toString();
  }
  function assert(value) {
  }
  function Dispatchers() {
    Dispatchers_instance = this;
    this.yt_1 = createDefaultDispatcher();
    this.zt_1 = new JsMainDispatcher(this.yt_1, false);
    this.au_1 = Unconfined_getInstance();
  }
  Dispatchers.$metadata$ = objectMeta('Dispatchers');
  var Dispatchers_instance;
  function Dispatchers_getInstance() {
    if (Dispatchers_instance == null)
      new Dispatchers();
    return Dispatchers_instance;
  }
  function JsMainDispatcher(delegate, invokeImmediately) {
    MainCoroutineDispatcher.call(this);
    this.lz_1 = delegate;
    this.mz_1 = invokeImmediately;
    this.nz_1 = this.mz_1 ? this : new JsMainDispatcher(this.lz_1, true);
  }
  JsMainDispatcher.prototype.wt = function () {
    return this.nz_1;
  };
  JsMainDispatcher.prototype.gp = function (context) {
    return !this.mz_1;
  };
  JsMainDispatcher.prototype.hp = function (context, block) {
    return this.lz_1.hp(context, block);
  };
  JsMainDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.xt();
    return tmp0_elvis_lhs == null ? this.lz_1.toString() : tmp0_elvis_lhs;
  };
  JsMainDispatcher.$metadata$ = classMeta('JsMainDispatcher', undefined, undefined, undefined, undefined, MainCoroutineDispatcher.prototype);
  function platformAutoreleasePool(block) {
    return block();
  }
  function createEventLoop() {
    return new UnconfinedEventLoop();
  }
  function UnconfinedEventLoop() {
    EventLoop.call(this);
  }
  UnconfinedEventLoop.prototype.hp = function (context, block) {
    unsupported();
  };
  UnconfinedEventLoop.$metadata$ = classMeta('UnconfinedEventLoop', undefined, undefined, undefined, undefined, EventLoop.prototype);
  function unsupported() {
    throw UnsupportedOperationException_init_$Create$('runBlocking event loop is not supported');
  }
  function JobCancellationException(message, cause, job) {
    CancellationException.call(this, message, cause);
    this.sz_1 = job;
    captureStack(this, JobCancellationException);
  }
  JobCancellationException.prototype.toString = function () {
    return CancellationException.prototype.toString.call(this) + '; job=' + this.sz_1;
  };
  JobCancellationException.prototype.equals = function (other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      var tmp_2;
      if (other instanceof JobCancellationException) {
        tmp_2 = other.message == this.message;
      } else {
        tmp_2 = false;
      }
      if (tmp_2) {
        tmp_1 = equals(other.sz_1, this.sz_1);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = equals(other.cause, this.cause);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  JobCancellationException.prototype.hashCode = function () {
    var tmp = imul(getStringHashCode(ensureNotNull(this.message)), 31);
    var tmp$ret$0;
    {
      var tmp0_hashCode = this.sz_1;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    }
    var tmp_0 = imul(tmp + tmp$ret$0 | 0, 31);
    var tmp0_safe_receiver_0 = this.cause;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
    return tmp_0 + (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0) | 0;
  };
  JobCancellationException.$metadata$ = classMeta('JobCancellationException', undefined, undefined, undefined, undefined, CancellationException.prototype);
  function CancellationException_init_$Init$(message, $this) {
    CancellationException.call($this, message, null);
    return $this;
  }
  function CancellationException_init_$Create$(message) {
    var tmp = CancellationException_init_$Init$(message, Object.create(CancellationException.prototype));
    captureStack(tmp, CancellationException_init_$Create$);
    return tmp;
  }
  function CancellationException(message, cause) {
    IllegalStateException_init_$Init$_0(message, cause, this);
    captureStack(this, CancellationException);
  }
  CancellationException.$metadata$ = classMeta('CancellationException', undefined, undefined, undefined, undefined, IllegalStateException.prototype);
  function addSuppressedThrowable(_this__u8e3s4, other) {
  }
  function NodeDispatcher() {
    NodeDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  NodeDispatcher.prototype.vz = function () {
    process.nextTick(this.f10().b10_1);
  };
  NodeDispatcher.$metadata$ = objectMeta('NodeDispatcher', undefined, undefined, undefined, undefined, SetTimeoutBasedDispatcher.prototype);
  var NodeDispatcher_instance;
  function NodeDispatcher_getInstance() {
    if (NodeDispatcher_instance == null)
      new NodeDispatcher();
    return NodeDispatcher_instance;
  }
  function SetTimeoutDispatcher() {
    SetTimeoutDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  SetTimeoutDispatcher.prototype.vz = function () {
    setTimeout(this.f10().b10_1, 0);
  };
  SetTimeoutDispatcher.$metadata$ = objectMeta('SetTimeoutDispatcher', undefined, undefined, undefined, undefined, SetTimeoutBasedDispatcher.prototype);
  var SetTimeoutDispatcher_instance;
  function SetTimeoutDispatcher_getInstance() {
    if (SetTimeoutDispatcher_instance == null)
      new SetTimeoutDispatcher();
    return SetTimeoutDispatcher_instance;
  }
  function SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this$0) {
    return function () {
      this$0.n10();
      return Unit_getInstance();
    };
  }
  function ScheduledMessageQueue($outer) {
    this.c10_1 = $outer;
    MessageQueue.call(this);
    var tmp = this;
    tmp.b10_1 = SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this);
  }
  ScheduledMessageQueue.prototype.o10 = function () {
    this.c10_1.vz();
  };
  ScheduledMessageQueue.prototype.p10 = function () {
    setTimeout(this.b10_1, 0);
  };
  ScheduledMessageQueue.$metadata$ = classMeta('ScheduledMessageQueue', undefined, undefined, undefined, undefined, MessageQueue.prototype);
  function SetTimeoutBasedDispatcher$scheduleResumeAfterDelay$lambda($continuation, this$0) {
    return function () {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = $continuation.bm(this$0, Unit_getInstance());
      }
      return Unit_getInstance();
    };
  }
  function SetTimeoutBasedDispatcher() {
    CoroutineDispatcher.call(this);
    this.e10_1 = new ScheduledMessageQueue(this);
  }
  SetTimeoutBasedDispatcher.prototype.f10 = function () {
    return this.e10_1;
  };
  SetTimeoutBasedDispatcher.prototype.hp = function (context, block) {
    this.e10_1.q10(block);
  };
  SetTimeoutBasedDispatcher.prototype.op = function (timeMillis, continuation) {
    var handle = setTimeout(SetTimeoutBasedDispatcher$scheduleResumeAfterDelay$lambda(continuation, this), delayToInt(timeMillis));
    var tmp$ret$1;
    {
      var tmp0__get_asHandler__gq3rkj = new ClearTimeout(handle);
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
      }
      tmp$ret$1 = tmp$ret$0;
    }
    continuation.am(tmp$ret$1);
  };
  SetTimeoutBasedDispatcher.$metadata$ = classMeta('SetTimeoutBasedDispatcher', [Delay], undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function MessageQueue() {
    ArrayQueue.call(this);
    this.l10_1 = 16;
    this.m10_1 = false;
  }
  MessageQueue.prototype.q10 = function (element) {
    this.zp(element);
    if (!this.m10_1) {
      this.m10_1 = true;
      this.o10();
    }
  };
  MessageQueue.prototype.n10 = function () {
    try {
      {
        var tmp0_repeat = this.l10_1;
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp0_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              var tmp0_elvis_lhs = this.xp();
              var tmp;
              if (tmp0_elvis_lhs == null) {
                return Unit_getInstance();
              } else {
                tmp = tmp0_elvis_lhs;
              }
              var element = tmp;
              element.go();
            }
          }
           while (inductionVariable < tmp0_repeat);
      }
    }finally {
      if (this.cq()) {
        this.m10_1 = false;
      } else {
        this.p10();
      }
    }
  };
  MessageQueue.$metadata$ = classMeta('MessageQueue', undefined, undefined, undefined, undefined, ArrayQueue.prototype);
  function delayToInt(timeMillis) {
    return coerceIn(timeMillis, new Long(0, 0), new Long(2147483647, 0)).c7();
  }
  function ClearTimeout(handle) {
    CancelHandler.call(this);
    this.r10_1 = handle;
  }
  ClearTimeout.prototype.fm = function () {
    clearTimeout(this.r10_1);
  };
  ClearTimeout.prototype.em = function (cause) {
    this.fm();
  };
  ClearTimeout.prototype.invoke = function (cause) {
    return this.em(cause);
  };
  ClearTimeout.prototype.toString = function () {
    return 'ClearTimeout[' + this.r10_1 + ']';
  };
  ClearTimeout.$metadata$ = classMeta('ClearTimeout', [DisposableHandle], undefined, undefined, undefined, CancelHandler.prototype);
  function WindowDispatcher$scheduleResumeAfterDelay$lambda($continuation, this$0) {
    return function () {
      var tmp$ret$0;
      {
        {
        }
        tmp$ret$0 = $continuation.bm(this$0, Unit_getInstance());
      }
      return Unit_getInstance();
    };
  }
  function WindowDispatcher(window_0) {
    CoroutineDispatcher.call(this);
    this.t10_1 = window_0;
    this.u10_1 = new WindowMessageQueue(this.t10_1);
  }
  WindowDispatcher.prototype.hp = function (context, block) {
    return this.u10_1.q10(block);
  };
  WindowDispatcher.prototype.op = function (timeMillis, continuation) {
    this.t10_1.setTimeout(WindowDispatcher$scheduleResumeAfterDelay$lambda(continuation, this), delayToInt(timeMillis));
  };
  WindowDispatcher.$metadata$ = classMeta('WindowDispatcher', [Delay], undefined, undefined, undefined, CoroutineDispatcher.prototype);
  function WindowMessageQueue$lambda(this$0) {
    return function (event) {
      var tmp;
      if (event.source == this$0.a11_1 ? event.data == this$0.b11_1 : false) {
        event.stopPropagation();
        tmp = this$0.n10();
      }
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue$schedule$lambda(this$0) {
    return function (it) {
      this$0.n10();
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue(window_0) {
    MessageQueue.call(this);
    this.a11_1 = window_0;
    this.b11_1 = 'dispatchCoroutine';
    this.a11_1.addEventListener('message', WindowMessageQueue$lambda(this), true);
  }
  WindowMessageQueue.prototype.o10 = function () {
    var tmp = Promise.resolve(Unit_getInstance());
    tmp.then(WindowMessageQueue$schedule$lambda(this));
  };
  WindowMessageQueue.prototype.p10 = function () {
    this.a11_1.postMessage(this.b11_1, '*');
  };
  WindowMessageQueue.$metadata$ = classMeta('WindowMessageQueue', undefined, undefined, undefined, undefined, MessageQueue.prototype);
  function Runnable() {
  }
  Runnable.$metadata$ = interfaceMeta('Runnable');
  function SchedulerTask() {
  }
  SchedulerTask.$metadata$ = classMeta('SchedulerTask', [Runnable]);
  function get_taskContext(_this__u8e3s4) {
    return Unit_getInstance();
  }
  function asCoroutineDispatcher(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4;
    }
    var tmp0_elvis_lhs = tmp$ret$0.coroutineDispatcher;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$2;
      {
        var tmp0_also = new WindowDispatcher(_this__u8e3s4);
        {
        }
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = _this__u8e3s4;
          }
          tmp$ret$1.coroutineDispatcher = tmp0_also;
        }
        tmp$ret$2 = tmp0_also;
      }
      tmp = tmp$ret$2;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function ArrayBufferState(initialBufferSize) {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(initialBufferSize), null);
    }
    tmp.fy_1 = tmp$ret$0;
  }
  ArrayBufferState.prototype.c11 = function (_set____db54di) {
    this.fy_1 = _set____db54di;
  };
  ArrayBufferState.prototype.ad = function () {
    return this.fy_1;
  };
  ArrayBufferState.prototype.gy = function () {
    return this.fy_1.length;
  };
  ArrayBufferState.prototype.jy = function (index) {
    return this.fy_1[index];
  };
  ArrayBufferState.prototype.hy = function (index, value) {
    this.fy_1[index] = value;
  };
  ArrayBufferState.prototype.d11 = function (block) {
    return block();
  };
  ArrayBufferState.$metadata$ = classMeta('ArrayBufferState');
  function ArrayChannelState(initialBufferSize) {
    ArrayBufferState.call(this, initialBufferSize);
    this.xx_1 = 0;
    this.yx_1 = 0;
  }
  ArrayChannelState.prototype.e11 = function (_set____db54di) {
    this.xx_1 = _set____db54di;
  };
  ArrayChannelState.prototype.f11 = function () {
    return this.xx_1;
  };
  ArrayChannelState.prototype.g11 = function (_set____db54di) {
    this.yx_1 = _set____db54di;
  };
  ArrayChannelState.prototype.g = function () {
    return this.yx_1;
  };
  ArrayChannelState.prototype.iy = function (currentSize, capacity) {
    if (currentSize < this.ad().length)
      return Unit_getInstance();
    var tmp$ret$0;
    {
      var tmp0_min = imul(this.ad().length, 2);
      tmp$ret$0 = Math.min(tmp0_min, capacity);
    }
    var newSize = tmp$ret$0;
    var tmp$ret$1;
    {
      tmp$ret$1 = fillArrayVal(Array(newSize), null);
    }
    var newBuffer = tmp$ret$1;
    var inductionVariable = 0;
    if (inductionVariable < currentSize)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        newBuffer[i] = this.ad()[(this.xx_1 + i | 0) % this.ad().length | 0];
      }
       while (inductionVariable < currentSize);
    this.c11(newBuffer);
    this.xx_1 = 0;
  };
  ArrayChannelState.$metadata$ = classMeta('ArrayChannelState', undefined, undefined, undefined, undefined, ArrayBufferState.prototype);
  function ConflatedChannelState() {
    this.ry_1 = get_EMPTY();
  }
  ConflatedChannelState.prototype.t = function () {
    return this.ry_1;
  };
  ConflatedChannelState.prototype.d11 = function (block) {
    return block();
  };
  ConflatedChannelState.$metadata$ = classMeta('ConflatedChannelState');
  function identitySet(expectedSize) {
    return HashSet_init_$Create$(expectedSize);
  }
  function LinkedListHead() {
    LinkedListNode.call(this);
  }
  LinkedListHead.prototype.ym = function () {
    throw UnsupportedOperationException_init_$Create$_0();
  };
  LinkedListHead.$metadata$ = classMeta('LinkedListHead', undefined, undefined, undefined, undefined, LinkedListNode.prototype);
  function LinkedListNode() {
    this.vm_1 = this;
    this.wm_1 = this;
    this.xm_1 = false;
  }
  LinkedListNode.prototype.rq = function () {
    return this.vm_1;
  };
  LinkedListNode.prototype.vq = function () {
    return this.vm_1;
  };
  LinkedListNode.prototype.wq = function () {
    return this.wm_1;
  };
  LinkedListNode.prototype.xq = function () {
    return this.xm_1;
  };
  LinkedListNode.prototype.yq = function (node) {
    var prev = this.wm_1;
    node.vm_1 = this;
    node.wm_1 = prev;
    prev.vm_1 = node;
    this.wm_1 = node;
  };
  LinkedListNode.prototype.ym = function () {
    if (this.xm_1)
      return false;
    var prev = this.wm_1;
    var next = this.vm_1;
    prev.vm_1 = next;
    next.wm_1 = prev;
    this.xm_1 = true;
    return true;
  };
  LinkedListNode.prototype.ir = function (node) {
    if (!(this.vm_1 === this))
      return false;
    this.yq(node);
    return true;
  };
  LinkedListNode.prototype.zq = function (node, condition) {
    if (!condition())
      return false;
    this.yq(node);
    return true;
  };
  LinkedListNode.prototype.ar = function (node, predicate) {
    if (!predicate(this.wm_1))
      return false;
    this.yq(node);
    return true;
  };
  LinkedListNode.prototype.br = function (node, predicate, condition) {
    if (!predicate(this.wm_1))
      return false;
    if (!condition())
      return false;
    this.yq(node);
    return true;
  };
  LinkedListNode.prototype.cr = function () {
  };
  LinkedListNode.$metadata$ = classMeta('LinkedListNode');
  function disposeLockFreeLinkedList(list) {
  }
  function probeCoroutineCreated(completion) {
    return completion;
  }
  function addOrUpdate(_this__u8e3s4, element, update) {
    _this__u8e3s4.a(element);
  }
  function asShareable(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function isReuseSupportedInPlatform() {
    return true;
  }
  function disposeContinuation(cont) {
  }
  function asLocalOrNullIfNotUsed(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function useLocal(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function asLocalOrNull(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function shareableResume(_this__u8e3s4, delegate, undispatched) {
    return resume(_this__u8e3s4, delegate, undispatched);
  }
  function unwrap(exception) {
    return exception;
  }
  function CoroutineStackFrame() {
  }
  CoroutineStackFrame.$metadata$ = interfaceMeta('CoroutineStackFrame');
  function recoverStackTrace(exception, continuation) {
    return exception;
  }
  function recoverStackTrace_0(exception) {
    return exception;
  }
  function systemProp_1(propertyName) {
    return null;
  }
  function threadContextElements(context) {
    return 0;
  }
  function CommonThreadLocal() {
    this.iq_1 = null;
  }
  CommonThreadLocal.prototype.jq = function () {
    var tmp = this.iq_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CommonThreadLocal.prototype.kq = function (value) {
    this.iq_1 = value;
  };
  CommonThreadLocal.$metadata$ = classMeta('CommonThreadLocal');
  //region block: post-declaration
  JobSupport.prototype.xj = invokeOnCompletion$default;
  JobSupport.prototype.bk = cancel$default;
  JobSupport.prototype.d4 = plus;
  JobSupport.prototype.w3 = get;
  JobSupport.prototype.c4 = fold;
  JobSupport.prototype.b4 = minusKey;
  AbstractCoroutine.prototype.xj = invokeOnCompletion$default;
  AbstractCoroutine.prototype.bk = cancel$default;
  AbstractCoroutine.prototype.d4 = plus;
  AbstractCoroutine.prototype.w3 = get;
  AbstractCoroutine.prototype.c4 = fold;
  AbstractCoroutine.prototype.b4 = minusKey;
  StandaloneCoroutine.prototype.xj = invokeOnCompletion$default;
  StandaloneCoroutine.prototype.bk = cancel$default;
  StandaloneCoroutine.prototype.d4 = plus;
  StandaloneCoroutine.prototype.w3 = get;
  StandaloneCoroutine.prototype.c4 = fold;
  StandaloneCoroutine.prototype.b4 = minusKey;
  LazyStandaloneCoroutine.prototype.xj = invokeOnCompletion$default;
  LazyStandaloneCoroutine.prototype.bk = cancel$default;
  LazyStandaloneCoroutine.prototype.d4 = plus;
  LazyStandaloneCoroutine.prototype.w3 = get;
  LazyStandaloneCoroutine.prototype.c4 = fold;
  LazyStandaloneCoroutine.prototype.b4 = minusKey;
  DeferredCoroutine.prototype.xj = invokeOnCompletion$default;
  DeferredCoroutine.prototype.bk = cancel$default;
  DeferredCoroutine.prototype.d4 = plus;
  DeferredCoroutine.prototype.w3 = get;
  DeferredCoroutine.prototype.c4 = fold;
  DeferredCoroutine.prototype.b4 = minusKey;
  LazyDeferredCoroutine.prototype.xj = invokeOnCompletion$default;
  LazyDeferredCoroutine.prototype.bk = cancel$default;
  LazyDeferredCoroutine.prototype.d4 = plus;
  LazyDeferredCoroutine.prototype.w3 = get;
  LazyDeferredCoroutine.prototype.c4 = fold;
  LazyDeferredCoroutine.prototype.b4 = minusKey;
  CancellableContinuationImpl.prototype.wl = tryResume$default;
  CompletableDeferredImpl.prototype.xj = invokeOnCompletion$default;
  CompletableDeferredImpl.prototype.bk = cancel$default;
  CompletableDeferredImpl.prototype.d4 = plus;
  CompletableDeferredImpl.prototype.w3 = get;
  CompletableDeferredImpl.prototype.c4 = fold;
  CompletableDeferredImpl.prototype.b4 = minusKey;
  CoroutineDispatcher.prototype.w3 = get_0;
  CoroutineDispatcher.prototype.c4 = fold;
  CoroutineDispatcher.prototype.b4 = minusKey_0;
  CoroutineDispatcher.prototype.d4 = plus;
  _no_name_provided__qut3iv.prototype.w3 = get;
  _no_name_provided__qut3iv.prototype.c4 = fold;
  _no_name_provided__qut3iv.prototype.b4 = minusKey;
  _no_name_provided__qut3iv.prototype.d4 = plus;
  CoroutineName.prototype.w3 = get;
  CoroutineName.prototype.c4 = fold;
  CoroutineName.prototype.b4 = minusKey;
  CoroutineName.prototype.d4 = plus;
  EventLoop.prototype.d4 = plus;
  EventLoop.prototype.w3 = get_0;
  EventLoop.prototype.c4 = fold;
  EventLoop.prototype.b4 = minusKey_0;
  AwaitContinuation.prototype.wl = tryResume$default;
  JobImpl.prototype.xj = invokeOnCompletion$default;
  JobImpl.prototype.bk = cancel$default;
  JobImpl.prototype.d4 = plus;
  JobImpl.prototype.w3 = get;
  JobImpl.prototype.c4 = fold;
  JobImpl.prototype.b4 = minusKey;
  MainCoroutineDispatcher.prototype.d4 = plus;
  MainCoroutineDispatcher.prototype.w3 = get_0;
  MainCoroutineDispatcher.prototype.c4 = fold;
  MainCoroutineDispatcher.prototype.b4 = minusKey_0;
  SupervisorJobImpl.prototype.xj = invokeOnCompletion$default;
  SupervisorJobImpl.prototype.bk = cancel$default;
  SupervisorJobImpl.prototype.d4 = plus;
  SupervisorJobImpl.prototype.w3 = get;
  SupervisorJobImpl.prototype.c4 = fold;
  SupervisorJobImpl.prototype.b4 = minusKey;
  Unconfined.prototype.d4 = plus;
  Unconfined.prototype.w3 = get_0;
  Unconfined.prototype.c4 = fold;
  Unconfined.prototype.b4 = minusKey_0;
  AbstractSendChannel.prototype.yw = close$default;
  AbstractChannel.prototype.bk = cancel$default_0;
  AbstractChannel.prototype.yw = close$default;
  ArrayChannel.prototype.bk = cancel$default_0;
  ArrayChannel.prototype.yw = close$default;
  ConflatedChannel.prototype.bk = cancel$default_0;
  ConflatedChannel.prototype.yw = close$default;
  LinkedListChannel.prototype.bk = cancel$default_0;
  LinkedListChannel.prototype.yw = close$default;
  RendezvousChannel.prototype.bk = cancel$default_0;
  RendezvousChannel.prototype.yw = close$default;
  JsMainDispatcher.prototype.d4 = plus;
  JsMainDispatcher.prototype.w3 = get_0;
  JsMainDispatcher.prototype.c4 = fold;
  JsMainDispatcher.prototype.b4 = minusKey_0;
  UnconfinedEventLoop.prototype.d4 = plus;
  UnconfinedEventLoop.prototype.w3 = get_0;
  UnconfinedEventLoop.prototype.c4 = fold;
  UnconfinedEventLoop.prototype.b4 = minusKey_0;
  SetTimeoutBasedDispatcher.prototype.d4 = plus;
  SetTimeoutBasedDispatcher.prototype.w3 = get_0;
  SetTimeoutBasedDispatcher.prototype.c4 = fold;
  SetTimeoutBasedDispatcher.prototype.b4 = minusKey_0;
  NodeDispatcher.prototype.d4 = plus;
  NodeDispatcher.prototype.w3 = get_0;
  NodeDispatcher.prototype.c4 = fold;
  NodeDispatcher.prototype.b4 = minusKey_0;
  SetTimeoutDispatcher.prototype.d4 = plus;
  SetTimeoutDispatcher.prototype.w3 = get_0;
  SetTimeoutDispatcher.prototype.c4 = fold;
  SetTimeoutDispatcher.prototype.b4 = minusKey_0;
  WindowDispatcher.prototype.d4 = plus;
  WindowDispatcher.prototype.w3 = get_0;
  WindowDispatcher.prototype.c4 = fold;
  WindowDispatcher.prototype.b4 = minusKey_0;
  //endregion
  //region block: init
  UNDECIDED = 0;
  SUSPENDED = 1;
  RESUMED = 2;
  FALSE = 0;
  TRUE = 1;
  DEFAULT_CLOSE_MESSAGE = 'Channel was closed';
  MODE_CANCELLABLE = 1;
  MODE_UNINITIALIZED = -1;
  MODE_CANCELLABLE_REUSABLE = 2;
  MODE_UNDISPATCHED = 4;
  MODE_ATOMIC = 0;
  counter = 0;
  DEBUG = false;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = delay;
  _.$_$.b = Channel$default;
  _.$_$.c = CompletableDeferred$default;
  _.$_$.d = cancel$default;
  _.$_$.e = invokeOnCompletion$default;
  _.$_$.f = Job$default;
  _.$_$.g = SupervisorJob$default;
  _.$_$.h = async$default;
  _.$_$.i = cancel$default_1;
  _.$_$.j = launch$default;
  _.$_$.k = CancellationException_init_$Init$;
  _.$_$.l = CancellationException_init_$Create$;
  _.$_$.m = Factory_getInstance;
  _.$_$.n = Key_getInstance_0;
  _.$_$.o = Key_getInstance_1;
  _.$_$.p = Dispatchers_getInstance;
  _.$_$.q = GlobalScope_getInstance;
  _.$_$.r = Key_getInstance_3;
  _.$_$.s = cancelConsumed;
  _.$_$.t = recoverStackTrace;
  _.$_$.u = CancellableContinuationImpl;
  _.$_$.v = CancellationException;
  _.$_$.w = CompletableJob;
  _.$_$.x = CoroutineExceptionHandler;
  _.$_$.y = CoroutineName;
  _.$_$.z = CoroutineScope_0;
  _.$_$.a1 = CoroutineScope;
  _.$_$.b1 = DisposableHandle;
  _.$_$.c1 = Job_0;
  _.$_$.d1 = Job;
  _.$_$.e1 = get_MODE_CANCELLABLE;
  _.$_$.f1 = SupervisorJob;
  _.$_$.g1 = cancel_0;
  _.$_$.h1 = cancel;
  _.$_$.i1 = cancel_1;
  _.$_$.j1 = cancel_2;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(329)));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.js.map

/***/ }),

/***/ 755:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var classMeta = kotlin_kotlin.$_$.y7;
  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.n1;
  var captureStack = kotlin_kotlin.$_$.t7;
  var IllegalArgumentException = kotlin_kotlin.$_$.bb;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.u4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.s;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var toString = kotlin_kotlin.$_$.c9;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var isInterface = kotlin_kotlin.$_$.p8;
  var KClass = kotlin_kotlin.$_$.n9;
  var copyToArray = kotlin_kotlin.$_$.f5;
  var Triple = kotlin_kotlin.$_$.ib;
  var getKClass = kotlin_kotlin.$_$.e;
  var Pair = kotlin_kotlin.$_$.fb;
  var Entry = kotlin_kotlin.$_$.e4;
  var LinkedHashMap = kotlin_kotlin.$_$.a4;
  var MutableMap = kotlin_kotlin.$_$.m4;
  var Map = kotlin_kotlin.$_$.f4;
  var HashMap = kotlin_kotlin.$_$.w3;
  var LinkedHashSet = kotlin_kotlin.$_$.b4;
  var MutableSet = kotlin_kotlin.$_$.n4;
  var Set = kotlin_kotlin.$_$.o4;
  var HashSet = kotlin_kotlin.$_$.x3;
  var ArrayList = kotlin_kotlin.$_$.u3;
  var MutableList = kotlin_kotlin.$_$.k4;
  var List = kotlin_kotlin.$_$.d4;
  var Collection = kotlin_kotlin.$_$.v3;
  var Iterator = kotlin_kotlin.$_$.z3;
  var Iterable = kotlin_kotlin.$_$.y3;
  var isBlank = kotlin_kotlin.$_$.w9;
  var equals = kotlin_kotlin.$_$.a8;
  var toList = kotlin_kotlin.$_$.m6;
  var emptyList = kotlin_kotlin.$_$.g5;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.t;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.y;
  var toHashSet = kotlin_kotlin.$_$.j6;
  var toBooleanArray = kotlin_kotlin.$_$.i6;
  var withIndex = kotlin_kotlin.$_$.r6;
  var to = kotlin_kotlin.$_$.bc;
  var toMap = kotlin_kotlin.$_$.o6;
  var lazy = kotlin_kotlin.$_$.xb;
  var contentEquals = kotlin_kotlin.$_$.v4;
  var until = kotlin_kotlin.$_$.m9;
  var joinToString$default = kotlin_kotlin.$_$.g;
  var KProperty1 = kotlin_kotlin.$_$.p9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.d8;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var ensureNotNull = kotlin_kotlin.$_$.sb;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var Long = kotlin_kotlin.$_$.db;
  var Char = kotlin_kotlin.$_$.va;
  var toIntOrNull = kotlin_kotlin.$_$.ia;
  var hashCode = kotlin_kotlin.$_$.f8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var isObject = kotlin_kotlin.$_$.r8;
  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.u;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.d1;
  var LinkedHashSet_init_$Create$_0 = kotlin_kotlin.$_$.e1;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.c1;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.z;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.v;
  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.w;
  var step = kotlin_kotlin.$_$.l9;
  var getValue = kotlin_kotlin.$_$.n5;
  var isArray = kotlin_kotlin.$_$.h8;
  var arrayIterator = kotlin_kotlin.$_$.r7;
  var asList = kotlin_kotlin.$_$.s4;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.i3;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.u2;
  var UInt = kotlin_kotlin.$_$.kb;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.t2;
  var Companion_getInstance = kotlin_kotlin.$_$.n3;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.x2;
  var ULong = kotlin_kotlin.$_$.lb;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.w2;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.f3;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.r2;
  var UByte = kotlin_kotlin.$_$.jb;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.q2;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.j3;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.a3;
  var UShort = kotlin_kotlin.$_$.mb;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.z2;
  var HashSet_init_$Create$_1 = kotlin_kotlin.$_$.x;
  var contentHashCode = kotlin_kotlin.$_$.w4;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  var booleanArray = kotlin_kotlin.$_$.s7;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.m3;
  var isCharArray = kotlin_kotlin.$_$.k8;
  var charArray = kotlin_kotlin.$_$.u7;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.g3;
  var isDoubleArray = kotlin_kotlin.$_$.m8;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.h3;
  var isFloatArray = kotlin_kotlin.$_$.n8;
  var isLongArray = kotlin_kotlin.$_$.q8;
  var longArray = kotlin_kotlin.$_$.u8;
  var isIntArray = kotlin_kotlin.$_$.o8;
  var isShortArray = kotlin_kotlin.$_$.s8;
  var isByteArray = kotlin_kotlin.$_$.j8;
  var BooleanCompanionObject_getInstance = kotlin_kotlin.$_$.e3;
  var isBooleanArray = kotlin_kotlin.$_$.i8;
  var coerceAtLeast = kotlin_kotlin.$_$.g9;
  var copyOf = kotlin_kotlin.$_$.a5;
  var copyOf_0 = kotlin_kotlin.$_$.c5;
  var copyOf_1 = kotlin_kotlin.$_$.d5;
  var copyOf_2 = kotlin_kotlin.$_$.y4;
  var copyOf_3 = kotlin_kotlin.$_$.e5;
  var copyOf_4 = kotlin_kotlin.$_$.x4;
  var copyOf_5 = kotlin_kotlin.$_$.b5;
  var copyOf_6 = kotlin_kotlin.$_$.z4;
  var Unit = kotlin_kotlin.$_$.nb;
  var capitalize = kotlin_kotlin.$_$.r9;
  var trimIndent = kotlin_kotlin.$_$.sa;
  var equals_0 = kotlin_kotlin.$_$.u9;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.l3;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.k3;
  var mapOf = kotlin_kotlin.$_$.w5;
  var charSequenceLength = kotlin_kotlin.$_$.w7;
  var lastOrNull = kotlin_kotlin.$_$.r5;
  var get_lastIndex = kotlin_kotlin.$_$.p5;
  var emptyMap = kotlin_kotlin.$_$.h5;
  var Annotation = kotlin_kotlin.$_$.ua;
  var get_indices = kotlin_kotlin.$_$.o5;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.v1;
  var get_js = kotlin_kotlin.$_$.t8;
  var findAssociatedObject = kotlin_kotlin.$_$.c;
  //endregion
  //region block: pre-declaration
  SealedClassSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  SealedClassSerializer.prototype.constructor = SealedClassSerializer;
  SerializationException.prototype = Object.create(IllegalArgumentException.prototype);
  SerializationException.prototype.constructor = SerializationException;
  function get_isNullable() {
    return false;
  }
  function get_isInline() {
    return false;
  }
  ENUM.prototype = Object.create(SerialKind.prototype);
  ENUM.prototype.constructor = ENUM;
  CONTEXTUAL.prototype = Object.create(SerialKind.prototype);
  CONTEXTUAL.prototype.constructor = CONTEXTUAL;
  PrimitiveKind.prototype = Object.create(SerialKind.prototype);
  PrimitiveKind.prototype.constructor = PrimitiveKind;
  BOOLEAN.prototype = Object.create(PrimitiveKind.prototype);
  BOOLEAN.prototype.constructor = BOOLEAN;
  BYTE.prototype = Object.create(PrimitiveKind.prototype);
  BYTE.prototype.constructor = BYTE;
  CHAR.prototype = Object.create(PrimitiveKind.prototype);
  CHAR.prototype.constructor = CHAR;
  SHORT.prototype = Object.create(PrimitiveKind.prototype);
  SHORT.prototype.constructor = SHORT;
  INT.prototype = Object.create(PrimitiveKind.prototype);
  INT.prototype.constructor = INT;
  LONG.prototype = Object.create(PrimitiveKind.prototype);
  LONG.prototype.constructor = LONG;
  FLOAT.prototype = Object.create(PrimitiveKind.prototype);
  FLOAT.prototype.constructor = FLOAT;
  DOUBLE.prototype = Object.create(PrimitiveKind.prototype);
  DOUBLE.prototype.constructor = DOUBLE;
  STRING.prototype = Object.create(PrimitiveKind.prototype);
  STRING.prototype.constructor = STRING;
  StructureKind.prototype = Object.create(SerialKind.prototype);
  StructureKind.prototype.constructor = StructureKind;
  CLASS.prototype = Object.create(StructureKind.prototype);
  CLASS.prototype.constructor = CLASS;
  LIST.prototype = Object.create(StructureKind.prototype);
  LIST.prototype.constructor = LIST;
  MAP.prototype = Object.create(StructureKind.prototype);
  MAP.prototype.constructor = MAP;
  OBJECT.prototype = Object.create(StructureKind.prototype);
  OBJECT.prototype.constructor = OBJECT;
  PolymorphicKind.prototype = Object.create(SerialKind.prototype);
  PolymorphicKind.prototype.constructor = PolymorphicKind;
  SEALED.prototype = Object.create(PolymorphicKind.prototype);
  SEALED.prototype.constructor = SEALED;
  function decodeSerializableValue(deserializer) {
    return deserializer.c33(this);
  }
  function decodeSequentially() {
    return false;
  }
  function decodeCollectionSize(descriptor) {
    return -1;
  }
  function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      previousValue = null;
    return $handler == null ? this.n35(descriptor, index, deserializer, previousValue) : $handler(descriptor, index, deserializer, previousValue);
  }
  function encodeNotNullMark() {
  }
  function beginCollection(descriptor, collectionSize) {
    return this.d35(descriptor);
  }
  function encodeSerializableValue(serializer, value) {
    serializer.b33(this, value);
  }
  PrimitiveArrayDescriptor.prototype = Object.create(ListLikeDescriptor.prototype);
  PrimitiveArrayDescriptor.prototype.constructor = PrimitiveArrayDescriptor;
  ArrayListClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayListClassDesc.prototype.constructor = ArrayListClassDesc;
  LinkedHashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  LinkedHashSetClassDesc.prototype.constructor = LinkedHashSetClassDesc;
  LinkedHashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  LinkedHashMapClassDesc.prototype.constructor = LinkedHashMapClassDesc;
  HashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  HashSetClassDesc.prototype.constructor = HashSetClassDesc;
  HashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  HashMapClassDesc.prototype.constructor = HashMapClassDesc;
  ArrayClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayClassDesc.prototype.constructor = ArrayClassDesc;
  ListLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  ListLikeSerializer.prototype.constructor = ListLikeSerializer;
  PrimitiveArraySerializer.prototype = Object.create(ListLikeSerializer.prototype);
  PrimitiveArraySerializer.prototype.constructor = PrimitiveArraySerializer;
  ArrayListSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  ArrayListSerializer.prototype.constructor = ArrayListSerializer;
  LinkedHashSetSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  LinkedHashSetSerializer.prototype.constructor = LinkedHashSetSerializer;
  MapLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  MapLikeSerializer.prototype.constructor = MapLikeSerializer;
  LinkedHashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  LinkedHashMapSerializer.prototype.constructor = LinkedHashMapSerializer;
  HashSetSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  HashSetSerializer.prototype.constructor = HashSetSerializer;
  HashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  HashMapSerializer.prototype.constructor = HashMapSerializer;
  ReferenceArraySerializer.prototype = Object.create(ListLikeSerializer.prototype);
  ReferenceArraySerializer.prototype.constructor = ReferenceArraySerializer;
  InlineClassDescriptor.prototype = Object.create(PluginGeneratedSerialDescriptor.prototype);
  InlineClassDescriptor.prototype.constructor = InlineClassDescriptor;
  function typeParametersSerializers() {
    return get_EMPTY_SERIALIZER_ARRAY();
  }
  CharArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  CharArraySerializer_0.prototype.constructor = CharArraySerializer_0;
  DoubleArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  DoubleArraySerializer_0.prototype.constructor = DoubleArraySerializer_0;
  FloatArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  FloatArraySerializer_0.prototype.constructor = FloatArraySerializer_0;
  LongArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  LongArraySerializer_0.prototype.constructor = LongArraySerializer_0;
  IntArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  IntArraySerializer_0.prototype.constructor = IntArraySerializer_0;
  ShortArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ShortArraySerializer_0.prototype.constructor = ShortArraySerializer_0;
  ByteArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ByteArraySerializer_0.prototype.constructor = ByteArraySerializer_0;
  BooleanArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  BooleanArraySerializer_0.prototype.constructor = BooleanArraySerializer_0;
  CharArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  CharArrayBuilder.prototype.constructor = CharArrayBuilder;
  DoubleArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  DoubleArrayBuilder.prototype.constructor = DoubleArrayBuilder;
  FloatArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  FloatArrayBuilder.prototype.constructor = FloatArrayBuilder;
  LongArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  LongArrayBuilder.prototype.constructor = LongArrayBuilder;
  IntArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  IntArrayBuilder.prototype.constructor = IntArrayBuilder;
  ShortArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ShortArrayBuilder.prototype.constructor = ShortArrayBuilder;
  ByteArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ByteArrayBuilder.prototype.constructor = ByteArrayBuilder;
  BooleanArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  BooleanArrayBuilder.prototype.constructor = BooleanArrayBuilder;
  NamedValueDecoder.prototype = Object.create(TaggedDecoder.prototype);
  NamedValueDecoder.prototype.constructor = NamedValueDecoder;
  MapEntrySerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  MapEntrySerializer_0.prototype.constructor = MapEntrySerializer_0;
  PairSerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  PairSerializer_0.prototype.constructor = PairSerializer_0;
  SerialModuleImpl.prototype = Object.create(SerializersModule.prototype);
  SerialModuleImpl.prototype.constructor = SerialModuleImpl;
  //endregion
  function KSerializer() {
  }
  KSerializer.$metadata$ = interfaceMeta('KSerializer', [SerializationStrategy, DeserializationStrategy]);
  function DeserializationStrategy() {
  }
  DeserializationStrategy.$metadata$ = interfaceMeta('DeserializationStrategy');
  function SerializationStrategy() {
  }
  SerializationStrategy.$metadata$ = interfaceMeta('SerializationStrategy');
  function findPolymorphicSerializer(_this__u8e3s4, encoder, value) {
    var tmp0_elvis_lhs = _this__u8e3s4.d33(encoder, value);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered(getKClassFromExpression(value), _this__u8e3s4.e33());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function SealedClassSerializer() {
  }
  SealedClassSerializer.$metadata$ = classMeta('SealedClassSerializer', undefined, undefined, undefined, undefined, AbstractPolymorphicSerializer.prototype);
  function StringFormat() {
  }
  StringFormat.$metadata$ = interfaceMeta('StringFormat', [SerialFormat]);
  function SerialFormat() {
  }
  SerialFormat.$metadata$ = interfaceMeta('SerialFormat');
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Create$(message) {
    var tmp = SerializationException_init_$Init$(message, Object.create(SerializationException.prototype));
    captureStack(tmp, SerializationException_init_$Create$);
    return tmp;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  SerializationException.$metadata$ = classMeta('SerializationException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function serializer(type) {
    return serializer_1(get_EmptySerializersModule(), type);
  }
  function serializer_0(_this__u8e3s4) {
    var tmp0_elvis_lhs = serializerOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      serializerNotRegistered(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializer_1(_this__u8e3s4, type) {
    var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      platformSpecificSerializerNotRegistered(kclass(type));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializerOrNull(_this__u8e3s4) {
    var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
    var rootClass = kclass(type);
    var isNullable = type.sd();
    var tmp$ret$4;
    {
      var tmp0_map = type.rd();
      var tmp$ret$3;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$2;
          {
            var tmp$ret$1;
            $l$block: {
              var tmp0_requireNotNull = item.x4_1;
              {
              }
              if (tmp0_requireNotNull == null) {
                var tmp$ret$0;
                {
                  tmp$ret$0 = 'Star projections in type arguments are not allowed, but had ' + type;
                }
                var message = tmp$ret$0;
                throw IllegalArgumentException_init_$Create$(toString(message));
              } else {
                tmp$ret$1 = tmp0_requireNotNull;
                break $l$block;
              }
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp0_mapTo.a(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var typeArguments = tmp$ret$4;
    var tmp;
    if (typeArguments.m()) {
      var tmp0_elvis_lhs = serializerOrNull(rootClass);
      tmp = tmp0_elvis_lhs == null ? _this__u8e3s4.f33(rootClass) : tmp0_elvis_lhs;
    } else {
      tmp = builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer);
    }
    var tmp1_safe_receiver = tmp;
    var tmp_0;
    if (tmp1_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$5;
      {
        tmp$ret$5 = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, KSerializer) : false) ? tmp1_safe_receiver : THROW_CCE();
      }
      tmp_0 = tmp$ret$5;
    }
    var result = tmp_0;
    var tmp2_safe_receiver = result;
    return tmp2_safe_receiver == null ? null : nullable(tmp2_safe_receiver, isNullable);
  }
  function builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer) {
    var tmp;
    if (failOnMissingTypeArgSerializer) {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
          var tmp0_iterator = typeArguments.d();
          while (tmp0_iterator.e()) {
            var item = tmp0_iterator.f();
            tmp0_mapTo.a(serializer_1(_this__u8e3s4, item));
          }
          tmp$ret$0 = tmp0_mapTo;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$4;
      {
        var tmp$ret$3;
        {
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
          var tmp0_iterator_0 = typeArguments.d();
          while (tmp0_iterator_0.e()) {
            var item_0 = tmp0_iterator_0.f();
            var tmp$ret$2;
            {
              var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
              var tmp_0;
              if (tmp0_elvis_lhs == null) {
                return null;
              } else {
                tmp_0 = tmp0_elvis_lhs;
              }
              tmp$ret$2 = tmp_0;
            }
            tmp0_mapTo_0.a(tmp$ret$2);
          }
          tmp$ret$3 = tmp0_mapTo_0;
        }
        tmp$ret$4 = tmp$ret$3;
      }
      tmp = tmp$ret$4;
    }
    var serializers = tmp;
    var tmp0_subject = rootClass;
    var tmp_1;
    if (((tmp0_subject.equals(getKClass(Collection)) ? true : tmp0_subject.equals(getKClass(List))) ? true : tmp0_subject.equals(getKClass(MutableList))) ? true : tmp0_subject.equals(getKClass(ArrayList))) {
      tmp_1 = new ArrayListSerializer(serializers.l(0));
    } else if (tmp0_subject.equals(getKClass(HashSet))) {
      tmp_1 = new HashSetSerializer(serializers.l(0));
    } else if ((tmp0_subject.equals(getKClass(Set)) ? true : tmp0_subject.equals(getKClass(MutableSet))) ? true : tmp0_subject.equals(getKClass(LinkedHashSet))) {
      tmp_1 = new LinkedHashSetSerializer(serializers.l(0));
    } else if (tmp0_subject.equals(getKClass(HashMap))) {
      tmp_1 = new HashMapSerializer(serializers.l(0), serializers.l(1));
    } else if ((tmp0_subject.equals(getKClass(Map)) ? true : tmp0_subject.equals(getKClass(MutableMap))) ? true : tmp0_subject.equals(getKClass(LinkedHashMap))) {
      tmp_1 = new LinkedHashMapSerializer(serializers.l(0), serializers.l(1));
    } else if (tmp0_subject.equals(getKClass(Entry))) {
      tmp_1 = MapEntrySerializer(serializers.l(0), serializers.l(1));
    } else if (tmp0_subject.equals(getKClass(Pair))) {
      tmp_1 = PairSerializer(serializers.l(0), serializers.l(1));
    } else if (tmp0_subject.equals(getKClass(Triple))) {
      tmp_1 = TripleSerializer(serializers.l(0), serializers.l(1), serializers.l(2));
    } else {
      if (isReferenceArray(rootClass)) {
        var tmp$ret$5;
        {
          var tmp_2 = typeArguments.l(0).qd();
          var tmp0_cast = ArraySerializer((!(tmp_2 == null) ? isInterface(tmp_2, KClass) : false) ? tmp_2 : THROW_CCE(), serializers.l(0));
          tmp$ret$5 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        }
        return tmp$ret$5;
      }
      var tmp$ret$6;
      {
        tmp$ret$6 = copyToArray(serializers);
      }
      tmp_1 = constructSerializerForGivenTypeArgs(rootClass, tmp$ret$6.slice());
    }
    return tmp_1;
  }
  function nullable(_this__u8e3s4, shouldBeNullable) {
    if (shouldBeNullable)
      return get_nullable(_this__u8e3s4);
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function serializerOrNull_0(_this__u8e3s4, type) {
    return serializerByKTypeImpl(_this__u8e3s4, type, false);
  }
  function serializer_2(_this__u8e3s4) {
    return StringSerializer_getInstance();
  }
  function serializer_3(_this__u8e3s4) {
    return CharSerializer_getInstance();
  }
  function CharArraySerializer() {
    return CharArraySerializer_getInstance();
  }
  function serializer_4(_this__u8e3s4) {
    return DoubleSerializer_getInstance();
  }
  function DoubleArraySerializer() {
    return DoubleArraySerializer_getInstance();
  }
  function serializer_5(_this__u8e3s4) {
    return FloatSerializer_getInstance();
  }
  function FloatArraySerializer() {
    return FloatArraySerializer_getInstance();
  }
  function serializer_6(_this__u8e3s4) {
    return LongSerializer_getInstance();
  }
  function LongArraySerializer() {
    return LongArraySerializer_getInstance();
  }
  function serializer_7(_this__u8e3s4) {
    return IntSerializer_getInstance();
  }
  function IntArraySerializer() {
    return IntArraySerializer_getInstance();
  }
  function serializer_8(_this__u8e3s4) {
    return ShortSerializer_getInstance();
  }
  function ShortArraySerializer() {
    return ShortArraySerializer_getInstance();
  }
  function serializer_9(_this__u8e3s4) {
    return ByteSerializer_getInstance();
  }
  function ByteArraySerializer() {
    return ByteArraySerializer_getInstance();
  }
  function serializer_10(_this__u8e3s4) {
    return BooleanSerializer_getInstance();
  }
  function BooleanArraySerializer() {
    return BooleanArraySerializer_getInstance();
  }
  function serializer_11(_this__u8e3s4) {
    return UnitSerializer_getInstance();
  }
  function serializer_12(_this__u8e3s4) {
    return UIntSerializer_getInstance();
  }
  function serializer_13(_this__u8e3s4) {
    return ULongSerializer_getInstance();
  }
  function serializer_14(_this__u8e3s4) {
    return UByteSerializer_getInstance();
  }
  function serializer_15(_this__u8e3s4) {
    return UShortSerializer_getInstance();
  }
  function ListSerializer(elementSerializer) {
    return new ArrayListSerializer(elementSerializer);
  }
  function SetSerializer(elementSerializer) {
    return new LinkedHashSetSerializer(elementSerializer);
  }
  function MapSerializer(keySerializer, valueSerializer) {
    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
  }
  function get_nullable(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.a33().g33()) {
      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this__u8e3s4);
    }
    return tmp;
  }
  function MapEntrySerializer(keySerializer, valueSerializer) {
    return new MapEntrySerializer_0(keySerializer, valueSerializer);
  }
  function PairSerializer(keySerializer, valueSerializer) {
    return new PairSerializer_0(keySerializer, valueSerializer);
  }
  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
  }
  function ArraySerializer(kClass, elementSerializer) {
    return new ReferenceArraySerializer(kClass, elementSerializer);
  }
  function SerialDescriptor() {
  }
  SerialDescriptor.$metadata$ = interfaceMeta('SerialDescriptor');
  function get_elementDescriptors(_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  function elementDescriptors$1$1($this_elementDescriptors) {
    this.p33_1 = $this_elementDescriptors;
    this.o33_1 = $this_elementDescriptors.k33();
  }
  elementDescriptors$1$1.prototype.e = function () {
    return this.o33_1 > 0;
  };
  elementDescriptors$1$1.prototype.f = function () {
    var tmp = this.p33_1.k33();
    var tmp0_this = this;
    var tmp1 = tmp0_this.o33_1;
    tmp0_this.o33_1 = tmp1 - 1 | 0;
    return this.p33_1.n33(tmp - tmp1 | 0);
  };
  elementDescriptors$1$1.$metadata$ = classMeta(undefined, [Iterator]);
  function _no_name_provided__qut3iv($this_elementDescriptors) {
    this.q33_1 = $this_elementDescriptors;
  }
  _no_name_provided__qut3iv.prototype.d = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = new elementDescriptors$1$1(this.q33_1);
    }
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable]);
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    {
      var tmp1_require = !equals(kind, CLASS_getInstance());
      {
      }
      if (!tmp1_require) {
        var tmp$ret$2;
        {
          tmp$ret$2 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
        }
        var message_0 = tmp$ret$2;
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder.u33_1.g(), toList(typeParameters), sdBuilder);
  }
  function buildSerialDescriptor$default(serialName, kind, typeParameters, builder, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      builder = buildSerialDescriptor$lambda();
    }
    return buildSerialDescriptor(serialName, kind, typeParameters, builder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this.r33_1 = serialName;
    this.s33_1 = false;
    this.t33_1 = emptyList();
    this.u33_1 = ArrayList_init_$Create$_0();
    this.v33_1 = HashSet_init_$Create$();
    this.w33_1 = ArrayList_init_$Create$_0();
    this.x33_1 = ArrayList_init_$Create$_0();
    this.y33_1 = ArrayList_init_$Create$_0();
  }
  ClassSerialDescriptorBuilder.prototype.z33 = function (elementName, descriptor, annotations, isOptional) {
    {
      var tmp0_require = this.v33_1.a(elementName);
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = "Element with name '" + elementName + "' is already registered";
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_this = this;
    {
      var tmp1_plusAssign = tmp0_this.u33_1;
      tmp1_plusAssign.a(elementName);
    }
    var tmp1_this = this;
    {
      var tmp2_plusAssign = tmp1_this.w33_1;
      tmp2_plusAssign.a(descriptor);
    }
    var tmp2_this = this;
    {
      var tmp3_plusAssign = tmp2_this.x33_1;
      tmp3_plusAssign.a(annotations);
    }
    var tmp3_this = this;
    {
      var tmp4_plusAssign = tmp3_this.y33_1;
      tmp4_plusAssign.a(isOptional);
    }
  };
  ClassSerialDescriptorBuilder.prototype.a34 = function (elementName, descriptor, annotations, isOptional, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      annotations = emptyList();
    if (!(($mask0 & 8) === 0))
      isOptional = false;
    return this.z33(elementName, descriptor, annotations, isOptional);
  };
  ClassSerialDescriptorBuilder.$metadata$ = classMeta('ClassSerialDescriptorBuilder');
  function _get__hashCode__tgwhef($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = _hashCode$factory();
      tmp$ret$0 = $this.m34_1.t();
    }
    return tmp$ret$0;
  }
  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.l34_1);
    };
  }
  function SerialDescriptorImpl$toString$lambda(this$0) {
    return function (it) {
      return this$0.l33(it) + ': ' + this$0.n33(it).h33();
    };
  }
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this.b34_1 = serialName;
    this.c34_1 = kind;
    this.d34_1 = elementsCount;
    this.e34_1 = builder.t33_1;
    this.f34_1 = toHashSet(builder.u33_1);
    var tmp = this;
    var tmp$ret$0;
    {
      var tmp0_toTypedArray = builder.u33_1;
      tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    }
    tmp.g34_1 = tmp$ret$0;
    this.h34_1 = compactArray(builder.w33_1);
    var tmp_0 = this;
    var tmp$ret$1;
    {
      var tmp0_toTypedArray_0 = builder.x33_1;
      tmp$ret$1 = copyToArray(tmp0_toTypedArray_0);
    }
    tmp_0.i34_1 = tmp$ret$1;
    this.j34_1 = toBooleanArray(builder.y33_1);
    var tmp_1 = this;
    var tmp$ret$4;
    {
      var tmp0_map = withIndex(this.g34_1);
      var tmp$ret$3;
      {
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.d();
        while (tmp0_iterator.e()) {
          var item = tmp0_iterator.f();
          var tmp$ret$2;
          {
            tmp$ret$2 = to(item.u2_1, item.t2_1);
          }
          tmp0_mapTo.a(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    tmp_1.k34_1 = toMap(tmp$ret$4);
    this.l34_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.m34_1 = lazy(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  SerialDescriptorImpl.prototype.h33 = function () {
    return this.b34_1;
  };
  SerialDescriptorImpl.prototype.i33 = function () {
    return this.c34_1;
  };
  SerialDescriptorImpl.prototype.k33 = function () {
    return this.d34_1;
  };
  SerialDescriptorImpl.prototype.n34 = function () {
    return this.f34_1;
  };
  SerialDescriptorImpl.prototype.l33 = function (index) {
    return getChecked(this.g34_1, index);
  };
  SerialDescriptorImpl.prototype.m33 = function (name) {
    var tmp0_elvis_lhs = this.k34_1.i2(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_1();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SerialDescriptorImpl.prototype.n33 = function (index) {
    return getChecked(this.h34_1, index);
  };
  SerialDescriptorImpl.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.h33() === other.h33())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = contentEquals(this.l34_1, tmp0__anonymous__q1qw7t.l34_1);
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.k33() === other.k33())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.k33();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.n33(index).h33() === other.n33(index).h33())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.n33(index).i33(), other.n33(index).i33())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SerialDescriptorImpl.prototype.hashCode = function () {
    return _get__hashCode__tgwhef(this);
  };
  SerialDescriptorImpl.prototype.toString = function () {
    var tmp = until(0, this.d34_1);
    var tmp_0 = this.b34_1 + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, SerialDescriptorImpl$toString$lambda(this), 24, null);
  };
  SerialDescriptorImpl.$metadata$ = classMeta('SerialDescriptorImpl', [SerialDescriptor, CachedNames]);
  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builderAction(sdBuilder);
    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.u33_1.g(), toList(typeParameters), sdBuilder);
  }
  function buildClassSerialDescriptor$default(serialName, typeParameters, builderAction, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      builderAction = buildClassSerialDescriptor$lambda();
    }
    return buildClassSerialDescriptor(serialName, typeParameters, builderAction);
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = !isBlank(serialName);
      }
      var tmp0_require = tmp$ret$0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Blank serial names are prohibited';
        }
        var message = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return PrimitiveDescriptorSafe(serialName, kind);
  }
  function buildSerialDescriptor$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function buildClassSerialDescriptor$lambda() {
    return function ($this$null) {
      return Unit_getInstance();
    };
  }
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef(receiver);
    }, null);
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  ENUM.$metadata$ = objectMeta('ENUM', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function CONTEXTUAL() {
    CONTEXTUAL_instance = this;
    SerialKind.call(this);
  }
  CONTEXTUAL.$metadata$ = objectMeta('CONTEXTUAL', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var CONTEXTUAL_instance;
  function CONTEXTUAL_getInstance() {
    if (CONTEXTUAL_instance == null)
      new CONTEXTUAL();
    return CONTEXTUAL_instance;
  }
  function SerialKind() {
  }
  SerialKind.prototype.toString = function () {
    return ensureNotNull(getKClassFromExpression(this).hd());
  };
  SerialKind.prototype.hashCode = function () {
    return getStringHashCode(this.toString());
  };
  SerialKind.$metadata$ = classMeta('SerialKind');
  function BOOLEAN() {
    BOOLEAN_instance = this;
    PrimitiveKind.call(this);
  }
  BOOLEAN.$metadata$ = objectMeta('BOOLEAN', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BOOLEAN_instance;
  function BOOLEAN_getInstance() {
    if (BOOLEAN_instance == null)
      new BOOLEAN();
    return BOOLEAN_instance;
  }
  function BYTE() {
    BYTE_instance = this;
    PrimitiveKind.call(this);
  }
  BYTE.$metadata$ = objectMeta('BYTE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BYTE_instance;
  function BYTE_getInstance() {
    if (BYTE_instance == null)
      new BYTE();
    return BYTE_instance;
  }
  function CHAR() {
    CHAR_instance = this;
    PrimitiveKind.call(this);
  }
  CHAR.$metadata$ = objectMeta('CHAR', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var CHAR_instance;
  function CHAR_getInstance() {
    if (CHAR_instance == null)
      new CHAR();
    return CHAR_instance;
  }
  function SHORT() {
    SHORT_instance = this;
    PrimitiveKind.call(this);
  }
  SHORT.$metadata$ = objectMeta('SHORT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var SHORT_instance;
  function SHORT_getInstance() {
    if (SHORT_instance == null)
      new SHORT();
    return SHORT_instance;
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  INT.$metadata$ = objectMeta('INT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function LONG() {
    LONG_instance = this;
    PrimitiveKind.call(this);
  }
  LONG.$metadata$ = objectMeta('LONG', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var LONG_instance;
  function LONG_getInstance() {
    if (LONG_instance == null)
      new LONG();
    return LONG_instance;
  }
  function FLOAT() {
    FLOAT_instance = this;
    PrimitiveKind.call(this);
  }
  FLOAT.$metadata$ = objectMeta('FLOAT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var FLOAT_instance;
  function FLOAT_getInstance() {
    if (FLOAT_instance == null)
      new FLOAT();
    return FLOAT_instance;
  }
  function DOUBLE() {
    DOUBLE_instance = this;
    PrimitiveKind.call(this);
  }
  DOUBLE.$metadata$ = objectMeta('DOUBLE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var DOUBLE_instance;
  function DOUBLE_getInstance() {
    if (DOUBLE_instance == null)
      new DOUBLE();
    return DOUBLE_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  STRING.$metadata$ = objectMeta('STRING', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  PrimitiveKind.$metadata$ = classMeta('PrimitiveKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  CLASS.$metadata$ = objectMeta('CLASS', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  LIST.$metadata$ = objectMeta('LIST', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  MAP.$metadata$ = objectMeta('MAP', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  OBJECT.$metadata$ = objectMeta('OBJECT', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  StructureKind.$metadata$ = classMeta('StructureKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function SEALED() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  SEALED.$metadata$ = objectMeta('SEALED', undefined, undefined, undefined, undefined, PolymorphicKind.prototype);
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED();
    return SEALED_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  PolymorphicKind.$metadata$ = classMeta('PolymorphicKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function AbstractDecoder() {
  }
  AbstractDecoder.prototype.o34 = function () {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  AbstractDecoder.prototype.p34 = function () {
    return true;
  };
  AbstractDecoder.prototype.q34 = function () {
    return null;
  };
  AbstractDecoder.prototype.r34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.s34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.t34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.u34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.v34 = function () {
    var tmp = this.o34();
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.w34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.x34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.y34 = function () {
    var tmp = this.o34();
    return tmp instanceof Char ? tmp.i1_1 : THROW_CCE();
  };
  AbstractDecoder.prototype.z34 = function () {
    var tmp = this.o34();
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.a35 = function (inlineDescriptor) {
    return this;
  };
  AbstractDecoder.prototype.b35 = function (deserializer, previousValue) {
    return this.c35(deserializer);
  };
  AbstractDecoder.prototype.d35 = function (descriptor) {
    return this;
  };
  AbstractDecoder.prototype.e35 = function (descriptor) {
  };
  AbstractDecoder.prototype.f35 = function (descriptor, index) {
    return this.r34();
  };
  AbstractDecoder.prototype.g35 = function (descriptor, index) {
    return this.s34();
  };
  AbstractDecoder.prototype.h35 = function (descriptor, index) {
    return this.t34();
  };
  AbstractDecoder.prototype.i35 = function (descriptor, index) {
    return this.u34();
  };
  AbstractDecoder.prototype.j35 = function (descriptor, index) {
    return this.v34();
  };
  AbstractDecoder.prototype.k35 = function (descriptor, index) {
    return this.w34();
  };
  AbstractDecoder.prototype.l35 = function (descriptor, index) {
    return this.x34();
  };
  AbstractDecoder.prototype.m35 = function (descriptor, index) {
    return this.y34();
  };
  AbstractDecoder.prototype.n35 = function (descriptor, index, deserializer, previousValue) {
    return this.b35(deserializer, previousValue);
  };
  AbstractDecoder.$metadata$ = classMeta('AbstractDecoder', [Decoder, CompositeDecoder]);
  function AbstractEncoder() {
  }
  AbstractEncoder.prototype.d35 = function (descriptor) {
    return this;
  };
  AbstractEncoder.prototype.e35 = function (descriptor) {
  };
  AbstractEncoder.prototype.t35 = function (descriptor, index) {
    return true;
  };
  AbstractEncoder.prototype.u35 = function (value) {
    throw SerializationException_init_$Create$('Non-serializable ' + getKClassFromExpression(value) + ' is not supported by ' + getKClassFromExpression(this) + ' encoder');
  };
  AbstractEncoder.prototype.v35 = function () {
    throw SerializationException_init_$Create$("'null' is not supported by default");
  };
  AbstractEncoder.prototype.w35 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.x35 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.y35 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.z35 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.a36 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.b36 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.c36 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.d36 = function (value) {
    return this.u35(new Char(value));
  };
  AbstractEncoder.prototype.e36 = function (value) {
    return this.u35(value);
  };
  AbstractEncoder.prototype.f36 = function (inlineDescriptor) {
    return this;
  };
  AbstractEncoder.prototype.g36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.w35(value);
  };
  AbstractEncoder.prototype.h36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.x35(value);
  };
  AbstractEncoder.prototype.i36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.y35(value);
  };
  AbstractEncoder.prototype.j36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.z35(value);
  };
  AbstractEncoder.prototype.k36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.a36(value);
  };
  AbstractEncoder.prototype.l36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.b36(value);
  };
  AbstractEncoder.prototype.m36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.c36(value);
  };
  AbstractEncoder.prototype.n36 = function (descriptor, index, value) {
    if (this.t35(descriptor, index))
      this.d36(value);
  };
  AbstractEncoder.prototype.o36 = function (descriptor, index, serializer, value) {
    if (this.t35(descriptor, index))
      this.p36(serializer, value);
  };
  AbstractEncoder.$metadata$ = classMeta('AbstractEncoder', [Encoder, CompositeEncoder]);
  function Decoder() {
  }
  Decoder.$metadata$ = interfaceMeta('Decoder');
  function Companion() {
    Companion_instance = this;
    this.s36_1 = -1;
    this.t36_1 = -3;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function CompositeDecoder() {
  }
  CompositeDecoder.$metadata$ = interfaceMeta('CompositeDecoder');
  function Encoder() {
  }
  Encoder.$metadata$ = interfaceMeta('Encoder');
  function CompositeEncoder() {
  }
  CompositeEncoder.$metadata$ = interfaceMeta('CompositeEncoder');
  function AbstractPolymorphicSerializer() {
  }
  AbstractPolymorphicSerializer.prototype.u36 = function (decoder, klassName) {
    return decoder.p35().v36(this.e33(), klassName);
  };
  AbstractPolymorphicSerializer.prototype.d33 = function (encoder, value) {
    return encoder.p35().w36(this.e33(), value);
  };
  AbstractPolymorphicSerializer.$metadata$ = classMeta('AbstractPolymorphicSerializer', [KSerializer]);
  function throwSubtypeNotRegistered(subClass, baseClass) {
    var tmp0_elvis_lhs = subClass.hd();
    throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? '' + subClass : tmp0_elvis_lhs, baseClass);
  }
  function throwSubtypeNotRegistered_0(subClassName, baseClass) {
    var scope = "in the scope of '" + baseClass.hd() + "'";
    throw SerializationException_init_$Create$(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
  }
  function CachedNames() {
  }
  CachedNames.$metadata$ = interfaceMeta('CachedNames');
  function PrimitiveArrayDescriptor(primitive) {
    ListLikeDescriptor.call(this, primitive);
    this.z36_1 = primitive.h33() + 'Array';
  }
  PrimitiveArrayDescriptor.prototype.h33 = function () {
    return this.z36_1;
  };
  PrimitiveArrayDescriptor.$metadata$ = classMeta('PrimitiveArrayDescriptor', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function ListLikeDescriptor(elementDescriptor) {
    this.a37_1 = elementDescriptor;
    this.b37_1 = 1;
  }
  ListLikeDescriptor.prototype.i33 = function () {
    return LIST_getInstance();
  };
  ListLikeDescriptor.prototype.k33 = function () {
    return this.b37_1;
  };
  ListLikeDescriptor.prototype.l33 = function (index) {
    return index.toString();
  };
  ListLikeDescriptor.prototype.m33 = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ListLikeDescriptor.prototype.n33 = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.h33() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    return this.a37_1;
  };
  ListLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if (equals(this.a37_1, other.a37_1) ? this.h33() === other.h33() : false)
      return true;
    return false;
  };
  ListLikeDescriptor.prototype.hashCode = function () {
    return imul(hashCode(this.a37_1), 31) + getStringHashCode(this.h33()) | 0;
  };
  ListLikeDescriptor.prototype.toString = function () {
    return this.h33() + '(' + this.a37_1 + ')';
  };
  ListLikeDescriptor.$metadata$ = classMeta('ListLikeDescriptor', [SerialDescriptor]);
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayListClassDesc.prototype.h33 = function () {
    return 'kotlin.collections.ArrayList';
  };
  ArrayListClassDesc.$metadata$ = classMeta('ArrayListClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function LinkedHashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  LinkedHashSetClassDesc.prototype.h33 = function () {
    return 'kotlin.collections.LinkedHashSet';
  };
  LinkedHashSetClassDesc.$metadata$ = classMeta('LinkedHashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
  LinkedHashMapClassDesc.$metadata$ = classMeta('LinkedHashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function HashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  HashSetClassDesc.prototype.h33 = function () {
    return 'kotlin.collections.HashSet';
  };
  HashSetClassDesc.$metadata$ = classMeta('HashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
  }
  HashMapClassDesc.$metadata$ = classMeta('HashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
    this.g37_1 = serialName;
    this.h37_1 = keyDescriptor;
    this.i37_1 = valueDescriptor;
    this.j37_1 = 2;
  }
  MapLikeDescriptor.prototype.h33 = function () {
    return this.g37_1;
  };
  MapLikeDescriptor.prototype.i33 = function () {
    return MAP_getInstance();
  };
  MapLikeDescriptor.prototype.k33 = function () {
    return this.j37_1;
  };
  MapLikeDescriptor.prototype.l33 = function (index) {
    return index.toString();
  };
  MapLikeDescriptor.prototype.m33 = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.n33 = function (index) {
    {
      var tmp0_require = index >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Illegal index ' + index + ', ' + this.h33() + ' expects only non-negative indices';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var tmp0_subject = index % 2 | 0;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = this.h37_1;
        break;
      case 1:
        tmp = this.i37_1;
        break;
      default:
        throw IllegalStateException_init_$Create$('Unreached');
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    if (!(this.h33() === other.h33()))
      return false;
    if (!equals(this.h37_1, other.h37_1))
      return false;
    if (!equals(this.i37_1, other.i37_1))
      return false;
    return true;
  };
  MapLikeDescriptor.prototype.hashCode = function () {
    var result = getStringHashCode(this.h33());
    result = imul(31, result) + hashCode(this.h37_1) | 0;
    result = imul(31, result) + hashCode(this.i37_1) | 0;
    return result;
  };
  MapLikeDescriptor.prototype.toString = function () {
    return this.h33() + '(' + this.h37_1 + ', ' + this.i37_1 + ')';
  };
  MapLikeDescriptor.$metadata$ = classMeta('MapLikeDescriptor', [SerialDescriptor]);
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayClassDesc.prototype.h33 = function () {
    return 'kotlin.Array';
  };
  ArrayClassDesc.$metadata$ = classMeta('ArrayClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function PrimitiveArraySerializer(primitiveSerializer) {
    ListLikeSerializer.call(this, primitiveSerializer);
    this.p37_1 = new PrimitiveArrayDescriptor(primitiveSerializer.a33());
  }
  PrimitiveArraySerializer.prototype.a33 = function () {
    return this.p37_1;
  };
  PrimitiveArraySerializer.prototype.q37 = function (_this__u8e3s4) {
    return _this__u8e3s4.r37();
  };
  PrimitiveArraySerializer.prototype.s37 = function (_this__u8e3s4) {
    return _this__u8e3s4.o16();
  };
  PrimitiveArraySerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return _this__u8e3s4.ya(size);
  };
  PrimitiveArraySerializer.prototype.u37 = function (_this__u8e3s4) {
    {
      throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use writeContents instead');
    }
  };
  PrimitiveArraySerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.u37((_this__u8e3s4 == null ? true : isObject(_this__u8e3s4)) ? _this__u8e3s4 : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.w37 = function (_this__u8e3s4, index, element) {
    {
      throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use Builder.append instead');
    }
  };
  PrimitiveArraySerializer.prototype.x37 = function () {
    return this.z37(this.y37());
  };
  PrimitiveArraySerializer.prototype.d38 = function (encoder, value) {
    var size = this.e38(value);
    var composite = encoder.r36(this.p37_1, size);
    this.c38(composite, value, size);
    composite.e35(this.p37_1);
  };
  PrimitiveArraySerializer.prototype.b33 = function (encoder, value) {
    return this.d38(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.f38 = function (encoder, value) {
    return this.d38(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.c33 = function (decoder) {
    return this.g38(decoder, null);
  };
  PrimitiveArraySerializer.$metadata$ = classMeta('PrimitiveArraySerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function PrimitiveArrayBuilder() {
  }
  PrimitiveArrayBuilder.prototype.j38 = function (requiredCapacity, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      requiredCapacity = this.r37() + 1 | 0;
    return $handler == null ? this.ya(requiredCapacity) : $handler(requiredCapacity);
  };
  PrimitiveArrayBuilder.$metadata$ = classMeta('PrimitiveArrayBuilder');
  function ListLikeSerializer(elementSerializer) {
    AbstractCollectionSerializer.call(this);
    this.h38_1 = elementSerializer;
  }
  ListLikeSerializer.prototype.f38 = function (encoder, value) {
    var size = this.e38(value);
    var composite = encoder.r36(this.a33(), size);
    var iterator = this.v37(value);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        composite.o36(this.a33(), index, this.h38_1, iterator.f());
      }
       while (inductionVariable < size);
    composite.e35(this.a33());
  };
  ListLikeSerializer.prototype.b33 = function (encoder, value) {
    return this.f38(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  ListLikeSerializer.prototype.i38 = function (decoder, builder, startIndex, size) {
    {
      var tmp0_require = size >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.a38(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size);
  };
  ListLikeSerializer.prototype.a38 = function (decoder, index, builder, checkIndex) {
    var tmp = this.a33();
    this.w37(builder, index, decoder.o35(tmp, index, this.h38_1, null, 8, null));
  };
  ListLikeSerializer.$metadata$ = classMeta('ListLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function readSize($this, decoder, builder) {
    var size = decoder.s35($this.a33());
    $this.t37(builder, size);
    return size;
  }
  function AbstractCollectionSerializer() {
  }
  AbstractCollectionSerializer.prototype.g38 = function (decoder, previous) {
    var tmp0_safe_receiver = previous;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.z37(tmp0_safe_receiver);
    var builder = tmp1_elvis_lhs == null ? this.x37() : tmp1_elvis_lhs;
    var startIndex = this.q37(builder);
    var compositeDecoder = decoder.d35(this.a33());
    if (compositeDecoder.q35()) {
      this.i38(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$loop: while (true) {
        var index = compositeDecoder.r35(this.a33());
        Companion_getInstance_1();
        if (index === -1)
          break $l$loop;
        var tmp = startIndex + index | 0;
        this.b38(compositeDecoder, tmp, builder, false, 8, null);
      }
    }
    compositeDecoder.e35(this.a33());
    return this.s37(builder);
  };
  AbstractCollectionSerializer.prototype.c33 = function (decoder) {
    return this.g38(decoder, null);
  };
  AbstractCollectionSerializer.prototype.b38 = function (decoder, index, builder, checkIndex, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      checkIndex = true;
    return $handler == null ? this.a38(decoder, index, builder, checkIndex) : $handler(decoder, index, builder, checkIndex);
  };
  AbstractCollectionSerializer.$metadata$ = classMeta('AbstractCollectionSerializer', [KSerializer]);
  function ArrayListSerializer(element) {
    ListLikeSerializer.call(this, element);
    this.l38_1 = new ArrayListClassDesc(element.a33());
  }
  ArrayListSerializer.prototype.a33 = function () {
    return this.l38_1;
  };
  ArrayListSerializer.prototype.m38 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  ArrayListSerializer.prototype.e38 = function (_this__u8e3s4) {
    return this.m38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.n38 = function (_this__u8e3s4) {
    return _this__u8e3s4.d();
  };
  ArrayListSerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.n38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.x37 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    return tmp$ret$0;
  };
  ArrayListSerializer.prototype.o38 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  ArrayListSerializer.prototype.q37 = function (_this__u8e3s4) {
    return this.o38(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.p38 = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  ArrayListSerializer.prototype.s37 = function (_this__u8e3s4) {
    return this.p38(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.q38 = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  ArrayListSerializer.prototype.z37 = function (_this__u8e3s4) {
    return this.q38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.r38 = function (_this__u8e3s4, size) {
    return _this__u8e3s4.ya(size);
  };
  ArrayListSerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return this.r38(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ArrayListSerializer.prototype.s38 = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.fa(index, element);
  };
  ArrayListSerializer.prototype.w37 = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.s38(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ArrayListSerializer.$metadata$ = classMeta('ArrayListSerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function LinkedHashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.u38_1 = new LinkedHashSetClassDesc(eSerializer.a33());
  }
  LinkedHashSetSerializer.prototype.a33 = function () {
    return this.u38_1;
  };
  LinkedHashSetSerializer.prototype.v38 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  LinkedHashSetSerializer.prototype.e38 = function (_this__u8e3s4) {
    return this.v38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.w38 = function (_this__u8e3s4) {
    return _this__u8e3s4.d();
  };
  LinkedHashSetSerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.w38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.x37 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = LinkedHashSet_init_$Create$();
    }
    return tmp$ret$0;
  };
  LinkedHashSetSerializer.prototype.x38 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  LinkedHashSetSerializer.prototype.q37 = function (_this__u8e3s4) {
    return this.x38(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.y38 = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashSetSerializer.prototype.s37 = function (_this__u8e3s4) {
    return this.y38(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.z38 = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashSetSerializer.prototype.z37 = function (_this__u8e3s4) {
    return this.z38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.a39 = function (_this__u8e3s4, size) {
  };
  LinkedHashSetSerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return this.a39(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashSetSerializer.prototype.b39 = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.a(element);
  };
  LinkedHashSetSerializer.prototype.w37 = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE();
    return this.b39(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  LinkedHashSetSerializer.$metadata$ = classMeta('LinkedHashSetSerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function LinkedHashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.e39_1 = new LinkedHashMapClassDesc(kSerializer.a33(), vSerializer.a33());
  }
  LinkedHashMapSerializer.prototype.a33 = function () {
    return this.e39_1;
  };
  LinkedHashMapSerializer.prototype.f39 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  LinkedHashMapSerializer.prototype.e38 = function (_this__u8e3s4) {
    return this.f39((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.g39 = function (_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.r().d();
    }
    return tmp$ret$0;
  };
  LinkedHashMapSerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.g39((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.x37 = function () {
    return LinkedHashMap_init_$Create$();
  };
  LinkedHashMapSerializer.prototype.h39 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  LinkedHashMapSerializer.prototype.q37 = function (_this__u8e3s4) {
    return this.h39(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.i39 = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashMapSerializer.prototype.s37 = function (_this__u8e3s4) {
    return this.i39(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.j39 = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashMapSerializer.prototype.z37 = function (_this__u8e3s4) {
    return this.j39((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.k39 = function (_this__u8e3s4, size) {
  };
  LinkedHashMapSerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return this.k39(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashMapSerializer.$metadata$ = classMeta('LinkedHashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function HashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.q39_1 = new HashSetClassDesc(eSerializer.a33());
  }
  HashSetSerializer.prototype.a33 = function () {
    return this.q39_1;
  };
  HashSetSerializer.prototype.v38 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  HashSetSerializer.prototype.e38 = function (_this__u8e3s4) {
    return this.v38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.w38 = function (_this__u8e3s4) {
    return _this__u8e3s4.d();
  };
  HashSetSerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.w38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.x37 = function () {
    return HashSet_init_$Create$();
  };
  HashSetSerializer.prototype.r39 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  HashSetSerializer.prototype.q37 = function (_this__u8e3s4) {
    return this.r39(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.s39 = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashSetSerializer.prototype.s37 = function (_this__u8e3s4) {
    return this.s39(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.z38 = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashSetSerializer.prototype.z37 = function (_this__u8e3s4) {
    return this.z38((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.t39 = function (_this__u8e3s4, size) {
  };
  HashSetSerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return this.t39(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashSetSerializer.prototype.u39 = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.a(element);
  };
  HashSetSerializer.prototype.w37 = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE();
    return this.u39(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  HashSetSerializer.$metadata$ = classMeta('HashSetSerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function HashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.x39_1 = new HashMapClassDesc(kSerializer.a33(), vSerializer.a33());
  }
  HashMapSerializer.prototype.a33 = function () {
    return this.x39_1;
  };
  HashMapSerializer.prototype.f39 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  HashMapSerializer.prototype.e38 = function (_this__u8e3s4) {
    return this.f39((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.g39 = function (_this__u8e3s4) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _this__u8e3s4.r().d();
    }
    return tmp$ret$0;
  };
  HashMapSerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.g39((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.x37 = function () {
    return HashMap_init_$Create$();
  };
  HashMapSerializer.prototype.y39 = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  HashMapSerializer.prototype.q37 = function (_this__u8e3s4) {
    return this.y39(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.z39 = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashMapSerializer.prototype.s37 = function (_this__u8e3s4) {
    return this.z39(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.j39 = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashMapSerializer.prototype.z37 = function (_this__u8e3s4) {
    return this.j39((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.a3a = function (_this__u8e3s4, size) {
  };
  HashMapSerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return this.a3a(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashMapSerializer.$metadata$ = classMeta('HashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function MapLikeSerializer(keySerializer, valueSerializer) {
    AbstractCollectionSerializer.call(this);
    this.l39_1 = keySerializer;
    this.m39_1 = valueSerializer;
  }
  MapLikeSerializer.prototype.n39 = function () {
    return this.l39_1;
  };
  MapLikeSerializer.prototype.o39 = function () {
    return this.m39_1;
  };
  MapLikeSerializer.prototype.i38 = function (decoder, builder, startIndex, size) {
    {
      var tmp0_require = size >= 0;
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    var progression = step(until(0, imul(size, 2)), 2);
    var inductionVariable = progression.z_1;
    var last = progression.a1_1;
    var step_0 = progression.b1_1;
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.a38(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last));
  };
  MapLikeSerializer.prototype.a38 = function (decoder, index, builder, checkIndex) {
    var tmp = this.a33();
    var key = decoder.o35(tmp, index, this.l39_1, null, 8, null);
    var tmp_0;
    if (checkIndex) {
      var tmp$ret$1;
      {
        var tmp0_also = decoder.r35(this.a33());
        {
        }
        {
          {
            var tmp0_require = tmp0_also === (index + 1 | 0);
            {
            }
            if (!tmp0_require) {
              var tmp$ret$0;
              {
                tmp$ret$0 = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + tmp0_also;
              }
              var message = tmp$ret$0;
              throw IllegalArgumentException_init_$Create$(toString(message));
            }
          }
        }
        tmp$ret$1 = tmp0_also;
      }
      tmp_0 = tmp$ret$1;
    } else {
      tmp_0 = index + 1 | 0;
    }
    var vIndex = tmp_0;
    var tmp_1;
    var tmp_2;
    if (builder.c2(key)) {
      var tmp_3 = this.m39_1.a33().i33();
      tmp_2 = !(tmp_3 instanceof PrimitiveKind);
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = decoder.n35(this.a33(), vIndex, this.m39_1, getValue(builder, key));
    } else {
      var tmp_4 = this.a33();
      tmp_1 = decoder.o35(tmp_4, vIndex, this.m39_1, null, 8, null);
    }
    var value = tmp_1;
    {
      builder.c(key, value);
    }
  };
  MapLikeSerializer.prototype.f38 = function (encoder, value) {
    var size = this.e38(value);
    var composite = encoder.r36(this.a33(), size);
    var iterator = this.v37(value);
    var index = 0;
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = iterator;
      }
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = element.s();
          }
          var k = tmp$ret$1;
          var tmp$ret$2;
          {
            tmp$ret$2 = element.t();
          }
          var v = tmp$ret$2;
          var tmp = this.a33();
          var tmp0 = index;
          index = tmp0 + 1 | 0;
          composite.o36(tmp, tmp0, this.l39_1, k);
          var tmp_0 = this.a33();
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          composite.o36(tmp_0, tmp1, this.m39_1, v);
        }
      }
    }
    composite.e35(this.a33());
  };
  MapLikeSerializer.prototype.b33 = function (encoder, value) {
    return this.f38(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  MapLikeSerializer.$metadata$ = classMeta('MapLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function ReferenceArraySerializer(kClass, eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.c3a_1 = kClass;
    this.d3a_1 = new ArrayClassDesc(eSerializer.a33());
  }
  ReferenceArraySerializer.prototype.a33 = function () {
    return this.d3a_1;
  };
  ReferenceArraySerializer.prototype.e3a = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ReferenceArraySerializer.prototype.e38 = function (_this__u8e3s4) {
    return this.e3a((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.f3a = function (_this__u8e3s4) {
    return arrayIterator(_this__u8e3s4);
  };
  ReferenceArraySerializer.prototype.v37 = function (_this__u8e3s4) {
    return this.f3a((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.x37 = function () {
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    return tmp$ret$0;
  };
  ReferenceArraySerializer.prototype.g3a = function (_this__u8e3s4) {
    return _this__u8e3s4.g();
  };
  ReferenceArraySerializer.prototype.q37 = function (_this__u8e3s4) {
    return this.g3a(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.h3a = function (_this__u8e3s4) {
    return toNativeArrayImpl(_this__u8e3s4, this.c3a_1);
  };
  ReferenceArraySerializer.prototype.s37 = function (_this__u8e3s4) {
    return this.h3a(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.i3a = function (_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asList(_this__u8e3s4));
  };
  ReferenceArraySerializer.prototype.z37 = function (_this__u8e3s4) {
    return this.i3a((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.j3a = function (_this__u8e3s4, size) {
    return _this__u8e3s4.ya(size);
  };
  ReferenceArraySerializer.prototype.t37 = function (_this__u8e3s4, size) {
    return this.j3a(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ReferenceArraySerializer.prototype.k3a = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.fa(index, element);
  };
  ReferenceArraySerializer.prototype.w37 = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.k3a(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ReferenceArraySerializer.$metadata$ = classMeta('ReferenceArraySerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function InlinePrimitiveDescriptor(name, primitiveSerializer) {
    return new InlineClassDescriptor(name, new InlinePrimitiveDescriptor$1(primitiveSerializer));
  }
  function InlineClassDescriptor(name, generatedSerializer) {
    PluginGeneratedSerialDescriptor.call(this, name, generatedSerializer, 1);
    this.x3a_1 = true;
  }
  InlineClassDescriptor.prototype.j33 = function () {
    return this.x3a_1;
  };
  InlineClassDescriptor.prototype.hashCode = function () {
    return imul(PluginGeneratedSerialDescriptor.prototype.hashCode.call(this), 31);
  };
  InlineClassDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof InlineClassDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.h33() === other.h33())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = tmp0__anonymous__q1qw7t.x3a_1 ? contentEquals(this.k3b(), tmp0__anonymous__q1qw7t.k3b()) : false;
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.k33() === other.k33())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.k33();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.n33(index).h33() === other.n33(index).h33())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.n33(index).i33(), other.n33(index).i33())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  InlineClassDescriptor.$metadata$ = classMeta('InlineClassDescriptor', undefined, undefined, undefined, undefined, PluginGeneratedSerialDescriptor.prototype);
  function InlinePrimitiveDescriptor$1($primitiveSerializer) {
    this.l3b_1 = $primitiveSerializer;
  }
  InlinePrimitiveDescriptor$1.prototype.m3b = function () {
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = [this.l3b_1];
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  };
  InlinePrimitiveDescriptor$1.prototype.a33 = function () {
    {
      throw IllegalStateException_init_$Create$('unsupported');
    }
  };
  InlinePrimitiveDescriptor$1.prototype.b33 = function (encoder, value) {
    {
      throw IllegalStateException_init_$Create$('unsupported');
    }
  };
  InlinePrimitiveDescriptor$1.prototype.c33 = function (decoder) {
    {
      throw IllegalStateException_init_$Create$('unsupported');
    }
  };
  InlinePrimitiveDescriptor$1.$metadata$ = classMeta(undefined, [GeneratedSerializer]);
  function UIntSerializer() {
    UIntSerializer_instance = this;
    this.o3b_1 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_7(IntCompanionObject_getInstance()));
  }
  UIntSerializer.prototype.a33 = function () {
    return this.o3b_1;
  };
  UIntSerializer.prototype.p3b = function (encoder, value) {
    var tmp0_safe_receiver = encoder.f36(this.o3b_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
      }
      tmp0_safe_receiver.z35(tmp$ret$0);
    }
  };
  UIntSerializer.prototype.b33 = function (encoder, value) {
    return this.p3b(encoder, value instanceof UInt ? value.z6_1 : THROW_CCE());
  };
  UIntSerializer.prototype.q3b = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toUInt = decoder.a35(this.o3b_1).u34();
      tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
    }
    return tmp$ret$0;
  };
  UIntSerializer.prototype.c33 = function (decoder) {
    return new UInt(this.q3b(decoder));
  };
  UIntSerializer.$metadata$ = objectMeta('UIntSerializer', [KSerializer]);
  var UIntSerializer_instance;
  function UIntSerializer_getInstance() {
    if (UIntSerializer_instance == null)
      new UIntSerializer();
    return UIntSerializer_instance;
  }
  function ULongSerializer() {
    ULongSerializer_instance = this;
    this.r3b_1 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_6(Companion_getInstance()));
  }
  ULongSerializer.prototype.a33 = function () {
    return this.r3b_1;
  };
  ULongSerializer.prototype.s3b = function (encoder, value) {
    var tmp0_safe_receiver = encoder.f36(this.r3b_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
      }
      tmp0_safe_receiver.a36(tmp$ret$0);
    }
  };
  ULongSerializer.prototype.b33 = function (encoder, value) {
    return this.s3b(encoder, value instanceof ULong ? value.h7_1 : THROW_CCE());
  };
  ULongSerializer.prototype.t3b = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toULong = decoder.a35(this.r3b_1).v34();
      tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
    }
    return tmp$ret$0;
  };
  ULongSerializer.prototype.c33 = function (decoder) {
    return new ULong(this.t3b(decoder));
  };
  ULongSerializer.$metadata$ = objectMeta('ULongSerializer', [KSerializer]);
  var ULongSerializer_instance;
  function ULongSerializer_getInstance() {
    if (ULongSerializer_instance == null)
      new ULongSerializer();
    return ULongSerializer_instance;
  }
  function UByteSerializer() {
    UByteSerializer_instance = this;
    this.u3b_1 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_9(ByteCompanionObject_getInstance()));
  }
  UByteSerializer.prototype.a33 = function () {
    return this.u3b_1;
  };
  UByteSerializer.prototype.v3b = function (encoder, value) {
    var tmp0_safe_receiver = encoder.f36(this.u3b_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UByte___get_data__impl__jof9qr(value);
      }
      tmp0_safe_receiver.x35(tmp$ret$0);
    }
  };
  UByteSerializer.prototype.b33 = function (encoder, value) {
    return this.v3b(encoder, value instanceof UByte ? value.s6_1 : THROW_CCE());
  };
  UByteSerializer.prototype.w3b = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toUByte = decoder.a35(this.u3b_1).s34();
      tmp$ret$0 = _UByte___init__impl__g9hnc4(tmp0_toUByte);
    }
    return tmp$ret$0;
  };
  UByteSerializer.prototype.c33 = function (decoder) {
    return new UByte(this.w3b(decoder));
  };
  UByteSerializer.$metadata$ = objectMeta('UByteSerializer', [KSerializer]);
  var UByteSerializer_instance;
  function UByteSerializer_getInstance() {
    if (UByteSerializer_instance == null)
      new UByteSerializer();
    return UByteSerializer_instance;
  }
  function UShortSerializer() {
    UShortSerializer_instance = this;
    this.x3b_1 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_8(ShortCompanionObject_getInstance()));
  }
  UShortSerializer.prototype.a33 = function () {
    return this.x3b_1;
  };
  UShortSerializer.prototype.y3b = function (encoder, value) {
    var tmp0_safe_receiver = encoder.f36(this.x3b_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        tmp$ret$0 = _UShort___get_data__impl__g0245(value);
      }
      tmp0_safe_receiver.y35(tmp$ret$0);
    }
  };
  UShortSerializer.prototype.b33 = function (encoder, value) {
    return this.y3b(encoder, value instanceof UShort ? value.n7_1 : THROW_CCE());
  };
  UShortSerializer.prototype.z3b = function (decoder) {
    var tmp$ret$0;
    {
      var tmp0_toUShort = decoder.a35(this.x3b_1).t34();
      tmp$ret$0 = _UShort___init__impl__jigrne(tmp0_toUShort);
    }
    return tmp$ret$0;
  };
  UShortSerializer.prototype.c33 = function (decoder) {
    return new UShort(this.z3b(decoder));
  };
  UShortSerializer.$metadata$ = objectMeta('UShortSerializer', [KSerializer]);
  var UShortSerializer_instance;
  function UShortSerializer_getInstance() {
    if (UShortSerializer_instance == null)
      new UShortSerializer();
    return UShortSerializer_instance;
  }
  function jsonCachedSerialNames(_this__u8e3s4) {
    return cachedSerialNames(_this__u8e3s4);
  }
  function NullableSerializer(serializer) {
    this.a3c_1 = serializer;
    this.b3c_1 = new SerialDescriptorForNullable(this.a3c_1.a33());
  }
  NullableSerializer.prototype.a33 = function () {
    return this.b3c_1;
  };
  NullableSerializer.prototype.c3c = function (encoder, value) {
    if (!(value == null)) {
      encoder.q36();
      encoder.p36(this.a3c_1, value);
    } else {
      encoder.v35();
    }
  };
  NullableSerializer.prototype.b33 = function (encoder, value) {
    return this.c3c(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  NullableSerializer.prototype.c33 = function (decoder) {
    return decoder.p34() ? decoder.c35(this.a3c_1) : decoder.q34();
  };
  NullableSerializer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof NullableSerializer)
      other;
    else
      THROW_CCE();
    if (!equals(this.a3c_1, other.a3c_1))
      return false;
    return true;
  };
  NullableSerializer.prototype.hashCode = function () {
    return hashCode(this.a3c_1);
  };
  NullableSerializer.$metadata$ = classMeta('NullableSerializer', [KSerializer]);
  function SerialDescriptorForNullable(original) {
    this.d3c_1 = original;
    this.e3c_1 = this.d3c_1.h33() + '?';
    this.f3c_1 = cachedSerialNames(this.d3c_1);
  }
  SerialDescriptorForNullable.prototype.n33 = function (index) {
    return this.d3c_1.n33(index);
  };
  SerialDescriptorForNullable.prototype.m33 = function (name) {
    return this.d3c_1.m33(name);
  };
  SerialDescriptorForNullable.prototype.l33 = function (index) {
    return this.d3c_1.l33(index);
  };
  SerialDescriptorForNullable.prototype.k33 = function () {
    return this.d3c_1.k33();
  };
  SerialDescriptorForNullable.prototype.j33 = function () {
    return this.d3c_1.j33();
  };
  SerialDescriptorForNullable.prototype.i33 = function () {
    return this.d3c_1.i33();
  };
  SerialDescriptorForNullable.prototype.h33 = function () {
    return this.e3c_1;
  };
  SerialDescriptorForNullable.prototype.n34 = function () {
    return this.f3c_1;
  };
  SerialDescriptorForNullable.prototype.g33 = function () {
    return true;
  };
  SerialDescriptorForNullable.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!equals(this.d3c_1, other.d3c_1))
      return false;
    return true;
  };
  SerialDescriptorForNullable.prototype.toString = function () {
    return '' + this.d3c_1 + '?';
  };
  SerialDescriptorForNullable.prototype.hashCode = function () {
    return imul(hashCode(this.d3c_1), 31);
  };
  SerialDescriptorForNullable.$metadata$ = classMeta('SerialDescriptorForNullable', [SerialDescriptor, CachedNames]);
  function ObjectSerializer(serialName, objectInstance) {
    this.g3c_1 = objectInstance;
    var tmp = this;
    var tmp_0 = OBJECT_getInstance();
    tmp.h3c_1 = buildSerialDescriptor$default(serialName, tmp_0, [], null, 12, null);
  }
  ObjectSerializer.prototype.a33 = function () {
    return this.h3c_1;
  };
  ObjectSerializer.prototype.b33 = function (encoder, value) {
    encoder.d35(this.h3c_1).e35(this.h3c_1);
  };
  ObjectSerializer.prototype.c33 = function (decoder) {
    decoder.d35(this.h3c_1).e35(this.h3c_1);
    return this.g3c_1;
  };
  ObjectSerializer.$metadata$ = classMeta('ObjectSerializer', [KSerializer]);
  function get_EMPTY_DESCRIPTOR_ARRAY() {
    init_properties_Platform_common_kt_9ujmfm();
    return EMPTY_DESCRIPTOR_ARRAY;
  }
  var EMPTY_DESCRIPTOR_ARRAY;
  function cast(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function compactArray(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    {
      {
      }
      var tmp;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          {
          }
          tmp$ret$0 = _this__u8e3s4 == null ? true : _this__u8e3s4.m();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      if (!tmp$ret$1) {
        tmp = _this__u8e3s4;
      } else {
        tmp = null;
      }
      tmp$ret$2 = tmp;
    }
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$3;
      {
        tmp$ret$3 = copyToArray(tmp0_safe_receiver);
      }
      tmp_0 = tmp$ret$3;
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
  }
  function elementsHashCodeBy(_this__u8e3s4, selector) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    {
      var accumulator = 1;
      var tmp0_iterator = _this__u8e3s4.d();
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        var tmp$ret$1;
        {
          var tmp0__anonymous__q1qw7t = accumulator;
          var tmp = imul(31, tmp0__anonymous__q1qw7t);
          var tmp$ret$0;
          {
            var tmp0_hashCode = selector(element);
            var tmp0_safe_receiver = tmp0_hashCode;
            var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
            tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
          }
          tmp$ret$1 = tmp + tmp$ret$0 | 0;
        }
        accumulator = tmp$ret$1;
      }
      tmp$ret$2 = accumulator;
    }
    return tmp$ret$2;
  }
  function serializerNotRegistered(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    throw SerializationException_init_$Create$("Serializer for class '" + _this__u8e3s4.hd() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.');
  }
  function kclass(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var t = _this__u8e3s4.qd();
    var tmp;
    if (!(t == null) ? isInterface(t, KClass) : false) {
      tmp = t;
    } else {
      var tmp0_error = 'Only KClass supported as classifier, got ' + t;
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
    var tmp_0 = tmp;
    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
  }
  function cachedSerialNames(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    if (isInterface(_this__u8e3s4, CachedNames))
      return _this__u8e3s4.n34();
    var result = HashSet_init_$Create$_1(_this__u8e3s4.k33());
    var inductionVariable = 0;
    var last = _this__u8e3s4.k33();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_plusAssign = _this__u8e3s4.l33(i);
          result.a(tmp0_plusAssign);
        }
      }
       while (inductionVariable < last);
    return result;
  }
  var properties_initialized_Platform_common_kt_i7q4ty;
  function init_properties_Platform_common_kt_9ujmfm() {
    if (properties_initialized_Platform_common_kt_i7q4ty) {
    } else {
      properties_initialized_Platform_common_kt_i7q4ty = true;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      EMPTY_DESCRIPTOR_ARRAY = tmp$ret$2;
    }
  }
  function hashCodeImpl(_this__u8e3s4, typeParams) {
    var result = getStringHashCode(_this__u8e3s4.h33());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
    var tmp$ret$4;
    {
      var tmp$ret$3;
      {
        var accumulator = 1;
        var tmp0_iterator = elementDescriptors.d();
        while (tmp0_iterator.e()) {
          var element = tmp0_iterator.f();
          var tmp$ret$2;
          {
            var tmp0__anonymous__q1qw7t = accumulator;
            var tmp = imul(31, tmp0__anonymous__q1qw7t);
            var tmp$ret$1;
            {
              var tmp$ret$0;
              {
                tmp$ret$0 = element.h33();
              }
              var tmp0_hashCode = tmp$ret$0;
              var tmp0_safe_receiver = tmp0_hashCode;
              var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
              tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
            }
            tmp$ret$2 = tmp + tmp$ret$1 | 0;
          }
          accumulator = tmp$ret$2;
        }
        tmp$ret$3 = accumulator;
      }
      tmp$ret$4 = tmp$ret$3;
    }
    var namesHash = tmp$ret$4;
    var tmp$ret$9;
    {
      var tmp$ret$8;
      {
        var accumulator_0 = 1;
        var tmp0_iterator_0 = elementDescriptors.d();
        while (tmp0_iterator_0.e()) {
          var element_0 = tmp0_iterator_0.f();
          var tmp$ret$7;
          {
            var tmp0__anonymous__q1qw7t_0 = accumulator_0;
            var tmp_0 = imul(31, tmp0__anonymous__q1qw7t_0);
            var tmp$ret$6;
            {
              var tmp$ret$5;
              {
                tmp$ret$5 = element_0.i33();
              }
              var tmp0_hashCode_0 = tmp$ret$5;
              var tmp0_safe_receiver_0 = tmp0_hashCode_0;
              var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
              tmp$ret$6 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
            }
            tmp$ret$7 = tmp_0 + tmp$ret$6 | 0;
          }
          accumulator_0 = tmp$ret$7;
        }
        tmp$ret$8 = accumulator_0;
      }
      tmp$ret$9 = tmp$ret$8;
    }
    var kindHash = tmp$ret$9;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function _get_indices__xyiwmu($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = indices$factory();
      tmp$ret$0 = $this.g3b_1.t();
    }
    return tmp$ret$0;
  }
  function _get_childSerializers__7vnyfa($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = childSerializers$factory();
      tmp$ret$0 = $this.h3b_1.t();
    }
    return tmp$ret$0;
  }
  function _get__hashCode__tgwhef_0($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = _hashCode$factory_0();
      tmp$ret$0 = $this.j3b_1.t();
    }
    return tmp$ret$0;
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = $this.c3b_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        {
          var tmp0_set = $this.c3b_1[i];
          indices.c(tmp0_set, i);
        }
      }
       while (inductionVariable <= last);
    return indices;
  }
  function PluginGeneratedSerialDescriptor$indices$delegate$lambda(this$0) {
    return function () {
      return buildIndices(this$0);
    };
  }
  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.z3a_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m3b();
      var tmp;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        {
          tmp$ret$0 = [];
        }
        tmp = tmp$ret$0;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      return tmp;
    };
  }
  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.z3a_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n3b();
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        {
          var tmp$ret$1;
          {
            var tmp0_mapTo = ArrayList_init_$Create$(tmp1_safe_receiver.length);
            var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
            while (tmp0_iterator.e()) {
              var item = tmp0_iterator.f();
              var tmp$ret$0;
              {
                tmp$ret$0 = item.a33();
              }
              tmp0_mapTo.a(tmp$ret$0);
            }
            tmp$ret$1 = tmp0_mapTo;
          }
          tmp$ret$2 = tmp$ret$1;
        }
        tmp = tmp$ret$2;
      }
      return compactArray(tmp);
    };
  }
  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.k3b());
    };
  }
  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
    return function (it) {
      return it.s() + ': ' + this$0.n33(it.t()).h33();
    };
  }
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    this.y3a_1 = serialName;
    this.z3a_1 = generatedSerializer;
    this.a3b_1 = elementsCount;
    this.b3b_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.a3b_1;
    var tmp$ret$0;
    {
      tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    }
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      {
        tmp$ret$1 = '[UNINITIALIZED]';
      }
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.c3b_1 = tmp_2;
    var tmp_4 = this;
    var tmp$ret$2;
    {
      var tmp0_arrayOfNulls = this.a3b_1;
      tmp$ret$2 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    tmp_4.d3b_1 = tmp$ret$2;
    this.e3b_1 = null;
    this.f3b_1 = booleanArray(this.a3b_1);
    var tmp_5 = this;
    tmp_5.g3b_1 = lazy(PluginGeneratedSerialDescriptor$indices$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.h3b_1 = lazy(PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_7 = this;
    tmp_7.i3b_1 = lazy(PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_8 = this;
    tmp_8.j3b_1 = lazy(PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  PluginGeneratedSerialDescriptor.prototype.h33 = function () {
    return this.y3a_1;
  };
  PluginGeneratedSerialDescriptor.prototype.k33 = function () {
    return this.a3b_1;
  };
  PluginGeneratedSerialDescriptor.prototype.i33 = function () {
    return CLASS_getInstance();
  };
  PluginGeneratedSerialDescriptor.prototype.n34 = function () {
    return _get_indices__xyiwmu(this).j2();
  };
  PluginGeneratedSerialDescriptor.prototype.k3b = function () {
    var tmp$ret$0;
    {
      var tmp0_getValue = typeParameterDescriptors$factory();
      tmp$ret$0 = this.i3b_1.t();
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.n33 = function (index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).a33();
  };
  PluginGeneratedSerialDescriptor.prototype.l33 = function (index) {
    return getChecked(this.c3b_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.m33 = function (name) {
    var tmp0_elvis_lhs = _get_indices__xyiwmu(this).i2(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_1();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PluginGeneratedSerialDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.h33() === other.h33())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      {
        var tmp0__anonymous__q1qw7t = other;
        tmp$ret$1 = contentEquals(this.k3b(), tmp0__anonymous__q1qw7t.k3b());
      }
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.k33() === other.k33())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.k33();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.n33(index).h33() === other.n33(index).h33())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.n33(index).i33(), other.n33(index).i33())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.hashCode = function () {
    return _get__hashCode__tgwhef_0(this);
  };
  PluginGeneratedSerialDescriptor.prototype.toString = function () {
    var tmp = _get_indices__xyiwmu(this).r();
    var tmp_0 = this.h33() + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, PluginGeneratedSerialDescriptor$toString$lambda(this), 24, null);
  };
  PluginGeneratedSerialDescriptor.$metadata$ = classMeta('PluginGeneratedSerialDescriptor', [SerialDescriptor, CachedNames]);
  function indices$factory() {
    return getPropertyCallableRef('indices', 1, KProperty1, function (receiver) {
      return _get_indices__xyiwmu(receiver);
    }, null);
  }
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers__7vnyfa(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver.k3b();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef_0(receiver);
    }, null);
  }
  function get_EMPTY_SERIALIZER_ARRAY() {
    init_properties_PluginHelperInterfaces_kt_tblf27();
    return EMPTY_SERIALIZER_ARRAY;
  }
  var EMPTY_SERIALIZER_ARRAY;
  function SerializerFactory() {
  }
  SerializerFactory.$metadata$ = interfaceMeta('SerializerFactory');
  function GeneratedSerializer() {
  }
  GeneratedSerializer.$metadata$ = interfaceMeta('GeneratedSerializer', [KSerializer]);
  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
  function init_properties_PluginHelperInterfaces_kt_tblf27() {
    if (properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
    } else {
      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            tmp$ret$0 = [];
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      EMPTY_SERIALIZER_ARRAY = tmp$ret$2;
    }
  }
  function CharArraySerializer_0() {
    CharArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_3(Companion_getInstance_0()));
  }
  CharArraySerializer_0.prototype.l3c = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  CharArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.l3c((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.m3c = function (_this__u8e3s4) {
    return new CharArrayBuilder(_this__u8e3s4);
  };
  CharArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.m3c((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.y37 = function () {
    return charArray(0);
  };
  CharArraySerializer_0.prototype.n3c = function (decoder, index, builder, checkIndex) {
    builder.q3c(decoder.m35(this.a33(), index));
  };
  CharArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.n3c(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  CharArraySerializer_0.prototype.r3c = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.n36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  CharArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.r3c(encoder, (!(content == null) ? isCharArray(content) : false) ? content : THROW_CCE(), size);
  };
  CharArraySerializer_0.$metadata$ = objectMeta('CharArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var CharArraySerializer_instance;
  function CharArraySerializer_getInstance() {
    if (CharArraySerializer_instance == null)
      new CharArraySerializer_0();
    return CharArraySerializer_instance;
  }
  function DoubleArraySerializer_0() {
    DoubleArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_4(DoubleCompanionObject_getInstance()));
  }
  DoubleArraySerializer_0.prototype.u3c = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  DoubleArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.u3c((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.v3c = function (_this__u8e3s4) {
    return new DoubleArrayBuilder(_this__u8e3s4);
  };
  DoubleArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.v3c((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.y37 = function () {
    return new Float64Array(0);
  };
  DoubleArraySerializer_0.prototype.w3c = function (decoder, index, builder, checkIndex) {
    builder.z3c(decoder.l35(this.a33(), index));
  };
  DoubleArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.w3c(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  DoubleArraySerializer_0.prototype.a3d = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.m36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  DoubleArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.a3d(encoder, (!(content == null) ? isDoubleArray(content) : false) ? content : THROW_CCE(), size);
  };
  DoubleArraySerializer_0.$metadata$ = objectMeta('DoubleArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var DoubleArraySerializer_instance;
  function DoubleArraySerializer_getInstance() {
    if (DoubleArraySerializer_instance == null)
      new DoubleArraySerializer_0();
    return DoubleArraySerializer_instance;
  }
  function FloatArraySerializer_0() {
    FloatArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_5(FloatCompanionObject_getInstance()));
  }
  FloatArraySerializer_0.prototype.d3d = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  FloatArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.d3d((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.e3d = function (_this__u8e3s4) {
    return new FloatArrayBuilder(_this__u8e3s4);
  };
  FloatArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.e3d((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.y37 = function () {
    return new Float32Array(0);
  };
  FloatArraySerializer_0.prototype.f3d = function (decoder, index, builder, checkIndex) {
    builder.i3d(decoder.k35(this.a33(), index));
  };
  FloatArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.f3d(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  FloatArraySerializer_0.prototype.j3d = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.l36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  FloatArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.j3d(encoder, (!(content == null) ? isFloatArray(content) : false) ? content : THROW_CCE(), size);
  };
  FloatArraySerializer_0.$metadata$ = objectMeta('FloatArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var FloatArraySerializer_instance;
  function FloatArraySerializer_getInstance() {
    if (FloatArraySerializer_instance == null)
      new FloatArraySerializer_0();
    return FloatArraySerializer_instance;
  }
  function LongArraySerializer_0() {
    LongArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_6(Companion_getInstance()));
  }
  LongArraySerializer_0.prototype.m3d = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  LongArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.m3d((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.n3d = function (_this__u8e3s4) {
    return new LongArrayBuilder(_this__u8e3s4);
  };
  LongArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.n3d((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.y37 = function () {
    return longArray(0);
  };
  LongArraySerializer_0.prototype.o3d = function (decoder, index, builder, checkIndex) {
    builder.r3d(decoder.j35(this.a33(), index));
  };
  LongArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.o3d(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  LongArraySerializer_0.prototype.s3d = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.k36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  LongArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.s3d(encoder, (!(content == null) ? isLongArray(content) : false) ? content : THROW_CCE(), size);
  };
  LongArraySerializer_0.$metadata$ = objectMeta('LongArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var LongArraySerializer_instance;
  function LongArraySerializer_getInstance() {
    if (LongArraySerializer_instance == null)
      new LongArraySerializer_0();
    return LongArraySerializer_instance;
  }
  function IntArraySerializer_0() {
    IntArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_7(IntCompanionObject_getInstance()));
  }
  IntArraySerializer_0.prototype.v3d = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  IntArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.v3d((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.w3d = function (_this__u8e3s4) {
    return new IntArrayBuilder(_this__u8e3s4);
  };
  IntArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.w3d((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.y37 = function () {
    return new Int32Array(0);
  };
  IntArraySerializer_0.prototype.x3d = function (decoder, index, builder, checkIndex) {
    builder.a3e(decoder.i35(this.a33(), index));
  };
  IntArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.x3d(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  IntArraySerializer_0.prototype.b3e = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.j36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  IntArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.b3e(encoder, (!(content == null) ? isIntArray(content) : false) ? content : THROW_CCE(), size);
  };
  IntArraySerializer_0.$metadata$ = objectMeta('IntArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var IntArraySerializer_instance;
  function IntArraySerializer_getInstance() {
    if (IntArraySerializer_instance == null)
      new IntArraySerializer_0();
    return IntArraySerializer_instance;
  }
  function ShortArraySerializer_0() {
    ShortArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_8(ShortCompanionObject_getInstance()));
  }
  ShortArraySerializer_0.prototype.e3e = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ShortArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.e3e((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.f3e = function (_this__u8e3s4) {
    return new ShortArrayBuilder(_this__u8e3s4);
  };
  ShortArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.f3e((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.y37 = function () {
    return new Int16Array(0);
  };
  ShortArraySerializer_0.prototype.g3e = function (decoder, index, builder, checkIndex) {
    builder.j3e(decoder.h35(this.a33(), index));
  };
  ShortArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.g3e(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ShortArraySerializer_0.prototype.k3e = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.i36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  ShortArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.k3e(encoder, (!(content == null) ? isShortArray(content) : false) ? content : THROW_CCE(), size);
  };
  ShortArraySerializer_0.$metadata$ = objectMeta('ShortArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ShortArraySerializer_instance;
  function ShortArraySerializer_getInstance() {
    if (ShortArraySerializer_instance == null)
      new ShortArraySerializer_0();
    return ShortArraySerializer_instance;
  }
  function ByteArraySerializer_0() {
    ByteArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_9(ByteCompanionObject_getInstance()));
  }
  ByteArraySerializer_0.prototype.n3e = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ByteArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.n3e((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.o3e = function (_this__u8e3s4) {
    return new ByteArrayBuilder(_this__u8e3s4);
  };
  ByteArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.o3e((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.y37 = function () {
    return new Int8Array(0);
  };
  ByteArraySerializer_0.prototype.p3e = function (decoder, index, builder, checkIndex) {
    builder.s3e(decoder.g35(this.a33(), index));
  };
  ByteArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.p3e(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ByteArraySerializer_0.prototype.t3e = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.h36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  ByteArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.t3e(encoder, (!(content == null) ? isByteArray(content) : false) ? content : THROW_CCE(), size);
  };
  ByteArraySerializer_0.$metadata$ = objectMeta('ByteArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ByteArraySerializer_instance;
  function ByteArraySerializer_getInstance() {
    if (ByteArraySerializer_instance == null)
      new ByteArraySerializer_0();
    return ByteArraySerializer_instance;
  }
  function BooleanArraySerializer_0() {
    BooleanArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_10(BooleanCompanionObject_getInstance()));
  }
  BooleanArraySerializer_0.prototype.w3e = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  BooleanArraySerializer_0.prototype.e38 = function (_this__u8e3s4) {
    return this.w3e((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.x3e = function (_this__u8e3s4) {
    return new BooleanArrayBuilder(_this__u8e3s4);
  };
  BooleanArraySerializer_0.prototype.z37 = function (_this__u8e3s4) {
    return this.x3e((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.y37 = function () {
    return booleanArray(0);
  };
  BooleanArraySerializer_0.prototype.y3e = function (decoder, index, builder, checkIndex) {
    builder.b3f(decoder.f35(this.a33(), index));
  };
  BooleanArraySerializer_0.prototype.a38 = function (decoder, index, builder, checkIndex) {
    return this.y3e(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  BooleanArraySerializer_0.prototype.c3f = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.g36(this.a33(), i, content[i]);
      }
       while (inductionVariable < size);
  };
  BooleanArraySerializer_0.prototype.c38 = function (encoder, content, size) {
    return this.c3f(encoder, (!(content == null) ? isBooleanArray(content) : false) ? content : THROW_CCE(), size);
  };
  BooleanArraySerializer_0.$metadata$ = objectMeta('BooleanArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var BooleanArraySerializer_instance;
  function BooleanArraySerializer_getInstance() {
    if (BooleanArraySerializer_instance == null)
      new BooleanArraySerializer_0();
    return BooleanArraySerializer_instance;
  }
  function CharArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.o3c_1 = bufferWithData;
    this.p3c_1 = bufferWithData.length;
    this.ya(10);
  }
  CharArrayBuilder.prototype.r37 = function () {
    return this.p3c_1;
  };
  CharArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.o3c_1.length < requiredCapacity)
      this.o3c_1 = copyOf(this.o3c_1, coerceAtLeast(requiredCapacity, imul(this.o3c_1.length, 2)));
  };
  CharArrayBuilder.prototype.q3c = function (c) {
    this.j38(0, 1, null);
    var tmp = this.o3c_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.p3c_1;
    tmp0_this.p3c_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  CharArrayBuilder.prototype.o16 = function () {
    return copyOf(this.o3c_1, this.p3c_1);
  };
  CharArrayBuilder.$metadata$ = classMeta('CharArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function DoubleArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.x3c_1 = bufferWithData;
    this.y3c_1 = bufferWithData.length;
    this.ya(10);
  }
  DoubleArrayBuilder.prototype.r37 = function () {
    return this.y3c_1;
  };
  DoubleArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.x3c_1.length < requiredCapacity)
      this.x3c_1 = copyOf_0(this.x3c_1, coerceAtLeast(requiredCapacity, imul(this.x3c_1.length, 2)));
  };
  DoubleArrayBuilder.prototype.z3c = function (c) {
    this.j38(0, 1, null);
    var tmp = this.x3c_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.y3c_1;
    tmp0_this.y3c_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  DoubleArrayBuilder.prototype.o16 = function () {
    return copyOf_0(this.x3c_1, this.y3c_1);
  };
  DoubleArrayBuilder.$metadata$ = classMeta('DoubleArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function FloatArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.g3d_1 = bufferWithData;
    this.h3d_1 = bufferWithData.length;
    this.ya(10);
  }
  FloatArrayBuilder.prototype.r37 = function () {
    return this.h3d_1;
  };
  FloatArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.g3d_1.length < requiredCapacity)
      this.g3d_1 = copyOf_1(this.g3d_1, coerceAtLeast(requiredCapacity, imul(this.g3d_1.length, 2)));
  };
  FloatArrayBuilder.prototype.i3d = function (c) {
    this.j38(0, 1, null);
    var tmp = this.g3d_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.h3d_1;
    tmp0_this.h3d_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  FloatArrayBuilder.prototype.o16 = function () {
    return copyOf_1(this.g3d_1, this.h3d_1);
  };
  FloatArrayBuilder.$metadata$ = classMeta('FloatArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function LongArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.p3d_1 = bufferWithData;
    this.q3d_1 = bufferWithData.length;
    this.ya(10);
  }
  LongArrayBuilder.prototype.r37 = function () {
    return this.q3d_1;
  };
  LongArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.p3d_1.length < requiredCapacity)
      this.p3d_1 = copyOf_2(this.p3d_1, coerceAtLeast(requiredCapacity, imul(this.p3d_1.length, 2)));
  };
  LongArrayBuilder.prototype.r3d = function (c) {
    this.j38(0, 1, null);
    var tmp = this.p3d_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.q3d_1;
    tmp0_this.q3d_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  LongArrayBuilder.prototype.o16 = function () {
    return copyOf_2(this.p3d_1, this.q3d_1);
  };
  LongArrayBuilder.$metadata$ = classMeta('LongArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function IntArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.y3d_1 = bufferWithData;
    this.z3d_1 = bufferWithData.length;
    this.ya(10);
  }
  IntArrayBuilder.prototype.r37 = function () {
    return this.z3d_1;
  };
  IntArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.y3d_1.length < requiredCapacity)
      this.y3d_1 = copyOf_3(this.y3d_1, coerceAtLeast(requiredCapacity, imul(this.y3d_1.length, 2)));
  };
  IntArrayBuilder.prototype.a3e = function (c) {
    this.j38(0, 1, null);
    var tmp = this.y3d_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.z3d_1;
    tmp0_this.z3d_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  IntArrayBuilder.prototype.o16 = function () {
    return copyOf_3(this.y3d_1, this.z3d_1);
  };
  IntArrayBuilder.$metadata$ = classMeta('IntArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ShortArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.h3e_1 = bufferWithData;
    this.i3e_1 = bufferWithData.length;
    this.ya(10);
  }
  ShortArrayBuilder.prototype.r37 = function () {
    return this.i3e_1;
  };
  ShortArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.h3e_1.length < requiredCapacity)
      this.h3e_1 = copyOf_4(this.h3e_1, coerceAtLeast(requiredCapacity, imul(this.h3e_1.length, 2)));
  };
  ShortArrayBuilder.prototype.j3e = function (c) {
    this.j38(0, 1, null);
    var tmp = this.h3e_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.i3e_1;
    tmp0_this.i3e_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ShortArrayBuilder.prototype.o16 = function () {
    return copyOf_4(this.h3e_1, this.i3e_1);
  };
  ShortArrayBuilder.$metadata$ = classMeta('ShortArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ByteArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.q3e_1 = bufferWithData;
    this.r3e_1 = bufferWithData.length;
    this.ya(10);
  }
  ByteArrayBuilder.prototype.r37 = function () {
    return this.r3e_1;
  };
  ByteArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.q3e_1.length < requiredCapacity)
      this.q3e_1 = copyOf_5(this.q3e_1, coerceAtLeast(requiredCapacity, imul(this.q3e_1.length, 2)));
  };
  ByteArrayBuilder.prototype.s3e = function (c) {
    this.j38(0, 1, null);
    var tmp = this.q3e_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.r3e_1;
    tmp0_this.r3e_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ByteArrayBuilder.prototype.o16 = function () {
    return copyOf_5(this.q3e_1, this.r3e_1);
  };
  ByteArrayBuilder.$metadata$ = classMeta('ByteArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function BooleanArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.z3e_1 = bufferWithData;
    this.a3f_1 = bufferWithData.length;
    this.ya(10);
  }
  BooleanArrayBuilder.prototype.r37 = function () {
    return this.a3f_1;
  };
  BooleanArrayBuilder.prototype.ya = function (requiredCapacity) {
    if (this.z3e_1.length < requiredCapacity)
      this.z3e_1 = copyOf_6(this.z3e_1, coerceAtLeast(requiredCapacity, imul(this.z3e_1.length, 2)));
  };
  BooleanArrayBuilder.prototype.b3f = function (c) {
    this.j38(0, 1, null);
    var tmp = this.z3e_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.a3f_1;
    tmp0_this.a3f_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  BooleanArrayBuilder.prototype.o16 = function () {
    return copyOf_6(this.z3e_1, this.a3f_1);
  };
  BooleanArrayBuilder.$metadata$ = classMeta('BooleanArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function get_BUILTIN_SERIALIZERS() {
    init_properties_Primitives_kt_u7dn2q();
    return BUILTIN_SERIALIZERS;
  }
  var BUILTIN_SERIALIZERS;
  function StringSerializer() {
    StringSerializer_instance = this;
    this.d3f_1 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
  }
  StringSerializer.prototype.a33 = function () {
    return this.d3f_1;
  };
  StringSerializer.prototype.e3f = function (encoder, value) {
    return encoder.e36(value);
  };
  StringSerializer.prototype.b33 = function (encoder, value) {
    return this.e3f(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : THROW_CCE());
  };
  StringSerializer.prototype.c33 = function (decoder) {
    return decoder.z34();
  };
  StringSerializer.$metadata$ = objectMeta('StringSerializer', [KSerializer]);
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function CharSerializer() {
    CharSerializer_instance = this;
    this.f3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
  }
  CharSerializer.prototype.a33 = function () {
    return this.f3f_1;
  };
  CharSerializer.prototype.g3f = function (encoder, value) {
    return encoder.d36(value);
  };
  CharSerializer.prototype.b33 = function (encoder, value) {
    return this.g3f(encoder, value instanceof Char ? value.i1_1 : THROW_CCE());
  };
  CharSerializer.prototype.h3f = function (decoder) {
    return decoder.y34();
  };
  CharSerializer.prototype.c33 = function (decoder) {
    return new Char(this.h3f(decoder));
  };
  CharSerializer.$metadata$ = objectMeta('CharSerializer', [KSerializer]);
  var CharSerializer_instance;
  function CharSerializer_getInstance() {
    if (CharSerializer_instance == null)
      new CharSerializer();
    return CharSerializer_instance;
  }
  function DoubleSerializer() {
    DoubleSerializer_instance = this;
    this.i3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
  }
  DoubleSerializer.prototype.a33 = function () {
    return this.i3f_1;
  };
  DoubleSerializer.prototype.j3f = function (encoder, value) {
    return encoder.c36(value);
  };
  DoubleSerializer.prototype.b33 = function (encoder, value) {
    return this.j3f(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  DoubleSerializer.prototype.c33 = function (decoder) {
    return decoder.x34();
  };
  DoubleSerializer.$metadata$ = objectMeta('DoubleSerializer', [KSerializer]);
  var DoubleSerializer_instance;
  function DoubleSerializer_getInstance() {
    if (DoubleSerializer_instance == null)
      new DoubleSerializer();
    return DoubleSerializer_instance;
  }
  function FloatSerializer() {
    FloatSerializer_instance = this;
    this.k3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
  }
  FloatSerializer.prototype.a33 = function () {
    return this.k3f_1;
  };
  FloatSerializer.prototype.l3f = function (encoder, value) {
    return encoder.b36(value);
  };
  FloatSerializer.prototype.b33 = function (encoder, value) {
    return this.l3f(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  FloatSerializer.prototype.c33 = function (decoder) {
    return decoder.w34();
  };
  FloatSerializer.$metadata$ = objectMeta('FloatSerializer', [KSerializer]);
  var FloatSerializer_instance;
  function FloatSerializer_getInstance() {
    if (FloatSerializer_instance == null)
      new FloatSerializer();
    return FloatSerializer_instance;
  }
  function LongSerializer() {
    LongSerializer_instance = this;
    this.m3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
  }
  LongSerializer.prototype.a33 = function () {
    return this.m3f_1;
  };
  LongSerializer.prototype.n3f = function (encoder, value) {
    return encoder.a36(value);
  };
  LongSerializer.prototype.b33 = function (encoder, value) {
    return this.n3f(encoder, value instanceof Long ? value : THROW_CCE());
  };
  LongSerializer.prototype.c33 = function (decoder) {
    return decoder.v34();
  };
  LongSerializer.$metadata$ = objectMeta('LongSerializer', [KSerializer]);
  var LongSerializer_instance;
  function LongSerializer_getInstance() {
    if (LongSerializer_instance == null)
      new LongSerializer();
    return LongSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this.o3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
  }
  IntSerializer.prototype.a33 = function () {
    return this.o3f_1;
  };
  IntSerializer.prototype.p3f = function (encoder, value) {
    return encoder.z35(value);
  };
  IntSerializer.prototype.b33 = function (encoder, value) {
    return this.p3f(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  IntSerializer.prototype.c33 = function (decoder) {
    return decoder.u34();
  };
  IntSerializer.$metadata$ = objectMeta('IntSerializer', [KSerializer]);
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function ShortSerializer() {
    ShortSerializer_instance = this;
    this.q3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
  }
  ShortSerializer.prototype.a33 = function () {
    return this.q3f_1;
  };
  ShortSerializer.prototype.r3f = function (encoder, value) {
    return encoder.y35(value);
  };
  ShortSerializer.prototype.b33 = function (encoder, value) {
    return this.r3f(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ShortSerializer.prototype.c33 = function (decoder) {
    return decoder.t34();
  };
  ShortSerializer.$metadata$ = objectMeta('ShortSerializer', [KSerializer]);
  var ShortSerializer_instance;
  function ShortSerializer_getInstance() {
    if (ShortSerializer_instance == null)
      new ShortSerializer();
    return ShortSerializer_instance;
  }
  function ByteSerializer() {
    ByteSerializer_instance = this;
    this.s3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
  }
  ByteSerializer.prototype.a33 = function () {
    return this.s3f_1;
  };
  ByteSerializer.prototype.t3f = function (encoder, value) {
    return encoder.x35(value);
  };
  ByteSerializer.prototype.b33 = function (encoder, value) {
    return this.t3f(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ByteSerializer.prototype.c33 = function (decoder) {
    return decoder.s34();
  };
  ByteSerializer.$metadata$ = objectMeta('ByteSerializer', [KSerializer]);
  var ByteSerializer_instance;
  function ByteSerializer_getInstance() {
    if (ByteSerializer_instance == null)
      new ByteSerializer();
    return ByteSerializer_instance;
  }
  function BooleanSerializer() {
    BooleanSerializer_instance = this;
    this.u3f_1 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
  }
  BooleanSerializer.prototype.a33 = function () {
    return this.u3f_1;
  };
  BooleanSerializer.prototype.v3f = function (encoder, value) {
    return encoder.w35(value);
  };
  BooleanSerializer.prototype.b33 = function (encoder, value) {
    return this.v3f(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
  };
  BooleanSerializer.prototype.c33 = function (decoder) {
    return decoder.r34();
  };
  BooleanSerializer.$metadata$ = objectMeta('BooleanSerializer', [KSerializer]);
  var BooleanSerializer_instance;
  function BooleanSerializer_getInstance() {
    if (BooleanSerializer_instance == null)
      new BooleanSerializer();
    return BooleanSerializer_instance;
  }
  function UnitSerializer() {
    UnitSerializer_instance = this;
    this.w3f_1 = new ObjectSerializer('kotlin.Unit', Unit_getInstance());
  }
  UnitSerializer.prototype.x3f = function (decoder) {
    this.w3f_1.c33(decoder);
  };
  UnitSerializer.prototype.c33 = function (decoder) {
    this.x3f(decoder);
    return Unit_getInstance();
  };
  UnitSerializer.prototype.y3f = function (encoder, value) {
    this.w3f_1.b33(encoder, Unit_getInstance());
  };
  UnitSerializer.prototype.b33 = function (encoder, value) {
    return this.y3f(encoder, value instanceof Unit ? value : THROW_CCE());
  };
  UnitSerializer.prototype.a33 = function () {
    return this.w3f_1.h3c_1;
  };
  UnitSerializer.$metadata$ = objectMeta('UnitSerializer', [KSerializer]);
  var UnitSerializer_instance;
  function UnitSerializer_getInstance() {
    if (UnitSerializer_instance == null)
      new UnitSerializer();
    return UnitSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor_0(serialName, kind) {
    this.z3f_1 = serialName;
    this.a3g_1 = kind;
  }
  PrimitiveSerialDescriptor_0.prototype.h33 = function () {
    return this.z3f_1;
  };
  PrimitiveSerialDescriptor_0.prototype.i33 = function () {
    return this.a3g_1;
  };
  PrimitiveSerialDescriptor_0.prototype.k33 = function () {
    return 0;
  };
  PrimitiveSerialDescriptor_0.prototype.l33 = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.m33 = function (name) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.n33 = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.toString = function () {
    return 'PrimitiveDescriptor(' + this.z3f_1 + ')';
  };
  PrimitiveSerialDescriptor_0.$metadata$ = classMeta('PrimitiveSerialDescriptor', [SerialDescriptor]);
  function builtinSerializerOrNull(_this__u8e3s4) {
    init_properties_Primitives_kt_u7dn2q();
    var tmp = get_BUILTIN_SERIALIZERS().i2(_this__u8e3s4);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
  }
  function PrimitiveDescriptorSafe(serialName, kind) {
    init_properties_Primitives_kt_u7dn2q();
    checkName(serialName);
    return new PrimitiveSerialDescriptor_0(serialName, kind);
  }
  function checkName(serialName) {
    init_properties_Primitives_kt_u7dn2q();
    var keys = get_BUILTIN_SERIALIZERS().j2();
    var tmp0_iterator = keys.d();
    while (tmp0_iterator.e()) {
      var primitive = tmp0_iterator.f();
      var simpleName = capitalize(ensureNotNull(primitive.hd()));
      var qualifiedName = 'kotlin.' + simpleName;
      if (equals_0(serialName, qualifiedName, true) ? true : equals_0(serialName, simpleName, true)) {
        throw IllegalArgumentException_init_$Create$(trimIndent('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
      }
    }
  }
  var properties_initialized_Primitives_kt_6dpii6;
  function init_properties_Primitives_kt_u7dn2q() {
    if (properties_initialized_Primitives_kt_6dpii6) {
    } else {
      properties_initialized_Primitives_kt_6dpii6 = true;
      BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance().af(), serializer_2(StringCompanionObject_getInstance())), to(getKClass(Char), serializer_3(Companion_getInstance_0())), to(PrimitiveClasses_getInstance().df(), CharArraySerializer()), to(PrimitiveClasses_getInstance().ye(), serializer_4(DoubleCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().jf(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance().xe(), serializer_5(FloatCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().if(), FloatArraySerializer()), to(getKClass(Long), serializer_6(Companion_getInstance())), to(PrimitiveClasses_getInstance().hf(), LongArraySerializer()), to(PrimitiveClasses_getInstance().we(), serializer_7(IntCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().gf(), IntArraySerializer()), to(PrimitiveClasses_getInstance().ve(), serializer_8(ShortCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ff(), ShortArraySerializer()), to(PrimitiveClasses_getInstance().ue(), serializer_9(ByteCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ef(), ByteArraySerializer()), to(PrimitiveClasses_getInstance().te(), serializer_10(BooleanCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().cf(), BooleanArraySerializer()), to(getKClass(Unit), serializer_11(Unit_getInstance()))]);
    }
  }
  function NamedValueDecoder() {
    TaggedDecoder.call(this);
  }
  NamedValueDecoder.prototype.d3g = function (_this__u8e3s4, index) {
    return this.f3g(this.e3g(_this__u8e3s4, index));
  };
  NamedValueDecoder.prototype.f3g = function (nestedName) {
    var tmp0_elvis_lhs = this.i3g();
    return this.j3g(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  NamedValueDecoder.prototype.e3g = function (desc, index) {
    return desc.l33(index);
  };
  NamedValueDecoder.prototype.j3g = function (parentName, childName) {
    var tmp;
    var tmp$ret$0;
    {
      tmp$ret$0 = charSequenceLength(parentName) === 0;
    }
    if (tmp$ret$0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  NamedValueDecoder.$metadata$ = classMeta('NamedValueDecoder', undefined, undefined, undefined, undefined, TaggedDecoder.prototype);
  function tagBlock($this, tag, block) {
    $this.w3g(tag);
    var r = block();
    if (!$this.h3g_1) {
      $this.x3g();
    }
    $this.h3g_1 = false;
    return r;
  }
  function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
    return function () {
      return this$0.b35($deserializer, $previousValue);
    };
  }
  function TaggedDecoder() {
    var tmp = this;
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$_0();
    }
    tmp.g3g_1 = tmp$ret$0;
    this.h3g_1 = false;
  }
  TaggedDecoder.prototype.p35 = function () {
    return get_EmptySerializersModule();
  };
  TaggedDecoder.prototype.k3g = function (tag) {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  TaggedDecoder.prototype.l3g = function (tag) {
    return true;
  };
  TaggedDecoder.prototype.m3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.n3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.o3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.p3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.q3g = function (tag) {
    var tmp = this.k3g(tag);
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.r3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.s3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.t3g = function (tag) {
    var tmp = this.k3g(tag);
    return tmp instanceof Char ? tmp.i1_1 : THROW_CCE();
  };
  TaggedDecoder.prototype.u3g = function (tag) {
    var tmp = this.k3g(tag);
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.v3g = function (tag, inlineDescriptor) {
    var tmp$ret$0;
    {
      {
      }
      {
        this.w3g(tag);
      }
      tmp$ret$0 = this;
    }
    return tmp$ret$0;
  };
  TaggedDecoder.prototype.b35 = function (deserializer, previousValue) {
    return this.c35(deserializer);
  };
  TaggedDecoder.prototype.a35 = function (inlineDescriptor) {
    return this.v3g(this.x3g(), inlineDescriptor);
  };
  TaggedDecoder.prototype.p34 = function () {
    var tmp0_elvis_lhs = this.i3g();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.l3g(currentTag);
  };
  TaggedDecoder.prototype.q34 = function () {
    return null;
  };
  TaggedDecoder.prototype.r34 = function () {
    return this.m3g(this.x3g());
  };
  TaggedDecoder.prototype.s34 = function () {
    return this.n3g(this.x3g());
  };
  TaggedDecoder.prototype.t34 = function () {
    return this.o3g(this.x3g());
  };
  TaggedDecoder.prototype.u34 = function () {
    return this.p3g(this.x3g());
  };
  TaggedDecoder.prototype.v34 = function () {
    return this.q3g(this.x3g());
  };
  TaggedDecoder.prototype.w34 = function () {
    return this.r3g(this.x3g());
  };
  TaggedDecoder.prototype.x34 = function () {
    return this.s3g(this.x3g());
  };
  TaggedDecoder.prototype.y34 = function () {
    return this.t3g(this.x3g());
  };
  TaggedDecoder.prototype.z34 = function () {
    return this.u3g(this.x3g());
  };
  TaggedDecoder.prototype.d35 = function (descriptor) {
    return this;
  };
  TaggedDecoder.prototype.e35 = function (descriptor) {
  };
  TaggedDecoder.prototype.f35 = function (descriptor, index) {
    return this.m3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.g35 = function (descriptor, index) {
    return this.n3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.h35 = function (descriptor, index) {
    return this.o3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.i35 = function (descriptor, index) {
    return this.p3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.j35 = function (descriptor, index) {
    return this.q3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.k35 = function (descriptor, index) {
    return this.r3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.l35 = function (descriptor, index) {
    return this.s3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.m35 = function (descriptor, index) {
    return this.t3g(this.d3g(descriptor, index));
  };
  TaggedDecoder.prototype.n35 = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.d3g(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype.i3g = function () {
    return lastOrNull(this.g3g_1);
  };
  TaggedDecoder.prototype.w3g = function (name) {
    this.g3g_1.a(name);
  };
  TaggedDecoder.prototype.x3g = function () {
    var r = this.g3g_1.y9(get_lastIndex(this.g3g_1));
    this.h3g_1 = true;
    return r;
  };
  TaggedDecoder.$metadata$ = classMeta('TaggedDecoder', [Decoder, CompositeDecoder]);
  function get_NULL() {
    init_properties_Tuples_kt_v8bvox();
    return NULL;
  }
  var NULL;
  function MapEntry(key, value) {
    this.y3g_1 = key;
    this.z3g_1 = value;
  }
  MapEntry.prototype.s = function () {
    return this.y3g_1;
  };
  MapEntry.prototype.t = function () {
    return this.z3g_1;
  };
  MapEntry.prototype.toString = function () {
    return 'MapEntry(key=' + this.y3g_1 + ', value=' + this.z3g_1 + ')';
  };
  MapEntry.prototype.hashCode = function () {
    var result = this.y3g_1 == null ? 0 : hashCode(this.y3g_1);
    result = imul(result, 31) + (this.z3g_1 == null ? 0 : hashCode(this.z3g_1)) | 0;
    return result;
  };
  MapEntry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
    if (!equals(this.y3g_1, tmp0_other_with_cast.y3g_1))
      return false;
    if (!equals(this.z3g_1, tmp0_other_with_cast.z3g_1))
      return false;
    return true;
  };
  MapEntry.$metadata$ = classMeta('MapEntry', [Entry]);
  function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildSerialDescriptor) {
      var tmp = $keySerializer.a33();
      $this$buildSerialDescriptor.a34('key', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.a33();
      $this$buildSerialDescriptor.a34('value', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function MapEntrySerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    tmp.c3h_1 = buildSerialDescriptor$default('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer), 4, null);
  }
  MapEntrySerializer_0.prototype.a33 = function () {
    return this.c3h_1;
  };
  MapEntrySerializer_0.prototype.d3h = function (_this__u8e3s4) {
    return _this__u8e3s4.s();
  };
  MapEntrySerializer_0.prototype.e3h = function (_this__u8e3s4) {
    return this.d3h((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.f3h = function (_this__u8e3s4) {
    return _this__u8e3s4.t();
  };
  MapEntrySerializer_0.prototype.g3h = function (_this__u8e3s4) {
    return this.f3h((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.h3h = function (key, value) {
    return new MapEntry(key, value);
  };
  MapEntrySerializer_0.$metadata$ = classMeta('MapEntrySerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = $keySerializer.a33();
      $this$buildClassSerialDescriptor.a34('first', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.a33();
      $this$buildClassSerialDescriptor.a34('second', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function PairSerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    tmp.n3h_1 = buildClassSerialDescriptor$default('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer), 2, null);
  }
  PairSerializer_0.prototype.a33 = function () {
    return this.n3h_1;
  };
  PairSerializer_0.prototype.o3h = function (_this__u8e3s4) {
    return _this__u8e3s4.f3_1;
  };
  PairSerializer_0.prototype.e3h = function (_this__u8e3s4) {
    return this.o3h(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  PairSerializer_0.prototype.p3h = function (_this__u8e3s4) {
    return _this__u8e3s4.g3_1;
  };
  PairSerializer_0.prototype.g3h = function (_this__u8e3s4) {
    return this.p3h(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  PairSerializer_0.prototype.h3h = function (key, value) {
    return to(key, value);
  };
  PairSerializer_0.$metadata$ = classMeta('PairSerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function decodeSequentially_0($this, composite) {
    var a = composite.o35($this.t3h_1, 0, $this.q3h_1, null, 8, null);
    var b = composite.o35($this.t3h_1, 1, $this.r3h_1, null, 8, null);
    var c = composite.o35($this.t3h_1, 2, $this.s3h_1, null, 8, null);
    composite.e35($this.t3h_1);
    return new Triple(a, b, c);
  }
  function decodeStructure($this, composite) {
    var a = get_NULL();
    var b = get_NULL();
    var c = get_NULL();
    mainLoop: while (true) {
      var index = composite.r35($this.t3h_1);
      Companion_getInstance_1();
      if (index === -1) {
        break mainLoop;
      } else {
        if (index === 0) {
          a = composite.o35($this.t3h_1, 0, $this.q3h_1, null, 8, null);
        } else {
          if (index === 1) {
            b = composite.o35($this.t3h_1, 1, $this.r3h_1, null, 8, null);
          } else {
            if (index === 2) {
              c = composite.o35($this.t3h_1, 2, $this.s3h_1, null, 8, null);
            } else {
              throw SerializationException_init_$Create$('Unexpected index ' + index);
            }
          }
        }
      }
    }
    composite.e35($this.t3h_1);
    if (a === get_NULL())
      throw SerializationException_init_$Create$("Element 'first' is missing");
    if (b === get_NULL())
      throw SerializationException_init_$Create$("Element 'second' is missing");
    if (c === get_NULL())
      throw SerializationException_init_$Create$("Element 'third' is missing");
    var tmp = (a == null ? true : isObject(a)) ? a : THROW_CCE();
    var tmp_0 = (b == null ? true : isObject(b)) ? b : THROW_CCE();
    return new Triple(tmp, tmp_0, (c == null ? true : isObject(c)) ? c : THROW_CCE());
  }
  function TripleSerializer$descriptor$lambda(this$0) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = this$0.q3h_1.a33();
      $this$buildClassSerialDescriptor.a34('first', tmp, null, false, 12, null);
      var tmp_0 = this$0.r3h_1.a33();
      $this$buildClassSerialDescriptor.a34('second', tmp_0, null, false, 12, null);
      var tmp_1 = this$0.s3h_1.a33();
      $this$buildClassSerialDescriptor.a34('third', tmp_1, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
    this.q3h_1 = aSerializer;
    this.r3h_1 = bSerializer;
    this.s3h_1 = cSerializer;
    var tmp = this;
    tmp.t3h_1 = buildClassSerialDescriptor$default('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this), 2, null);
  }
  TripleSerializer_0.prototype.a33 = function () {
    return this.t3h_1;
  };
  TripleSerializer_0.prototype.u3h = function (encoder, value) {
    var structuredEncoder = encoder.d35(this.t3h_1);
    structuredEncoder.o36(this.t3h_1, 0, this.q3h_1, value.l6_1);
    structuredEncoder.o36(this.t3h_1, 1, this.r3h_1, value.m6_1);
    structuredEncoder.o36(this.t3h_1, 2, this.s3h_1, value.n6_1);
    structuredEncoder.e35(this.t3h_1);
  };
  TripleSerializer_0.prototype.b33 = function (encoder, value) {
    return this.u3h(encoder, value instanceof Triple ? value : THROW_CCE());
  };
  TripleSerializer_0.prototype.c33 = function (decoder) {
    var composite = decoder.d35(this.t3h_1);
    if (composite.q35()) {
      return decodeSequentially_0(this, composite);
    }
    return decodeStructure(this, composite);
  };
  TripleSerializer_0.$metadata$ = classMeta('TripleSerializer', [KSerializer]);
  function KeyValueSerializer(keySerializer, valueSerializer) {
    this.i3h_1 = keySerializer;
    this.j3h_1 = valueSerializer;
  }
  KeyValueSerializer.prototype.k3h = function (encoder, value) {
    var structuredEncoder = encoder.d35(this.a33());
    structuredEncoder.o36(this.a33(), 0, this.i3h_1, this.e3h(value));
    structuredEncoder.o36(this.a33(), 1, this.j3h_1, this.g3h(value));
    structuredEncoder.e35(this.a33());
  };
  KeyValueSerializer.prototype.b33 = function (encoder, value) {
    return this.k3h(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  KeyValueSerializer.prototype.c33 = function (decoder) {
    var composite = decoder.d35(this.a33());
    if (composite.q35()) {
      var tmp = this.a33();
      var key = composite.o35(tmp, 0, this.i3h_1, null, 8, null);
      var tmp_0 = this.a33();
      var value = composite.o35(tmp_0, 1, this.j3h_1, null, 8, null);
      return this.h3h(key, value);
    }
    var key_0 = get_NULL();
    var value_0 = get_NULL();
    mainLoop: while (true) {
      var idx = composite.r35(this.a33());
      Companion_getInstance_1();
      if (idx === -1) {
        break mainLoop;
      } else {
        if (idx === 0) {
          var tmp_1 = this.a33();
          key_0 = composite.o35(tmp_1, 0, this.i3h_1, null, 8, null);
        } else {
          if (idx === 1) {
            var tmp_2 = this.a33();
            value_0 = composite.o35(tmp_2, 1, this.j3h_1, null, 8, null);
          } else {
            throw SerializationException_init_$Create$('Invalid index: ' + idx);
          }
        }
      }
    }
    composite.e35(this.a33());
    if (key_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'key' is missing");
    if (value_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'value' is missing");
    var tmp_3 = (key_0 == null ? true : isObject(key_0)) ? key_0 : THROW_CCE();
    return this.h3h(tmp_3, (value_0 == null ? true : isObject(value_0)) ? value_0 : THROW_CCE());
  };
  KeyValueSerializer.$metadata$ = classMeta('KeyValueSerializer', [KSerializer]);
  var properties_initialized_Tuples_kt_3vs7ar;
  function init_properties_Tuples_kt_v8bvox() {
    if (properties_initialized_Tuples_kt_3vs7ar) {
    } else {
      properties_initialized_Tuples_kt_3vs7ar = true;
      NULL = new Object();
    }
  }
  function get_EmptySerializersModule() {
    init_properties_SerializersModule_kt_swldyf();
    return EmptySerializersModule;
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  SerializersModule.$metadata$ = classMeta('SerializersModule');
  function SerialModuleImpl(class2Serializer, polyBase2Serializers, polyBase2NamedSerializers, polyBase2DefaultProvider) {
    SerializersModule.call(this);
    this.w3h_1 = class2Serializer;
    this.x3h_1 = polyBase2Serializers;
    this.y3h_1 = polyBase2NamedSerializers;
    this.z3h_1 = polyBase2DefaultProvider;
  }
  SerialModuleImpl.prototype.w36 = function (baseClass, value) {
    if (!isInstanceOf(value, baseClass))
      return null;
    var tmp0_safe_receiver = this.x3h_1.i2(baseClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.i2(getKClassFromExpression(value));
    return (!(tmp == null) ? isInterface(tmp, SerializationStrategy) : false) ? tmp : null;
  };
  SerialModuleImpl.prototype.v36 = function (baseClass, serializedClassName) {
    var tmp0_safe_receiver = this.y3h_1.i2(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      {
        tmp$ret$0 = ((!(tmp0_safe_receiver == null) ? isInterface(tmp0_safe_receiver, Map) : false) ? tmp0_safe_receiver : THROW_CCE()).i2(serializedClassName);
      }
      tmp = tmp$ret$0;
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this.z3h_1.i2(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  };
  SerialModuleImpl.prototype.f33 = function (kclass) {
    var tmp = this.w3h_1.i2(kclass);
    return (!(tmp == null) ? isInterface(tmp, KSerializer) : false) ? tmp : null;
  };
  SerialModuleImpl.prototype.v3h = function (collector) {
    {
      var tmp0_forEach = this.w3h_1;
      var tmp$ret$0;
      {
        tmp$ret$0 = tmp0_forEach.r().d();
      }
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.e()) {
        var element = tmp0_iterator.f();
        {
          var tmp$ret$1;
          {
            tmp$ret$1 = element.s();
          }
          var kclass = tmp$ret$1;
          var tmp$ret$2;
          {
            tmp$ret$2 = element.t();
          }
          var serial = tmp$ret$2;
          var tmp = isInterface(kclass, KClass) ? kclass : THROW_CCE();
          var tmp$ret$3;
          {
            tmp$ret$3 = isInterface(serial, KSerializer) ? serial : THROW_CCE();
          }
          collector.a3i(tmp, tmp$ret$3);
        }
      }
    }
    {
      var tmp1_forEach = this.x3h_1;
      var tmp$ret$4;
      {
        tmp$ret$4 = tmp1_forEach.r().d();
      }
      var tmp0_iterator_0 = tmp$ret$4;
      while (tmp0_iterator_0.e()) {
        var element_0 = tmp0_iterator_0.f();
        {
          var tmp$ret$5;
          {
            tmp$ret$5 = element_0.s();
          }
          var baseClass = tmp$ret$5;
          var tmp$ret$6;
          {
            tmp$ret$6 = element_0.t();
          }
          var classMap = tmp$ret$6;
          {
            var tmp$ret$7;
            {
              tmp$ret$7 = classMap.r().d();
            }
            var tmp0_iterator_1 = tmp$ret$7;
            while (tmp0_iterator_1.e()) {
              var element_1 = tmp0_iterator_1.f();
              {
                var tmp$ret$8;
                {
                  tmp$ret$8 = element_1.s();
                }
                var actualClass = tmp$ret$8;
                var tmp$ret$9;
                {
                  tmp$ret$9 = element_1.t();
                }
                var serializer = tmp$ret$9;
                var tmp_0 = isInterface(baseClass, KClass) ? baseClass : THROW_CCE();
                var tmp_1 = isInterface(actualClass, KClass) ? actualClass : THROW_CCE();
                var tmp$ret$10;
                {
                  tmp$ret$10 = isInterface(serializer, KSerializer) ? serializer : THROW_CCE();
                }
                collector.b3i(tmp_0, tmp_1, tmp$ret$10);
              }
            }
          }
        }
      }
    }
    {
      var tmp2_forEach = this.z3h_1;
      var tmp$ret$11;
      {
        tmp$ret$11 = tmp2_forEach.r().d();
      }
      var tmp0_iterator_2 = tmp$ret$11;
      while (tmp0_iterator_2.e()) {
        var element_2 = tmp0_iterator_2.f();
        {
          var tmp$ret$12;
          {
            tmp$ret$12 = element_2.s();
          }
          var baseClass_0 = tmp$ret$12;
          var tmp$ret$13;
          {
            tmp$ret$13 = element_2.t();
          }
          var provider = tmp$ret$13;
          var tmp_2 = isInterface(baseClass_0, KClass) ? baseClass_0 : THROW_CCE();
          collector.c3i(tmp_2, typeof provider === 'function' ? provider : THROW_CCE());
        }
      }
    }
  };
  SerialModuleImpl.$metadata$ = classMeta('SerialModuleImpl', undefined, undefined, undefined, undefined, SerializersModule.prototype);
  var properties_initialized_SerializersModule_kt_fjigjn;
  function init_properties_SerializersModule_kt_swldyf() {
    if (properties_initialized_SerializersModule_kt_fjigjn) {
    } else {
      properties_initialized_SerializersModule_kt_fjigjn = true;
      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap());
    }
  }
  function SerializersModuleCollector() {
  }
  SerializersModuleCollector.$metadata$ = interfaceMeta('SerializersModuleCollector');
  function SerializableWith(serializer) {
    this.d3i_1 = serializer;
  }
  SerializableWith.prototype.equals = function (other) {
    if (!(other instanceof SerializableWith))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableWith ? other : THROW_CCE();
    if (!this.d3i_1.equals(tmp0_other_with_cast.d3i_1))
      return false;
    return true;
  };
  SerializableWith.prototype.hashCode = function () {
    return imul(getStringHashCode('serializer'), 127) ^ this.d3i_1.hashCode();
  };
  SerializableWith.prototype.toString = function () {
    return '@kotlinx.serialization.SerializableWith(serializer=' + this.d3i_1 + ')';
  };
  SerializableWith.$metadata$ = classMeta('SerializableWith', [Annotation], 0);
  function isInstanceOf(_this__u8e3s4, kclass) {
    return kclass.id(_this__u8e3s4);
  }
  function getChecked(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
    throw SerializationException_init_$Create$("Serializer for class '" + _this__u8e3s4.hd() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
  }
  function compiledSerializerImpl(_this__u8e3s4) {
    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$0;
      {
        var tmp0_asDynamic = get_js(_this__u8e3s4);
        tmp$ret$0 = tmp0_asDynamic;
      }
      var tmp0_safe_receiver = tmp$ret$0.Companion;
      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function isReferenceArray(rootClass) {
    return rootClass.equals(PrimitiveClasses_getInstance().ze());
  }
  function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
    var tmp;
    try {
      var tmp$ret$0;
      {
        tmp$ret$0 = findAssociatedObject(_this__u8e3s4, getKClass(SerializableWith));
      }
      var assocObject = tmp$ret$0;
      var tmp_0;
      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
      } else {
        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
          var tmp_1 = assocObject.i3c(args.slice());
          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
        } else {
          tmp_0 = null;
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      {
        tmp_2 = null;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function toNativeArrayImpl(_this__u8e3s4, eClass) {
    var tmp$ret$0;
    {
      tmp$ret$0 = copyToArray(_this__u8e3s4);
    }
    return tmp$ret$0;
  }
  //region block: post-declaration
  SerialDescriptorImpl.prototype.g33 = get_isNullable;
  SerialDescriptorImpl.prototype.j33 = get_isInline;
  AbstractDecoder.prototype.o35 = decodeSerializableElement$default;
  AbstractDecoder.prototype.c35 = decodeSerializableValue;
  AbstractDecoder.prototype.q35 = decodeSequentially;
  AbstractDecoder.prototype.s35 = decodeCollectionSize;
  AbstractEncoder.prototype.q36 = encodeNotNullMark;
  AbstractEncoder.prototype.r36 = beginCollection;
  AbstractEncoder.prototype.p36 = encodeSerializableValue;
  ListLikeDescriptor.prototype.g33 = get_isNullable;
  ListLikeDescriptor.prototype.j33 = get_isInline;
  PrimitiveArrayDescriptor.prototype.g33 = get_isNullable;
  PrimitiveArrayDescriptor.prototype.j33 = get_isInline;
  ArrayListClassDesc.prototype.g33 = get_isNullable;
  ArrayListClassDesc.prototype.j33 = get_isInline;
  LinkedHashSetClassDesc.prototype.g33 = get_isNullable;
  LinkedHashSetClassDesc.prototype.j33 = get_isInline;
  MapLikeDescriptor.prototype.g33 = get_isNullable;
  MapLikeDescriptor.prototype.j33 = get_isInline;
  LinkedHashMapClassDesc.prototype.g33 = get_isNullable;
  LinkedHashMapClassDesc.prototype.j33 = get_isInline;
  HashSetClassDesc.prototype.g33 = get_isNullable;
  HashSetClassDesc.prototype.j33 = get_isInline;
  HashMapClassDesc.prototype.g33 = get_isNullable;
  HashMapClassDesc.prototype.j33 = get_isInline;
  ArrayClassDesc.prototype.g33 = get_isNullable;
  ArrayClassDesc.prototype.j33 = get_isInline;
  PluginGeneratedSerialDescriptor.prototype.g33 = get_isNullable;
  PluginGeneratedSerialDescriptor.prototype.j33 = get_isInline;
  InlineClassDescriptor.prototype.g33 = get_isNullable;
  InlinePrimitiveDescriptor$1.prototype.n3b = typeParametersSerializers;
  PrimitiveSerialDescriptor_0.prototype.g33 = get_isNullable;
  PrimitiveSerialDescriptor_0.prototype.j33 = get_isInline;
  TaggedDecoder.prototype.o35 = decodeSerializableElement$default;
  TaggedDecoder.prototype.c35 = decodeSerializableValue;
  TaggedDecoder.prototype.q35 = decodeSequentially;
  TaggedDecoder.prototype.s35 = decodeCollectionSize;
  NamedValueDecoder.prototype.c35 = decodeSerializableValue;
  NamedValueDecoder.prototype.o35 = decodeSerializableElement$default;
  NamedValueDecoder.prototype.q35 = decodeSequentially;
  NamedValueDecoder.prototype.s35 = decodeCollectionSize;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = buildSerialDescriptor$default;
  _.$_$.b = decodeSerializableElement$default;
  _.$_$.c = SerializationException_init_$Init$;
  _.$_$.d = SEALED_getInstance;
  _.$_$.e = STRING_getInstance;
  _.$_$.f = CONTEXTUAL_getInstance;
  _.$_$.g = ENUM_getInstance;
  _.$_$.h = LIST_getInstance;
  _.$_$.i = MAP_getInstance;
  _.$_$.j = Companion_getInstance_1;
  _.$_$.k = ListSerializer;
  _.$_$.l = MapSerializer;
  _.$_$.m = SetSerializer;
  _.$_$.n = get_nullable;
  _.$_$.o = serializer_2;
  _.$_$.p = serializer_15;
  _.$_$.q = serializer_12;
  _.$_$.r = serializer_14;
  _.$_$.s = serializer_13;
  _.$_$.t = PolymorphicKind;
  _.$_$.u = PrimitiveKind;
  _.$_$.v = PrimitiveSerialDescriptor;
  _.$_$.w = get_isInline;
  _.$_$.x = get_isNullable;
  _.$_$.y = SerialDescriptor;
  _.$_$.z = ENUM;
  _.$_$.a1 = AbstractDecoder;
  _.$_$.b1 = AbstractEncoder;
  _.$_$.c1 = decodeCollectionSize;
  _.$_$.d1 = decodeSequentially;
  _.$_$.e1 = CompositeDecoder;
  _.$_$.f1 = CompositeEncoder;
  _.$_$.g1 = decodeSerializableValue;
  _.$_$.h1 = Decoder;
  _.$_$.i1 = beginCollection;
  _.$_$.j1 = encodeNotNullMark;
  _.$_$.k1 = Encoder;
  _.$_$.l1 = AbstractPolymorphicSerializer;
  _.$_$.m1 = NamedValueDecoder;
  _.$_$.n1 = jsonCachedSerialNames;
  _.$_$.o1 = get_EmptySerializersModule;
  _.$_$.p1 = SerializersModuleCollector;
  _.$_$.q1 = DeserializationStrategy;
  _.$_$.r1 = KSerializer;
  _.$_$.s1 = SealedClassSerializer;
  _.$_$.t1 = SerializationException;
  _.$_$.u1 = SerializationStrategy;
  _.$_$.v1 = StringFormat;
  _.$_$.w1 = findPolymorphicSerializer;
  _.$_$.x1 = serializer;
  _.$_$.y1 = serializer_0;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391)));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.js.map

/***/ }),

/***/ 713:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

(function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var objectMeta = kotlin_kotlin.$_$.y8;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.g1;
  var fillArrayVal = kotlin_kotlin.$_$.c8;
  var Unit_getInstance = kotlin_kotlin.$_$.t3;
  var toString = kotlin_kotlin.$_$.c9;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.r1;
  var StringFormat = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var classMeta = kotlin_kotlin.$_$.y7;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var charSequenceGet = kotlin_kotlin.$_$.v7;
  var Char = kotlin_kotlin.$_$.va;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.d2;
  var equals = kotlin_kotlin.$_$.a8;
  var get_EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
  var interfaceMeta = kotlin_kotlin.$_$.g8;
  var THROW_CCE = kotlin_kotlin.$_$.hb;
  var hashCode = kotlin_kotlin.$_$.f8;
  var joinToString$default = kotlin_kotlin.$_$.g;
  var Map = kotlin_kotlin.$_$.f4;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var getStringHashCode = kotlin_kotlin.$_$.e8;
  var List = kotlin_kotlin.$_$.d4;
  var toInt = kotlin_kotlin.$_$.ja;
  var toLong = kotlin_kotlin.$_$.la;
  var toDouble = kotlin_kotlin.$_$.ha;
  var toLongOrNull = kotlin_kotlin.$_$.ka;
  var toDoubleOrNull = kotlin_kotlin.$_$.ga;
  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var buildSerialDescriptor$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
  var HashMap = kotlin_kotlin.$_$.w3;
  var getKClass = kotlin_kotlin.$_$.e;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.l3;
  var arrayOf = kotlin_kotlin.$_$.qb;
  var createKType = kotlin_kotlin.$_$.b;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
  var isInterface = kotlin_kotlin.$_$.p8;
  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.k3;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var toULongOrNull = kotlin_kotlin.$_$.pa;
  var Companion_getInstance = kotlin_kotlin.$_$.r3;
  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.x2;
  var ULong = kotlin_kotlin.$_$.lb;
  var lazy = kotlin_kotlin.$_$.xb;
  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
  var KProperty1 = kotlin_kotlin.$_$.p9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.d8;
  var Encoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var CompositeEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
  var captureStack = kotlin_kotlin.$_$.t7;
  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t1;
  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var coerceAtLeast = kotlin_kotlin.$_$.g9;
  var coerceAtMost = kotlin_kotlin.$_$.i9;
  var numberToChar = kotlin_kotlin.$_$.v8;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.b1;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.t;
  var concatToString = kotlin_kotlin.$_$.s9;
  var copyOf = kotlin_kotlin.$_$.a5;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.k2;
  var charArray = kotlin_kotlin.$_$.u7;
  var last = kotlin_kotlin.$_$.s5;
  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var SerializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
  var isObject = kotlin_kotlin.$_$.r8;
  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var findPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
  var SealedClassSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var ENUM = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
  var CONTEXTUAL_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
  var SerializersModuleCollector = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var Companion_getInstance_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
  var toByte = kotlin_kotlin.$_$.fa;
  var IllegalArgumentException = kotlin_kotlin.$_$.bb;
  var toShort = kotlin_kotlin.$_$.ma;
  var isFinite = kotlin_kotlin.$_$.ub;
  var isFinite_0 = kotlin_kotlin.$_$.tb;
  var single = kotlin_kotlin.$_$.da;
  var decodeSequentially = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
  var decodeCollectionSize = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
  var decodeSerializableElement$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var toUInt = kotlin_kotlin.$_$.oa;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.u2;
  var toULong = kotlin_kotlin.$_$.qa;
  var toUByte = kotlin_kotlin.$_$.na;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.r2;
  var toUShort = kotlin_kotlin.$_$.ra;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.a3;
  var decodeSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.t2;
  var UInt__toString_impl_dbgl21 = kotlin_kotlin.$_$.v2;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.w2;
  var ULong__toString_impl_f9au7k = kotlin_kotlin.$_$.y2;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.q2;
  var UByte__toString_impl_v72jg = kotlin_kotlin.$_$.s2;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.z2;
  var UShort__toString_impl_edaoee = kotlin_kotlin.$_$.b3;
  var AbstractEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
  var toString_0 = kotlin_kotlin.$_$.l2;
  var encodeNotNullMark = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
  var beginCollection = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.q3;
  var serializer_2 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var Companion_getInstance_2 = kotlin_kotlin.$_$.p3;
  var serializer_3 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var Companion_getInstance_3 = kotlin_kotlin.$_$.s3;
  var serializer_4 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
  var setOf = kotlin_kotlin.$_$.e6;
  var equals_0 = kotlin_kotlin.$_$.u9;
  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.m1;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.f3;
  var toByte_0 = kotlin_kotlin.$_$.z8;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.j3;
  var toShort_0 = kotlin_kotlin.$_$.b9;
  var getValue = kotlin_kotlin.$_$.n5;
  var toList = kotlin_kotlin.$_$.l6;
  var Enum = kotlin_kotlin.$_$.ya;
  //endregion
  //region block: pre-declaration
  Default.prototype = Object.create(Json.prototype);
  Default.prototype.constructor = Default;
  JsonImpl.prototype = Object.create(Json.prototype);
  JsonImpl.prototype.constructor = JsonImpl;
  JsonPrimitive.prototype = Object.create(JsonElement.prototype);
  JsonPrimitive.prototype.constructor = JsonPrimitive;
  JsonObject.prototype = Object.create(JsonElement.prototype);
  JsonObject.prototype.constructor = JsonObject;
  JsonNull.prototype = Object.create(JsonPrimitive.prototype);
  JsonNull.prototype.constructor = JsonNull;
  JsonLiteral.prototype = Object.create(JsonPrimitive.prototype);
  JsonLiteral.prototype.constructor = JsonLiteral;
  JsonArray.prototype = Object.create(JsonElement.prototype);
  JsonArray.prototype.constructor = JsonArray;
  JsonException.prototype = Object.create(SerializationException.prototype);
  JsonException.prototype.constructor = JsonException;
  JsonEncodingException.prototype = Object.create(JsonException.prototype);
  JsonEncodingException.prototype.constructor = JsonEncodingException;
  JsonDecodingException.prototype = Object.create(JsonException.prototype);
  JsonDecodingException.prototype.constructor = JsonDecodingException;
  StreamingJsonDecoder.prototype = Object.create(AbstractDecoder.prototype);
  StreamingJsonDecoder.prototype.constructor = StreamingJsonDecoder;
  JsonDecoderForUnsignedTypes.prototype = Object.create(AbstractDecoder.prototype);
  JsonDecoderForUnsignedTypes.prototype.constructor = JsonDecoderForUnsignedTypes;
  ComposerForUnsignedNumbers.prototype = Object.create(Composer.prototype);
  ComposerForUnsignedNumbers.prototype.constructor = ComposerForUnsignedNumbers;
  StreamingJsonEncoder.prototype = Object.create(AbstractEncoder.prototype);
  StreamingJsonEncoder.prototype.constructor = StreamingJsonEncoder;
  AbstractJsonTreeDecoder.prototype = Object.create(NamedValueDecoder.prototype);
  AbstractJsonTreeDecoder.prototype.constructor = AbstractJsonTreeDecoder;
  JsonTreeDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeDecoder.prototype.constructor = JsonTreeDecoder;
  JsonTreeListDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeListDecoder.prototype.constructor = JsonTreeListDecoder;
  JsonTreeMapDecoder.prototype = Object.create(JsonTreeDecoder.prototype);
  JsonTreeMapDecoder.prototype.constructor = JsonTreeMapDecoder;
  WriteMode.prototype = Object.create(Enum.prototype);
  WriteMode.prototype.constructor = WriteMode;
  //endregion
  function Default() {
    Default_instance = this;
    Json.call(this, JsonConf_init_$Create$(false, false, false, false, false, null, false, false, null, false, null, 2047, null));
  }
  Default.$metadata$ = objectMeta('Default', undefined, undefined, undefined, undefined, Json.prototype);
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration) {
    Default_getInstance();
    this.e3i_1 = configuration;
  }
  Json.prototype.f3i = function () {
    return this.e3i_1;
  };
  Json.prototype.p35 = function () {
    return this.e3i_1.s3i_1;
  };
  Json.prototype.g3i = function (serializer, value) {
    var result = StringBuilder_init_$Create$();
    var tmp = WriteMode_OBJ_getInstance();
    var tmp$ret$0;
    {
      var tmp0_arrayOfNulls = values().length;
      tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    }
    var encoder = StreamingJsonEncoder_init_$Create$(result, this, tmp, tmp$ret$0);
    encoder.p36(serializer, value);
    return result.toString();
  };
  Json.prototype.h3i = function (deserializer, string) {
    var reader = new JsonReader(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), reader);
    var result = input.c35(deserializer);
    if (!reader.o3j()) {
      {
        var tmp0_error = 'Reader has not consumed the whole input: ' + reader;
        throw IllegalStateException_init_$Create$(toString(tmp0_error));
      }
    }
    return result;
  };
  Json.$metadata$ = classMeta('Json', [StringFormat]);
  function Json_0(from, builderAction) {
    var builder = new JsonBuilder(from.e3i_1);
    builderAction(builder);
    var conf = builder.o16();
    return new JsonImpl(conf);
  }
  function Json$default(from, builderAction, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      from = Default_getInstance();
    return Json_0(from, builderAction);
  }
  function JsonBuilder(conf) {
    this.p3j_1 = conf.i3i_1;
    this.q3j_1 = conf.j3i_1;
    this.r3j_1 = conf.k3i_1;
    this.s3j_1 = conf.l3i_1;
    this.t3j_1 = conf.m3i_1;
    this.u3j_1 = conf.n3i_1;
    this.v3j_1 = conf.o3i_1;
    this.w3j_1 = conf.p3i_1;
    this.x3j_1 = conf.q3i_1;
    this.y3j_1 = conf.r3i_1;
    this.z3j_1 = conf.s3i_1;
  }
  JsonBuilder.prototype.a3k = function () {
    return this.u3j_1;
  };
  JsonBuilder.prototype.o16 = function () {
    if (this.w3j_1) {
      var tmp0_require = this.x3j_1 === 'type';
      {
      }
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Class discriminator should not be specified when array polymorphism is specified';
        }
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    if (!this.t3j_1) {
      {
        var tmp1_require = this.u3j_1 === '    ';
        {
        }
        if (!tmp1_require) {
          var tmp$ret$1;
          {
            tmp$ret$1 = 'Indent should not be specified when default printing mode is used';
          }
          var message_0 = tmp$ret$1;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      }
    } else if (!(this.u3j_1 === '    ')) {
      var tmp$ret$3;
      $l$block: {
        var tmp2_all = this.u3j_1;
        var indexedObject = tmp2_all;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          {
            tmp$ret$2 = ((equals(new Char(element), new Char(_Char___init__impl__6a9atx(32))) ? true : equals(new Char(element), new Char(_Char___init__impl__6a9atx(9)))) ? true : equals(new Char(element), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals(new Char(element), new Char(_Char___init__impl__6a9atx(10)));
          }
          if (!tmp$ret$2) {
            tmp$ret$3 = false;
            break $l$block;
          }
        }
        tmp$ret$3 = true;
      }
      var allWhitespaces = tmp$ret$3;
      {
        {
        }
        if (!allWhitespaces) {
          var tmp$ret$4;
          {
            tmp$ret$4 = 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this.u3j_1;
          }
          var message_1 = tmp$ret$4;
          throw IllegalArgumentException_init_$Create$(toString(message_1));
        }
      }
    }
    return new JsonConf(this.p3j_1, this.q3j_1, this.r3j_1, this.s3j_1, this.t3j_1, this.u3j_1, this.v3j_1, this.w3j_1, this.x3j_1, this.y3j_1, this.z3j_1);
  };
  JsonBuilder.$metadata$ = classMeta('JsonBuilder');
  function validateConfiguration($this) {
    if (equals($this.p35(), get_EmptySerializersModule()))
      return Unit_getInstance();
    var collector = new PolymorphismValidator($this.f3i().p3i_1, $this.f3i().q3i_1);
    $this.p35().v3h(collector);
  }
  function JsonImpl(configuration) {
    Json.call(this, configuration);
    validateConfiguration(this);
  }
  JsonImpl.$metadata$ = classMeta('JsonImpl', undefined, undefined, undefined, undefined, Json.prototype);
  function JsonDecoder() {
  }
  JsonDecoder.$metadata$ = interfaceMeta('JsonDecoder', [Decoder, CompositeDecoder]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.d3k = function () {
    return JsonElementSerializer_getInstance();
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_4() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function JsonElement() {
    Companion_getInstance_4();
  }
  JsonElement.$metadata$ = classMeta('JsonElement', undefined, undefined, {0: JsonElementSerializer_getInstance});
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_5() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function JsonPrimitive() {
    Companion_getInstance_5();
    JsonElement.call(this);
  }
  JsonPrimitive.prototype.toString = function () {
    return this.v1u();
  };
  JsonPrimitive.$metadata$ = classMeta('JsonPrimitive', undefined, undefined, {0: JsonPrimitiveSerializer_getInstance}, undefined, JsonElement.prototype);
  function get_jsonPrimitive(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_6() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function JsonObject$toString$lambda() {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var tmp$ret$0;
      {
        tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.s();
      }
      var k = tmp$ret$0;
      var tmp$ret$1;
      {
        tmp$ret$1 = _name_for_destructuring_parameter_0__wldtmu.t();
      }
      var v = tmp$ret$1;
      var tmp$ret$3;
      {
        {
        }
        var tmp$ret$2;
        {
          var tmp0_apply = StringBuilder_init_$Create$();
          {
          }
          {
            printQuoted(tmp0_apply, k);
            tmp0_apply.b5(_Char___init__impl__6a9atx(58));
            tmp0_apply.nf(v);
          }
          tmp$ret$2 = tmp0_apply;
        }
        tmp$ret$3 = tmp$ret$2.toString();
      }
      return tmp$ret$3;
    };
  }
  function JsonObject(content) {
    Companion_getInstance_6();
    JsonElement.call(this);
    this.e3k_1 = content;
  }
  JsonObject.prototype.m1k = function (key) {
    return this.e3k_1.c2(key);
  };
  JsonObject.prototype.c2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.m1k((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.n1k = function (key) {
    return this.e3k_1.i2(key);
  };
  JsonObject.prototype.i2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.n1k((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.m = function () {
    return this.e3k_1.m();
  };
  JsonObject.prototype.r = function () {
    return this.e3k_1.r();
  };
  JsonObject.prototype.j2 = function () {
    return this.e3k_1.j2();
  };
  JsonObject.prototype.g = function () {
    return this.e3k_1.g();
  };
  JsonObject.prototype.k2 = function () {
    return this.e3k_1.k2();
  };
  JsonObject.prototype.equals = function (other) {
    return equals(this.e3k_1, other);
  };
  JsonObject.prototype.hashCode = function () {
    return hashCode(this.e3k_1);
  };
  JsonObject.prototype.toString = function () {
    var tmp = this.e3k_1.r();
    return joinToString$default(tmp, ',', '{', '}', 0, null, JsonObject$toString$lambda(), 24, null);
  };
  JsonObject.$metadata$ = classMeta('JsonObject', [Map], undefined, {0: JsonObjectSerializer_getInstance}, undefined, JsonElement.prototype);
  function error(_this__u8e3s4, element) {
    throw IllegalArgumentException_init_$Create$('Element ' + getKClassFromExpression(_this__u8e3s4) + ' is not a ' + element);
  }
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this.f3k_1 = 'null';
  }
  JsonNull.prototype.v1u = function () {
    return this.f3k_1;
  };
  JsonNull.$metadata$ = objectMeta('JsonNull', undefined, undefined, undefined, undefined, JsonPrimitive.prototype);
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function JsonPrimitive_0(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function JsonLiteral(body, isString) {
    JsonPrimitive.call(this);
    this.g3k_1 = isString;
    this.h3k_1 = toString(body);
  }
  JsonLiteral.prototype.v1u = function () {
    return this.h3k_1;
  };
  JsonLiteral.prototype.toString = function () {
    var tmp;
    if (this.g3k_1) {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          var tmp0_apply = StringBuilder_init_$Create$();
          {
          }
          {
            printQuoted(tmp0_apply, this.h3k_1);
          }
          tmp$ret$0 = tmp0_apply;
        }
        tmp$ret$1 = tmp$ret$0.toString();
      }
      tmp = tmp$ret$1;
    } else {
      tmp = this.h3k_1;
    }
    return tmp;
  };
  JsonLiteral.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof JsonLiteral)
      other;
    else
      THROW_CCE();
    if (!(this.g3k_1 === other.g3k_1))
      return false;
    if (!(this.h3k_1 === other.h3k_1))
      return false;
    return true;
  };
  JsonLiteral.prototype.hashCode = function () {
    var result = this.g3k_1 | 0;
    result = imul(31, result) + getStringHashCode(this.h3k_1) | 0;
    return result;
  };
  JsonLiteral.$metadata$ = classMeta('JsonLiteral', undefined, undefined, undefined, undefined, JsonPrimitive.prototype);
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_7() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function JsonArray(content) {
    Companion_getInstance_7();
    JsonElement.call(this);
    this.i3k_1 = content;
  }
  JsonArray.prototype.j3k = function (element) {
    return this.i3k_1.l1(element);
  };
  JsonArray.prototype.l1 = function (element) {
    if (!(element instanceof JsonElement))
      return false;
    return this.j3k(element instanceof JsonElement ? element : THROW_CCE());
  };
  JsonArray.prototype.k3k = function (elements) {
    return this.i3k_1.m1(elements);
  };
  JsonArray.prototype.m1 = function (elements) {
    return this.k3k(elements);
  };
  JsonArray.prototype.l = function (index) {
    return this.i3k_1.l(index);
  };
  JsonArray.prototype.m = function () {
    return this.i3k_1.m();
  };
  JsonArray.prototype.d = function () {
    return this.i3k_1.d();
  };
  JsonArray.prototype.g = function () {
    return this.i3k_1.g();
  };
  JsonArray.prototype.equals = function (other) {
    return equals(this.i3k_1, other);
  };
  JsonArray.prototype.hashCode = function () {
    return hashCode(this.i3k_1);
  };
  JsonArray.prototype.toString = function () {
    return joinToString$default(this.i3k_1, ',', '[', ']', 0, null, null, 56, null);
  };
  JsonArray.$metadata$ = classMeta('JsonArray', [List], undefined, {0: JsonArraySerializer_getInstance}, undefined, JsonElement.prototype);
  function get_booleanOrNull(_this__u8e3s4) {
    return toBooleanStrictOrNull(_this__u8e3s4.v1u());
  }
  function get_int(_this__u8e3s4) {
    return toInt(_this__u8e3s4.v1u());
  }
  function get_long(_this__u8e3s4) {
    return toLong(_this__u8e3s4.v1u());
  }
  function get_float(_this__u8e3s4) {
    var tmp$ret$2;
    {
      var tmp0_toFloat = _this__u8e3s4.v1u();
      var tmp$ret$1;
      {
        var tmp0_unsafeCast = toDouble(tmp0_toFloat);
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_unsafeCast;
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1;
    }
    return tmp$ret$2;
  }
  function get_double(_this__u8e3s4) {
    return toDouble(_this__u8e3s4.v1u());
  }
  function get_contentOrNull(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof JsonNull) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4.v1u();
    }
    return tmp;
  }
  function get_longOrNull(_this__u8e3s4) {
    return toLongOrNull(_this__u8e3s4.v1u());
  }
  function get_doubleOrNull(_this__u8e3s4) {
    return toDoubleOrNull(_this__u8e3s4.v1u());
  }
  function JsonElementSerializer$descriptor$lambda$lambda() {
    return function () {
      return JsonPrimitiveSerializer_getInstance().l3k_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_0() {
    return function () {
      return JsonNullSerializer_getInstance().m3k_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_1() {
    return function () {
      return JsonLiteralSerializer_getInstance().n3k_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_2() {
    return function () {
      return JsonObjectSerializer_getInstance().o3k_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda$lambda_3() {
    return function () {
      return JsonArraySerializer_getInstance().p3k_1;
    };
  }
  function JsonElementSerializer$descriptor$lambda() {
    return function ($this$buildSerialDescriptor) {
      var tmp = defer(JsonElementSerializer$descriptor$lambda$lambda());
      $this$buildSerialDescriptor.a34('JsonPrimitive', tmp, null, false, 12, null);
      var tmp_0 = defer(JsonElementSerializer$descriptor$lambda$lambda_0());
      $this$buildSerialDescriptor.a34('JsonNull', tmp_0, null, false, 12, null);
      var tmp_1 = defer(JsonElementSerializer$descriptor$lambda$lambda_1());
      $this$buildSerialDescriptor.a34('JsonLiteral', tmp_1, null, false, 12, null);
      var tmp_2 = defer(JsonElementSerializer$descriptor$lambda$lambda_2());
      $this$buildSerialDescriptor.a34('JsonObject', tmp_2, null, false, 12, null);
      var tmp_3 = defer(JsonElementSerializer$descriptor$lambda$lambda_3());
      $this$buildSerialDescriptor.a34('JsonArray', tmp_3, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    tmp.q3k_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda(), 4, null);
  }
  JsonElementSerializer.prototype.a33 = function () {
    return this.q3k_1;
  };
  JsonElementSerializer.prototype.r3k = function (encoder, value) {
    verify(encoder);
    var tmp0_subject = value;
    if (tmp0_subject instanceof JsonPrimitive)
      encoder.p36(JsonPrimitiveSerializer_getInstance(), value);
    else {
      if (tmp0_subject instanceof JsonObject)
        encoder.p36(JsonObjectSerializer_getInstance(), value);
      else {
        if (tmp0_subject instanceof JsonArray)
          encoder.p36(JsonArraySerializer_getInstance(), value);
      }
    }
  };
  JsonElementSerializer.prototype.b33 = function (encoder, value) {
    return this.r3k(encoder, value instanceof JsonElement ? value : THROW_CCE());
  };
  JsonElementSerializer.prototype.c33 = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.c3k();
  };
  JsonElementSerializer.$metadata$ = objectMeta('JsonElementSerializer', [KSerializer]);
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    var tmp = this;
    var tmp_0 = STRING_getInstance();
    tmp.l3k_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonPrimitive', tmp_0, [], null, 12, null);
  }
  JsonPrimitiveSerializer.prototype.a33 = function () {
    return this.l3k_1;
  };
  JsonPrimitiveSerializer.prototype.s3k = function (encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      tmp = encoder.p36(JsonNullSerializer_getInstance(), JsonNull_getInstance());
    } else {
      var tmp_0 = JsonLiteralSerializer_getInstance();
      tmp = encoder.p36(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
    }
    return tmp;
  };
  JsonPrimitiveSerializer.prototype.b33 = function (encoder, value) {
    return this.s3k(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
  };
  JsonPrimitiveSerializer.prototype.c33 = function (decoder) {
    var result = asJsonDecoder(decoder).c3k();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonPrimitiveSerializer.$metadata$ = objectMeta('JsonPrimitiveSerializer', [KSerializer]);
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_cast = serializer(createKType(getKClass(HashMap), arrayOf([createInvariantKTypeProjection(createKType(PrimitiveClasses_getInstance().af(), arrayOf([]), false)), createInvariantKTypeProjection(createKType(getKClass(JsonElement), arrayOf([]), false))]), false));
          tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1.a33();
    }
    tmp.t3k_1 = tmp$ret$2;
    this.u3k_1 = 'kotlinx.serialization.json.JsonObject';
  }
  JsonObjectDescriptor.prototype.n33 = function (index) {
    return this.t3k_1.n33(index);
  };
  JsonObjectDescriptor.prototype.m33 = function (name) {
    return this.t3k_1.m33(name);
  };
  JsonObjectDescriptor.prototype.l33 = function (index) {
    return this.t3k_1.l33(index);
  };
  JsonObjectDescriptor.prototype.k33 = function () {
    return this.t3k_1.k33();
  };
  JsonObjectDescriptor.prototype.j33 = function () {
    return this.t3k_1.j33();
  };
  JsonObjectDescriptor.prototype.g33 = function () {
    return this.t3k_1.g33();
  };
  JsonObjectDescriptor.prototype.i33 = function () {
    return this.t3k_1.i33();
  };
  JsonObjectDescriptor.prototype.h33 = function () {
    return this.u3k_1;
  };
  JsonObjectDescriptor.$metadata$ = objectMeta('JsonObjectDescriptor', [SerialDescriptor]);
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this.o3k_1 = JsonObjectDescriptor_getInstance();
  }
  JsonObjectSerializer.prototype.a33 = function () {
    return this.o3k_1;
  };
  JsonObjectSerializer.prototype.v3k = function (encoder, value) {
    verify(encoder);
    MapSerializer(serializer_0(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).b33(encoder, value);
  };
  JsonObjectSerializer.prototype.b33 = function (encoder, value) {
    return this.v3k(encoder, value instanceof JsonObject ? value : THROW_CCE());
  };
  JsonObjectSerializer.prototype.c33 = function (decoder) {
    verify_0(decoder);
    return new JsonObject(MapSerializer(serializer_0(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).c33(decoder));
  };
  JsonObjectSerializer.$metadata$ = objectMeta('JsonObjectSerializer', [KSerializer]);
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    var tmp = this;
    var tmp$ret$2;
    {
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          var tmp0_cast = serializer(createKType(getKClass(List), arrayOf([createInvariantKTypeProjection(createKType(getKClass(JsonElement), arrayOf([]), false))]), false));
          tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp$ret$2 = tmp$ret$1.a33();
    }
    tmp.w3k_1 = tmp$ret$2;
    this.x3k_1 = 'kotlinx.serialization.json.JsonArray';
  }
  JsonArrayDescriptor.prototype.n33 = function (index) {
    return this.w3k_1.n33(index);
  };
  JsonArrayDescriptor.prototype.m33 = function (name) {
    return this.w3k_1.m33(name);
  };
  JsonArrayDescriptor.prototype.l33 = function (index) {
    return this.w3k_1.l33(index);
  };
  JsonArrayDescriptor.prototype.k33 = function () {
    return this.w3k_1.k33();
  };
  JsonArrayDescriptor.prototype.j33 = function () {
    return this.w3k_1.j33();
  };
  JsonArrayDescriptor.prototype.g33 = function () {
    return this.w3k_1.g33();
  };
  JsonArrayDescriptor.prototype.i33 = function () {
    return this.w3k_1.i33();
  };
  JsonArrayDescriptor.prototype.h33 = function () {
    return this.x3k_1;
  };
  JsonArrayDescriptor.$metadata$ = objectMeta('JsonArrayDescriptor', [SerialDescriptor]);
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this.p3k_1 = JsonArrayDescriptor_getInstance();
  }
  JsonArraySerializer.prototype.a33 = function () {
    return this.p3k_1;
  };
  JsonArraySerializer.prototype.y3k = function (encoder, value) {
    verify(encoder);
    ListSerializer(JsonElementSerializer_getInstance()).b33(encoder, value);
  };
  JsonArraySerializer.prototype.b33 = function (encoder, value) {
    return this.y3k(encoder, value instanceof JsonArray ? value : THROW_CCE());
  };
  JsonArraySerializer.prototype.c33 = function (decoder) {
    verify_0(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).c33(decoder));
  };
  JsonArraySerializer.$metadata$ = objectMeta('JsonArraySerializer', [KSerializer]);
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function defer(deferred) {
    return new defer$1(deferred);
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    var tmp = this;
    var tmp_0 = ENUM_getInstance();
    tmp.m3k_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonNull', tmp_0, [], null, 12, null);
  }
  JsonNullSerializer.prototype.a33 = function () {
    return this.m3k_1;
  };
  JsonNullSerializer.prototype.z3k = function (encoder, value) {
    verify(encoder);
    encoder.v35();
  };
  JsonNullSerializer.prototype.b33 = function (encoder, value) {
    return this.z3k(encoder, value instanceof JsonNull ? value : THROW_CCE());
  };
  JsonNullSerializer.prototype.c33 = function (decoder) {
    verify_0(decoder);
    decoder.q34();
    return JsonNull_getInstance();
  };
  JsonNullSerializer.$metadata$ = objectMeta('JsonNullSerializer', [KSerializer]);
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this.n3k_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  JsonLiteralSerializer.prototype.a33 = function () {
    return this.n3k_1;
  };
  JsonLiteralSerializer.prototype.a3l = function (encoder, value) {
    verify(encoder);
    if (value.g3k_1) {
      return encoder.e36(value.h3k_1);
    }
    var tmp0_safe_receiver = get_longOrNull(value);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return encoder.a36(tmp0_safe_receiver);
      }
    }
    var tmp1_safe_receiver = toULongOrNull(value.h3k_1);
    var tmp = tmp1_safe_receiver;
    if ((tmp == null ? null : new ULong(tmp)) == null)
      null;
    else {
      var tmp$ret$2;
      {
        {
        }
        var tmp0_safe_receiver_0 = encoder.f36(serializer_1(Companion_getInstance()).a33());
        if (tmp0_safe_receiver_0 == null)
          null;
        else {
          var tmp$ret$1;
          {
            tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp1_safe_receiver);
          }
          tmp0_safe_receiver_0.a36(tmp$ret$1);
        }
        return Unit_getInstance();
      }
    }
    var tmp2_safe_receiver = get_doubleOrNull(value);
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$3;
      {
        {
        }
        return encoder.c36(tmp2_safe_receiver);
      }
    }
    var tmp3_safe_receiver = get_booleanOrNull(value);
    if (tmp3_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      {
        {
        }
        return encoder.w35(tmp3_safe_receiver);
      }
    }
    encoder.e36(value.h3k_1);
  };
  JsonLiteralSerializer.prototype.b33 = function (encoder, value) {
    return this.a3l(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
  };
  JsonLiteralSerializer.prototype.c33 = function (decoder) {
    var result = asJsonDecoder(decoder).c3k();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonLiteralSerializer.$metadata$ = objectMeta('JsonLiteralSerializer', [KSerializer]);
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function verify(encoder) {
    asJsonEncoder(encoder);
  }
  function asJsonDecoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function verify_0(decoder) {
    asJsonDecoder(decoder);
  }
  function asJsonEncoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _get_original__l7ku1m($this) {
    var tmp$ret$0;
    {
      var tmp0_getValue = original$factory();
      tmp$ret$0 = $this.b3l_1.t();
    }
    return tmp$ret$0;
  }
  function defer$1($deferred) {
    this.b3l_1 = lazy($deferred);
  }
  defer$1.prototype.h33 = function () {
    return _get_original__l7ku1m(this).h33();
  };
  defer$1.prototype.i33 = function () {
    return _get_original__l7ku1m(this).i33();
  };
  defer$1.prototype.k33 = function () {
    return _get_original__l7ku1m(this).k33();
  };
  defer$1.prototype.l33 = function (index) {
    return _get_original__l7ku1m(this).l33(index);
  };
  defer$1.prototype.m33 = function (name) {
    return _get_original__l7ku1m(this).m33(name);
  };
  defer$1.prototype.n33 = function (index) {
    return _get_original__l7ku1m(this).n33(index);
  };
  defer$1.$metadata$ = classMeta(undefined, [SerialDescriptor]);
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original__l7ku1m(receiver);
    }, null);
  }
  function JsonEncoder() {
  }
  JsonEncoder.$metadata$ = interfaceMeta('JsonEncoder', [Encoder, CompositeEncoder]);
  function JsonConf_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      encodeDefaults = false;
    if (!(($mask0 & 2) === 0))
      ignoreUnknownKeys = false;
    if (!(($mask0 & 4) === 0))
      isLenient = false;
    if (!(($mask0 & 8) === 0))
      allowStructuredMapKeys = false;
    if (!(($mask0 & 16) === 0))
      prettyPrint = false;
    if (!(($mask0 & 32) === 0))
      prettyPrintIndent = '    ';
    if (!(($mask0 & 64) === 0))
      coerceInputValues = false;
    if (!(($mask0 & 128) === 0))
      useArrayPolymorphism = false;
    if (!(($mask0 & 256) === 0))
      classDiscriminator = 'type';
    if (!(($mask0 & 512) === 0))
      allowSpecialFloatingPointValues = false;
    if (!(($mask0 & 1024) === 0))
      serializersModule = get_EmptySerializersModule();
    JsonConf.call($this, encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule);
    return $this;
  }
  function JsonConf_init_$Create$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule, $mask0, $marker) {
    return JsonConf_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule, $mask0, $marker, Object.create(JsonConf.prototype));
  }
  function JsonConf(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule) {
    this.i3i_1 = encodeDefaults;
    this.j3i_1 = ignoreUnknownKeys;
    this.k3i_1 = isLenient;
    this.l3i_1 = allowStructuredMapKeys;
    this.m3i_1 = prettyPrint;
    this.n3i_1 = prettyPrintIndent;
    this.o3i_1 = coerceInputValues;
    this.p3i_1 = useArrayPolymorphism;
    this.q3i_1 = classDiscriminator;
    this.r3i_1 = allowSpecialFloatingPointValues;
    this.s3i_1 = serializersModule;
  }
  JsonConf.prototype.a3k = function () {
    return this.n3i_1;
  };
  JsonConf.prototype.toString = function () {
    return 'JsonConf(encodeDefaults=' + this.i3i_1 + ', ignoreUnknownKeys=' + this.j3i_1 + ', isLenient=' + this.k3i_1 + ', allowStructuredMapKeys=' + this.l3i_1 + ', prettyPrint=' + this.m3i_1 + ', prettyPrintIndent=' + this.n3i_1 + ', coerceInputValues=' + this.o3i_1 + ', useArrayPolymorphism=' + this.p3i_1 + ', classDiscriminator=' + this.q3i_1 + ', allowSpecialFloatingPointValues=' + this.r3i_1 + ', serializersModule=' + this.s3i_1 + ')';
  };
  JsonConf.prototype.hashCode = function () {
    var result = this.i3i_1 | 0;
    result = imul(result, 31) + (this.j3i_1 | 0) | 0;
    result = imul(result, 31) + (this.k3i_1 | 0) | 0;
    result = imul(result, 31) + (this.l3i_1 | 0) | 0;
    result = imul(result, 31) + (this.m3i_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.n3i_1) | 0;
    result = imul(result, 31) + (this.o3i_1 | 0) | 0;
    result = imul(result, 31) + (this.p3i_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.q3i_1) | 0;
    result = imul(result, 31) + (this.r3i_1 | 0) | 0;
    result = imul(result, 31) + hashCode(this.s3i_1) | 0;
    return result;
  };
  JsonConf.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof JsonConf))
      return false;
    var tmp0_other_with_cast = other instanceof JsonConf ? other : THROW_CCE();
    if (!(this.i3i_1 === tmp0_other_with_cast.i3i_1))
      return false;
    if (!(this.j3i_1 === tmp0_other_with_cast.j3i_1))
      return false;
    if (!(this.k3i_1 === tmp0_other_with_cast.k3i_1))
      return false;
    if (!(this.l3i_1 === tmp0_other_with_cast.l3i_1))
      return false;
    if (!(this.m3i_1 === tmp0_other_with_cast.m3i_1))
      return false;
    if (!(this.n3i_1 === tmp0_other_with_cast.n3i_1))
      return false;
    if (!(this.o3i_1 === tmp0_other_with_cast.o3i_1))
      return false;
    if (!(this.p3i_1 === tmp0_other_with_cast.p3i_1))
      return false;
    if (!(this.q3i_1 === tmp0_other_with_cast.q3i_1))
      return false;
    if (!(this.r3i_1 === tmp0_other_with_cast.r3i_1))
      return false;
    if (!equals(this.s3i_1, tmp0_other_with_cast.s3i_1))
      return false;
    return true;
  };
  JsonConf.$metadata$ = classMeta('JsonConf');
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  JsonEncodingException.$metadata$ = classMeta('JsonEncodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function InvalidFloatingPointEncoded(value, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return new JsonEncodingException(tmp + ('Current output: ' + minify$default(output, 0, 1, null)));
  }
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException("Value of type '" + keyDescriptor.h33() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.i33() + "'.\n") + get_allowStructuredMapKeysHint());
  }
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  JsonDecodingException.$metadata$ = classMeta('JsonDecodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, message + '\nJSON input: ' + minify(input, offset));
  }
  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
    var tmp = 'Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + get_specialFlowingValuesHint();
    _this__u8e3s4.c3l(tmp, 0, 2, null);
  }
  function InvalidFloatingPointDecoded(value, key, output) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
  }
  function UnknownKeyException(key, input) {
    var tmp = "Encountered unknown key '" + key + "'.\n" + (get_ignoreUnknownKeysHint() + '\n');
    return JsonDecodingException_1(-1, tmp + ('Current input: ' + minify$default(input, 0, 1, null)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  JsonException.$metadata$ = classMeta('JsonException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function minify(_this__u8e3s4, offset) {
    if (_this__u8e3s4.length < 200)
      return _this__u8e3s4;
    if (offset === -1) {
      var start = _this__u8e3s4.length - 60 | 0;
      if (start <= 0)
        return _this__u8e3s4;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = _this__u8e3s4;
        }
        tmp$ret$1 = tmp$ret$0.substring(start);
      }
      return '.....' + tmp$ret$1;
    }
    var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= _this__u8e3s4.length ? '' : '.....';
    var tmp$ret$3;
    {
      var tmp0_substring = coerceAtLeast(start_0, 0);
      var tmp1_substring = coerceAtMost(end, _this__u8e3s4.length);
      var tmp$ret$2;
      {
        tmp$ret$2 = _this__u8e3s4;
      }
      tmp$ret$3 = tmp$ret$2.substring(tmp0_substring, tmp1_substring);
    }
    return prefix + tmp$ret$3 + suffix;
  }
  function minify$default(_this__u8e3s4, offset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      offset = -1;
    return minify(_this__u8e3s4, offset);
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function unexpectedFpErrorMessage(value, key, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return tmp + ('Current output: ' + minify$default(output, 0, 1, null));
  }
  function readObject($this) {
    {
      var tmp0_requireTokenClass = $this.d3l_1;
      var tmp1_requireTokenClass = get_TC_BEGIN_OBJ();
      if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        {
          var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
          tmp$ret$0 = 'Expected start of the object';
        }
        tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
      }
    }
    $this.d3l_1.g3l();
    {
      var tmp3_require = $this.d3l_1;
      var tmp4_require = !($this.d3l_1.j3j_1 === get_TC_COMMA());
      var tmp5_require = $this.d3l_1.i3j_1;
      if (!tmp4_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Unexpected leading comma';
        }
        tmp3_require.f3l(tmp$ret$1, tmp5_require);
      }
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = LinkedHashMap_init_$Create$();
    }
    var result = tmp$ret$2;
    var valueExpected = false;
    while ($this.d3l_1.h3l()) {
      valueExpected = false;
      var key = $this.e3l_1 ? $this.d3l_1.j3l() : $this.d3l_1.i3l();
      {
        var tmp6_requireTokenClass = $this.d3l_1;
        var tmp7_requireTokenClass = get_TC_COLON();
        if (!(tmp6_requireTokenClass.j3j_1 === tmp7_requireTokenClass)) {
          var tmp$ret$3;
          {
            var tmp8__anonymous__65w033 = numberToChar(tmp6_requireTokenClass.j3j_1);
            tmp$ret$3 = "Expected ':'";
          }
          tmp6_requireTokenClass.f3l(tmp$ret$3, tmp6_requireTokenClass.k3j_1);
        }
      }
      $this.d3l_1.g3l();
      var element = $this.k3l();
      {
        result.c(key, element);
      }
      if (!($this.d3l_1.j3j_1 === get_TC_COMMA())) {
        {
          var tmp9_requireTokenClass = $this.d3l_1;
          var tmp10_requireTokenClass = get_TC_END_OBJ();
          if (!(tmp9_requireTokenClass.j3j_1 === tmp10_requireTokenClass)) {
            var tmp$ret$4;
            {
              var tmp11__anonymous__tkubxh = numberToChar(tmp9_requireTokenClass.j3j_1);
              tmp$ret$4 = 'Expected end of the object or comma';
            }
            tmp9_requireTokenClass.f3l(tmp$ret$4, tmp9_requireTokenClass.k3j_1);
          }
        }
      } else {
        valueExpected = true;
        $this.d3l_1.g3l();
      }
    }
    {
      var tmp12_require = $this.d3l_1;
      var tmp13_require = !valueExpected ? $this.d3l_1.j3j_1 === get_TC_END_OBJ() : false;
      var tmp14_require = $this.d3l_1.i3j_1;
      if (!tmp13_require) {
        var tmp$ret$5;
        {
          tmp$ret$5 = 'Expected end of the object';
        }
        tmp12_require.f3l(tmp$ret$5, tmp14_require);
      }
    }
    $this.d3l_1.g3l();
    return new JsonObject(result);
  }
  function readArray($this) {
    {
      var tmp0_requireTokenClass = $this.d3l_1;
      var tmp1_requireTokenClass = get_TC_BEGIN_LIST();
      if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        {
          var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
          tmp$ret$0 = 'Expected start of the array';
        }
        tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
      }
    }
    $this.d3l_1.g3l();
    {
      var tmp3_require = $this.d3l_1;
      var tmp4_require = !($this.d3l_1.j3j_1 === get_TC_COMMA());
      var tmp5_require = $this.d3l_1.i3j_1;
      if (!tmp4_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = 'Unexpected leading comma';
        }
        tmp3_require.f3l(tmp$ret$1, tmp5_require);
      }
    }
    var tmp$ret$2;
    {
      tmp$ret$2 = ArrayList_init_$Create$();
    }
    var result = tmp$ret$2;
    var valueExpected = false;
    while ($this.d3l_1.h3l()) {
      valueExpected = false;
      var element = $this.k3l();
      result.a(element);
      if (!($this.d3l_1.j3j_1 === get_TC_COMMA())) {
        {
          var tmp6_requireTokenClass = $this.d3l_1;
          var tmp7_requireTokenClass = get_TC_END_LIST();
          if (!(tmp6_requireTokenClass.j3j_1 === tmp7_requireTokenClass)) {
            var tmp$ret$3;
            {
              var tmp8__anonymous__65w033 = numberToChar(tmp6_requireTokenClass.j3j_1);
              tmp$ret$3 = 'Expected end of the array or comma';
            }
            tmp6_requireTokenClass.f3l(tmp$ret$3, tmp6_requireTokenClass.k3j_1);
          }
        }
      } else {
        valueExpected = true;
        $this.d3l_1.g3l();
      }
    }
    {
      var tmp9_require = $this.d3l_1;
      var tmp10_require = !valueExpected;
      var tmp11_require = $this.d3l_1.i3j_1;
      if (!tmp10_require) {
        var tmp$ret$4;
        {
          tmp$ret$4 = 'Unexpected trailing comma';
        }
        tmp9_require.f3l(tmp$ret$4, tmp11_require);
      }
    }
    $this.d3l_1.g3l();
    return new JsonArray(result);
  }
  function readValue($this, isString) {
    var tmp;
    if ($this.e3l_1) {
      tmp = $this.d3l_1.j3l();
    } else {
      tmp = isString ? $this.d3l_1.i3l() : $this.d3l_1.j3l();
    }
    var str = tmp;
    return new JsonLiteral(str, isString);
  }
  function JsonParser(configuration, reader) {
    this.d3l_1 = reader;
    this.e3l_1 = configuration.k3i_1;
  }
  JsonParser.prototype.k3l = function () {
    if (!this.d3l_1.h3l()) {
      this.d3l_1.c3l("Can't begin reading value from here", 0, 2, null);
    }
    var tmp0_subject = this.d3l_1.j3j_1;
    var tmp;
    if (tmp0_subject === get_TC_NULL()) {
      var tmp$ret$0;
      {
        var tmp0_also = JsonNull_getInstance();
        {
        }
        {
          this.d3l_1.g3l();
        }
        tmp$ret$0 = tmp0_also;
      }
      tmp = tmp$ret$0;
    } else if (tmp0_subject === get_TC_STRING()) {
      tmp = readValue(this, true);
    } else if (tmp0_subject === get_TC_OTHER()) {
      tmp = readValue(this, false);
    } else if (tmp0_subject === get_TC_BEGIN_OBJ()) {
      tmp = readObject(this);
    } else if (tmp0_subject === get_TC_BEGIN_LIST()) {
      tmp = readArray(this);
    } else {
      this.d3l_1.c3l("Can't begin reading element, unexpected token", 0, 2, null);
    }
    return tmp;
  };
  JsonParser.$metadata$ = classMeta('JsonParser');
  function takeStringInternal($this, advance) {
    var tmp;
    if ($this.l3j_1 < 0) {
      tmp = concatToString($this.n3j_1, 0, 0 + $this.m3j_1 | 0);
    } else {
      var tmp$ret$1;
      {
        var tmp0_substring = $this.h3j_1;
        var tmp1_substring = $this.l3j_1;
        var tmp2_substring = $this.l3j_1 + $this.m3j_1 | 0;
        var tmp$ret$0;
        {
          tmp$ret$0 = tmp0_substring;
        }
        tmp$ret$1 = tmp$ret$0.substring(tmp1_substring, tmp2_substring);
      }
      tmp = tmp$ret$1;
    }
    var prevStr = tmp;
    if (advance)
      $this.g3l();
    return prevStr;
  }
  function takeStringInternal$default($this, advance, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      advance = true;
    return takeStringInternal($this, advance);
  }
  function append($this, ch) {
    if ($this.m3j_1 >= $this.n3j_1.length)
      $this.n3j_1 = copyOf($this.n3j_1, imul(2, $this.n3j_1.length));
    var tmp = $this.n3j_1;
    var tmp0_this = $this;
    var tmp1 = tmp0_this.m3j_1;
    tmp0_this.m3j_1 = tmp1 + 1 | 0;
    tmp[tmp1] = ch;
  }
  function appendRange($this, source, fromIndex, toIndex) {
    var addLen = toIndex - fromIndex | 0;
    var oldLen = $this.m3j_1;
    var newLen = oldLen + addLen | 0;
    if (newLen > $this.n3j_1.length)
      $this.n3j_1 = copyOf($this.n3j_1, coerceAtLeast(newLen, imul(2, $this.n3j_1.length)));
    var inductionVariable = 0;
    if (inductionVariable < addLen)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $this.n3j_1[oldLen + i | 0] = charSequenceGet(source, fromIndex + i | 0);
      }
       while (inductionVariable < addLen);
    var tmp1_this = $this;
    tmp1_this.m3j_1 = tmp1_this.m3j_1 + addLen | 0;
  }
  function nextLiteral($this, source, startPos) {
    $this.k3j_1 = startPos;
    $this.l3j_1 = startPos;
    var currentPosition = startPos;
    while (currentPosition < source.length ? charToTokenClass(charSequenceGet(source, currentPosition)) === 0 : false) {
      var tmp0 = currentPosition;
      currentPosition = tmp0 + 1 | 0;
    }
    $this.i3j_1 = currentPosition;
    $this.m3j_1 = currentPosition - $this.l3j_1 | 0;
    $this.j3j_1 = rangeEquals(source, $this.l3j_1, $this.m3j_1, 'null') ? 10 : 0;
  }
  function nextString($this, source, startPosition) {
    $this.k3j_1 = startPosition;
    $this.m3j_1 = 0;
    var currentPosition = startPosition + 1 | 0;
    if (currentPosition >= source.length) {
      $this.f3l('EOF', currentPosition);
    }
    var lastPosition = currentPosition;
    while (!equals(new Char(charSequenceGet(source, currentPosition)), new Char(_Char___init__impl__6a9atx(34)))) {
      if (equals(new Char(charSequenceGet(source, currentPosition)), new Char(_Char___init__impl__6a9atx(92)))) {
        appendRange($this, source, lastPosition, currentPosition);
        var newPosition = appendEsc($this, source, currentPosition + 1 | 0);
        currentPosition = newPosition;
        lastPosition = newPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= source.length) {
          $this.f3l('EOF', currentPosition);
        }
      }
    }
    if (lastPosition === (startPosition + 1 | 0)) {
      $this.l3j_1 = lastPosition;
      $this.m3j_1 = currentPosition - lastPosition | 0;
    } else {
      appendRange($this, source, lastPosition, currentPosition);
      $this.l3j_1 = -1;
    }
    $this.i3j_1 = currentPosition + 1 | 0;
    $this.j3j_1 = 1;
  }
  function appendEsc($this, source, startPosition) {
    var currentPosition = startPosition;
    {
      var tmp0_require = currentPosition < source.length;
      var tmp1_require = currentPosition;
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Unexpected EOF after escape character';
        }
        $this.f3l(tmp$ret$0, tmp1_require);
      }
    }
    var tmp0 = currentPosition;
    currentPosition = tmp0 + 1 | 0;
    var currentChar = charSequenceGet(source, tmp0);
    if (equals(new Char(currentChar), new Char(_Char___init__impl__6a9atx(117)))) {
      return appendHex($this, source, currentPosition);
    }
    var c = escapeToChar(Char__toInt_impl_vasixd(currentChar));
    {
      var tmp2_require = !equals(new Char(c), new Char(_Char___init__impl__6a9atx(0)));
      var tmp3_require = currentPosition;
      if (!tmp2_require) {
        var tmp$ret$1;
        {
          tmp$ret$1 = "Invalid escaped char '" + new Char(currentChar) + "'";
        }
        $this.f3l(tmp$ret$1, tmp3_require);
      }
    }
    append($this, c);
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    var curPos = startPos;
    var tmp3 = curPos;
    curPos = tmp3 + 1 | 0;
    var tmp = fromHexChar($this, source, tmp3) << 12;
    var tmp2 = curPos;
    curPos = tmp2 + 1 | 0;
    var tmp_0 = tmp + (fromHexChar($this, source, tmp2) << 8) | 0;
    var tmp1 = curPos;
    curPos = tmp1 + 1 | 0;
    var tmp_1 = tmp_0 + (fromHexChar($this, source, tmp1) << 4) | 0;
    var tmp0 = curPos;
    curPos = tmp0 + 1 | 0;
    append($this, numberToChar(tmp_1 + fromHexChar($this, source, tmp0) | 0));
    return curPos;
  }
  function fromHexChar($this, source, currentPosition) {
    {
      var tmp0_require = currentPosition < source.length;
      if (!tmp0_require) {
        var tmp$ret$0;
        {
          tmp$ret$0 = 'Unexpected EOF during unicode escape';
        }
        $this.f3l(tmp$ret$0, currentPosition);
      }
    }
    var curChar = charSequenceGet(source, currentPosition);
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= curChar ? curChar <= _Char___init__impl__6a9atx(57) : false) {
      tmp = Char__toInt_impl_vasixd(curChar) - 48 | 0;
    } else if (_Char___init__impl__6a9atx(97) <= curChar ? curChar <= _Char___init__impl__6a9atx(102) : false) {
      tmp = (Char__toInt_impl_vasixd(curChar) - 97 | 0) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= curChar ? curChar <= _Char___init__impl__6a9atx(70) : false) {
      tmp = (Char__toInt_impl_vasixd(curChar) - 65 | 0) + 10 | 0;
    } else {
      var tmp_0 = "Invalid toHexChar char '" + new Char(curChar) + "' in unicode escape";
      $this.c3l(tmp_0, 0, 2, null);
    }
    return tmp;
  }
  function JsonReader(source) {
    this.h3j_1 = source;
    this.i3j_1 = 0;
    this.j3j_1 = 12;
    this.k3j_1 = 0;
    this.l3j_1 = -1;
    this.m3j_1 = 0;
    this.n3j_1 = charArray(16);
    this.g3l();
  }
  JsonReader.prototype.o3j = function () {
    return this.j3j_1 === 12;
  };
  JsonReader.prototype.h3l = function () {
    var tmp0_subject = this.j3j_1;
    return ((((tmp0_subject === 8 ? true : tmp0_subject === 6) ? true : tmp0_subject === 0) ? true : tmp0_subject === 1) ? true : tmp0_subject === 10) ? true : false;
  };
  JsonReader.prototype.l3l = function (expected, errorMessage) {
    if (!(this.j3j_1 === expected)) {
      this.f3l(errorMessage(new Char(numberToChar(this.j3j_1))), this.k3j_1);
    }
  };
  JsonReader.prototype.j3l = function () {
    if (!(this.j3j_1 === 0) ? !(this.j3j_1 === 1) : false) {
      this.f3l('Expected string or non-null literal', this.k3j_1);
    }
    return takeStringInternal$default(this, false, 2, null);
  };
  JsonReader.prototype.m3l = function (isLenient) {
    return (!(this.j3j_1 === 1) ? !isLenient ? true : !(this.j3j_1 === 0) : false) ? null : takeStringInternal(this, false);
  };
  JsonReader.prototype.i3l = function () {
    var tmp0_subject = this.j3j_1;
    if (tmp0_subject === 1) {
    } else if (tmp0_subject === 10) {
      this.f3l("Expected string literal but 'null' literal was found.\nUse 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.", this.k3j_1);
    } else {
      this.f3l("Expected string literal with quotes.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", this.k3j_1);
    }
    return takeStringInternal$default(this, false, 2, null);
  };
  JsonReader.prototype.n3l = function () {
    if (!(this.j3j_1 === 0)) {
      this.f3l("Expected start of the unquoted boolean literal.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", this.k3j_1);
    }
    return takeStringInternal$default(this, false, 2, null);
  };
  JsonReader.prototype.g3l = function () {
    var source = this.h3j_1;
    var currentPosition = this.i3j_1;
    while (currentPosition < source.length) {
      var ch = charSequenceGet(source, currentPosition);
      var tc = charToTokenClass(ch);
      if (tc === 3) {
        var tmp0 = currentPosition;
        currentPosition = tmp0 + 1 | 0;
      } else if (tc === 0) {
        nextLiteral(this, source, currentPosition);
        return Unit_getInstance();
      } else if (tc === 1) {
        nextString(this, source, currentPosition);
        return Unit_getInstance();
      } else {
        this.k3j_1 = currentPosition;
        this.j3j_1 = tc;
        this.i3j_1 = currentPosition + 1 | 0;
        return Unit_getInstance();
      }
    }
    this.k3j_1 = currentPosition;
    this.j3j_1 = 12;
  };
  JsonReader.prototype.o3l = function () {
    if (!(this.j3j_1 === 6) ? !(this.j3j_1 === 8) : false) {
      this.g3l();
      return Unit_getInstance();
    }
    var tmp$ret$0;
    {
      tmp$ret$0 = ArrayList_init_$Create$();
    }
    var tokenStack = tmp$ret$0;
    $l$1: do {
      $l$0: do {
        var tmp0_subject = this.j3j_1;
        if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
          tokenStack.a(this.j3j_1);
        } else if (tmp0_subject === 9) {
          if (!(last(tokenStack) === 8))
            throw JsonDecodingException_0(this.i3j_1, 'found ] instead of }', this.h3j_1);
          tokenStack.y9(tokenStack.g() - 1 | 0);
        } else if (tmp0_subject === 7) {
          if (!(last(tokenStack) === 6))
            throw JsonDecodingException_0(this.i3j_1, 'found } instead of ]', this.h3j_1);
          tokenStack.y9(tokenStack.g() - 1 | 0);
        }
        this.g3l();
      }
       while (false);
      var tmp$ret$1;
      {
        tmp$ret$1 = !tokenStack.m();
      }
    }
     while (tmp$ret$1);
  };
  JsonReader.prototype.toString = function () {
    return "JsonReader(source='" + this.h3j_1 + "', currentPosition=" + this.i3j_1 + ', tokenClass=' + this.j3j_1 + ', tokenPosition=' + this.k3j_1 + ', offset=' + this.l3j_1 + ')';
  };
  JsonReader.prototype.f3l = function (message, position) {
    throw JsonDecodingException_0(position, message, this.h3j_1);
  };
  JsonReader.prototype.c3l = function (message, position, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      position = this.i3j_1;
    return this.f3l(message, position);
  };
  JsonReader.prototype.p3l = function (condition, position, message) {
    if (!condition) {
      this.f3l(message(), position);
    }
  };
  JsonReader.$metadata$ = classMeta('JsonReader');
  function get_COLON() {
    return COLON;
  }
  var COLON;
  function get_INVALID() {
    return INVALID;
  }
  var INVALID;
  function get_COMMA() {
    return COMMA;
  }
  var COMMA;
  function get_NULL() {
    return NULL;
  }
  var NULL;
  function get_BEGIN_OBJ() {
    return BEGIN_OBJ;
  }
  var BEGIN_OBJ;
  function get_END_OBJ() {
    return END_OBJ;
  }
  var END_OBJ;
  function get_BEGIN_LIST() {
    return BEGIN_LIST;
  }
  var BEGIN_LIST;
  function get_END_LIST() {
    return END_LIST;
  }
  var END_LIST;
  function charToTokenClass(c) {
    return Char__toInt_impl_vasixd(c) < 126 ? CharMappings_getInstance().r3l_1[Char__toInt_impl_vasixd(c)] : 0;
  }
  function get_TC_BEGIN_LIST() {
    return TC_BEGIN_LIST;
  }
  var TC_BEGIN_LIST;
  function get_TC_BEGIN_OBJ() {
    return TC_BEGIN_OBJ;
  }
  var TC_BEGIN_OBJ;
  function get_TC_OTHER() {
    return TC_OTHER;
  }
  var TC_OTHER;
  function get_TC_STRING() {
    return TC_STRING;
  }
  var TC_STRING;
  function get_TC_NULL() {
    return TC_NULL;
  }
  var TC_NULL;
  function get_lenientHint() {
    return lenientHint;
  }
  var lenientHint;
  function rangeEquals(source, start, length, str) {
    var n = str.length;
    if (!(length === n))
      return false;
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(new Char(charSequenceGet(source, start + i | 0)), new Char(charSequenceGet(str, i))))
          return false;
      }
       while (inductionVariable < n);
    return true;
  }
  function get_STRING() {
    return STRING;
  }
  var STRING;
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance().q3l_1[c] : _Char___init__impl__6a9atx(0);
  }
  function get_TC_END_LIST() {
    return TC_END_LIST;
  }
  var TC_END_LIST;
  function get_TC_END_OBJ() {
    return TC_END_OBJ;
  }
  var TC_END_OBJ;
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 11);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!equals(new Char(esc), new Char(_Char___init__impl__6a9atx(117))))
      $this.q3l_1[Char__toInt_impl_vasixd(esc)] = numberToChar(c);
  }
  function initC2ESC_0($this, c, esc) {
    return initC2ESC($this, Char__toInt_impl_vasixd(c), esc);
  }
  function initC2TC($this, c, cl) {
    $this.r3l_1[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    return initC2TC($this, Char__toInt_impl_vasixd(c), cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this.q3l_1 = charArray(117);
    this.r3l_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  CharMappings.$metadata$ = objectMeta('CharMappings');
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function get_TC_COMMA() {
    return TC_COMMA;
  }
  var TC_COMMA;
  function get_TC_COLON() {
    return TC_COLON;
  }
  var TC_COLON;
  function get_ignoreUnknownKeysHint() {
    return ignoreUnknownKeysHint;
  }
  var ignoreUnknownKeysHint;
  function get_specialFlowingValuesHint() {
    return specialFlowingValuesHint;
  }
  var specialFlowingValuesHint;
  function get_allowStructuredMapKeysHint() {
    return allowStructuredMapKeysHint;
  }
  var allowStructuredMapKeysHint;
  function encodePolymorphically(_this__u8e3s4, serializer, value, ifPolymorphic) {
    var tmp;
    if (!(serializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.b3k().e3i_1.p3i_1;
    }
    if (tmp) {
      serializer.b33(_this__u8e3s4, value);
      return Unit_getInstance();
    }
    var tmp_0 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
    var actualSerializer = findActualSerializer$accessor$1ad0flx(_this__u8e3s4, tmp_0, isObject(value) ? value : THROW_CCE());
    ifPolymorphic();
    actualSerializer.b33(_this__u8e3s4, value);
  }
  function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
    var tmp;
    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.b3k().e3i_1.p3i_1;
    }
    if (tmp) {
      return deserializer.c33(_this__u8e3s4);
    }
    var tmp$ret$0;
    {
      var tmp0_cast = _this__u8e3s4.c3k();
      var tmp1_cast = deserializer.a33();
      if (!(tmp0_cast instanceof JsonObject)) {
        throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + tmp1_cast.h33() + ', but had ' + getKClassFromExpression(tmp0_cast));
      }
      tmp$ret$0 = tmp0_cast;
    }
    var jsonTree = tmp$ret$0;
    var discriminator = _this__u8e3s4.b3k().e3i_1.q3i_1;
    var tmp0_safe_receiver = jsonTree.n1k(discriminator);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.v1u();
    var tmp2_elvis_lhs = deserializer.u36(_this__u8e3s4, type);
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      throwSerializerNotFound(type, jsonTree);
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var actualSerializer = tmp_0;
    var tmp_1 = _this__u8e3s4.b3k();
    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
  }
  function findActualSerializer(_this__u8e3s4, serializer, value) {
    var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
    var actualSerializer = findPolymorphicSerializer(casted, _this__u8e3s4, isObject(value) ? value : THROW_CCE());
    validateIfSealed(casted, actualSerializer, _this__u8e3s4.b3k().e3i_1.q3i_1);
    var kind = actualSerializer.a33().i33();
    checkKind(kind);
    return actualSerializer;
  }
  function throwSerializerNotFound(type, jsonTree) {
    var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
    throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
  }
  function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
    if (!(serializer instanceof SealedClassSerializer))
      return Unit_getInstance();
    if (jsonCachedSerialNames(actualSerializer.a33()).l1(classDiscriminator)) {
      var baseName = serializer.a33().h33();
      var actualName = actualSerializer.a33().h33();
      {
        var tmp0_error = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
        throw IllegalStateException_init_$Create$(toString(tmp0_error));
      }
    }
  }
  function checkKind(kind) {
    if (kind instanceof ENUM) {
      throw IllegalStateException_init_$Create$("Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PrimitiveKind) {
      throw IllegalStateException_init_$Create$("Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PolymorphicKind) {
      throw IllegalStateException_init_$Create$('Actual serializer for polymorphic cannot be polymorphic itself');
    }
  }
  function findActualSerializer$accessor$1ad0flx(_this__u8e3s4, serializer, value) {
    return findActualSerializer(_this__u8e3s4, serializer, value);
  }
  function checkKind_0($this, descriptor, actualClass) {
    var kind = descriptor.i33();
    var tmp;
    if (kind instanceof PolymorphicKind) {
      tmp = true;
    } else {
      tmp = equals(kind, CONTEXTUAL_getInstance());
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.hd() + " can't be registered as a subclass for polymorphic serialization " + ('because its kind ' + kind + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
    }
    if ($this.s3l_1)
      return Unit_getInstance();
    var tmp_0;
    var tmp_1;
    if (equals(kind, LIST_getInstance()) ? true : equals(kind, MAP_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = kind instanceof PrimitiveKind;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      tmp_0 = kind instanceof ENUM;
    }
    if (tmp_0) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.hd() + ' of kind ' + kind + ' cannot be serialized polymorphically with class discriminator.');
    }
  }
  function checkDiscriminatorCollisions($this, descriptor, actualClass) {
    var inductionVariable = 0;
    var last = descriptor.k33();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var name = descriptor.l33(i);
        if (name === $this.t3l_1) {
          throw IllegalArgumentException_init_$Create$('Polymorphic serializer for ' + actualClass + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
        }
      }
       while (inductionVariable < last);
  }
  function PolymorphismValidator(useArrayPolymorphism, discriminator) {
    this.s3l_1 = useArrayPolymorphism;
    this.t3l_1 = discriminator;
  }
  PolymorphismValidator.prototype.a3i = function (kClass, serializer) {
  };
  PolymorphismValidator.prototype.b3i = function (baseClass, actualClass, actualSerializer) {
    var descriptor = actualSerializer.a33();
    checkKind_0(this, descriptor, actualClass);
    if (!this.s3l_1) {
      checkDiscriminatorCollisions(this, descriptor, actualClass);
    }
  };
  PolymorphismValidator.prototype.c3i = function (baseClass, defaultSerializerProvider) {
  };
  PolymorphismValidator.$metadata$ = classMeta('PolymorphismValidator', [SerializersModuleCollector]);
  function decodeMapIndex($this, tokenClass) {
    if (!(tokenClass === get_TC_COMMA()) ? ($this.f3j_1 % 2 | 0) === 1 : false) {
      {
        var tmp0_requireTokenClass = $this.d3j_1;
        var tmp1_requireTokenClass = get_TC_END_OBJ();
        if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
          var tmp$ret$0;
          {
            var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
            tmp$ret$0 = 'Expected end of the object or comma';
          }
          tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
        }
      }
    }
    if (($this.f3j_1 % 2 | 0) === 0) {
      {
        var tmp3_requireTokenClass = $this.d3j_1;
        var tmp4_requireTokenClass = get_TC_COLON();
        if (!(tmp3_requireTokenClass.j3j_1 === tmp4_requireTokenClass)) {
          var tmp$ret$1;
          {
            var tmp5__anonymous__kpxxpo = numberToChar(tmp3_requireTokenClass.j3j_1);
            tmp$ret$1 = "Expected ':' after the key";
          }
          tmp3_requireTokenClass.f3l(tmp$ret$1, tmp3_requireTokenClass.k3j_1);
        }
      }
      $this.d3j_1.g3l();
    }
    var tmp;
    if (!$this.d3j_1.h3l()) {
      {
        var tmp6_require = $this.d3j_1;
        var tmp7_require = !(tokenClass === get_TC_COMMA());
        var tmp8_require = tmp6_require.i3j_1;
        if (!tmp7_require) {
          var tmp$ret$2;
          {
            tmp$ret$2 = 'Unexpected trailing comma';
          }
          tmp6_require.f3l(tmp$ret$2, tmp8_require);
        }
      }
      Companion_getInstance_0();
      tmp = -1;
    } else {
      var tmp0_this = $this;
      tmp0_this.f3j_1 = tmp0_this.f3j_1 + 1 | 0;
      tmp = tmp0_this.f3j_1;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var elementDescriptor = descriptor.n33(index);
    if ($this.d3j_1.j3j_1 === get_TC_NULL() ? !elementDescriptor.g33() : false)
      return true;
    if (equals(elementDescriptor.i33(), ENUM_getInstance())) {
      var tmp0_elvis_lhs = $this.d3j_1.m3l($this.g3j_1.k3i_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var enumValue = tmp;
      var enumIndex = elementDescriptor.m33(enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3)
        return true;
    }
    return false;
  }
  function decodeObjectIndex($this, tokenClass, descriptor) {
    if (tokenClass === get_TC_COMMA() ? !$this.d3j_1.h3l() : false) {
      $this.d3j_1.c3l('Unexpected trailing comma', 0, 2, null);
    }
    while ($this.d3j_1.h3l()) {
      var tmp0_this = $this;
      tmp0_this.f3j_1 = tmp0_this.f3j_1 + 1 | 0;
      var key = $this.z34();
      {
        var tmp0_requireTokenClass = $this.d3j_1;
        var tmp1_requireTokenClass = get_TC_COLON();
        if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
          var tmp$ret$0;
          {
            var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
            tmp$ret$0 = "Expected ':'";
          }
          tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
        }
      }
      $this.d3j_1.g3l();
      var index = descriptor.m33(key);
      var tmp;
      Companion_getInstance_0();
      if (!(index === -3)) {
        var tmp_0;
        if ($this.g3j_1.o3i_1 ? coerceInputValue($this, descriptor, index) : false) {
          tmp_0 = false;
        } else {
          return index;
        }
        tmp = tmp_0;
      } else {
        tmp = true;
      }
      var isUnknown = tmp;
      if (isUnknown ? !$this.g3j_1.j3i_1 : false) {
        var tmp_1 = "Encountered an unknown key '" + key + "'.\n" + get_ignoreUnknownKeysHint();
        $this.d3j_1.c3l(tmp_1, 0, 2, null);
      } else {
        $this.d3j_1.o3l();
      }
      if ($this.d3j_1.j3j_1 === get_TC_COMMA()) {
        $this.d3j_1.g3l();
        {
          var tmp3_require = $this.d3j_1;
          var tmp4_require = $this.d3j_1.h3l();
          var tmp5_require = $this.d3j_1.i3j_1;
          if (!tmp4_require) {
            var tmp$ret$1;
            {
              tmp$ret$1 = 'Unexpected trailing comma';
            }
            tmp3_require.f3l(tmp$ret$1, tmp5_require);
          }
        }
      }
    }
    Companion_getInstance_0();
    return -1;
  }
  function decodeListIndex($this, tokenClass) {
    if (!(tokenClass === get_TC_COMMA()) ? !($this.f3j_1 === -1) : false) {
      {
        var tmp0_requireTokenClass = $this.d3j_1;
        var tmp1_requireTokenClass = get_TC_END_LIST();
        if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
          var tmp$ret$0;
          {
            var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
            tmp$ret$0 = 'Expected end of the array or comma';
          }
          tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
        }
      }
    }
    var tmp;
    if (!$this.d3j_1.h3l()) {
      {
        var tmp3_require = $this.d3j_1;
        var tmp4_require = !(tokenClass === get_TC_COMMA());
        var tmp5_require = tmp3_require.i3j_1;
        if (!tmp4_require) {
          var tmp$ret$1;
          {
            tmp$ret$1 = 'Unexpected trailing comma';
          }
          tmp3_require.f3l(tmp$ret$1, tmp5_require);
        }
      }
      Companion_getInstance_0();
      tmp = -1;
    } else {
      var tmp0_this = $this;
      tmp0_this.f3j_1 = tmp0_this.f3j_1 + 1 | 0;
      tmp = tmp0_this.f3j_1;
    }
    return tmp;
  }
  function StreamingJsonDecoder(json, mode, reader) {
    AbstractDecoder.call(this);
    this.b3j_1 = json;
    this.c3j_1 = mode;
    this.d3j_1 = reader;
    this.e3j_1 = this.b3k().p35();
    this.f3j_1 = -1;
    this.g3j_1 = this.b3k().e3i_1;
  }
  StreamingJsonDecoder.prototype.b3k = function () {
    return this.b3j_1;
  };
  StreamingJsonDecoder.prototype.p35 = function () {
    return this.e3j_1;
  };
  StreamingJsonDecoder.prototype.c3k = function () {
    return (new JsonParser(this.b3k().e3i_1, this.d3j_1)).k3l();
  };
  StreamingJsonDecoder.prototype.c35 = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  StreamingJsonDecoder.prototype.d35 = function (descriptor) {
    var newMode = switchMode(this.b3k(), descriptor);
    if (!equals(new Char(newMode.w3l_1), new Char(get_INVALID()))) {
      {
        var tmp0_requireTokenClass = this.d3j_1;
        var tmp1_requireTokenClass = newMode.y3l_1;
        if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
          var tmp$ret$0;
          {
            var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
            tmp$ret$0 = "Expected '" + new Char(newMode.w3l_1) + ', kind: ' + descriptor.i33() + "'";
          }
          tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
        }
      }
      this.d3j_1.g3l();
    }
    var tmp0_subject = newMode;
    var tmp0 = tmp0_subject.a5();
    switch (tmp0) {
      case 1:
      case 2:
      case 3:
        return new StreamingJsonDecoder(this.b3k(), newMode, this.d3j_1);
      default:
        return this.c3j_1.equals(newMode) ? this : new StreamingJsonDecoder(this.b3k(), newMode, this.d3j_1);
    }
  };
  StreamingJsonDecoder.prototype.e35 = function (descriptor) {
    if (!equals(new Char(this.c3j_1.x3l_1), new Char(get_INVALID()))) {
      {
        var tmp0_requireTokenClass = this.d3j_1;
        var tmp1_requireTokenClass = this.c3j_1.z3l_1;
        if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
          var tmp$ret$0;
          {
            var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
            tmp$ret$0 = "Expected '" + new Char(this.c3j_1.x3l_1) + "'";
          }
          tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
        }
      }
      this.d3j_1.g3l();
    }
  };
  StreamingJsonDecoder.prototype.p34 = function () {
    return !(this.d3j_1.j3j_1 === get_TC_NULL());
  };
  StreamingJsonDecoder.prototype.q34 = function () {
    {
      var tmp0_requireTokenClass = this.d3j_1;
      var tmp1_requireTokenClass = get_TC_NULL();
      if (!(tmp0_requireTokenClass.j3j_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        {
          var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.j3j_1);
          tmp$ret$0 = "Expected 'null' literal";
        }
        tmp0_requireTokenClass.f3l(tmp$ret$0, tmp0_requireTokenClass.k3j_1);
      }
    }
    this.d3j_1.g3l();
    return null;
  };
  StreamingJsonDecoder.prototype.r35 = function (descriptor) {
    var tokenClass = this.d3j_1.j3j_1;
    if (tokenClass === get_TC_COMMA()) {
      {
        var tmp0_require = this.d3j_1;
        var tmp1_require = !(this.f3j_1 === -1);
        var tmp2_require = this.d3j_1.i3j_1;
        if (!tmp1_require) {
          var tmp$ret$0;
          {
            tmp$ret$0 = 'Unexpected leading comma';
          }
          tmp0_require.f3l(tmp$ret$0, tmp2_require);
        }
      }
      this.d3j_1.g3l();
    }
    var tmp0_subject = this.c3j_1;
    var tmp0 = tmp0_subject.a5();
    var tmp;
    switch (tmp0) {
      case 1:
        tmp = decodeListIndex(this, tokenClass);
        break;
      case 2:
        tmp = decodeMapIndex(this, tokenClass);
        break;
      case 3:
        var tmp1_this = this;
        tmp1_this.f3j_1 = tmp1_this.f3j_1 + 1 | 0;
        var tmp2_subject = tmp1_this.f3j_1;
        var tmp_0;
        switch (tmp2_subject) {
          case 0:
            tmp_0 = 0;
            break;
          case 1:
            tmp_0 = 1;
            break;
          default:
            Companion_getInstance_0();
            tmp_0 = -1;
            break;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = decodeObjectIndex(this, tokenClass, descriptor);
        break;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.r34 = function () {
    var tmp;
    if (this.g3j_1.k3i_1) {
      tmp = this.d3j_1.j3l();
    } else {
      tmp = this.d3j_1.n3l();
    }
    var string = tmp;
    var tmp0_safe_receiver = toBooleanStrictOrNull(string);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      {
        {
        }
        return tmp0_safe_receiver;
      }
    }
    var tmp_0 = "Failed to parse type 'boolean' for input '" + string + "'";
    this.d3j_1.c3l(tmp_0, 0, 2, null);
  };
  StreamingJsonDecoder.prototype.s34 = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toByte(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'byte' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.t34 = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toShort(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'short' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.u34 = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toInt(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'int' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.v34 = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toLong(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'long' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.w34 = function () {
    var tmp$ret$4;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$3;
        {
          var tmp$ret$2;
          {
            var tmp$ret$1;
            {
              var tmp0_unsafeCast = toDouble(input);
              var tmp$ret$0;
              {
                tmp$ret$0 = tmp0_unsafeCast;
              }
              tmp$ret$1 = tmp$ret$0;
            }
            tmp$ret$2 = tmp$ret$1;
          }
          tmp$ret$3 = tmp$ret$2;
        }
        tmp$ret$4 = tmp$ret$3;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'float' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.b3k().e3i_1.r3i_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this.d3j_1, result);
  };
  StreamingJsonDecoder.prototype.x34 = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = toDouble(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'double' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.b3k().e3i_1.r3i_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this.d3j_1, result);
  };
  StreamingJsonDecoder.prototype.y34 = function () {
    var tmp$ret$1;
    $l$block: {
      var tmp0_parseString = this.d3j_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = single(input);
        }
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'char' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.z34 = function () {
    var tmp;
    if (this.g3j_1.k3i_1) {
      tmp = this.d3j_1.j3l();
    } else {
      tmp = this.d3j_1.i3l();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.a35 = function (inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(this.d3j_1, this.b3k()) : this;
  };
  StreamingJsonDecoder.$metadata$ = classMeta('StreamingJsonDecoder', [JsonDecoder], undefined, undefined, undefined, AbstractDecoder.prototype);
  function parseString(_this__u8e3s4, expectedType, block) {
    var input = _this__u8e3s4.j3l();
    try {
      return block(input);
    } catch ($p) {
      if ($p instanceof IllegalArgumentException) {
        var tmp = "Failed to parse type '" + expectedType + "' for input '" + input + "'";
        _this__u8e3s4.c3l(tmp, 0, 2, null);
      } else {
        throw $p;
      }
    }
  }
  function JsonDecoderForUnsignedTypes(reader, json) {
    AbstractDecoder.call(this);
    this.a3m_1 = reader;
    this.b3m_1 = json.p35();
  }
  JsonDecoderForUnsignedTypes.prototype.p35 = function () {
    return this.b3m_1;
  };
  JsonDecoderForUnsignedTypes.prototype.r35 = function (descriptor) {
    {
      throw IllegalStateException_init_$Create$('unsupported');
    }
  };
  JsonDecoderForUnsignedTypes.prototype.u34 = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.a3m_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toInt = toUInt(input);
            tmp$ret$0 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UInt' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.v34 = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.a3m_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toLong = toULong(input);
            tmp$ret$0 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'ULong' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.s34 = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.a3m_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toByte = toUByte(input);
            tmp$ret$0 = _UByte___get_data__impl__jof9qr(tmp0_toByte);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UByte' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.t34 = function () {
    var tmp$ret$2;
    $l$block: {
      var tmp0_parseString = this.a3m_1;
      var input = tmp0_parseString.j3l();
      try {
        var tmp$ret$1;
        {
          var tmp$ret$0;
          {
            var tmp0_toShort = toUShort(input);
            tmp$ret$0 = _UShort___get_data__impl__g0245(tmp0_toShort);
          }
          tmp$ret$1 = tmp$ret$0;
        }
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UShort' for input '" + input + "'";
          tmp0_parseString.c3l(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.$metadata$ = classMeta('JsonDecoderForUnsignedTypes', undefined, undefined, undefined, undefined, AbstractDecoder.prototype);
  function get_unsignedNumberDescriptors() {
    init_properties_StreamingJsonEncoder_kt_qkpchk();
    return unsignedNumberDescriptors;
  }
  var unsignedNumberDescriptors;
  function StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, $this) {
    StreamingJsonEncoder.call($this, new Composer(output, json), json, mode, modeReuseCache);
    return $this;
  }
  function StreamingJsonEncoder_init_$Create$(output, json, mode, modeReuseCache) {
    return StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, Object.create(StreamingJsonEncoder.prototype));
  }
  function encodeTypeInfo($this, descriptor) {
    $this.t3i_1.g3m();
    $this.e36($this.y3i_1.q3i_1);
    $this.t3i_1.h3m(get_COLON());
    $this.t3i_1.i3m();
    $this.e36(descriptor.h33());
  }
  function Composer(sb, json) {
    this.c3m_1 = sb;
    this.d3m_1 = json;
    this.e3m_1 = 0;
    this.f3m_1 = true;
  }
  Composer.prototype.b3k = function () {
    return this.d3m_1;
  };
  Composer.prototype.j3m = function () {
    this.f3m_1 = true;
    var tmp0_this = this;
    var tmp1 = tmp0_this.e3m_1;
    tmp0_this.e3m_1 = tmp1 + 1 | 0;
  };
  Composer.prototype.k3m = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.e3m_1;
    tmp0_this.e3m_1 = tmp1 - 1 | 0;
  };
  Composer.prototype.g3m = function () {
    this.f3m_1 = false;
    if (this.d3m_1.e3i_1.m3i_1) {
      this.l3m('\n');
      {
        var tmp0_repeat = this.e3m_1;
        {
        }
        var inductionVariable = 0;
        if (inductionVariable < tmp0_repeat)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            {
              this.l3m(this.d3m_1.e3i_1.n3i_1);
            }
          }
           while (inductionVariable < tmp0_repeat);
      }
    }
  };
  Composer.prototype.i3m = function () {
    if (this.d3m_1.e3i_1.m3i_1) {
      this.h3m(_Char___init__impl__6a9atx(32));
    }
  };
  Composer.prototype.h3m = function (v) {
    return this.c3m_1.b5(v);
  };
  Composer.prototype.l3m = function (v) {
    return this.c3m_1.pf(v);
  };
  Composer.prototype.m3m = function (v) {
    return this.c3m_1.nf(v);
  };
  Composer.prototype.n3m = function (v) {
    return this.c3m_1.nf(v);
  };
  Composer.prototype.o3m = function (v) {
    return this.c3m_1.nf(v);
  };
  Composer.prototype.p3m = function (v) {
    return this.c3m_1.nf(v);
  };
  Composer.prototype.q3m = function (v) {
    return this.c3m_1.nf(v);
  };
  Composer.prototype.r3m = function (v) {
    return this.c3m_1.nf(v);
  };
  Composer.prototype.s3m = function (v) {
    return this.c3m_1.of(v);
  };
  Composer.prototype.t3m = function (value) {
    return printQuoted(this.c3m_1, value);
  };
  Composer.$metadata$ = classMeta('Composer');
  function ComposerForUnsignedNumbers(sb, json) {
    Composer.call(this, sb, json);
  }
  ComposerForUnsignedNumbers.prototype.q3m = function (v) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UInt___init__impl__l7qpdl(v);
    }
    return Composer.prototype.l3m.call(this, UInt__toString_impl_dbgl21(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.prototype.r3m = function (v) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _ULong___init__impl__c78o9k(v);
    }
    return Composer.prototype.l3m.call(this, ULong__toString_impl_f9au7k(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.prototype.o3m = function (v) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UByte___init__impl__g9hnc4(v);
    }
    return Composer.prototype.l3m.call(this, UByte__toString_impl_v72jg(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.prototype.p3m = function (v) {
    var tmp$ret$0;
    {
      tmp$ret$0 = _UShort___init__impl__jigrne(v);
    }
    return Composer.prototype.l3m.call(this, UShort__toString_impl_edaoee(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.$metadata$ = classMeta('ComposerForUnsignedNumbers', undefined, undefined, undefined, undefined, Composer.prototype);
  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
    AbstractEncoder.call(this);
    this.t3i_1 = composer;
    this.u3i_1 = json;
    this.v3i_1 = mode;
    this.w3i_1 = modeReuseCache;
    this.x3i_1 = this.u3i_1.p35();
    this.y3i_1 = this.u3i_1.e3i_1;
    this.z3i_1 = false;
    this.a3j_1 = false;
    var i = this.v3i_1.a5();
    if (!(this.w3i_1 == null)) {
      if (!(this.w3i_1[i] === null) ? true : !(this.w3i_1[i] === this))
        this.w3i_1[i] = this;
    }
  }
  StreamingJsonEncoder.prototype.b3k = function () {
    return this.u3i_1;
  };
  StreamingJsonEncoder.prototype.p35 = function () {
    return this.x3i_1;
  };
  StreamingJsonEncoder.prototype.p36 = function (serializer, value) {
    var tmp$ret$0;
    $l$block: {
      var tmp;
      if (!(serializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.b3k().e3i_1.p3i_1;
      }
      if (tmp) {
        serializer.b33(this, value);
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      }
      var tmp_0 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
      var actualSerializer = findActualSerializer$accessor$1ad0flx(this, tmp_0, isObject(value) ? value : THROW_CCE());
      {
        this.a3j_1 = true;
      }
      actualSerializer.b33(this, value);
    }
  };
  StreamingJsonEncoder.prototype.d35 = function (descriptor) {
    var newMode = switchMode(this.u3i_1, descriptor);
    if (!equals(new Char(newMode.w3l_1), new Char(get_INVALID()))) {
      this.t3i_1.h3m(newMode.w3l_1);
      this.t3i_1.j3m();
    }
    if (this.a3j_1) {
      this.a3j_1 = false;
      encodeTypeInfo(this, descriptor);
    }
    if (this.v3i_1.equals(newMode)) {
      return this;
    }
    var tmp0_safe_receiver = this.w3i_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode.a5()];
    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this.t3i_1, this.u3i_1, newMode, this.w3i_1) : tmp1_elvis_lhs;
  };
  StreamingJsonEncoder.prototype.e35 = function (descriptor) {
    if (!equals(new Char(this.v3i_1.x3l_1), new Char(get_INVALID()))) {
      this.t3i_1.k3m();
      this.t3i_1.g3m();
      this.t3i_1.h3m(this.v3i_1.x3l_1);
    }
  };
  StreamingJsonEncoder.prototype.t35 = function (descriptor, index) {
    var tmp0_subject = this.v3i_1;
    var tmp0 = tmp0_subject.a5();
    switch (tmp0) {
      case 1:
        if (!this.t3i_1.f3m_1) {
          this.t3i_1.h3m(get_COMMA());
        }

        this.t3i_1.g3m();
        break;
      case 2:
        if (!this.t3i_1.f3m_1) {
          var tmp = this;
          var tmp_0;
          if ((index % 2 | 0) === 0) {
            this.t3i_1.h3m(get_COMMA());
            this.t3i_1.g3m();
            tmp_0 = true;
          } else {
            this.t3i_1.h3m(get_COLON());
            this.t3i_1.i3m();
            tmp_0 = false;
          }
          tmp.z3i_1 = tmp_0;
        } else {
          this.z3i_1 = true;
          this.t3i_1.g3m();
        }

        break;
      case 3:
        if (index === 0)
          this.z3i_1 = true;
        if (index === 1) {
          this.t3i_1.h3m(get_COMMA());
          this.t3i_1.i3m();
          this.z3i_1 = false;
        }

        break;
      default:
        if (!this.t3i_1.f3m_1) {
          this.t3i_1.h3m(get_COMMA());
        }

        this.t3i_1.g3m();
        this.e36(descriptor.l33(index));
        this.t3i_1.h3m(get_COLON());
        ;
        this.t3i_1.i3m();
        break;
    }
    return true;
  };
  StreamingJsonEncoder.prototype.f36 = function (inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new StreamingJsonEncoder(new ComposerForUnsignedNumbers(this.t3i_1.c3m_1, this.t3i_1.d3m_1), this.u3i_1, this.v3i_1, null) : this;
  };
  StreamingJsonEncoder.prototype.v35 = function () {
    this.t3i_1.l3m(get_NULL());
  };
  StreamingJsonEncoder.prototype.w35 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.s3m(value);
    }
  };
  StreamingJsonEncoder.prototype.x35 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.o3m(value);
    }
  };
  StreamingJsonEncoder.prototype.y35 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.p3m(value);
    }
  };
  StreamingJsonEncoder.prototype.z35 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.q3m(value);
    }
  };
  StreamingJsonEncoder.prototype.a36 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.r3m(value);
    }
  };
  StreamingJsonEncoder.prototype.b36 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.m3m(value);
    }
    if (!this.y3i_1.r3i_1 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded(value, this.t3i_1.c3m_1.toString());
    }
  };
  StreamingJsonEncoder.prototype.c36 = function (value) {
    if (this.z3i_1)
      this.e36(value.toString());
    else {
      this.t3i_1.n3m(value);
    }
    if (!this.y3i_1.r3i_1 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded(value, this.t3i_1.c3m_1.toString());
    }
  };
  StreamingJsonEncoder.prototype.d36 = function (value) {
    this.e36(toString_0(value));
  };
  StreamingJsonEncoder.prototype.e36 = function (value) {
    return this.t3i_1.t3m(value);
  };
  StreamingJsonEncoder.$metadata$ = classMeta('StreamingJsonEncoder', [JsonEncoder], undefined, undefined, undefined, AbstractEncoder.prototype);
  function get_isUnsignedNumber(_this__u8e3s4) {
    init_properties_StreamingJsonEncoder_kt_qkpchk();
    return _this__u8e3s4.j33() ? get_unsignedNumberDescriptors().l1(_this__u8e3s4) : false;
  }
  var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
  function init_properties_StreamingJsonEncoder_kt_qkpchk() {
    if (properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
    } else {
      properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
      unsignedNumberDescriptors = setOf([serializer_2(Companion_getInstance_1()).a33(), serializer_1(Companion_getInstance()).a33(), serializer_3(Companion_getInstance_2()).a33(), serializer_4(Companion_getInstance_3()).a33()]);
    }
  }
  function get_ESCAPE_CHARS() {
    init_properties_StringOps_kt_g67jhv();
    return ESCAPE_CHARS;
  }
  var ESCAPE_CHARS;
  function toHexChar(i) {
    init_properties_StringOps_kt_g67jhv();
    var d = i & 15;
    return d < 10 ? numberToChar(d + 48 | 0) : numberToChar((d - 10 | 0) + 97 | 0);
  }
  function printQuoted(_this__u8e3s4, value) {
    init_properties_StringOps_kt_g67jhv();
    _this__u8e3s4.b5(get_STRING());
    var lastPos = 0;
    var length = value.length;
    var inductionVariable = 0;
    if (inductionVariable < length)
      $l$loop_0: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = Char__toInt_impl_vasixd(charSequenceGet(value, i));
        if (c >= get_ESCAPE_CHARS().length)
          continue $l$loop_0;
        var tmp1_elvis_lhs = get_ESCAPE_CHARS()[c];
        var tmp;
        if (tmp1_elvis_lhs == null) {
          continue $l$loop_0;
        } else {
          tmp = tmp1_elvis_lhs;
        }
        var esc = tmp;
        _this__u8e3s4.lf(value, lastPos, i);
        _this__u8e3s4.pf(esc);
        lastPos = i + 1 | 0;
      }
       while (inductionVariable < length);
    _this__u8e3s4.lf(value, lastPos, length);
    _this__u8e3s4.b5(get_STRING());
  }
  function toBooleanStrictOrNull(_this__u8e3s4) {
    init_properties_StringOps_kt_g67jhv();
    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
  }
  var properties_initialized_StringOps_kt_wzaea7;
  function init_properties_StringOps_kt_g67jhv() {
    if (properties_initialized_StringOps_kt_wzaea7) {
    } else {
      properties_initialized_StringOps_kt_wzaea7 = true;
      var tmp$ret$1;
      {
        var tmp$ret$0;
        {
          tmp$ret$0 = fillArrayVal(Array(128), null);
        }
        var tmp0_apply = tmp$ret$0;
        {
        }
        {
          var inductionVariable = 0;
          if (inductionVariable <= 31)
            do {
              var c = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var c1 = toHexChar(c >> 12);
              var c2 = toHexChar(c >> 8);
              var c3 = toHexChar(c >> 4);
              var c4 = toHexChar(c);
              tmp0_apply[c] = '\\u' + new Char(c1) + new Char(c2) + new Char(c3) + new Char(c4);
            }
             while (inductionVariable <= 31);
          tmp0_apply[34] = '\\"';
          tmp0_apply[92] = '\\\\';
          tmp0_apply[9] = '\\t';
          tmp0_apply[8] = '\\b';
          tmp0_apply[10] = '\\n';
          tmp0_apply[13] = '\\r';
          tmp0_apply[12] = '\\f';
        }
        tmp$ret$1 = tmp0_apply;
      }
      ESCAPE_CHARS = tmp$ret$1;
    }
  }
  function currentObject($this) {
    var tmp0_safe_receiver = $this.i3g();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      {
        {
        }
        var tmp$ret$0;
        {
          tmp$ret$0 = $this.d3n(tmp0_safe_receiver);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? $this.t() : tmp1_elvis_lhs;
  }
  function unparsedPrimitive($this, primitive) {
    throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", toString(currentObject($this)));
  }
  function AbstractJsonTreeDecoder(json, value) {
    NamedValueDecoder.call(this);
    this.a3n_1 = json;
    this.b3n_1 = value;
    this.c3n_1 = this.b3k().e3i_1;
  }
  AbstractJsonTreeDecoder.prototype.b3k = function () {
    return this.a3n_1;
  };
  AbstractJsonTreeDecoder.prototype.t = function () {
    return this.b3n_1;
  };
  AbstractJsonTreeDecoder.prototype.p35 = function () {
    return this.b3k().p35();
  };
  AbstractJsonTreeDecoder.prototype.f3i = function () {
    return this.c3n_1;
  };
  AbstractJsonTreeDecoder.prototype.c3k = function () {
    return currentObject(this);
  };
  AbstractJsonTreeDecoder.prototype.c35 = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  AbstractJsonTreeDecoder.prototype.j3g = function (parentName, childName) {
    return childName;
  };
  AbstractJsonTreeDecoder.prototype.d35 = function (descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor.i33();
    var tmp;
    var tmp_0;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this.b3k();
      var tmp$ret$0;
      {
        if (!(currentObject_0 instanceof JsonArray)) {
          throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.h33() + ', but had ' + getKClassFromExpression(currentObject_0));
        }
        tmp$ret$0 = currentObject_0;
      }
      tmp = new JsonTreeListDecoder(tmp_1, tmp$ret$0);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        var tmp$ret$5;
        {
          var tmp0_selectMapMode = this.b3k();
          var keyDescriptor = descriptor.n33(0);
          var keyKind = keyDescriptor.i33();
          var tmp_2;
          var tmp_3;
          if (keyKind instanceof PrimitiveKind) {
            tmp_3 = true;
          } else {
            tmp_3 = equals(keyKind, ENUM_getInstance());
          }
          if (tmp_3) {
            var tmp$ret$2;
            {
              var tmp_4 = this.b3k();
              var tmp$ret$1;
              {
                if (!(currentObject_0 instanceof JsonObject)) {
                  throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.h33() + ', but had ' + getKClassFromExpression(currentObject_0));
                }
                tmp$ret$1 = currentObject_0;
              }
              tmp$ret$2 = new JsonTreeMapDecoder(tmp_4, tmp$ret$1);
            }
            tmp_2 = tmp$ret$2;
          } else {
            if (tmp0_selectMapMode.e3i_1.l3i_1) {
              var tmp$ret$4;
              {
                var tmp_5 = this.b3k();
                var tmp$ret$3;
                {
                  if (!(currentObject_0 instanceof JsonArray)) {
                    throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.h33() + ', but had ' + getKClassFromExpression(currentObject_0));
                  }
                  tmp$ret$3 = currentObject_0;
                }
                tmp$ret$4 = new JsonTreeListDecoder(tmp_5, tmp$ret$3);
              }
              tmp_2 = tmp$ret$4;
            } else {
              throw InvalidKeyKindException(keyDescriptor);
            }
          }
          tmp$ret$5 = tmp_2;
        }
        tmp = tmp$ret$5;
      } else {
        var tmp_6 = this.b3k();
        var tmp$ret$6;
        {
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.h33() + ', but had ' + getKClassFromExpression(currentObject_0));
          }
          tmp$ret$6 = currentObject_0;
        }
        var tmp_7 = tmp$ret$6;
        tmp = JsonTreeDecoder_init_$Create$(tmp_6, tmp_7, null, null, 12, null);
      }
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.e35 = function (descriptor) {
  };
  AbstractJsonTreeDecoder.prototype.p34 = function () {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  };
  AbstractJsonTreeDecoder.prototype.e3n = function (tag) {
    var currentElement = this.d3n(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + currentElement, toString(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.f3n = function (tag) {
    return !(this.d3n(tag) === JsonNull_getInstance());
  };
  AbstractJsonTreeDecoder.prototype.l3g = function (tag) {
    return this.f3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.g3n = function (tag) {
    var value = this.e3n(tag);
    if (!this.b3k().e3i_1.k3i_1) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (literal.g3k_1)
        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    var tmp$ret$1;
    $l$block: {
      try {
        var tmp$ret$0;
        {
          var tmp0_elvis_lhs = get_booleanOrNull(value);
          var tmp;
          if (tmp0_elvis_lhs == null) {
            throw IllegalArgumentException_init_$Create$_0();
          } else {
            tmp = tmp0_elvis_lhs;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs_0 = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          unparsedPrimitive(this, 'boolean');
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'boolean');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.m3g = function (tag) {
    return this.g3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.h3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          var result = get_int(tmp0_primitive);
          var tmp;
          var containsLower = ByteCompanionObject_getInstance().h5_1;
          if (result <= ByteCompanionObject_getInstance().i5_1 ? containsLower <= result : false) {
            tmp = toByte_0(result);
          } else {
            tmp = null;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'byte');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'byte');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.n3g = function (tag) {
    return this.h3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.i3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          var result = get_int(tmp0_primitive);
          var tmp;
          var containsLower = ShortCompanionObject_getInstance().l5_1;
          if (result <= ShortCompanionObject_getInstance().m5_1 ? containsLower <= result : false) {
            tmp = toShort_0(result);
          } else {
            tmp = null;
          }
          tmp$ret$0 = tmp;
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'short');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'short');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.o3g = function (tag) {
    return this.i3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.j3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_int(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'int');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'int');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.p3g = function (tag) {
    return this.j3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.k3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_long(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'long');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'long');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.q3g = function (tag) {
    return this.k3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.l3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_float(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'float');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'float');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.b3k().e3i_1.r3i_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.r3g = function (tag) {
    return this.l3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.m3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = get_double(tmp0_primitive);
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'double');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'double');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.b3k().e3i_1.r3i_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.s3g = function (tag) {
    return this.m3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.n3n = function (tag) {
    var tmp$ret$1;
    $l$block: {
      var tmp0_primitive = this.e3n(tag);
      try {
        var tmp$ret$0;
        {
          tmp$ret$0 = single(tmp0_primitive.v1u());
        }
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        var tmp_0 = tmp0_elvis_lhs;
        if ((tmp_0 == null ? null : new Char(tmp_0)) == null) {
          unparsedPrimitive(this, 'char');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'char');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.t3g = function (tag) {
    return this.n3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.o3n = function (tag) {
    var value = this.e3n(tag);
    if (!this.b3k().e3i_1.k3i_1) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (!literal.g3k_1)
        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    return value.v1u();
  };
  AbstractJsonTreeDecoder.prototype.u3g = function (tag) {
    return this.o3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.p3n = function (tag, inlineDescriptor) {
    return new JsonDecoderForUnsignedTypes(new JsonReader(this.e3n(tag).v1u()), this.b3k());
  };
  AbstractJsonTreeDecoder.prototype.v3g = function (tag, inlineDescriptor) {
    return this.p3n((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  AbstractJsonTreeDecoder.$metadata$ = classMeta('AbstractJsonTreeDecoder', [JsonDecoder], undefined, undefined, undefined, NamedValueDecoder.prototype);
  function JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      polyDiscriminator = null;
    if (!(($mask0 & 8) === 0))
      polyDescriptor = null;
    JsonTreeDecoder.call($this, json, value, polyDiscriminator, polyDescriptor);
    return $this;
  }
  function JsonTreeDecoder_init_$Create$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker) {
    return JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, Object.create(JsonTreeDecoder.prototype));
  }
  function coerceInputValue_0($this, descriptor, index, tag) {
    var elementDescriptor = descriptor.n33(index);
    var tmp;
    var tmp_0 = $this.d3n(tag);
    if (tmp_0 instanceof JsonNull) {
      tmp = !elementDescriptor.g33();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    if (equals(elementDescriptor.i33(), ENUM_getInstance())) {
      var tmp_1 = $this.d3n(tag);
      var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
      var tmp_2;
      if (tmp1_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp1_elvis_lhs;
      }
      var enumValue = tmp_2;
      var enumIndex = elementDescriptor.m33(enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3)
        return true;
    }
    return false;
  }
  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.v3n_1 = value;
    this.w3n_1 = polyDiscriminator;
    this.x3n_1 = polyDescriptor;
    this.y3n_1 = 0;
  }
  JsonTreeDecoder.prototype.t = function () {
    return this.v3n_1;
  };
  JsonTreeDecoder.prototype.r35 = function (descriptor) {
    while (this.y3n_1 < descriptor.k33()) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.y3n_1;
      tmp0_this.y3n_1 = tmp1 + 1 | 0;
      var name = this.d3g(descriptor, tmp1);
      var tmp;
      var tmp$ret$1;
      {
        var tmp0_contains = this.t();
        var tmp$ret$0;
        {
          tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).c2(name);
        }
        tmp$ret$1 = tmp$ret$0;
      }
      if (tmp$ret$1) {
        tmp = !this.f3i().o3i_1 ? true : !coerceInputValue_0(this, descriptor, this.y3n_1 - 1 | 0, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return this.y3n_1 - 1 | 0;
      }
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeDecoder.prototype.d3n = function (tag) {
    return getValue(this.t(), tag);
  };
  JsonTreeDecoder.prototype.d35 = function (descriptor) {
    if (descriptor === this.x3n_1)
      return this;
    return AbstractJsonTreeDecoder.prototype.d35.call(this, descriptor);
  };
  JsonTreeDecoder.prototype.e35 = function (descriptor) {
    var tmp;
    if (this.f3i().j3i_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.i33();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_getInstance();
    var names = jsonCachedSerialNames(descriptor);
    var tmp0_iterator = this.t().j2().d();
    while (tmp0_iterator.e()) {
      var key = tmp0_iterator.f();
      if (!names.l1(key) ? !(key === this.w3n_1) : false) {
        throw UnknownKeyException(key, this.t().toString());
      }
    }
  };
  JsonTreeDecoder.$metadata$ = classMeta('JsonTreeDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.e3o_1 = value;
    this.f3o_1 = this.e3o_1.g();
    this.g3o_1 = -1;
  }
  JsonTreeListDecoder.prototype.t = function () {
    return this.e3o_1;
  };
  JsonTreeListDecoder.prototype.e3g = function (desc, index) {
    return index.toString();
  };
  JsonTreeListDecoder.prototype.d3n = function (tag) {
    return this.e3o_1.l(toInt(tag));
  };
  JsonTreeListDecoder.prototype.r35 = function (descriptor) {
    while (this.g3o_1 < (this.f3o_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.g3o_1;
      tmp0_this.g3o_1 = tmp1 + 1 | 0;
      return this.g3o_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeListDecoder.$metadata$ = classMeta('JsonTreeListDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder_init_$Init$(json, value, null, null, 12, null, this);
    this.q3o_1 = value;
    this.r3o_1 = toList(this.q3o_1.j2());
    this.s3o_1 = imul(this.r3o_1.g(), 2);
    this.t3o_1 = -1;
  }
  JsonTreeMapDecoder.prototype.t = function () {
    return this.q3o_1;
  };
  JsonTreeMapDecoder.prototype.e3g = function (desc, index) {
    var i = index / 2 | 0;
    return this.r3o_1.l(i);
  };
  JsonTreeMapDecoder.prototype.r35 = function (descriptor) {
    while (this.t3o_1 < (this.s3o_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.t3o_1;
      tmp0_this.t3o_1 = tmp1 + 1 | 0;
      return this.t3o_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeMapDecoder.prototype.d3n = function (tag) {
    return (this.t3o_1 % 2 | 0) === 0 ? JsonPrimitive_0(tag) : getValue(this.q3o_1, tag);
  };
  JsonTreeMapDecoder.prototype.e35 = function (descriptor) {
  };
  JsonTreeMapDecoder.$metadata$ = classMeta('JsonTreeMapDecoder', undefined, undefined, undefined, undefined, JsonTreeDecoder.prototype);
  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.a33())).c35(deserializer);
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  function values() {
    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
  }
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_getInstance();
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_LIST_instance = new WriteMode('LIST', 1, get_BEGIN_LIST(), get_END_LIST());
    WriteMode_MAP_instance = new WriteMode('MAP', 2, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, get_BEGIN_LIST(), get_END_LIST());
  }
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this.w3l_1 = begin;
    this.x3l_1 = end;
    this.y3l_1 = charToTokenClass(this.w3l_1);
    this.z3l_1 = charToTokenClass(this.x3l_1);
  }
  WriteMode.prototype.u3o = function () {
    return this.w3l_1;
  };
  WriteMode.prototype.v3o = function () {
    return this.x3l_1;
  };
  WriteMode.$metadata$ = classMeta('WriteMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function switchMode(_this__u8e3s4, desc) {
    var tmp0_subject = desc.i33();
    var tmp;
    if (tmp0_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals(tmp0_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals(tmp0_subject, MAP_getInstance())) {
          var tmp$ret$2;
          {
            var keyDescriptor = desc.n33(0);
            var keyKind = keyDescriptor.i33();
            var tmp_0;
            var tmp_1;
            if (keyKind instanceof PrimitiveKind) {
              tmp_1 = true;
            } else {
              tmp_1 = equals(keyKind, ENUM_getInstance());
            }
            if (tmp_1) {
              var tmp$ret$0;
              {
                tmp$ret$0 = WriteMode_MAP_getInstance();
              }
              tmp_0 = tmp$ret$0;
            } else {
              if (_this__u8e3s4.e3i_1.l3i_1) {
                var tmp$ret$1;
                {
                  tmp$ret$1 = WriteMode_LIST_getInstance();
                }
                tmp_0 = tmp$ret$1;
              } else {
                throw InvalidKeyKindException(keyDescriptor);
              }
            }
            tmp$ret$2 = tmp_0;
          }
          tmp = tmp$ret$2;
        } else {
          tmp = WriteMode_OBJ_getInstance();
        }
      }
    }
    return tmp;
  }
  function selectMapMode(_this__u8e3s4, mapDescriptor, ifMap, ifList) {
    var keyDescriptor = mapDescriptor.n33(0);
    var keyKind = keyDescriptor.i33();
    var tmp;
    var tmp_0;
    if (keyKind instanceof PrimitiveKind) {
      tmp_0 = true;
    } else {
      tmp_0 = equals(keyKind, ENUM_getInstance());
    }
    if (tmp_0) {
      tmp = ifMap();
    } else {
      if (_this__u8e3s4.e3i_1.l3i_1) {
        tmp = ifList();
      } else {
        throw InvalidKeyKindException(keyDescriptor);
      }
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  //region block: post-declaration
  defer$1.prototype.g33 = get_isNullable;
  defer$1.prototype.j33 = get_isInline;
  StreamingJsonDecoder.prototype.q35 = decodeSequentially;
  StreamingJsonDecoder.prototype.s35 = decodeCollectionSize;
  StreamingJsonDecoder.prototype.o35 = decodeSerializableElement$default;
  JsonDecoderForUnsignedTypes.prototype.c35 = decodeSerializableValue;
  JsonDecoderForUnsignedTypes.prototype.o35 = decodeSerializableElement$default;
  JsonDecoderForUnsignedTypes.prototype.q35 = decodeSequentially;
  JsonDecoderForUnsignedTypes.prototype.s35 = decodeCollectionSize;
  StreamingJsonEncoder.prototype.q36 = encodeNotNullMark;
  StreamingJsonEncoder.prototype.r36 = beginCollection;
  AbstractJsonTreeDecoder.prototype.o35 = decodeSerializableElement$default;
  AbstractJsonTreeDecoder.prototype.q35 = decodeSequentially;
  AbstractJsonTreeDecoder.prototype.s35 = decodeCollectionSize;
  JsonTreeDecoder.prototype.o35 = decodeSerializableElement$default;
  JsonTreeDecoder.prototype.q35 = decodeSequentially;
  JsonTreeDecoder.prototype.s35 = decodeCollectionSize;
  JsonTreeListDecoder.prototype.o35 = decodeSerializableElement$default;
  JsonTreeListDecoder.prototype.q35 = decodeSequentially;
  JsonTreeListDecoder.prototype.s35 = decodeCollectionSize;
  JsonTreeMapDecoder.prototype.o35 = decodeSerializableElement$default;
  JsonTreeMapDecoder.prototype.q35 = decodeSequentially;
  JsonTreeMapDecoder.prototype.s35 = decodeCollectionSize;
  //endregion
  //region block: init
  COLON = _Char___init__impl__6a9atx(58);
  INVALID = _Char___init__impl__6a9atx(0);
  COMMA = _Char___init__impl__6a9atx(44);
  NULL = 'null';
  BEGIN_OBJ = _Char___init__impl__6a9atx(123);
  END_OBJ = _Char___init__impl__6a9atx(125);
  BEGIN_LIST = _Char___init__impl__6a9atx(91);
  END_LIST = _Char___init__impl__6a9atx(93);
  TC_BEGIN_LIST = 8;
  TC_BEGIN_OBJ = 6;
  TC_OTHER = 0;
  TC_STRING = 1;
  TC_NULL = 10;
  lenientHint = "Use 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.";
  STRING = _Char___init__impl__6a9atx(34);
  TC_END_LIST = 9;
  TC_END_OBJ = 7;
  TC_COMMA = 4;
  TC_COLON = 5;
  ignoreUnknownKeysHint = "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.";
  specialFlowingValuesHint = "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'";
  allowStructuredMapKeysHint = "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.";
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Json$default;
  _.$_$.b = Default_getInstance;
  _.$_$.c = Companion_getInstance_4;
  _.$_$.d = JsonElement;
  _.$_$.e = JsonObject;
  _.$_$.f = get_jsonPrimitive;
  //endregion
  return _;
}(module.exports, __nccwpck_require__(391), __nccwpck_require__(755)));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.js.map

/***/ }),

/***/ 421:
/***/ ((module) => {

module.exports = eval("require")("bufferutil");


/***/ }),

/***/ 609:
/***/ ((module) => {

module.exports = eval("require")("encoding");


/***/ }),

/***/ 187:
/***/ ((module) => {

module.exports = eval("require")("utf-8-validate");


/***/ }),

/***/ 113:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ 361:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 147:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 685:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 687:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 808:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 37:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 17:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 282:
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ 781:
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ 404:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 310:
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ 796:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(701);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;